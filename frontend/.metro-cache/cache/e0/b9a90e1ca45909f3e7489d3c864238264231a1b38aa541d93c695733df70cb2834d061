{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../actions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":55,"index":129}}],"key":"NZfIk1TkYePfdrID7eibfh4eb4I=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":59,"index":189}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"./instructions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":128,"index":318}}],"key":"Fxi0HOb3XwlWafScFYPpLit1DEQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initializeDefaultAccountState = initializeDefaultAccountState;\n  exports.updateDefaultAccountState = updateDefaultAccountState;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _internal = require(_dependencyMap[1], \"../../actions/internal.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _instructions = require(_dependencyMap[3], \"./instructions.js\");\n  /**\n   * Initialize a default account state on a mint\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param mint        Mint to initialize with extension\n   * @param state        Account state with which to initialize new accounts\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function initializeDefaultAccountState(connection, payer, mint, state, confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const transaction = new _web.Transaction().add((0, _instructions.createInitializeDefaultAccountStateInstruction)(mint, state, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n  }\n  /**\n   * Update the default account state on a mint\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param mint        Mint to modify\n   * @param state        New account state to set on created accounts\n   * @param freezeAuthority          Freeze authority of the mint\n   * @param multiSigners   Signing accounts if `freezeAuthority` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function updateDefaultAccountState(connection, payer, mint, state, freezeAuthority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [freezeAuthorityPublicKey, signers] = (0, _internal.getSigners)(freezeAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createUpdateDefaultAccountStateInstruction)(mint, state, freezeAuthorityPublicKey, signers, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":46,"map":[[7,2,1,0],[7,6,1,0,"_web"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_internal"],[8,15,2,0],[8,18,2,0,"require"],[8,25,2,0],[8,26,2,0,"_dependencyMap"],[8,40,2,0],[9,2,3,0],[9,6,3,0,"_constants"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,4,0],[10,6,4,0,"_instructions"],[10,19,4,0],[10,22,4,0,"require"],[10,29,4,0],[10,30,4,0,"_dependencyMap"],[10,44,4,0],[11,2,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,2,17,7],[23,17,17,22,"initializeDefaultAccountState"],[23,46,17,51,"initializeDefaultAccountState"],[23,47,17,52,"connection"],[23,57,17,62],[23,59,17,64,"payer"],[23,64,17,69],[23,66,17,71,"mint"],[23,70,17,75],[23,72,17,77,"state"],[23,77,17,82],[23,79,17,84,"confirmOptions"],[23,93,17,98],[23,95,17,100,"programId"],[23,104,17,109],[23,107,17,112,"TOKEN_2022_PROGRAM_ID"],[23,139,17,133],[23,141,17,135],[24,4,18,4],[24,10,18,10,"transaction"],[24,21,18,21],[24,24,18,24],[24,28,18,28,"Transaction"],[24,44,18,39],[24,45,18,40],[24,46,18,41],[24,47,18,42,"add"],[24,50,18,45],[24,51,18,46],[24,55,18,46,"createInitializeDefaultAccountStateInstruction"],[24,115,18,92],[24,117,18,93,"mint"],[24,121,18,97],[24,123,18,99,"state"],[24,128,18,104],[24,130,18,106,"programId"],[24,139,18,115],[24,140,18,116],[24,141,18,117],[25,4,19,4],[25,11,19,11],[25,17,19,17],[25,21,19,17,"sendAndConfirmTransaction"],[25,51,19,42],[25,53,19,43,"connection"],[25,63,19,53],[25,65,19,55,"transaction"],[25,76,19,66],[25,78,19,68],[25,79,19,69,"payer"],[25,84,19,74],[25,85,19,75],[25,87,19,77,"confirmOptions"],[25,101,19,91],[25,102,19,92],[26,2,20,0],[27,2,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,2,35,7],[41,17,35,22,"updateDefaultAccountState"],[41,42,35,47,"updateDefaultAccountState"],[41,43,35,48,"connection"],[41,53,35,58],[41,55,35,60,"payer"],[41,60,35,65],[41,62,35,67,"mint"],[41,66,35,71],[41,68,35,73,"state"],[41,73,35,78],[41,75,35,80,"freezeAuthority"],[41,90,35,95],[41,92,35,97,"multiSigners"],[41,104,35,109],[41,107,35,112],[41,109,35,114],[41,111,35,116,"confirmOptions"],[41,125,35,130],[41,127,35,132,"programId"],[41,136,35,141],[41,139,35,144,"TOKEN_2022_PROGRAM_ID"],[41,171,35,165],[41,173,35,167],[42,4,36,4],[42,10,36,10],[42,11,36,11,"freezeAuthorityPublicKey"],[42,35,36,35],[42,37,36,37,"signers"],[42,44,36,44],[42,45,36,45],[42,48,36,48],[42,52,36,48,"getSigners"],[42,72,36,58],[42,74,36,59,"freezeAuthority"],[42,89,36,74],[42,91,36,76,"multiSigners"],[42,103,36,88],[42,104,36,89],[43,4,37,4],[43,10,37,10,"transaction"],[43,21,37,21],[43,24,37,24],[43,28,37,28,"Transaction"],[43,44,37,39],[43,45,37,40],[43,46,37,41],[43,47,37,42,"add"],[43,50,37,45],[43,51,37,46],[43,55,37,46,"createUpdateDefaultAccountStateInstruction"],[43,111,37,88],[43,113,37,89,"mint"],[43,117,37,93],[43,119,37,95,"state"],[43,124,37,100],[43,126,37,102,"freezeAuthorityPublicKey"],[43,150,37,126],[43,152,37,128,"signers"],[43,159,37,135],[43,161,37,137,"programId"],[43,170,37,146],[43,171,37,147],[43,172,37,148],[44,4,38,4],[44,11,38,11],[44,17,38,17],[44,21,38,17,"sendAndConfirmTransaction"],[44,51,38,42],[44,53,38,43,"connection"],[44,63,38,53],[44,65,38,55,"transaction"],[44,76,38,66],[44,78,38,68],[44,79,38,69,"payer"],[44,84,38,74],[44,86,38,76],[44,89,38,79,"signers"],[44,96,38,86],[44,97,38,87],[44,99,38,89,"confirmOptions"],[44,113,38,103],[44,114,38,104],[45,2,39,0],[46,0,39,1],[46,3]],"functionMap":{"names":["<global>","initializeDefaultAccountState","updateDefaultAccountState"],"mappings":"AAA;OCgB;CDG;OEe;CFI"}},"type":"js/module"}]}