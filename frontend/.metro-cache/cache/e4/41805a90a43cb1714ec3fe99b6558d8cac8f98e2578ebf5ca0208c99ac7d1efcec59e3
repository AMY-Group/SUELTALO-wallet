{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":50,"index":102}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":103},"end":{"line":3,"column":57,"index":160}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":51,"index":212}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":213},"end":{"line":5,"column":170,"index":383}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":384},"end":{"line":6,"column":43,"index":427}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":428},"end":{"line":7,"column":46,"index":474}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createTransferInstruction = createTransferInstruction;\n  exports.decodeTransferInstruction = decodeTransferInstruction;\n  exports.decodeTransferInstructionUnchecked = decodeTransferInstructionUnchecked;\n  exports.transferInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _internal = require(_dependencyMap[5], \"./internal.js\");\n  var _types = require(_dependencyMap[6], \"./types.js\");\n  /** TODO: docs */\n  const transferInstructionData = exports.transferInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayoutUtils.u64)('amount')]);\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param source       Source account\n   * @param destination  Destination account\n   * @param owner        Owner of the source account\n   * @param amount       Number of tokens to transfer\n   * @param multiSigners Signing accounts if `owner` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createTransferInstruction(source, destination, owner, amount, multiSigners = [], programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = (0, _internal.addSigners)([{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }], owner, multiSigners);\n    const data = Buffer.alloc(transferInstructionData.span);\n    transferInstructionData.encode({\n      instruction: _types.TokenInstruction.Transfer,\n      amount: BigInt(amount)\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode a Transfer instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeTransferInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        source,\n        destination,\n        owner,\n        multiSigners\n      },\n      data\n    } = decodeTransferInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.Transfer) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!source || !destination || !owner) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        source,\n        destination,\n        owner,\n        multiSigners\n      },\n      data\n    };\n  }\n  /**\n   * Decode a Transfer instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeTransferInstructionUnchecked({\n    programId,\n    keys: [source, destination, owner, ...multiSigners],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        source,\n        destination,\n        owner,\n        multiSigners\n      },\n      data: transferInstructionData.decode(data)\n    };\n  }\n});","lineCount":108,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_internal"],[14,15,6,0],[14,18,6,0,"require"],[14,25,6,0],[14,26,6,0,"_dependencyMap"],[14,40,6,0],[15,2,7,0],[15,6,7,0,"_types"],[15,12,7,0],[15,15,7,0,"require"],[15,22,7,0],[15,23,7,0,"_dependencyMap"],[15,37,7,0],[16,2,8,0],[17,2,9,7],[17,8,9,13,"transferInstructionData"],[17,31,9,36],[17,34,9,36,"exports"],[17,41,9,36],[17,42,9,36,"transferInstructionData"],[17,65,9,36],[17,68,9,39],[17,72,9,39,"struct"],[17,92,9,45],[17,94,9,46],[17,95,9,47],[17,99,9,47,"u8"],[17,115,9,49],[17,117,9,50],[17,130,9,63],[17,131,9,64],[17,133,9,66],[17,137,9,66,"u64"],[17,159,9,69],[17,161,9,70],[17,169,9,78],[17,170,9,79],[17,171,9,80],[17,172,9,81],[18,2,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,2,22,7],[30,11,22,16,"createTransferInstruction"],[30,36,22,41,"createTransferInstruction"],[30,37,22,42,"source"],[30,43,22,48],[30,45,22,50,"destination"],[30,56,22,61],[30,58,22,63,"owner"],[30,63,22,68],[30,65,22,70,"amount"],[30,71,22,76],[30,73,22,78,"multiSigners"],[30,85,22,90],[30,88,22,93],[30,90,22,95],[30,92,22,97,"programId"],[30,101,22,106],[30,104,22,109,"TOKEN_PROGRAM_ID"],[30,131,22,125],[30,133,22,127],[31,4,23,4],[31,10,23,10,"keys"],[31,14,23,14],[31,17,23,17],[31,21,23,17,"addSigners"],[31,41,23,27],[31,43,23,28],[31,44,24,8],[32,6,24,10,"pubkey"],[32,12,24,16],[32,14,24,18,"source"],[32,20,24,24],[33,6,24,26,"isSigner"],[33,14,24,34],[33,16,24,36],[33,21,24,41],[34,6,24,43,"isWritable"],[34,16,24,53],[34,18,24,55],[35,4,24,60],[35,5,24,61],[35,7,25,8],[36,6,25,10,"pubkey"],[36,12,25,16],[36,14,25,18,"destination"],[36,25,25,29],[37,6,25,31,"isSigner"],[37,14,25,39],[37,16,25,41],[37,21,25,46],[38,6,25,48,"isWritable"],[38,16,25,58],[38,18,25,60],[39,4,25,65],[39,5,25,66],[39,6,26,5],[39,8,26,7,"owner"],[39,13,26,12],[39,15,26,14,"multiSigners"],[39,27,26,26],[39,28,26,27],[40,4,27,4],[40,10,27,10,"data"],[40,14,27,14],[40,17,27,17,"Buffer"],[40,23,27,23],[40,24,27,24,"alloc"],[40,29,27,29],[40,30,27,30,"transferInstructionData"],[40,53,27,53],[40,54,27,54,"span"],[40,58,27,58],[40,59,27,59],[41,4,28,4,"transferInstructionData"],[41,27,28,27],[41,28,28,28,"encode"],[41,34,28,34],[41,35,28,35],[42,6,29,8,"instruction"],[42,17,29,19],[42,19,29,21,"TokenInstruction"],[42,42,29,37],[42,43,29,38,"Transfer"],[42,51,29,46],[43,6,30,8,"amount"],[43,12,30,14],[43,14,30,16,"BigInt"],[43,20,30,22],[43,21,30,23,"amount"],[43,27,30,29],[44,4,31,4],[44,5,31,5],[44,7,31,7,"data"],[44,11,31,11],[44,12,31,12],[45,4,32,4],[45,11,32,11],[45,15,32,15,"TransactionInstruction"],[45,42,32,37],[45,43,32,38],[46,6,32,40,"keys"],[46,10,32,44],[47,6,32,46,"programId"],[47,15,32,55],[48,6,32,57,"data"],[49,4,32,62],[49,5,32,63],[49,6,32,64],[50,2,33,0],[51,2,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,2,42,7],[59,11,42,16,"decodeTransferInstruction"],[59,36,42,41,"decodeTransferInstruction"],[59,37,42,42,"instruction"],[59,48,42,53],[59,50,42,55,"programId"],[59,59,42,64],[59,62,42,67,"TOKEN_PROGRAM_ID"],[59,89,42,83],[59,91,42,85],[60,4,43,4],[60,8,43,8],[60,9,43,9,"instruction"],[60,20,43,20],[60,21,43,21,"programId"],[60,30,43,30],[60,31,43,31,"equals"],[60,37,43,37],[60,38,43,38,"programId"],[60,47,43,47],[60,48,43,48],[60,50,44,8],[60,56,44,14],[60,60,44,18,"TokenInvalidInstructionProgramError"],[60,103,44,53],[60,104,44,54],[60,105,44,55],[61,4,45,4],[61,8,45,8,"instruction"],[61,19,45,19],[61,20,45,20,"data"],[61,24,45,24],[61,25,45,25,"length"],[61,31,45,31],[61,36,45,36,"transferInstructionData"],[61,59,45,59],[61,60,45,60,"span"],[61,64,45,64],[61,66,46,8],[61,72,46,14],[61,76,46,18,"TokenInvalidInstructionDataError"],[61,116,46,50],[61,117,46,51],[61,118,46,52],[62,4,47,4],[62,10,47,10],[63,6,47,12,"keys"],[63,10,47,16],[63,12,47,18],[64,8,47,20,"source"],[64,14,47,26],[65,8,47,28,"destination"],[65,19,47,39],[66,8,47,41,"owner"],[66,13,47,46],[67,8,47,48,"multiSigners"],[68,6,47,61],[68,7,47,62],[69,6,47,64,"data"],[70,4,47,70],[70,5,47,71],[70,8,47,74,"decodeTransferInstructionUnchecked"],[70,42,47,108],[70,43,47,109,"instruction"],[70,54,47,120],[70,55,47,121],[71,4,48,4],[71,8,48,8,"data"],[71,12,48,12],[71,13,48,13,"instruction"],[71,24,48,24],[71,29,48,29,"TokenInstruction"],[71,52,48,45],[71,53,48,46,"Transfer"],[71,61,48,54],[71,63,49,8],[71,69,49,14],[71,73,49,18,"TokenInvalidInstructionTypeError"],[71,113,49,50],[71,114,49,51],[71,115,49,52],[72,4,50,4],[72,8,50,8],[72,9,50,9,"source"],[72,15,50,15],[72,19,50,19],[72,20,50,20,"destination"],[72,31,50,31],[72,35,50,35],[72,36,50,36,"owner"],[72,41,50,41],[72,43,51,8],[72,49,51,14],[72,53,51,18,"TokenInvalidInstructionKeysError"],[72,93,51,50],[72,94,51,51],[72,95,51,52],[73,4,52,4],[74,4,53,4],[74,11,53,11],[75,6,54,8,"programId"],[75,15,54,17],[76,6,55,8,"keys"],[76,10,55,12],[76,12,55,14],[77,8,56,12,"source"],[77,14,56,18],[78,8,57,12,"destination"],[78,19,57,23],[79,8,58,12,"owner"],[79,13,58,17],[80,8,59,12,"multiSigners"],[81,6,60,8],[81,7,60,9],[82,6,61,8,"data"],[83,4,62,4],[83,5,62,5],[84,2,63,0],[85,2,64,0],[86,0,65,0],[87,0,66,0],[88,0,67,0],[89,0,68,0],[90,0,69,0],[91,0,70,0],[92,2,71,7],[92,11,71,16,"decodeTransferInstructionUnchecked"],[92,45,71,50,"decodeTransferInstructionUnchecked"],[92,46,71,51],[93,4,71,53,"programId"],[93,13,71,62],[94,4,71,64,"keys"],[94,8,71,68],[94,10,71,70],[94,11,71,71,"source"],[94,17,71,77],[94,19,71,79,"destination"],[94,30,71,90],[94,32,71,92,"owner"],[94,37,71,97],[94,39,71,99],[94,42,71,102,"multiSigners"],[94,54,71,114],[94,55,71,115],[95,4,71,117,"data"],[96,2,71,123],[96,3,71,124],[96,5,71,126],[97,4,72,4],[97,11,72,11],[98,6,73,8,"programId"],[98,15,73,17],[99,6,74,8,"keys"],[99,10,74,12],[99,12,74,14],[100,8,75,12,"source"],[100,14,75,18],[101,8,76,12,"destination"],[101,19,76,23],[102,8,77,12,"owner"],[102,13,77,17],[103,8,78,12,"multiSigners"],[104,6,79,8],[104,7,79,9],[105,6,80,8,"data"],[105,10,80,12],[105,12,80,14,"transferInstructionData"],[105,35,80,37],[105,36,80,38,"decode"],[105,42,80,44],[105,43,80,45,"data"],[105,47,80,49],[106,4,81,4],[106,5,81,5],[107,2,82,0],[108,0,82,1],[108,3]],"functionMap":{"names":["<global>","createTransferInstruction","decodeTransferInstruction","decodeTransferInstructionUnchecked"],"mappings":"AAA;OCqB;CDW;OES;CFqB;OGQ;CHW"}},"type":"js/module"}]}