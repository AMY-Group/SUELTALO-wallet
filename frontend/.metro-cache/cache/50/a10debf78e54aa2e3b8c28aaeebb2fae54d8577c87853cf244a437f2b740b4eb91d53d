{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"hmac-drbg","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":35,"index":77}}],"key":"vVJw4H0ndlJvfVa5QGvcK7uUXx4=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":31,"index":110}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"]}},{"name":"../curves","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":13,"index":125},"end":{"line":6,"column":33,"index":145}}],"key":"THepG+iSmaA7+l1asK/DPPTMaH4=","exportNames":["*"]}},{"name":"brorand","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":158},"end":{"line":7,"column":29,"index":176}}],"key":"S4gmoagXR7Xlhdx6vMizYk5L4Sc=","exportNames":["*"]}},{"name":"./key","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":14,"index":220},"end":{"line":10,"column":30,"index":236}}],"key":"c2icHT5wjuk5iYUuCG2NMGWD6xE=","exportNames":["*"]}},{"name":"./signature","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":254},"end":{"line":11,"column":38,"index":276}}],"key":"MNBHEq71uolxlMEMq/nRow+dvKY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var HmacDRBG = require(_dependencyMap[1], \"hmac-drbg\");\n  var utils = require(_dependencyMap[2], \"../utils\");\n  var curves = require(_dependencyMap[3], \"../curves\");\n  var rand = require(_dependencyMap[4], \"brorand\");\n  var assert = utils.assert;\n  var KeyPair = require(_dependencyMap[5], \"./key\");\n  var Signature = require(_dependencyMap[6], \"./signature\");\n  function EC(options) {\n    if (!(this instanceof EC)) return new EC(options);\n\n    // Shortcut `elliptic.ec(curve-name)`\n    if (typeof options === 'string') {\n      assert(Object.prototype.hasOwnProperty.call(curves, options), 'Unknown curve ' + options);\n      options = curves[options];\n    }\n\n    // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n    if (options instanceof curves.PresetCurve) options = {\n      curve: options\n    };\n    this.curve = options.curve.curve;\n    this.n = this.curve.n;\n    this.nh = this.n.ushrn(1);\n    this.g = this.curve.g;\n\n    // Point on curve\n    this.g = options.curve.g;\n    this.g.precompute(options.curve.n.bitLength() + 1);\n\n    // Hash for function for DRBG\n    this.hash = options.hash || options.curve.hash;\n  }\n  module.exports = EC;\n  EC.prototype.keyPair = function keyPair(options) {\n    return new KeyPair(this, options);\n  };\n  EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n    return KeyPair.fromPrivate(this, priv, enc);\n  };\n  EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n    return KeyPair.fromPublic(this, pub, enc);\n  };\n  EC.prototype.genKeyPair = function genKeyPair(options) {\n    if (!options) options = {};\n\n    // Instantiate Hmac_DRBG\n    var drbg = new HmacDRBG({\n      hash: this.hash,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8',\n      entropy: options.entropy || rand(this.hash.hmacStrength),\n      entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n      nonce: this.n.toArray()\n    });\n    var bytes = this.n.byteLength();\n    var ns2 = this.n.sub(new BN(2));\n    for (;;) {\n      var priv = new BN(drbg.generate(bytes));\n      if (priv.cmp(ns2) > 0) continue;\n      priv.iaddn(1);\n      return this.keyFromPrivate(priv);\n    }\n  };\n  EC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n    var byteLength;\n    if (BN.isBN(msg) || typeof msg === 'number') {\n      msg = new BN(msg, 16);\n      byteLength = msg.byteLength();\n    } else if (typeof msg === 'object') {\n      // BN assumes an array-like input and asserts length\n      byteLength = msg.length;\n      msg = new BN(msg, 16);\n    } else {\n      // BN converts the value to string\n      var str = msg.toString();\n      // HEX encoding\n      byteLength = str.length + 1 >>> 1;\n      msg = new BN(str, 16);\n    }\n    // Allow overriding\n    if (typeof bitLength !== 'number') {\n      bitLength = byteLength * 8;\n    }\n    var delta = bitLength - this.n.bitLength();\n    if (delta > 0) msg = msg.ushrn(delta);\n    if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n  };\n  EC.prototype.sign = function sign(msg, key, enc, options) {\n    if (typeof enc === 'object') {\n      options = enc;\n      enc = null;\n    }\n    if (!options) options = {};\n    if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n      assert(typeof msg === 'object' && msg && typeof msg.length === 'number', 'Expected message to be an array-like, a hex string, or a BN instance');\n      assert(msg.length >>> 0 === msg.length); // non-negative 32-bit integer\n      for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n    }\n    key = this.keyFromPrivate(key, enc);\n    msg = this._truncateToN(msg, false, options.msgBitLength);\n\n    // Would fail further checks, but let's make the error message clear\n    assert(!msg.isNeg(), 'Can not sign a negative message');\n\n    // Zero-extend key to provide enough entropy\n    var bytes = this.n.byteLength();\n    var bkey = key.getPrivate().toArray('be', bytes);\n\n    // Zero-extend nonce to have the same byte size as N\n    var nonce = msg.toArray('be', bytes);\n\n    // Recheck nonce to be bijective to msg\n    assert(new BN(nonce).eq(msg), 'Can not sign message');\n\n    // Instantiate Hmac_DRBG\n    var drbg = new HmacDRBG({\n      hash: this.hash,\n      entropy: bkey,\n      nonce: nonce,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8'\n    });\n\n    // Number of bytes to generate\n    var ns1 = this.n.sub(new BN(1));\n    for (var iter = 0;; iter++) {\n      var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n      k = this._truncateToN(k, true);\n      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n      var kp = this.g.mul(k);\n      if (kp.isInfinity()) continue;\n      var kpX = kp.getX();\n      var r = kpX.umod(this.n);\n      if (r.cmpn(0) === 0) continue;\n      var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n      s = s.umod(this.n);\n      if (s.cmpn(0) === 0) continue;\n      var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\n      // Use complement of `s`, if it is > `n / 2`\n      if (options.canonical && s.cmp(this.nh) > 0) {\n        s = this.n.sub(s);\n        recoveryParam ^= 1;\n      }\n      return new Signature({\n        r: r,\n        s: s,\n        recoveryParam: recoveryParam\n      });\n    }\n  };\n  EC.prototype.verify = function verify(msg, signature, key, enc, options) {\n    if (!options) options = {};\n    msg = this._truncateToN(msg, false, options.msgBitLength);\n    key = this.keyFromPublic(key, enc);\n    signature = new Signature(signature, 'hex');\n\n    // Perform primitive values validation\n    var r = signature.r;\n    var s = signature.s;\n    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\n    // Validate signature\n    var sinv = s.invm(this.n);\n    var u1 = sinv.mul(msg).umod(this.n);\n    var u2 = sinv.mul(r).umod(this.n);\n    var p;\n    if (!this.curve._maxwellTrick) {\n      p = this.g.mulAdd(u1, key.getPublic(), u2);\n      if (p.isInfinity()) return false;\n      return p.getX().umod(this.n).cmp(r) === 0;\n    }\n\n    // NOTE: Greg Maxwell's trick, inspired by:\n    // https://git.io/vad3K\n\n    p = this.g.jmulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n\n    // Compare `p.x` of Jacobian point with `r`,\n    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n    // inverse of `p.z^2`\n    return p.eqXToP(r);\n  };\n  EC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n    assert((3 & j) === j, 'The recovery param is more than two bits');\n    signature = new Signature(signature, enc);\n    var n = this.n;\n    var e = new BN(msg);\n    var r = signature.r;\n    var s = signature.s;\n\n    // A set LSB signifies that the y-coordinate is odd\n    var isYOdd = j & 1;\n    var isSecondKey = j >> 1;\n    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\n    // 1.1. Let x = r + jn.\n    if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n    var rInv = signature.r.invm(n);\n    var s1 = n.sub(e).mul(rInv).umod(n);\n    var s2 = s.mul(rInv).umod(n);\n\n    // 1.6.1 Compute Q = r^-1 (sR -  eG)\n    //               Q = r^-1 (sR + -eG)\n    return this.g.mulAdd(s1, r, s2);\n  };\n  EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n    signature = new Signature(signature, enc);\n    if (signature.recoveryParam !== null) return signature.recoveryParam;\n    for (var i = 0; i < 4; i++) {\n      var Qprime;\n      try {\n        Qprime = this.recoverPubKey(e, signature, i);\n      } catch (e) {\n        continue;\n      }\n      if (Qprime.eq(Q)) return i;\n    }\n    throw new Error('Unable to find valid recovery factor');\n  };\n});","lineCount":227,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"BN"],[4,8,3,6],[4,11,3,9,"require"],[4,18,3,16],[4,19,3,16,"_dependencyMap"],[4,33,3,16],[4,45,3,24],[4,46,3,25],[5,2,4,0],[5,6,4,4,"HmacDRBG"],[5,14,4,12],[5,17,4,15,"require"],[5,24,4,22],[5,25,4,22,"_dependencyMap"],[5,39,4,22],[5,55,4,34],[5,56,4,35],[6,2,5,0],[6,6,5,4,"utils"],[6,11,5,9],[6,14,5,12,"require"],[6,21,5,19],[6,22,5,19,"_dependencyMap"],[6,36,5,19],[6,51,5,30],[6,52,5,31],[7,2,6,0],[7,6,6,4,"curves"],[7,12,6,10],[7,15,6,13,"require"],[7,22,6,20],[7,23,6,20,"_dependencyMap"],[7,37,6,20],[7,53,6,32],[7,54,6,33],[8,2,7,0],[8,6,7,4,"rand"],[8,10,7,8],[8,13,7,11,"require"],[8,20,7,18],[8,21,7,18,"_dependencyMap"],[8,35,7,18],[8,49,7,28],[8,50,7,29],[9,2,8,0],[9,6,8,4,"assert"],[9,12,8,10],[9,15,8,13,"utils"],[9,20,8,18],[9,21,8,19,"assert"],[9,27,8,25],[10,2,10,0],[10,6,10,4,"KeyPair"],[10,13,10,11],[10,16,10,14,"require"],[10,23,10,21],[10,24,10,21,"_dependencyMap"],[10,38,10,21],[10,50,10,29],[10,51,10,30],[11,2,11,0],[11,6,11,4,"Signature"],[11,15,11,13],[11,18,11,16,"require"],[11,25,11,23],[11,26,11,23,"_dependencyMap"],[11,40,11,23],[11,58,11,37],[11,59,11,38],[12,2,13,0],[12,11,13,9,"EC"],[12,13,13,11,"EC"],[12,14,13,12,"options"],[12,21,13,19],[12,23,13,21],[13,4,14,2],[13,8,14,6],[13,10,14,8],[13,14,14,12],[13,26,14,24,"EC"],[13,28,14,26],[13,29,14,27],[13,31,15,4],[13,38,15,11],[13,42,15,15,"EC"],[13,44,15,17],[13,45,15,18,"options"],[13,52,15,25],[13,53,15,26],[15,4,17,2],[16,4,18,2],[16,8,18,6],[16,15,18,13,"options"],[16,22,18,20],[16,27,18,25],[16,35,18,33],[16,37,18,35],[17,6,19,4,"assert"],[17,12,19,10],[17,13,19,11,"Object"],[17,19,19,17],[17,20,19,18,"prototype"],[17,29,19,27],[17,30,19,28,"hasOwnProperty"],[17,44,19,42],[17,45,19,43,"call"],[17,49,19,47],[17,50,19,48,"curves"],[17,56,19,54],[17,58,19,56,"options"],[17,65,19,63],[17,66,19,64],[17,68,20,6],[17,84,20,22],[17,87,20,25,"options"],[17,94,20,32],[17,95,20,33],[18,6,22,4,"options"],[18,13,22,11],[18,16,22,14,"curves"],[18,22,22,20],[18,23,22,21,"options"],[18,30,22,28],[18,31,22,29],[19,4,23,2],[21,4,25,2],[22,4,26,2],[22,8,26,6,"options"],[22,15,26,13],[22,27,26,25,"curves"],[22,33,26,31],[22,34,26,32,"PresetCurve"],[22,45,26,43],[22,47,27,4,"options"],[22,54,27,11],[22,57,27,14],[23,6,27,16,"curve"],[23,11,27,21],[23,13,27,23,"options"],[24,4,27,31],[24,5,27,32],[25,4,29,2],[25,8,29,6],[25,9,29,7,"curve"],[25,14,29,12],[25,17,29,15,"options"],[25,24,29,22],[25,25,29,23,"curve"],[25,30,29,28],[25,31,29,29,"curve"],[25,36,29,34],[26,4,30,2],[26,8,30,6],[26,9,30,7,"n"],[26,10,30,8],[26,13,30,11],[26,17,30,15],[26,18,30,16,"curve"],[26,23,30,21],[26,24,30,22,"n"],[26,25,30,23],[27,4,31,2],[27,8,31,6],[27,9,31,7,"nh"],[27,11,31,9],[27,14,31,12],[27,18,31,16],[27,19,31,17,"n"],[27,20,31,18],[27,21,31,19,"ushrn"],[27,26,31,24],[27,27,31,25],[27,28,31,26],[27,29,31,27],[28,4,32,2],[28,8,32,6],[28,9,32,7,"g"],[28,10,32,8],[28,13,32,11],[28,17,32,15],[28,18,32,16,"curve"],[28,23,32,21],[28,24,32,22,"g"],[28,25,32,23],[30,4,34,2],[31,4,35,2],[31,8,35,6],[31,9,35,7,"g"],[31,10,35,8],[31,13,35,11,"options"],[31,20,35,18],[31,21,35,19,"curve"],[31,26,35,24],[31,27,35,25,"g"],[31,28,35,26],[32,4,36,2],[32,8,36,6],[32,9,36,7,"g"],[32,10,36,8],[32,11,36,9,"precompute"],[32,21,36,19],[32,22,36,20,"options"],[32,29,36,27],[32,30,36,28,"curve"],[32,35,36,33],[32,36,36,34,"n"],[32,37,36,35],[32,38,36,36,"bitLength"],[32,47,36,45],[32,48,36,46],[32,49,36,47],[32,52,36,50],[32,53,36,51],[32,54,36,52],[34,4,38,2],[35,4,39,2],[35,8,39,6],[35,9,39,7,"hash"],[35,13,39,11],[35,16,39,14,"options"],[35,23,39,21],[35,24,39,22,"hash"],[35,28,39,26],[35,32,39,30,"options"],[35,39,39,37],[35,40,39,38,"curve"],[35,45,39,43],[35,46,39,44,"hash"],[35,50,39,48],[36,2,40,0],[37,2,41,0,"module"],[37,8,41,6],[37,9,41,7,"exports"],[37,16,41,14],[37,19,41,17,"EC"],[37,21,41,19],[38,2,43,0,"EC"],[38,4,43,2],[38,5,43,3,"prototype"],[38,14,43,12],[38,15,43,13,"keyPair"],[38,22,43,20],[38,25,43,23],[38,34,43,32,"keyPair"],[38,41,43,39,"keyPair"],[38,42,43,40,"options"],[38,49,43,47],[38,51,43,49],[39,4,44,2],[39,11,44,9],[39,15,44,13,"KeyPair"],[39,22,44,20],[39,23,44,21],[39,27,44,25],[39,29,44,27,"options"],[39,36,44,34],[39,37,44,35],[40,2,45,0],[40,3,45,1],[41,2,47,0,"EC"],[41,4,47,2],[41,5,47,3,"prototype"],[41,14,47,12],[41,15,47,13,"keyFromPrivate"],[41,29,47,27],[41,32,47,30],[41,41,47,39,"keyFromPrivate"],[41,55,47,53,"keyFromPrivate"],[41,56,47,54,"priv"],[41,60,47,58],[41,62,47,60,"enc"],[41,65,47,63],[41,67,47,65],[42,4,48,2],[42,11,48,9,"KeyPair"],[42,18,48,16],[42,19,48,17,"fromPrivate"],[42,30,48,28],[42,31,48,29],[42,35,48,33],[42,37,48,35,"priv"],[42,41,48,39],[42,43,48,41,"enc"],[42,46,48,44],[42,47,48,45],[43,2,49,0],[43,3,49,1],[44,2,51,0,"EC"],[44,4,51,2],[44,5,51,3,"prototype"],[44,14,51,12],[44,15,51,13,"keyFromPublic"],[44,28,51,26],[44,31,51,29],[44,40,51,38,"keyFromPublic"],[44,53,51,51,"keyFromPublic"],[44,54,51,52,"pub"],[44,57,51,55],[44,59,51,57,"enc"],[44,62,51,60],[44,64,51,62],[45,4,52,2],[45,11,52,9,"KeyPair"],[45,18,52,16],[45,19,52,17,"fromPublic"],[45,29,52,27],[45,30,52,28],[45,34,52,32],[45,36,52,34,"pub"],[45,39,52,37],[45,41,52,39,"enc"],[45,44,52,42],[45,45,52,43],[46,2,53,0],[46,3,53,1],[47,2,55,0,"EC"],[47,4,55,2],[47,5,55,3,"prototype"],[47,14,55,12],[47,15,55,13,"genKeyPair"],[47,25,55,23],[47,28,55,26],[47,37,55,35,"genKeyPair"],[47,47,55,45,"genKeyPair"],[47,48,55,46,"options"],[47,55,55,53],[47,57,55,55],[48,4,56,2],[48,8,56,6],[48,9,56,7,"options"],[48,16,56,14],[48,18,57,4,"options"],[48,25,57,11],[48,28,57,14],[48,29,57,15],[48,30,57,16],[50,4,59,2],[51,4,60,2],[51,8,60,6,"drbg"],[51,12,60,10],[51,15,60,13],[51,19,60,17,"HmacDRBG"],[51,27,60,25],[51,28,60,26],[52,6,61,4,"hash"],[52,10,61,8],[52,12,61,10],[52,16,61,14],[52,17,61,15,"hash"],[52,21,61,19],[53,6,62,4,"pers"],[53,10,62,8],[53,12,62,10,"options"],[53,19,62,17],[53,20,62,18,"pers"],[53,24,62,22],[54,6,63,4,"persEnc"],[54,13,63,11],[54,15,63,13,"options"],[54,22,63,20],[54,23,63,21,"persEnc"],[54,30,63,28],[54,34,63,32],[54,40,63,38],[55,6,64,4,"entropy"],[55,13,64,11],[55,15,64,13,"options"],[55,22,64,20],[55,23,64,21,"entropy"],[55,30,64,28],[55,34,64,32,"rand"],[55,38,64,36],[55,39,64,37],[55,43,64,41],[55,44,64,42,"hash"],[55,48,64,46],[55,49,64,47,"hmacStrength"],[55,61,64,59],[55,62,64,60],[56,6,65,4,"entropyEnc"],[56,16,65,14],[56,18,65,16,"options"],[56,25,65,23],[56,26,65,24,"entropy"],[56,33,65,31],[56,37,65,35,"options"],[56,44,65,42],[56,45,65,43,"entropyEnc"],[56,55,65,53],[56,59,65,57],[56,65,65,63],[57,6,66,4,"nonce"],[57,11,66,9],[57,13,66,11],[57,17,66,15],[57,18,66,16,"n"],[57,19,66,17],[57,20,66,18,"toArray"],[57,27,66,25],[57,28,66,26],[58,4,67,2],[58,5,67,3],[58,6,67,4],[59,4,69,2],[59,8,69,6,"bytes"],[59,13,69,11],[59,16,69,14],[59,20,69,18],[59,21,69,19,"n"],[59,22,69,20],[59,23,69,21,"byteLength"],[59,33,69,31],[59,34,69,32],[59,35,69,33],[60,4,70,2],[60,8,70,6,"ns2"],[60,11,70,9],[60,14,70,12],[60,18,70,16],[60,19,70,17,"n"],[60,20,70,18],[60,21,70,19,"sub"],[60,24,70,22],[60,25,70,23],[60,29,70,27,"BN"],[60,31,70,29],[60,32,70,30],[60,33,70,31],[60,34,70,32],[60,35,70,33],[61,4,71,2],[61,13,71,11],[62,6,72,4],[62,10,72,8,"priv"],[62,14,72,12],[62,17,72,15],[62,21,72,19,"BN"],[62,23,72,21],[62,24,72,22,"drbg"],[62,28,72,26],[62,29,72,27,"generate"],[62,37,72,35],[62,38,72,36,"bytes"],[62,43,72,41],[62,44,72,42],[62,45,72,43],[63,6,73,4],[63,10,73,8,"priv"],[63,14,73,12],[63,15,73,13,"cmp"],[63,18,73,16],[63,19,73,17,"ns2"],[63,22,73,20],[63,23,73,21],[63,26,73,24],[63,27,73,25],[63,29,74,6],[64,6,76,4,"priv"],[64,10,76,8],[64,11,76,9,"iaddn"],[64,16,76,14],[64,17,76,15],[64,18,76,16],[64,19,76,17],[65,6,77,4],[65,13,77,11],[65,17,77,15],[65,18,77,16,"keyFromPrivate"],[65,32,77,30],[65,33,77,31,"priv"],[65,37,77,35],[65,38,77,36],[66,4,78,2],[67,2,79,0],[67,3,79,1],[68,2,81,0,"EC"],[68,4,81,2],[68,5,81,3,"prototype"],[68,14,81,12],[68,15,81,13,"_truncateToN"],[68,27,81,25],[68,30,81,28],[68,39,81,37,"_truncateToN"],[68,51,81,49,"_truncateToN"],[68,52,81,50,"msg"],[68,55,81,53],[68,57,81,55,"truncOnly"],[68,66,81,64],[68,68,81,66,"bitLength"],[68,77,81,75],[68,79,81,77],[69,4,82,2],[69,8,82,6,"byteLength"],[69,18,82,16],[70,4,83,2],[70,8,83,6,"BN"],[70,10,83,8],[70,11,83,9,"isBN"],[70,15,83,13],[70,16,83,14,"msg"],[70,19,83,17],[70,20,83,18],[70,24,83,22],[70,31,83,29,"msg"],[70,34,83,32],[70,39,83,37],[70,47,83,45],[70,49,83,47],[71,6,84,4,"msg"],[71,9,84,7],[71,12,84,10],[71,16,84,14,"BN"],[71,18,84,16],[71,19,84,17,"msg"],[71,22,84,20],[71,24,84,22],[71,26,84,24],[71,27,84,25],[72,6,85,4,"byteLength"],[72,16,85,14],[72,19,85,17,"msg"],[72,22,85,20],[72,23,85,21,"byteLength"],[72,33,85,31],[72,34,85,32],[72,35,85,33],[73,4,86,2],[73,5,86,3],[73,11,86,9],[73,15,86,13],[73,22,86,20,"msg"],[73,25,86,23],[73,30,86,28],[73,38,86,36],[73,40,86,38],[74,6,87,4],[75,6,88,4,"byteLength"],[75,16,88,14],[75,19,88,17,"msg"],[75,22,88,20],[75,23,88,21,"length"],[75,29,88,27],[76,6,89,4,"msg"],[76,9,89,7],[76,12,89,10],[76,16,89,14,"BN"],[76,18,89,16],[76,19,89,17,"msg"],[76,22,89,20],[76,24,89,22],[76,26,89,24],[76,27,89,25],[77,4,90,2],[77,5,90,3],[77,11,90,9],[78,6,91,4],[79,6,92,4],[79,10,92,8,"str"],[79,13,92,11],[79,16,92,14,"msg"],[79,19,92,17],[79,20,92,18,"toString"],[79,28,92,26],[79,29,92,27],[79,30,92,28],[80,6,93,4],[81,6,94,4,"byteLength"],[81,16,94,14],[81,19,94,18,"str"],[81,22,94,21],[81,23,94,22,"length"],[81,29,94,28],[81,32,94,31],[81,33,94,32],[81,38,94,38],[81,39,94,39],[82,6,95,4,"msg"],[82,9,95,7],[82,12,95,10],[82,16,95,14,"BN"],[82,18,95,16],[82,19,95,17,"str"],[82,22,95,20],[82,24,95,22],[82,26,95,24],[82,27,95,25],[83,4,96,2],[84,4,97,2],[85,4,98,2],[85,8,98,6],[85,15,98,13,"bitLength"],[85,24,98,22],[85,29,98,27],[85,37,98,35],[85,39,98,37],[86,6,99,4,"bitLength"],[86,15,99,13],[86,18,99,16,"byteLength"],[86,28,99,26],[86,31,99,29],[86,32,99,30],[87,4,100,2],[88,4,101,2],[88,8,101,6,"delta"],[88,13,101,11],[88,16,101,14,"bitLength"],[88,25,101,23],[88,28,101,26],[88,32,101,30],[88,33,101,31,"n"],[88,34,101,32],[88,35,101,33,"bitLength"],[88,44,101,42],[88,45,101,43],[88,46,101,44],[89,4,102,2],[89,8,102,6,"delta"],[89,13,102,11],[89,16,102,14],[89,17,102,15],[89,19,103,4,"msg"],[89,22,103,7],[89,25,103,10,"msg"],[89,28,103,13],[89,29,103,14,"ushrn"],[89,34,103,19],[89,35,103,20,"delta"],[89,40,103,25],[89,41,103,26],[90,4,104,2],[90,8,104,6],[90,9,104,7,"truncOnly"],[90,18,104,16],[90,22,104,20,"msg"],[90,25,104,23],[90,26,104,24,"cmp"],[90,29,104,27],[90,30,104,28],[90,34,104,32],[90,35,104,33,"n"],[90,36,104,34],[90,37,104,35],[90,41,104,39],[90,42,104,40],[90,44,105,4],[90,51,105,11,"msg"],[90,54,105,14],[90,55,105,15,"sub"],[90,58,105,18],[90,59,105,19],[90,63,105,23],[90,64,105,24,"n"],[90,65,105,25],[90,66,105,26],[90,67,105,27],[90,72,107,4],[90,79,107,11,"msg"],[90,82,107,14],[91,2,108,0],[91,3,108,1],[92,2,110,0,"EC"],[92,4,110,2],[92,5,110,3,"prototype"],[92,14,110,12],[92,15,110,13,"sign"],[92,19,110,17],[92,22,110,20],[92,31,110,29,"sign"],[92,35,110,33,"sign"],[92,36,110,34,"msg"],[92,39,110,37],[92,41,110,39,"key"],[92,44,110,42],[92,46,110,44,"enc"],[92,49,110,47],[92,51,110,49,"options"],[92,58,110,56],[92,60,110,58],[93,4,111,2],[93,8,111,6],[93,15,111,13,"enc"],[93,18,111,16],[93,23,111,21],[93,31,111,29],[93,33,111,31],[94,6,112,4,"options"],[94,13,112,11],[94,16,112,14,"enc"],[94,19,112,17],[95,6,113,4,"enc"],[95,9,113,7],[95,12,113,10],[95,16,113,14],[96,4,114,2],[97,4,115,2],[97,8,115,6],[97,9,115,7,"options"],[97,16,115,14],[97,18,116,4,"options"],[97,25,116,11],[97,28,116,14],[97,29,116,15],[97,30,116,16],[98,4,118,2],[98,8,118,6],[98,15,118,13,"msg"],[98,18,118,16],[98,23,118,21],[98,31,118,29],[98,35,118,33],[98,42,118,40,"msg"],[98,45,118,43],[98,50,118,48],[98,58,118,56],[98,62,118,60],[98,63,118,61,"BN"],[98,65,118,63],[98,66,118,64,"isBN"],[98,70,118,68],[98,71,118,69,"msg"],[98,74,118,72],[98,75,118,73],[98,77,118,75],[99,6,119,4,"assert"],[99,12,119,10],[99,13,119,11],[99,20,119,18,"msg"],[99,23,119,21],[99,28,119,26],[99,36,119,34],[99,40,119,38,"msg"],[99,43,119,41],[99,47,119,45],[99,54,119,52,"msg"],[99,57,119,55],[99,58,119,56,"length"],[99,64,119,62],[99,69,119,67],[99,77,119,75],[99,79,120,6],[99,149,120,76],[99,150,120,77],[100,6,121,4,"assert"],[100,12,121,10],[100,13,121,12,"msg"],[100,16,121,15],[100,17,121,16,"length"],[100,23,121,22],[100,28,121,27],[100,29,121,28],[100,34,121,34,"msg"],[100,37,121,37],[100,38,121,38,"length"],[100,44,121,44],[100,45,121,45],[100,46,121,46],[100,47,121,47],[101,6,122,4],[101,11,122,9],[101,15,122,13,"i"],[101,16,122,14],[101,19,122,17],[101,20,122,18],[101,22,122,20,"i"],[101,23,122,21],[101,26,122,24,"msg"],[101,29,122,27],[101,30,122,28,"length"],[101,36,122,34],[101,38,122,36,"i"],[101,39,122,37],[101,41,122,39],[101,43,122,41,"assert"],[101,49,122,47],[101,50,122,48],[101,51,122,49,"msg"],[101,54,122,52],[101,55,122,53,"i"],[101,56,122,54],[101,57,122,55],[101,60,122,58],[101,63,122,61],[101,69,122,67,"msg"],[101,72,122,70],[101,73,122,71,"i"],[101,74,122,72],[101,75,122,73],[101,76,122,74],[102,4,123,2],[103,4,125,2,"key"],[103,7,125,5],[103,10,125,8],[103,14,125,12],[103,15,125,13,"keyFromPrivate"],[103,29,125,27],[103,30,125,28,"key"],[103,33,125,31],[103,35,125,33,"enc"],[103,38,125,36],[103,39,125,37],[104,4,126,2,"msg"],[104,7,126,5],[104,10,126,8],[104,14,126,12],[104,15,126,13,"_truncateToN"],[104,27,126,25],[104,28,126,26,"msg"],[104,31,126,29],[104,33,126,31],[104,38,126,36],[104,40,126,38,"options"],[104,47,126,45],[104,48,126,46,"msgBitLength"],[104,60,126,58],[104,61,126,59],[106,4,128,2],[107,4,129,2,"assert"],[107,10,129,8],[107,11,129,9],[107,12,129,10,"msg"],[107,15,129,13],[107,16,129,14,"isNeg"],[107,21,129,19],[107,22,129,20],[107,23,129,21],[107,25,129,23],[107,58,129,56],[107,59,129,57],[109,4,131,2],[110,4,132,2],[110,8,132,6,"bytes"],[110,13,132,11],[110,16,132,14],[110,20,132,18],[110,21,132,19,"n"],[110,22,132,20],[110,23,132,21,"byteLength"],[110,33,132,31],[110,34,132,32],[110,35,132,33],[111,4,133,2],[111,8,133,6,"bkey"],[111,12,133,10],[111,15,133,13,"key"],[111,18,133,16],[111,19,133,17,"getPrivate"],[111,29,133,27],[111,30,133,28],[111,31,133,29],[111,32,133,30,"toArray"],[111,39,133,37],[111,40,133,38],[111,44,133,42],[111,46,133,44,"bytes"],[111,51,133,49],[111,52,133,50],[113,4,135,2],[114,4,136,2],[114,8,136,6,"nonce"],[114,13,136,11],[114,16,136,14,"msg"],[114,19,136,17],[114,20,136,18,"toArray"],[114,27,136,25],[114,28,136,26],[114,32,136,30],[114,34,136,32,"bytes"],[114,39,136,37],[114,40,136,38],[116,4,138,2],[117,4,139,2,"assert"],[117,10,139,8],[117,11,139,10],[117,15,139,14,"BN"],[117,17,139,16],[117,18,139,17,"nonce"],[117,23,139,22],[117,24,139,23],[117,25,139,25,"eq"],[117,27,139,27],[117,28,139,28,"msg"],[117,31,139,31],[117,32,139,32],[117,34,139,34],[117,56,139,56],[117,57,139,57],[119,4,141,2],[120,4,142,2],[120,8,142,6,"drbg"],[120,12,142,10],[120,15,142,13],[120,19,142,17,"HmacDRBG"],[120,27,142,25],[120,28,142,26],[121,6,143,4,"hash"],[121,10,143,8],[121,12,143,10],[121,16,143,14],[121,17,143,15,"hash"],[121,21,143,19],[122,6,144,4,"entropy"],[122,13,144,11],[122,15,144,13,"bkey"],[122,19,144,17],[123,6,145,4,"nonce"],[123,11,145,9],[123,13,145,11,"nonce"],[123,18,145,16],[124,6,146,4,"pers"],[124,10,146,8],[124,12,146,10,"options"],[124,19,146,17],[124,20,146,18,"pers"],[124,24,146,22],[125,6,147,4,"persEnc"],[125,13,147,11],[125,15,147,13,"options"],[125,22,147,20],[125,23,147,21,"persEnc"],[125,30,147,28],[125,34,147,32],[126,4,148,2],[126,5,148,3],[126,6,148,4],[128,4,150,2],[129,4,151,2],[129,8,151,6,"ns1"],[129,11,151,9],[129,14,151,12],[129,18,151,16],[129,19,151,17,"n"],[129,20,151,18],[129,21,151,19,"sub"],[129,24,151,22],[129,25,151,23],[129,29,151,27,"BN"],[129,31,151,29],[129,32,151,30],[129,33,151,31],[129,34,151,32],[129,35,151,33],[130,4,153,2],[130,9,153,7],[130,13,153,11,"iter"],[130,17,153,15],[130,20,153,18],[130,21,153,19],[130,24,153,23,"iter"],[130,28,153,27],[130,30,153,29],[130,32,153,31],[131,6,154,4],[131,10,154,8,"k"],[131,11,154,9],[131,14,154,12,"options"],[131,21,154,19],[131,22,154,20,"k"],[131,23,154,21],[131,26,155,6,"options"],[131,33,155,13],[131,34,155,14,"k"],[131,35,155,15],[131,36,155,16,"iter"],[131,40,155,20],[131,41,155,21],[131,44,156,6],[131,48,156,10,"BN"],[131,50,156,12],[131,51,156,13,"drbg"],[131,55,156,17],[131,56,156,18,"generate"],[131,64,156,26],[131,65,156,27],[131,69,156,31],[131,70,156,32,"n"],[131,71,156,33],[131,72,156,34,"byteLength"],[131,82,156,44],[131,83,156,45],[131,84,156,46],[131,85,156,47],[131,86,156,48],[132,6,157,4,"k"],[132,7,157,5],[132,10,157,8],[132,14,157,12],[132,15,157,13,"_truncateToN"],[132,27,157,25],[132,28,157,26,"k"],[132,29,157,27],[132,31,157,29],[132,35,157,33],[132,36,157,34],[133,6,158,4],[133,10,158,8,"k"],[133,11,158,9],[133,12,158,10,"cmpn"],[133,16,158,14],[133,17,158,15],[133,18,158,16],[133,19,158,17],[133,23,158,21],[133,24,158,22],[133,28,158,26,"k"],[133,29,158,27],[133,30,158,28,"cmp"],[133,33,158,31],[133,34,158,32,"ns1"],[133,37,158,35],[133,38,158,36],[133,42,158,40],[133,43,158,41],[133,45,159,6],[134,6,161,4],[134,10,161,8,"kp"],[134,12,161,10],[134,15,161,13],[134,19,161,17],[134,20,161,18,"g"],[134,21,161,19],[134,22,161,20,"mul"],[134,25,161,23],[134,26,161,24,"k"],[134,27,161,25],[134,28,161,26],[135,6,162,4],[135,10,162,8,"kp"],[135,12,162,10],[135,13,162,11,"isInfinity"],[135,23,162,21],[135,24,162,22],[135,25,162,23],[135,27,163,6],[136,6,165,4],[136,10,165,8,"kpX"],[136,13,165,11],[136,16,165,14,"kp"],[136,18,165,16],[136,19,165,17,"getX"],[136,23,165,21],[136,24,165,22],[136,25,165,23],[137,6,166,4],[137,10,166,8,"r"],[137,11,166,9],[137,14,166,12,"kpX"],[137,17,166,15],[137,18,166,16,"umod"],[137,22,166,20],[137,23,166,21],[137,27,166,25],[137,28,166,26,"n"],[137,29,166,27],[137,30,166,28],[138,6,167,4],[138,10,167,8,"r"],[138,11,167,9],[138,12,167,10,"cmpn"],[138,16,167,14],[138,17,167,15],[138,18,167,16],[138,19,167,17],[138,24,167,22],[138,25,167,23],[138,27,168,6],[139,6,170,4],[139,10,170,8,"s"],[139,11,170,9],[139,14,170,12,"k"],[139,15,170,13],[139,16,170,14,"invm"],[139,20,170,18],[139,21,170,19],[139,25,170,23],[139,26,170,24,"n"],[139,27,170,25],[139,28,170,26],[139,29,170,27,"mul"],[139,32,170,30],[139,33,170,31,"r"],[139,34,170,32],[139,35,170,33,"mul"],[139,38,170,36],[139,39,170,37,"key"],[139,42,170,40],[139,43,170,41,"getPrivate"],[139,53,170,51],[139,54,170,52],[139,55,170,53],[139,56,170,54],[139,57,170,55,"iadd"],[139,61,170,59],[139,62,170,60,"msg"],[139,65,170,63],[139,66,170,64],[139,67,170,65],[140,6,171,4,"s"],[140,7,171,5],[140,10,171,8,"s"],[140,11,171,9],[140,12,171,10,"umod"],[140,16,171,14],[140,17,171,15],[140,21,171,19],[140,22,171,20,"n"],[140,23,171,21],[140,24,171,22],[141,6,172,4],[141,10,172,8,"s"],[141,11,172,9],[141,12,172,10,"cmpn"],[141,16,172,14],[141,17,172,15],[141,18,172,16],[141,19,172,17],[141,24,172,22],[141,25,172,23],[141,27,173,6],[142,6,175,4],[142,10,175,8,"recoveryParam"],[142,23,175,21],[142,26,175,24],[142,27,175,25,"kp"],[142,29,175,27],[142,30,175,28,"getY"],[142,34,175,32],[142,35,175,33],[142,36,175,34],[142,37,175,35,"isOdd"],[142,42,175,40],[142,43,175,41],[142,44,175,42],[142,47,175,45],[142,48,175,46],[142,51,175,49],[142,52,175,50],[142,57,176,25,"kpX"],[142,60,176,28],[142,61,176,29,"cmp"],[142,64,176,32],[142,65,176,33,"r"],[142,66,176,34],[142,67,176,35],[142,72,176,40],[142,73,176,41],[142,76,176,44],[142,77,176,45],[142,80,176,48],[142,81,176,49],[142,82,176,50],[144,6,178,4],[145,6,179,4],[145,10,179,8,"options"],[145,17,179,15],[145,18,179,16,"canonical"],[145,27,179,25],[145,31,179,29,"s"],[145,32,179,30],[145,33,179,31,"cmp"],[145,36,179,34],[145,37,179,35],[145,41,179,39],[145,42,179,40,"nh"],[145,44,179,42],[145,45,179,43],[145,48,179,46],[145,49,179,47],[145,51,179,49],[146,8,180,6,"s"],[146,9,180,7],[146,12,180,10],[146,16,180,14],[146,17,180,15,"n"],[146,18,180,16],[146,19,180,17,"sub"],[146,22,180,20],[146,23,180,21,"s"],[146,24,180,22],[146,25,180,23],[147,8,181,6,"recoveryParam"],[147,21,181,19],[147,25,181,23],[147,26,181,24],[148,6,182,4],[149,6,184,4],[149,13,184,11],[149,17,184,15,"Signature"],[149,26,184,24],[149,27,184,25],[150,8,184,27,"r"],[150,9,184,28],[150,11,184,30,"r"],[150,12,184,31],[151,8,184,33,"s"],[151,9,184,34],[151,11,184,36,"s"],[151,12,184,37],[152,8,184,39,"recoveryParam"],[152,21,184,52],[152,23,184,54,"recoveryParam"],[153,6,184,68],[153,7,184,69],[153,8,184,70],[154,4,185,2],[155,2,186,0],[155,3,186,1],[156,2,188,0,"EC"],[156,4,188,2],[156,5,188,3,"prototype"],[156,14,188,12],[156,15,188,13,"verify"],[156,21,188,19],[156,24,188,22],[156,33,188,31,"verify"],[156,39,188,37,"verify"],[156,40,188,38,"msg"],[156,43,188,41],[156,45,188,43,"signature"],[156,54,188,52],[156,56,188,54,"key"],[156,59,188,57],[156,61,188,59,"enc"],[156,64,188,62],[156,66,188,64,"options"],[156,73,188,71],[156,75,188,73],[157,4,189,2],[157,8,189,6],[157,9,189,7,"options"],[157,16,189,14],[157,18,190,4,"options"],[157,25,190,11],[157,28,190,14],[157,29,190,15],[157,30,190,16],[158,4,192,2,"msg"],[158,7,192,5],[158,10,192,8],[158,14,192,12],[158,15,192,13,"_truncateToN"],[158,27,192,25],[158,28,192,26,"msg"],[158,31,192,29],[158,33,192,31],[158,38,192,36],[158,40,192,38,"options"],[158,47,192,45],[158,48,192,46,"msgBitLength"],[158,60,192,58],[158,61,192,59],[159,4,193,2,"key"],[159,7,193,5],[159,10,193,8],[159,14,193,12],[159,15,193,13,"keyFromPublic"],[159,28,193,26],[159,29,193,27,"key"],[159,32,193,30],[159,34,193,32,"enc"],[159,37,193,35],[159,38,193,36],[160,4,194,2,"signature"],[160,13,194,11],[160,16,194,14],[160,20,194,18,"Signature"],[160,29,194,27],[160,30,194,28,"signature"],[160,39,194,37],[160,41,194,39],[160,46,194,44],[160,47,194,45],[162,4,196,2],[163,4,197,2],[163,8,197,6,"r"],[163,9,197,7],[163,12,197,10,"signature"],[163,21,197,19],[163,22,197,20,"r"],[163,23,197,21],[164,4,198,2],[164,8,198,6,"s"],[164,9,198,7],[164,12,198,10,"signature"],[164,21,198,19],[164,22,198,20,"s"],[164,23,198,21],[165,4,199,2],[165,8,199,6,"r"],[165,9,199,7],[165,10,199,8,"cmpn"],[165,14,199,12],[165,15,199,13],[165,16,199,14],[165,17,199,15],[165,20,199,18],[165,21,199,19],[165,25,199,23,"r"],[165,26,199,24],[165,27,199,25,"cmp"],[165,30,199,28],[165,31,199,29],[165,35,199,33],[165,36,199,34,"n"],[165,37,199,35],[165,38,199,36],[165,42,199,40],[165,43,199,41],[165,45,200,4],[165,52,200,11],[165,57,200,16],[166,4,201,2],[166,8,201,6,"s"],[166,9,201,7],[166,10,201,8,"cmpn"],[166,14,201,12],[166,15,201,13],[166,16,201,14],[166,17,201,15],[166,20,201,18],[166,21,201,19],[166,25,201,23,"s"],[166,26,201,24],[166,27,201,25,"cmp"],[166,30,201,28],[166,31,201,29],[166,35,201,33],[166,36,201,34,"n"],[166,37,201,35],[166,38,201,36],[166,42,201,40],[166,43,201,41],[166,45,202,4],[166,52,202,11],[166,57,202,16],[168,4,204,2],[169,4,205,2],[169,8,205,6,"sinv"],[169,12,205,10],[169,15,205,13,"s"],[169,16,205,14],[169,17,205,15,"invm"],[169,21,205,19],[169,22,205,20],[169,26,205,24],[169,27,205,25,"n"],[169,28,205,26],[169,29,205,27],[170,4,206,2],[170,8,206,6,"u1"],[170,10,206,8],[170,13,206,11,"sinv"],[170,17,206,15],[170,18,206,16,"mul"],[170,21,206,19],[170,22,206,20,"msg"],[170,25,206,23],[170,26,206,24],[170,27,206,25,"umod"],[170,31,206,29],[170,32,206,30],[170,36,206,34],[170,37,206,35,"n"],[170,38,206,36],[170,39,206,37],[171,4,207,2],[171,8,207,6,"u2"],[171,10,207,8],[171,13,207,11,"sinv"],[171,17,207,15],[171,18,207,16,"mul"],[171,21,207,19],[171,22,207,20,"r"],[171,23,207,21],[171,24,207,22],[171,25,207,23,"umod"],[171,29,207,27],[171,30,207,28],[171,34,207,32],[171,35,207,33,"n"],[171,36,207,34],[171,37,207,35],[172,4,208,2],[172,8,208,6,"p"],[172,9,208,7],[173,4,210,2],[173,8,210,6],[173,9,210,7],[173,13,210,11],[173,14,210,12,"curve"],[173,19,210,17],[173,20,210,18,"_maxwellTrick"],[173,33,210,31],[173,35,210,33],[174,6,211,4,"p"],[174,7,211,5],[174,10,211,8],[174,14,211,12],[174,15,211,13,"g"],[174,16,211,14],[174,17,211,15,"mulAdd"],[174,23,211,21],[174,24,211,22,"u1"],[174,26,211,24],[174,28,211,26,"key"],[174,31,211,29],[174,32,211,30,"getPublic"],[174,41,211,39],[174,42,211,40],[174,43,211,41],[174,45,211,43,"u2"],[174,47,211,45],[174,48,211,46],[175,6,212,4],[175,10,212,8,"p"],[175,11,212,9],[175,12,212,10,"isInfinity"],[175,22,212,20],[175,23,212,21],[175,24,212,22],[175,26,213,6],[175,33,213,13],[175,38,213,18],[176,6,215,4],[176,13,215,11,"p"],[176,14,215,12],[176,15,215,13,"getX"],[176,19,215,17],[176,20,215,18],[176,21,215,19],[176,22,215,20,"umod"],[176,26,215,24],[176,27,215,25],[176,31,215,29],[176,32,215,30,"n"],[176,33,215,31],[176,34,215,32],[176,35,215,33,"cmp"],[176,38,215,36],[176,39,215,37,"r"],[176,40,215,38],[176,41,215,39],[176,46,215,44],[176,47,215,45],[177,4,216,2],[179,4,218,2],[180,4,219,2],[182,4,221,2,"p"],[182,5,221,3],[182,8,221,6],[182,12,221,10],[182,13,221,11,"g"],[182,14,221,12],[182,15,221,13,"jmulAdd"],[182,22,221,20],[182,23,221,21,"u1"],[182,25,221,23],[182,27,221,25,"key"],[182,30,221,28],[182,31,221,29,"getPublic"],[182,40,221,38],[182,41,221,39],[182,42,221,40],[182,44,221,42,"u2"],[182,46,221,44],[182,47,221,45],[183,4,222,2],[183,8,222,6,"p"],[183,9,222,7],[183,10,222,8,"isInfinity"],[183,20,222,18],[183,21,222,19],[183,22,222,20],[183,24,223,4],[183,31,223,11],[183,36,223,16],[185,4,225,2],[186,4,226,2],[187,4,227,2],[188,4,228,2],[188,11,228,9,"p"],[188,12,228,10],[188,13,228,11,"eqXToP"],[188,19,228,17],[188,20,228,18,"r"],[188,21,228,19],[188,22,228,20],[189,2,229,0],[189,3,229,1],[190,2,231,0,"EC"],[190,4,231,2],[190,5,231,3,"prototype"],[190,14,231,12],[190,15,231,13,"recoverPubKey"],[190,28,231,26],[190,31,231,29],[190,41,231,38,"msg"],[190,44,231,41],[190,46,231,43,"signature"],[190,55,231,52],[190,57,231,54,"j"],[190,58,231,55],[190,60,231,57,"enc"],[190,63,231,60],[190,65,231,62],[191,4,232,2,"assert"],[191,10,232,8],[191,11,232,9],[191,12,232,10],[191,13,232,11],[191,16,232,14,"j"],[191,17,232,15],[191,23,232,21,"j"],[191,24,232,22],[191,26,232,24],[191,68,232,66],[191,69,232,67],[192,4,233,2,"signature"],[192,13,233,11],[192,16,233,14],[192,20,233,18,"Signature"],[192,29,233,27],[192,30,233,28,"signature"],[192,39,233,37],[192,41,233,39,"enc"],[192,44,233,42],[192,45,233,43],[193,4,235,2],[193,8,235,6,"n"],[193,9,235,7],[193,12,235,10],[193,16,235,14],[193,17,235,15,"n"],[193,18,235,16],[194,4,236,2],[194,8,236,6,"e"],[194,9,236,7],[194,12,236,10],[194,16,236,14,"BN"],[194,18,236,16],[194,19,236,17,"msg"],[194,22,236,20],[194,23,236,21],[195,4,237,2],[195,8,237,6,"r"],[195,9,237,7],[195,12,237,10,"signature"],[195,21,237,19],[195,22,237,20,"r"],[195,23,237,21],[196,4,238,2],[196,8,238,6,"s"],[196,9,238,7],[196,12,238,10,"signature"],[196,21,238,19],[196,22,238,20,"s"],[196,23,238,21],[198,4,240,2],[199,4,241,2],[199,8,241,6,"isYOdd"],[199,14,241,12],[199,17,241,15,"j"],[199,18,241,16],[199,21,241,19],[199,22,241,20],[200,4,242,2],[200,8,242,6,"isSecondKey"],[200,19,242,17],[200,22,242,20,"j"],[200,23,242,21],[200,27,242,25],[200,28,242,26],[201,4,243,2],[201,8,243,6,"r"],[201,9,243,7],[201,10,243,8,"cmp"],[201,13,243,11],[201,14,243,12],[201,18,243,16],[201,19,243,17,"curve"],[201,24,243,22],[201,25,243,23,"p"],[201,26,243,24],[201,27,243,25,"umod"],[201,31,243,29],[201,32,243,30],[201,36,243,34],[201,37,243,35,"curve"],[201,42,243,40],[201,43,243,41,"n"],[201,44,243,42],[201,45,243,43],[201,46,243,44],[201,50,243,48],[201,51,243,49],[201,55,243,53,"isSecondKey"],[201,66,243,64],[201,68,244,4],[201,74,244,10],[201,78,244,14,"Error"],[201,83,244,19],[201,84,244,20],[201,122,244,58],[201,123,244,59],[203,4,246,2],[204,4,247,2],[204,8,247,6,"isSecondKey"],[204,19,247,17],[204,21,248,4,"r"],[204,22,248,5],[204,25,248,8],[204,29,248,12],[204,30,248,13,"curve"],[204,35,248,18],[204,36,248,19,"pointFromX"],[204,46,248,29],[204,47,248,30,"r"],[204,48,248,31],[204,49,248,32,"add"],[204,52,248,35],[204,53,248,36],[204,57,248,40],[204,58,248,41,"curve"],[204,63,248,46],[204,64,248,47,"n"],[204,65,248,48],[204,66,248,49],[204,68,248,51,"isYOdd"],[204,74,248,57],[204,75,248,58],[204,76,248,59],[204,81,250,4,"r"],[204,82,250,5],[204,85,250,8],[204,89,250,12],[204,90,250,13,"curve"],[204,95,250,18],[204,96,250,19,"pointFromX"],[204,106,250,29],[204,107,250,30,"r"],[204,108,250,31],[204,110,250,33,"isYOdd"],[204,116,250,39],[204,117,250,40],[205,4,252,2],[205,8,252,6,"rInv"],[205,12,252,10],[205,15,252,13,"signature"],[205,24,252,22],[205,25,252,23,"r"],[205,26,252,24],[205,27,252,25,"invm"],[205,31,252,29],[205,32,252,30,"n"],[205,33,252,31],[205,34,252,32],[206,4,253,2],[206,8,253,6,"s1"],[206,10,253,8],[206,13,253,11,"n"],[206,14,253,12],[206,15,253,13,"sub"],[206,18,253,16],[206,19,253,17,"e"],[206,20,253,18],[206,21,253,19],[206,22,253,20,"mul"],[206,25,253,23],[206,26,253,24,"rInv"],[206,30,253,28],[206,31,253,29],[206,32,253,30,"umod"],[206,36,253,34],[206,37,253,35,"n"],[206,38,253,36],[206,39,253,37],[207,4,254,2],[207,8,254,6,"s2"],[207,10,254,8],[207,13,254,11,"s"],[207,14,254,12],[207,15,254,13,"mul"],[207,18,254,16],[207,19,254,17,"rInv"],[207,23,254,21],[207,24,254,22],[207,25,254,23,"umod"],[207,29,254,27],[207,30,254,28,"n"],[207,31,254,29],[207,32,254,30],[209,4,256,2],[210,4,257,2],[211,4,258,2],[211,11,258,9],[211,15,258,13],[211,16,258,14,"g"],[211,17,258,15],[211,18,258,16,"mulAdd"],[211,24,258,22],[211,25,258,23,"s1"],[211,27,258,25],[211,29,258,27,"r"],[211,30,258,28],[211,32,258,30,"s2"],[211,34,258,32],[211,35,258,33],[212,2,259,0],[212,3,259,1],[213,2,261,0,"EC"],[213,4,261,2],[213,5,261,3,"prototype"],[213,14,261,12],[213,15,261,13,"getKeyRecoveryParam"],[213,34,261,32],[213,37,261,35],[213,47,261,44,"e"],[213,48,261,45],[213,50,261,47,"signature"],[213,59,261,56],[213,61,261,58,"Q"],[213,62,261,59],[213,64,261,61,"enc"],[213,67,261,64],[213,69,261,66],[214,4,262,2,"signature"],[214,13,262,11],[214,16,262,14],[214,20,262,18,"Signature"],[214,29,262,27],[214,30,262,28,"signature"],[214,39,262,37],[214,41,262,39,"enc"],[214,44,262,42],[214,45,262,43],[215,4,263,2],[215,8,263,6,"signature"],[215,17,263,15],[215,18,263,16,"recoveryParam"],[215,31,263,29],[215,36,263,34],[215,40,263,38],[215,42,264,4],[215,49,264,11,"signature"],[215,58,264,20],[215,59,264,21,"recoveryParam"],[215,72,264,34],[216,4,266,2],[216,9,266,7],[216,13,266,11,"i"],[216,14,266,12],[216,17,266,15],[216,18,266,16],[216,20,266,18,"i"],[216,21,266,19],[216,24,266,22],[216,25,266,23],[216,27,266,25,"i"],[216,28,266,26],[216,30,266,28],[216,32,266,30],[217,6,267,4],[217,10,267,8,"Qprime"],[217,16,267,14],[218,6,268,4],[218,10,268,8],[219,8,269,6,"Qprime"],[219,14,269,12],[219,17,269,15],[219,21,269,19],[219,22,269,20,"recoverPubKey"],[219,35,269,33],[219,36,269,34,"e"],[219,37,269,35],[219,39,269,37,"signature"],[219,48,269,46],[219,50,269,48,"i"],[219,51,269,49],[219,52,269,50],[220,6,270,4],[220,7,270,5],[220,8,270,6],[220,15,270,13,"e"],[220,16,270,14],[220,18,270,16],[221,8,271,6],[222,6,272,4],[223,6,274,4],[223,10,274,8,"Qprime"],[223,16,274,14],[223,17,274,15,"eq"],[223,19,274,17],[223,20,274,18,"Q"],[223,21,274,19],[223,22,274,20],[223,24,275,6],[223,31,275,13,"i"],[223,32,275,14],[224,4,276,2],[225,4,277,2],[225,10,277,8],[225,14,277,12,"Error"],[225,19,277,17],[225,20,277,18],[225,58,277,56],[225,59,277,57],[226,2,278,0],[226,3,278,1],[227,0,278,2],[227,3]],"functionMap":{"names":["<global>","EC","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","_truncateToN","sign","verify","EC.prototype.recoverPubKey","EC.prototype.getKeyRecoveryParam"],"mappings":"AAA;ACY;CD2B;uBEG;CFE;8BGE;CHE;6BIE;CJE;0BKE;CLwB;4BME;CN2B;oBOE;CP4E;sBQE;CRyC;6BSE;CT4B;mCUE;CViB"}},"type":"js/module"}]}