{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":34,"index":76}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"./base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":11,"index":89},"end":{"line":5,"column":28,"index":106}}],"key":"cAa/j2PXTeXj4b1JbTLYHmmEU2Q=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":12,"index":121},"end":{"line":7,"column":31,"index":140}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var inherits = require(_dependencyMap[1], \"inherits\");\n  var Base = require(_dependencyMap[2], \"./base\");\n  var utils = require(_dependencyMap[3], \"../utils\");\n  function MontCurve(conf) {\n    Base.call(this, 'mont', conf);\n    this.a = new BN(conf.a, 16).toRed(this.red);\n    this.b = new BN(conf.b, 16).toRed(this.red);\n    this.i4 = new BN(4).toRed(this.red).redInvm();\n    this.two = new BN(2).toRed(this.red);\n    this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n  }\n  inherits(MontCurve, Base);\n  module.exports = MontCurve;\n  MontCurve.prototype.validate = function validate(point) {\n    var x = point.normalize().x;\n    var x2 = x.redSqr();\n    var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n    var y = rhs.redSqrt();\n    return y.redSqr().cmp(rhs) === 0;\n  };\n  function Point(curve, x, z) {\n    Base.BasePoint.call(this, curve, 'projective');\n    if (x === null && z === null) {\n      this.x = this.curve.one;\n      this.z = this.curve.zero;\n    } else {\n      this.x = new BN(x, 16);\n      this.z = new BN(z, 16);\n      if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n      if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    }\n  }\n  inherits(Point, Base.BasePoint);\n  MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n    return this.point(utils.toArray(bytes, enc), 1);\n  };\n  MontCurve.prototype.point = function point(x, z) {\n    return new Point(this, x, z);\n  };\n  MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n    return Point.fromJSON(this, obj);\n  };\n  Point.prototype.precompute = function precompute() {\n    // No-op\n  };\n  Point.prototype._encode = function _encode() {\n    return this.getX().toArray('be', this.curve.p.byteLength());\n  };\n  Point.fromJSON = function fromJSON(curve, obj) {\n    return new Point(curve, obj[0], obj[1] || curve.one);\n  };\n  Point.prototype.inspect = function inspect() {\n    if (this.isInfinity()) return '<EC Point Infinity>';\n    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n  };\n  Point.prototype.isInfinity = function isInfinity() {\n    // XXX This code assumes that zero is always zero in red\n    return this.z.cmpn(0) === 0;\n  };\n  Point.prototype.dbl = function dbl() {\n    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n    // 2M + 2S + 4A\n\n    // A = X1 + Z1\n    var a = this.x.redAdd(this.z);\n    // AA = A^2\n    var aa = a.redSqr();\n    // B = X1 - Z1\n    var b = this.x.redSub(this.z);\n    // BB = B^2\n    var bb = b.redSqr();\n    // C = AA - BB\n    var c = aa.redSub(bb);\n    // X3 = AA * BB\n    var nx = aa.redMul(bb);\n    // Z3 = C * (BB + A24 * C)\n    var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n    return this.curve.point(nx, nz);\n  };\n  Point.prototype.add = function add() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.diffAdd = function diffAdd(p, diff) {\n    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n    // 4M + 2S + 6A\n\n    // A = X2 + Z2\n    var a = this.x.redAdd(this.z);\n    // B = X2 - Z2\n    var b = this.x.redSub(this.z);\n    // C = X3 + Z3\n    var c = p.x.redAdd(p.z);\n    // D = X3 - Z3\n    var d = p.x.redSub(p.z);\n    // DA = D * A\n    var da = d.redMul(a);\n    // CB = C * B\n    var cb = c.redMul(b);\n    // X5 = Z1 * (DA + CB)^2\n    var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n    // Z5 = X1 * (DA - CB)^2\n    var nz = diff.x.redMul(da.redISub(cb).redSqr());\n    return this.curve.point(nx, nz);\n  };\n  Point.prototype.mul = function mul(k) {\n    var t = k.clone();\n    var a = this; // (N / 2) * Q + Q\n    var b = this.curve.point(null, null); // (N / 2) * Q\n    var c = this; // Q\n\n    for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));\n    for (var i = bits.length - 1; i >= 0; i--) {\n      if (bits[i] === 0) {\n        // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n        a = a.diffAdd(b, c);\n        // N * Q = 2 * ((N / 2) * Q + Q))\n        b = b.dbl();\n      } else {\n        // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n        b = a.diffAdd(b, c);\n        // N * Q + Q = 2 * ((N / 2) * Q + Q)\n        a = a.dbl();\n      }\n    }\n    return b;\n  };\n  Point.prototype.mulAdd = function mulAdd() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.jumlAdd = function jumlAdd() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.eq = function eq(other) {\n    return this.getX().cmp(other.getX()) === 0;\n  };\n  Point.prototype.normalize = function normalize() {\n    this.x = this.x.redMul(this.z.redInvm());\n    this.z = this.curve.one;\n    return this;\n  };\n  Point.prototype.getX = function getX() {\n    // Normalize coordinates\n    this.normalize();\n    return this.x.fromRed();\n  };\n});","lineCount":150,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"BN"],[4,8,3,6],[4,11,3,9,"require"],[4,18,3,16],[4,19,3,16,"_dependencyMap"],[4,33,3,16],[4,45,3,24],[4,46,3,25],[5,2,4,0],[5,6,4,4,"inherits"],[5,14,4,12],[5,17,4,15,"require"],[5,24,4,22],[5,25,4,22,"_dependencyMap"],[5,39,4,22],[5,54,4,33],[5,55,4,34],[6,2,5,0],[6,6,5,4,"Base"],[6,10,5,8],[6,13,5,11,"require"],[6,20,5,18],[6,21,5,18,"_dependencyMap"],[6,35,5,18],[6,48,5,27],[6,49,5,28],[7,2,7,0],[7,6,7,4,"utils"],[7,11,7,9],[7,14,7,12,"require"],[7,21,7,19],[7,22,7,19,"_dependencyMap"],[7,36,7,19],[7,51,7,30],[7,52,7,31],[8,2,9,0],[8,11,9,9,"MontCurve"],[8,20,9,18,"MontCurve"],[8,21,9,19,"conf"],[8,25,9,23],[8,27,9,25],[9,4,10,2,"Base"],[9,8,10,6],[9,9,10,7,"call"],[9,13,10,11],[9,14,10,12],[9,18,10,16],[9,20,10,18],[9,26,10,24],[9,28,10,26,"conf"],[9,32,10,30],[9,33,10,31],[10,4,12,2],[10,8,12,6],[10,9,12,7,"a"],[10,10,12,8],[10,13,12,11],[10,17,12,15,"BN"],[10,19,12,17],[10,20,12,18,"conf"],[10,24,12,22],[10,25,12,23,"a"],[10,26,12,24],[10,28,12,26],[10,30,12,28],[10,31,12,29],[10,32,12,30,"toRed"],[10,37,12,35],[10,38,12,36],[10,42,12,40],[10,43,12,41,"red"],[10,46,12,44],[10,47,12,45],[11,4,13,2],[11,8,13,6],[11,9,13,7,"b"],[11,10,13,8],[11,13,13,11],[11,17,13,15,"BN"],[11,19,13,17],[11,20,13,18,"conf"],[11,24,13,22],[11,25,13,23,"b"],[11,26,13,24],[11,28,13,26],[11,30,13,28],[11,31,13,29],[11,32,13,30,"toRed"],[11,37,13,35],[11,38,13,36],[11,42,13,40],[11,43,13,41,"red"],[11,46,13,44],[11,47,13,45],[12,4,14,2],[12,8,14,6],[12,9,14,7,"i4"],[12,11,14,9],[12,14,14,12],[12,18,14,16,"BN"],[12,20,14,18],[12,21,14,19],[12,22,14,20],[12,23,14,21],[12,24,14,22,"toRed"],[12,29,14,27],[12,30,14,28],[12,34,14,32],[12,35,14,33,"red"],[12,38,14,36],[12,39,14,37],[12,40,14,38,"redInvm"],[12,47,14,45],[12,48,14,46],[12,49,14,47],[13,4,15,2],[13,8,15,6],[13,9,15,7,"two"],[13,12,15,10],[13,15,15,13],[13,19,15,17,"BN"],[13,21,15,19],[13,22,15,20],[13,23,15,21],[13,24,15,22],[13,25,15,23,"toRed"],[13,30,15,28],[13,31,15,29],[13,35,15,33],[13,36,15,34,"red"],[13,39,15,37],[13,40,15,38],[14,4,16,2],[14,8,16,6],[14,9,16,7,"a24"],[14,12,16,10],[14,15,16,13],[14,19,16,17],[14,20,16,18,"i4"],[14,22,16,20],[14,23,16,21,"redMul"],[14,29,16,27],[14,30,16,28],[14,34,16,32],[14,35,16,33,"a"],[14,36,16,34],[14,37,16,35,"redAdd"],[14,43,16,41],[14,44,16,42],[14,48,16,46],[14,49,16,47,"two"],[14,52,16,50],[14,53,16,51],[14,54,16,52],[15,2,17,0],[16,2,18,0,"inherits"],[16,10,18,8],[16,11,18,9,"MontCurve"],[16,20,18,18],[16,22,18,20,"Base"],[16,26,18,24],[16,27,18,25],[17,2,19,0,"module"],[17,8,19,6],[17,9,19,7,"exports"],[17,16,19,14],[17,19,19,17,"MontCurve"],[17,28,19,26],[18,2,21,0,"MontCurve"],[18,11,21,9],[18,12,21,10,"prototype"],[18,21,21,19],[18,22,21,20,"validate"],[18,30,21,28],[18,33,21,31],[18,42,21,40,"validate"],[18,50,21,48,"validate"],[18,51,21,49,"point"],[18,56,21,54],[18,58,21,56],[19,4,22,2],[19,8,22,6,"x"],[19,9,22,7],[19,12,22,10,"point"],[19,17,22,15],[19,18,22,16,"normalize"],[19,27,22,25],[19,28,22,26],[19,29,22,27],[19,30,22,28,"x"],[19,31,22,29],[20,4,23,2],[20,8,23,6,"x2"],[20,10,23,8],[20,13,23,11,"x"],[20,14,23,12],[20,15,23,13,"redSqr"],[20,21,23,19],[20,22,23,20],[20,23,23,21],[21,4,24,2],[21,8,24,6,"rhs"],[21,11,24,9],[21,14,24,12,"x2"],[21,16,24,14],[21,17,24,15,"redMul"],[21,23,24,21],[21,24,24,22,"x"],[21,25,24,23],[21,26,24,24],[21,27,24,25,"redAdd"],[21,33,24,31],[21,34,24,32,"x2"],[21,36,24,34],[21,37,24,35,"redMul"],[21,43,24,41],[21,44,24,42],[21,48,24,46],[21,49,24,47,"a"],[21,50,24,48],[21,51,24,49],[21,52,24,50],[21,53,24,51,"redAdd"],[21,59,24,57],[21,60,24,58,"x"],[21,61,24,59],[21,62,24,60],[22,4,25,2],[22,8,25,6,"y"],[22,9,25,7],[22,12,25,10,"rhs"],[22,15,25,13],[22,16,25,14,"redSqrt"],[22,23,25,21],[22,24,25,22],[22,25,25,23],[23,4,27,2],[23,11,27,9,"y"],[23,12,27,10],[23,13,27,11,"redSqr"],[23,19,27,17],[23,20,27,18],[23,21,27,19],[23,22,27,20,"cmp"],[23,25,27,23],[23,26,27,24,"rhs"],[23,29,27,27],[23,30,27,28],[23,35,27,33],[23,36,27,34],[24,2,28,0],[24,3,28,1],[25,2,30,0],[25,11,30,9,"Point"],[25,16,30,14,"Point"],[25,17,30,15,"curve"],[25,22,30,20],[25,24,30,22,"x"],[25,25,30,23],[25,27,30,25,"z"],[25,28,30,26],[25,30,30,28],[26,4,31,2,"Base"],[26,8,31,6],[26,9,31,7,"BasePoint"],[26,18,31,16],[26,19,31,17,"call"],[26,23,31,21],[26,24,31,22],[26,28,31,26],[26,30,31,28,"curve"],[26,35,31,33],[26,37,31,35],[26,49,31,47],[26,50,31,48],[27,4,32,2],[27,8,32,6,"x"],[27,9,32,7],[27,14,32,12],[27,18,32,16],[27,22,32,20,"z"],[27,23,32,21],[27,28,32,26],[27,32,32,30],[27,34,32,32],[28,6,33,4],[28,10,33,8],[28,11,33,9,"x"],[28,12,33,10],[28,15,33,13],[28,19,33,17],[28,20,33,18,"curve"],[28,25,33,23],[28,26,33,24,"one"],[28,29,33,27],[29,6,34,4],[29,10,34,8],[29,11,34,9,"z"],[29,12,34,10],[29,15,34,13],[29,19,34,17],[29,20,34,18,"curve"],[29,25,34,23],[29,26,34,24,"zero"],[29,30,34,28],[30,4,35,2],[30,5,35,3],[30,11,35,9],[31,6,36,4],[31,10,36,8],[31,11,36,9,"x"],[31,12,36,10],[31,15,36,13],[31,19,36,17,"BN"],[31,21,36,19],[31,22,36,20,"x"],[31,23,36,21],[31,25,36,23],[31,27,36,25],[31,28,36,26],[32,6,37,4],[32,10,37,8],[32,11,37,9,"z"],[32,12,37,10],[32,15,37,13],[32,19,37,17,"BN"],[32,21,37,19],[32,22,37,20,"z"],[32,23,37,21],[32,25,37,23],[32,27,37,25],[32,28,37,26],[33,6,38,4],[33,10,38,8],[33,11,38,9],[33,15,38,13],[33,16,38,14,"x"],[33,17,38,15],[33,18,38,16,"red"],[33,21,38,19],[33,23,39,6],[33,27,39,10],[33,28,39,11,"x"],[33,29,39,12],[33,32,39,15],[33,36,39,19],[33,37,39,20,"x"],[33,38,39,21],[33,39,39,22,"toRed"],[33,44,39,27],[33,45,39,28],[33,49,39,32],[33,50,39,33,"curve"],[33,55,39,38],[33,56,39,39,"red"],[33,59,39,42],[33,60,39,43],[34,6,40,4],[34,10,40,8],[34,11,40,9],[34,15,40,13],[34,16,40,14,"z"],[34,17,40,15],[34,18,40,16,"red"],[34,21,40,19],[34,23,41,6],[34,27,41,10],[34,28,41,11,"z"],[34,29,41,12],[34,32,41,15],[34,36,41,19],[34,37,41,20,"z"],[34,38,41,21],[34,39,41,22,"toRed"],[34,44,41,27],[34,45,41,28],[34,49,41,32],[34,50,41,33,"curve"],[34,55,41,38],[34,56,41,39,"red"],[34,59,41,42],[34,60,41,43],[35,4,42,2],[36,2,43,0],[37,2,44,0,"inherits"],[37,10,44,8],[37,11,44,9,"Point"],[37,16,44,14],[37,18,44,16,"Base"],[37,22,44,20],[37,23,44,21,"BasePoint"],[37,32,44,30],[37,33,44,31],[38,2,46,0,"MontCurve"],[38,11,46,9],[38,12,46,10,"prototype"],[38,21,46,19],[38,22,46,20,"decodePoint"],[38,33,46,31],[38,36,46,34],[38,45,46,43,"decodePoint"],[38,56,46,54,"decodePoint"],[38,57,46,55,"bytes"],[38,62,46,60],[38,64,46,62,"enc"],[38,67,46,65],[38,69,46,67],[39,4,47,2],[39,11,47,9],[39,15,47,13],[39,16,47,14,"point"],[39,21,47,19],[39,22,47,20,"utils"],[39,27,47,25],[39,28,47,26,"toArray"],[39,35,47,33],[39,36,47,34,"bytes"],[39,41,47,39],[39,43,47,41,"enc"],[39,46,47,44],[39,47,47,45],[39,49,47,47],[39,50,47,48],[39,51,47,49],[40,2,48,0],[40,3,48,1],[41,2,50,0,"MontCurve"],[41,11,50,9],[41,12,50,10,"prototype"],[41,21,50,19],[41,22,50,20,"point"],[41,27,50,25],[41,30,50,28],[41,39,50,37,"point"],[41,44,50,42,"point"],[41,45,50,43,"x"],[41,46,50,44],[41,48,50,46,"z"],[41,49,50,47],[41,51,50,49],[42,4,51,2],[42,11,51,9],[42,15,51,13,"Point"],[42,20,51,18],[42,21,51,19],[42,25,51,23],[42,27,51,25,"x"],[42,28,51,26],[42,30,51,28,"z"],[42,31,51,29],[42,32,51,30],[43,2,52,0],[43,3,52,1],[44,2,54,0,"MontCurve"],[44,11,54,9],[44,12,54,10,"prototype"],[44,21,54,19],[44,22,54,20,"pointFromJSON"],[44,35,54,33],[44,38,54,36],[44,47,54,45,"pointFromJSON"],[44,60,54,58,"pointFromJSON"],[44,61,54,59,"obj"],[44,64,54,62],[44,66,54,64],[45,4,55,2],[45,11,55,9,"Point"],[45,16,55,14],[45,17,55,15,"fromJSON"],[45,25,55,23],[45,26,55,24],[45,30,55,28],[45,32,55,30,"obj"],[45,35,55,33],[45,36,55,34],[46,2,56,0],[46,3,56,1],[47,2,58,0,"Point"],[47,7,58,5],[47,8,58,6,"prototype"],[47,17,58,15],[47,18,58,16,"precompute"],[47,28,58,26],[47,31,58,29],[47,40,58,38,"precompute"],[47,50,58,48,"precompute"],[47,51,58,48],[47,53,58,51],[48,4,59,2],[49,2,59,2],[49,3,60,1],[50,2,62,0,"Point"],[50,7,62,5],[50,8,62,6,"prototype"],[50,17,62,15],[50,18,62,16,"_encode"],[50,25,62,23],[50,28,62,26],[50,37,62,35,"_encode"],[50,44,62,42,"_encode"],[50,45,62,42],[50,47,62,45],[51,4,63,2],[51,11,63,9],[51,15,63,13],[51,16,63,14,"getX"],[51,20,63,18],[51,21,63,19],[51,22,63,20],[51,23,63,21,"toArray"],[51,30,63,28],[51,31,63,29],[51,35,63,33],[51,37,63,35],[51,41,63,39],[51,42,63,40,"curve"],[51,47,63,45],[51,48,63,46,"p"],[51,49,63,47],[51,50,63,48,"byteLength"],[51,60,63,58],[51,61,63,59],[51,62,63,60],[51,63,63,61],[52,2,64,0],[52,3,64,1],[53,2,66,0,"Point"],[53,7,66,5],[53,8,66,6,"fromJSON"],[53,16,66,14],[53,19,66,17],[53,28,66,26,"fromJSON"],[53,36,66,34,"fromJSON"],[53,37,66,35,"curve"],[53,42,66,40],[53,44,66,42,"obj"],[53,47,66,45],[53,49,66,47],[54,4,67,2],[54,11,67,9],[54,15,67,13,"Point"],[54,20,67,18],[54,21,67,19,"curve"],[54,26,67,24],[54,28,67,26,"obj"],[54,31,67,29],[54,32,67,30],[54,33,67,31],[54,34,67,32],[54,36,67,34,"obj"],[54,39,67,37],[54,40,67,38],[54,41,67,39],[54,42,67,40],[54,46,67,44,"curve"],[54,51,67,49],[54,52,67,50,"one"],[54,55,67,53],[54,56,67,54],[55,2,68,0],[55,3,68,1],[56,2,70,0,"Point"],[56,7,70,5],[56,8,70,6,"prototype"],[56,17,70,15],[56,18,70,16,"inspect"],[56,25,70,23],[56,28,70,26],[56,37,70,35,"inspect"],[56,44,70,42,"inspect"],[56,45,70,42],[56,47,70,45],[57,4,71,2],[57,8,71,6],[57,12,71,10],[57,13,71,11,"isInfinity"],[57,23,71,21],[57,24,71,22],[57,25,71,23],[57,27,72,4],[57,34,72,11],[57,55,72,32],[58,4,73,2],[58,11,73,9],[58,26,73,24],[58,29,73,27],[58,33,73,31],[58,34,73,32,"x"],[58,35,73,33],[58,36,73,34,"fromRed"],[58,43,73,41],[58,44,73,42],[58,45,73,43],[58,46,73,44,"toString"],[58,54,73,52],[58,55,73,53],[58,57,73,55],[58,59,73,57],[58,60,73,58],[58,61,73,59],[58,64,74,6],[58,70,74,12],[58,73,74,15],[58,77,74,19],[58,78,74,20,"z"],[58,79,74,21],[58,80,74,22,"fromRed"],[58,87,74,29],[58,88,74,30],[58,89,74,31],[58,90,74,32,"toString"],[58,98,74,40],[58,99,74,41],[58,101,74,43],[58,103,74,45],[58,104,74,46],[58,105,74,47],[58,108,74,50],[58,111,74,53],[59,2,75,0],[59,3,75,1],[60,2,77,0,"Point"],[60,7,77,5],[60,8,77,6,"prototype"],[60,17,77,15],[60,18,77,16,"isInfinity"],[60,28,77,26],[60,31,77,29],[60,40,77,38,"isInfinity"],[60,50,77,48,"isInfinity"],[60,51,77,48],[60,53,77,51],[61,4,78,2],[62,4,79,2],[62,11,79,9],[62,15,79,13],[62,16,79,14,"z"],[62,17,79,15],[62,18,79,16,"cmpn"],[62,22,79,20],[62,23,79,21],[62,24,79,22],[62,25,79,23],[62,30,79,28],[62,31,79,29],[63,2,80,0],[63,3,80,1],[64,2,82,0,"Point"],[64,7,82,5],[64,8,82,6,"prototype"],[64,17,82,15],[64,18,82,16,"dbl"],[64,21,82,19],[64,24,82,22],[64,33,82,31,"dbl"],[64,36,82,34,"dbl"],[64,37,82,34],[64,39,82,37],[65,4,83,2],[66,4,84,2],[68,4,86,2],[69,4,87,2],[69,8,87,6,"a"],[69,9,87,7],[69,12,87,10],[69,16,87,14],[69,17,87,15,"x"],[69,18,87,16],[69,19,87,17,"redAdd"],[69,25,87,23],[69,26,87,24],[69,30,87,28],[69,31,87,29,"z"],[69,32,87,30],[69,33,87,31],[70,4,88,2],[71,4,89,2],[71,8,89,6,"aa"],[71,10,89,8],[71,13,89,11,"a"],[71,14,89,12],[71,15,89,13,"redSqr"],[71,21,89,19],[71,22,89,20],[71,23,89,21],[72,4,90,2],[73,4,91,2],[73,8,91,6,"b"],[73,9,91,7],[73,12,91,10],[73,16,91,14],[73,17,91,15,"x"],[73,18,91,16],[73,19,91,17,"redSub"],[73,25,91,23],[73,26,91,24],[73,30,91,28],[73,31,91,29,"z"],[73,32,91,30],[73,33,91,31],[74,4,92,2],[75,4,93,2],[75,8,93,6,"bb"],[75,10,93,8],[75,13,93,11,"b"],[75,14,93,12],[75,15,93,13,"redSqr"],[75,21,93,19],[75,22,93,20],[75,23,93,21],[76,4,94,2],[77,4,95,2],[77,8,95,6,"c"],[77,9,95,7],[77,12,95,10,"aa"],[77,14,95,12],[77,15,95,13,"redSub"],[77,21,95,19],[77,22,95,20,"bb"],[77,24,95,22],[77,25,95,23],[78,4,96,2],[79,4,97,2],[79,8,97,6,"nx"],[79,10,97,8],[79,13,97,11,"aa"],[79,15,97,13],[79,16,97,14,"redMul"],[79,22,97,20],[79,23,97,21,"bb"],[79,25,97,23],[79,26,97,24],[80,4,98,2],[81,4,99,2],[81,8,99,6,"nz"],[81,10,99,8],[81,13,99,11,"c"],[81,14,99,12],[81,15,99,13,"redMul"],[81,21,99,19],[81,22,99,20,"bb"],[81,24,99,22],[81,25,99,23,"redAdd"],[81,31,99,29],[81,32,99,30],[81,36,99,34],[81,37,99,35,"curve"],[81,42,99,40],[81,43,99,41,"a24"],[81,46,99,44],[81,47,99,45,"redMul"],[81,53,99,51],[81,54,99,52,"c"],[81,55,99,53],[81,56,99,54],[81,57,99,55],[81,58,99,56],[82,4,100,2],[82,11,100,9],[82,15,100,13],[82,16,100,14,"curve"],[82,21,100,19],[82,22,100,20,"point"],[82,27,100,25],[82,28,100,26,"nx"],[82,30,100,28],[82,32,100,30,"nz"],[82,34,100,32],[82,35,100,33],[83,2,101,0],[83,3,101,1],[84,2,103,0,"Point"],[84,7,103,5],[84,8,103,6,"prototype"],[84,17,103,15],[84,18,103,16,"add"],[84,21,103,19],[84,24,103,22],[84,33,103,31,"add"],[84,36,103,34,"add"],[84,37,103,34],[84,39,103,37],[85,4,104,2],[85,10,104,8],[85,14,104,12,"Error"],[85,19,104,17],[85,20,104,18],[85,55,104,53],[85,56,104,54],[86,2,105,0],[86,3,105,1],[87,2,107,0,"Point"],[87,7,107,5],[87,8,107,6,"prototype"],[87,17,107,15],[87,18,107,16,"diffAdd"],[87,25,107,23],[87,28,107,26],[87,37,107,35,"diffAdd"],[87,44,107,42,"diffAdd"],[87,45,107,43,"p"],[87,46,107,44],[87,48,107,46,"diff"],[87,52,107,50],[87,54,107,52],[88,4,108,2],[89,4,109,2],[91,4,111,2],[92,4,112,2],[92,8,112,6,"a"],[92,9,112,7],[92,12,112,10],[92,16,112,14],[92,17,112,15,"x"],[92,18,112,16],[92,19,112,17,"redAdd"],[92,25,112,23],[92,26,112,24],[92,30,112,28],[92,31,112,29,"z"],[92,32,112,30],[92,33,112,31],[93,4,113,2],[94,4,114,2],[94,8,114,6,"b"],[94,9,114,7],[94,12,114,10],[94,16,114,14],[94,17,114,15,"x"],[94,18,114,16],[94,19,114,17,"redSub"],[94,25,114,23],[94,26,114,24],[94,30,114,28],[94,31,114,29,"z"],[94,32,114,30],[94,33,114,31],[95,4,115,2],[96,4,116,2],[96,8,116,6,"c"],[96,9,116,7],[96,12,116,10,"p"],[96,13,116,11],[96,14,116,12,"x"],[96,15,116,13],[96,16,116,14,"redAdd"],[96,22,116,20],[96,23,116,21,"p"],[96,24,116,22],[96,25,116,23,"z"],[96,26,116,24],[96,27,116,25],[97,4,117,2],[98,4,118,2],[98,8,118,6,"d"],[98,9,118,7],[98,12,118,10,"p"],[98,13,118,11],[98,14,118,12,"x"],[98,15,118,13],[98,16,118,14,"redSub"],[98,22,118,20],[98,23,118,21,"p"],[98,24,118,22],[98,25,118,23,"z"],[98,26,118,24],[98,27,118,25],[99,4,119,2],[100,4,120,2],[100,8,120,6,"da"],[100,10,120,8],[100,13,120,11,"d"],[100,14,120,12],[100,15,120,13,"redMul"],[100,21,120,19],[100,22,120,20,"a"],[100,23,120,21],[100,24,120,22],[101,4,121,2],[102,4,122,2],[102,8,122,6,"cb"],[102,10,122,8],[102,13,122,11,"c"],[102,14,122,12],[102,15,122,13,"redMul"],[102,21,122,19],[102,22,122,20,"b"],[102,23,122,21],[102,24,122,22],[103,4,123,2],[104,4,124,2],[104,8,124,6,"nx"],[104,10,124,8],[104,13,124,11,"diff"],[104,17,124,15],[104,18,124,16,"z"],[104,19,124,17],[104,20,124,18,"redMul"],[104,26,124,24],[104,27,124,25,"da"],[104,29,124,27],[104,30,124,28,"redAdd"],[104,36,124,34],[104,37,124,35,"cb"],[104,39,124,37],[104,40,124,38],[104,41,124,39,"redSqr"],[104,47,124,45],[104,48,124,46],[104,49,124,47],[104,50,124,48],[105,4,125,2],[106,4,126,2],[106,8,126,6,"nz"],[106,10,126,8],[106,13,126,11,"diff"],[106,17,126,15],[106,18,126,16,"x"],[106,19,126,17],[106,20,126,18,"redMul"],[106,26,126,24],[106,27,126,25,"da"],[106,29,126,27],[106,30,126,28,"redISub"],[106,37,126,35],[106,38,126,36,"cb"],[106,40,126,38],[106,41,126,39],[106,42,126,40,"redSqr"],[106,48,126,46],[106,49,126,47],[106,50,126,48],[106,51,126,49],[107,4,127,2],[107,11,127,9],[107,15,127,13],[107,16,127,14,"curve"],[107,21,127,19],[107,22,127,20,"point"],[107,27,127,25],[107,28,127,26,"nx"],[107,30,127,28],[107,32,127,30,"nz"],[107,34,127,32],[107,35,127,33],[108,2,128,0],[108,3,128,1],[109,2,130,0,"Point"],[109,7,130,5],[109,8,130,6,"prototype"],[109,17,130,15],[109,18,130,16,"mul"],[109,21,130,19],[109,24,130,22],[109,33,130,31,"mul"],[109,36,130,34,"mul"],[109,37,130,35,"k"],[109,38,130,36],[109,40,130,38],[110,4,131,2],[110,8,131,6,"t"],[110,9,131,7],[110,12,131,10,"k"],[110,13,131,11],[110,14,131,12,"clone"],[110,19,131,17],[110,20,131,18],[110,21,131,19],[111,4,132,2],[111,8,132,6,"a"],[111,9,132,7],[111,12,132,10],[111,16,132,14],[111,17,132,15],[111,18,132,16],[112,4,133,2],[112,8,133,6,"b"],[112,9,133,7],[112,12,133,10],[112,16,133,14],[112,17,133,15,"curve"],[112,22,133,20],[112,23,133,21,"point"],[112,28,133,26],[112,29,133,27],[112,33,133,31],[112,35,133,33],[112,39,133,37],[112,40,133,38],[112,41,133,39],[112,42,133,40],[113,4,134,2],[113,8,134,6,"c"],[113,9,134,7],[113,12,134,10],[113,16,134,14],[113,17,134,15],[113,18,134,16],[115,4,136,2],[115,9,136,7],[115,13,136,11,"bits"],[115,17,136,15],[115,20,136,18],[115,22,136,20],[115,24,136,22,"t"],[115,25,136,23],[115,26,136,24,"cmpn"],[115,30,136,28],[115,31,136,29],[115,32,136,30],[115,33,136,31],[115,38,136,36],[115,39,136,37],[115,41,136,39,"t"],[115,42,136,40],[115,43,136,41,"iushrn"],[115,49,136,47],[115,50,136,48],[115,51,136,49],[115,52,136,50],[115,54,137,4,"bits"],[115,58,137,8],[115,59,137,9,"push"],[115,63,137,13],[115,64,137,14,"t"],[115,65,137,15],[115,66,137,16,"andln"],[115,71,137,21],[115,72,137,22],[115,73,137,23],[115,74,137,24],[115,75,137,25],[116,4,139,2],[116,9,139,7],[116,13,139,11,"i"],[116,14,139,12],[116,17,139,15,"bits"],[116,21,139,19],[116,22,139,20,"length"],[116,28,139,26],[116,31,139,29],[116,32,139,30],[116,34,139,32,"i"],[116,35,139,33],[116,39,139,37],[116,40,139,38],[116,42,139,40,"i"],[116,43,139,41],[116,45,139,43],[116,47,139,45],[117,6,140,4],[117,10,140,8,"bits"],[117,14,140,12],[117,15,140,13,"i"],[117,16,140,14],[117,17,140,15],[117,22,140,20],[117,23,140,21],[117,25,140,23],[118,8,141,6],[119,8,142,6,"a"],[119,9,142,7],[119,12,142,10,"a"],[119,13,142,11],[119,14,142,12,"diffAdd"],[119,21,142,19],[119,22,142,20,"b"],[119,23,142,21],[119,25,142,23,"c"],[119,26,142,24],[119,27,142,25],[120,8,143,6],[121,8,144,6,"b"],[121,9,144,7],[121,12,144,10,"b"],[121,13,144,11],[121,14,144,12,"dbl"],[121,17,144,15],[121,18,144,16],[121,19,144,17],[122,6,145,4],[122,7,145,5],[122,13,145,11],[123,8,146,6],[124,8,147,6,"b"],[124,9,147,7],[124,12,147,10,"a"],[124,13,147,11],[124,14,147,12,"diffAdd"],[124,21,147,19],[124,22,147,20,"b"],[124,23,147,21],[124,25,147,23,"c"],[124,26,147,24],[124,27,147,25],[125,8,148,6],[126,8,149,6,"a"],[126,9,149,7],[126,12,149,10,"a"],[126,13,149,11],[126,14,149,12,"dbl"],[126,17,149,15],[126,18,149,16],[126,19,149,17],[127,6,150,4],[128,4,151,2],[129,4,152,2],[129,11,152,9,"b"],[129,12,152,10],[130,2,153,0],[130,3,153,1],[131,2,155,0,"Point"],[131,7,155,5],[131,8,155,6,"prototype"],[131,17,155,15],[131,18,155,16,"mulAdd"],[131,24,155,22],[131,27,155,25],[131,36,155,34,"mulAdd"],[131,42,155,40,"mulAdd"],[131,43,155,40],[131,45,155,43],[132,4,156,2],[132,10,156,8],[132,14,156,12,"Error"],[132,19,156,17],[132,20,156,18],[132,55,156,53],[132,56,156,54],[133,2,157,0],[133,3,157,1],[134,2,159,0,"Point"],[134,7,159,5],[134,8,159,6,"prototype"],[134,17,159,15],[134,18,159,16,"jumlAdd"],[134,25,159,23],[134,28,159,26],[134,37,159,35,"jumlAdd"],[134,44,159,42,"jumlAdd"],[134,45,159,42],[134,47,159,45],[135,4,160,2],[135,10,160,8],[135,14,160,12,"Error"],[135,19,160,17],[135,20,160,18],[135,55,160,53],[135,56,160,54],[136,2,161,0],[136,3,161,1],[137,2,163,0,"Point"],[137,7,163,5],[137,8,163,6,"prototype"],[137,17,163,15],[137,18,163,16,"eq"],[137,20,163,18],[137,23,163,21],[137,32,163,30,"eq"],[137,34,163,32,"eq"],[137,35,163,33,"other"],[137,40,163,38],[137,42,163,40],[138,4,164,2],[138,11,164,9],[138,15,164,13],[138,16,164,14,"getX"],[138,20,164,18],[138,21,164,19],[138,22,164,20],[138,23,164,21,"cmp"],[138,26,164,24],[138,27,164,25,"other"],[138,32,164,30],[138,33,164,31,"getX"],[138,37,164,35],[138,38,164,36],[138,39,164,37],[138,40,164,38],[138,45,164,43],[138,46,164,44],[139,2,165,0],[139,3,165,1],[140,2,167,0,"Point"],[140,7,167,5],[140,8,167,6,"prototype"],[140,17,167,15],[140,18,167,16,"normalize"],[140,27,167,25],[140,30,167,28],[140,39,167,37,"normalize"],[140,48,167,46,"normalize"],[140,49,167,46],[140,51,167,49],[141,4,168,2],[141,8,168,6],[141,9,168,7,"x"],[141,10,168,8],[141,13,168,11],[141,17,168,15],[141,18,168,16,"x"],[141,19,168,17],[141,20,168,18,"redMul"],[141,26,168,24],[141,27,168,25],[141,31,168,29],[141,32,168,30,"z"],[141,33,168,31],[141,34,168,32,"redInvm"],[141,41,168,39],[141,42,168,40],[141,43,168,41],[141,44,168,42],[142,4,169,2],[142,8,169,6],[142,9,169,7,"z"],[142,10,169,8],[142,13,169,11],[142,17,169,15],[142,18,169,16,"curve"],[142,23,169,21],[142,24,169,22,"one"],[142,27,169,25],[143,4,170,2],[143,11,170,9],[143,15,170,13],[144,2,171,0],[144,3,171,1],[145,2,173,0,"Point"],[145,7,173,5],[145,8,173,6,"prototype"],[145,17,173,15],[145,18,173,16,"getX"],[145,22,173,20],[145,25,173,23],[145,34,173,32,"getX"],[145,38,173,36,"getX"],[145,39,173,36],[145,41,173,39],[146,4,174,2],[147,4,175,2],[147,8,175,6],[147,9,175,7,"normalize"],[147,18,175,16],[147,19,175,17],[147,20,175,18],[148,4,177,2],[148,11,177,9],[148,15,177,13],[148,16,177,14,"x"],[148,17,177,15],[148,18,177,16,"fromRed"],[148,25,177,23],[148,26,177,24],[148,27,177,25],[149,2,178,0],[149,3,178,1],[150,0,178,2],[150,3]],"functionMap":{"names":["<global>","MontCurve","validate","Point","decodePoint","point","pointFromJSON","precompute","_encode","fromJSON","inspect","isInfinity","dbl","add","diffAdd","mul","mulAdd","jumlAdd","eq","normalize","getX"],"mappings":"AAA;ACQ;CDQ;+BEI;CFO;AGE;CHa;kCIG;CJE;4BKE;CLE;oCME;CNE;6BOE;CPE;0BQE;CRE;iBSE;CTE;0BUE;CVK;6BWE;CXG;sBYE;CZmB;sBaE;CbE;0BcE;CdqB;sBeE;CfuB;yBgBE;ChBE;0BiBE;CjBE;qBkBE;ClBE;4BmBE;CnBI;uBoBE;CpBK"}},"type":"js/module"}]}