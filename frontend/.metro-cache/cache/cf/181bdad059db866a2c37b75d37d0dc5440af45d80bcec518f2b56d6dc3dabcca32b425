{"dependencies":[{"name":"cipher-base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":39,"index":39}}],"key":"7cV2V6tRDydrl9neigZg5XnvIlM=","exportNames":["*"]}},{"name":"des.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":10,"index":50},"end":{"line":2,"column":27,"index":67}}],"key":"tDqt6PfYSrPa7C4JgRzW1FwipjA=","exportNames":["*"]}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":83},"end":{"line":3,"column":34,"index":102}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":116},"end":{"line":4,"column":35,"index":138}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var CipherBase = require(_dependencyMap[0], \"cipher-base\");\n  var des = require(_dependencyMap[1], \"des.js\");\n  var inherits = require(_dependencyMap[2], \"inherits\");\n  var Buffer = require(_dependencyMap[3], \"safe-buffer\").Buffer;\n  var modes = {\n    'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n    'des-ede3': des.EDE,\n    'des-ede-cbc': des.CBC.instantiate(des.EDE),\n    'des-ede': des.EDE,\n    'des-cbc': des.CBC.instantiate(des.DES),\n    'des-ecb': des.DES\n  };\n  modes.des = modes['des-cbc'];\n  modes.des3 = modes['des-ede3-cbc'];\n  module.exports = DES;\n  inherits(DES, CipherBase);\n  function DES(opts) {\n    CipherBase.call(this);\n    var modeName = opts.mode.toLowerCase();\n    var mode = modes[modeName];\n    var type;\n    if (opts.decrypt) {\n      type = 'decrypt';\n    } else {\n      type = 'encrypt';\n    }\n    var key = opts.key;\n    if (!Buffer.isBuffer(key)) {\n      key = Buffer.from(key);\n    }\n    if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n      key = Buffer.concat([key, key.slice(0, 8)]);\n    }\n    var iv = opts.iv;\n    if (!Buffer.isBuffer(iv)) {\n      iv = Buffer.from(iv);\n    }\n    this._des = mode.create({\n      key: key,\n      iv: iv,\n      type: type\n    });\n  }\n  DES.prototype._update = function (data) {\n    return Buffer.from(this._des.update(data));\n  };\n  DES.prototype._final = function () {\n    return Buffer.from(this._des.final());\n  };\n});","lineCount":51,"map":[[2,2,1,0],[2,6,1,4,"CipherBase"],[2,16,1,14],[2,19,1,17,"require"],[2,26,1,24],[2,27,1,24,"_dependencyMap"],[2,41,1,24],[2,59,1,38],[2,60,1,39],[3,2,2,0],[3,6,2,4,"des"],[3,9,2,7],[3,12,2,10,"require"],[3,19,2,17],[3,20,2,17,"_dependencyMap"],[3,34,2,17],[3,47,2,26],[3,48,2,27],[4,2,3,0],[4,6,3,4,"inherits"],[4,14,3,12],[4,17,3,15,"require"],[4,24,3,22],[4,25,3,22,"_dependencyMap"],[4,39,3,22],[4,54,3,33],[4,55,3,34],[5,2,4,0],[5,6,4,4,"Buffer"],[5,12,4,10],[5,15,4,13,"require"],[5,22,4,20],[5,23,4,20,"_dependencyMap"],[5,37,4,20],[5,55,4,34],[5,56,4,35],[5,57,4,36,"Buffer"],[5,63,4,42],[6,2,6,0],[6,6,6,4,"modes"],[6,11,6,9],[6,14,6,12],[7,4,7,2],[7,18,7,16],[7,20,7,18,"des"],[7,23,7,21],[7,24,7,22,"CBC"],[7,27,7,25],[7,28,7,26,"instantiate"],[7,39,7,37],[7,40,7,38,"des"],[7,43,7,41],[7,44,7,42,"EDE"],[7,47,7,45],[7,48,7,46],[8,4,8,2],[8,14,8,12],[8,16,8,14,"des"],[8,19,8,17],[8,20,8,18,"EDE"],[8,23,8,21],[9,4,9,2],[9,17,9,15],[9,19,9,17,"des"],[9,22,9,20],[9,23,9,21,"CBC"],[9,26,9,24],[9,27,9,25,"instantiate"],[9,38,9,36],[9,39,9,37,"des"],[9,42,9,40],[9,43,9,41,"EDE"],[9,46,9,44],[9,47,9,45],[10,4,10,2],[10,13,10,11],[10,15,10,13,"des"],[10,18,10,16],[10,19,10,17,"EDE"],[10,22,10,20],[11,4,11,2],[11,13,11,11],[11,15,11,13,"des"],[11,18,11,16],[11,19,11,17,"CBC"],[11,22,11,20],[11,23,11,21,"instantiate"],[11,34,11,32],[11,35,11,33,"des"],[11,38,11,36],[11,39,11,37,"DES"],[11,42,11,40],[11,43,11,41],[12,4,12,2],[12,13,12,11],[12,15,12,13,"des"],[12,18,12,16],[12,19,12,17,"DES"],[13,2,13,0],[13,3,13,1],[14,2,14,0,"modes"],[14,7,14,5],[14,8,14,6,"des"],[14,11,14,9],[14,14,14,12,"modes"],[14,19,14,17],[14,20,14,18],[14,29,14,27],[14,30,14,28],[15,2,15,0,"modes"],[15,7,15,5],[15,8,15,6,"des3"],[15,12,15,10],[15,15,15,13,"modes"],[15,20,15,18],[15,21,15,19],[15,35,15,33],[15,36,15,34],[16,2,16,0,"module"],[16,8,16,6],[16,9,16,7,"exports"],[16,16,16,14],[16,19,16,17,"DES"],[16,22,16,20],[17,2,17,0,"inherits"],[17,10,17,8],[17,11,17,9,"DES"],[17,14,17,12],[17,16,17,14,"CipherBase"],[17,26,17,24],[17,27,17,25],[18,2,18,0],[18,11,18,9,"DES"],[18,14,18,12,"DES"],[18,15,18,14,"opts"],[18,19,18,18],[18,21,18,20],[19,4,19,2,"CipherBase"],[19,14,19,12],[19,15,19,13,"call"],[19,19,19,17],[19,20,19,18],[19,24,19,22],[19,25,19,23],[20,4,20,2],[20,8,20,6,"modeName"],[20,16,20,14],[20,19,20,17,"opts"],[20,23,20,21],[20,24,20,22,"mode"],[20,28,20,26],[20,29,20,27,"toLowerCase"],[20,40,20,38],[20,41,20,39],[20,42,20,40],[21,4,21,2],[21,8,21,6,"mode"],[21,12,21,10],[21,15,21,13,"modes"],[21,20,21,18],[21,21,21,19,"modeName"],[21,29,21,27],[21,30,21,28],[22,4,22,2],[22,8,22,6,"type"],[22,12,22,10],[23,4,23,2],[23,8,23,6,"opts"],[23,12,23,10],[23,13,23,11,"decrypt"],[23,20,23,18],[23,22,23,20],[24,6,24,4,"type"],[24,10,24,8],[24,13,24,11],[24,22,24,20],[25,4,25,2],[25,5,25,3],[25,11,25,9],[26,6,26,4,"type"],[26,10,26,8],[26,13,26,11],[26,22,26,20],[27,4,27,2],[28,4,28,2],[28,8,28,6,"key"],[28,11,28,9],[28,14,28,12,"opts"],[28,18,28,16],[28,19,28,17,"key"],[28,22,28,20],[29,4,29,2],[29,8,29,6],[29,9,29,7,"Buffer"],[29,15,29,13],[29,16,29,14,"isBuffer"],[29,24,29,22],[29,25,29,23,"key"],[29,28,29,26],[29,29,29,27],[29,31,29,29],[30,6,30,4,"key"],[30,9,30,7],[30,12,30,10,"Buffer"],[30,18,30,16],[30,19,30,17,"from"],[30,23,30,21],[30,24,30,22,"key"],[30,27,30,25],[30,28,30,26],[31,4,31,2],[32,4,32,2],[32,8,32,6,"modeName"],[32,16,32,14],[32,21,32,19],[32,30,32,28],[32,34,32,32,"modeName"],[32,42,32,40],[32,47,32,45],[32,60,32,58],[32,62,32,60],[33,6,33,4,"key"],[33,9,33,7],[33,12,33,10,"Buffer"],[33,18,33,16],[33,19,33,17,"concat"],[33,25,33,23],[33,26,33,24],[33,27,33,25,"key"],[33,30,33,28],[33,32,33,30,"key"],[33,35,33,33],[33,36,33,34,"slice"],[33,41,33,39],[33,42,33,40],[33,43,33,41],[33,45,33,43],[33,46,33,44],[33,47,33,45],[33,48,33,46],[33,49,33,47],[34,4,34,2],[35,4,35,2],[35,8,35,6,"iv"],[35,10,35,8],[35,13,35,11,"opts"],[35,17,35,15],[35,18,35,16,"iv"],[35,20,35,18],[36,4,36,2],[36,8,36,6],[36,9,36,7,"Buffer"],[36,15,36,13],[36,16,36,14,"isBuffer"],[36,24,36,22],[36,25,36,23,"iv"],[36,27,36,25],[36,28,36,26],[36,30,36,28],[37,6,37,4,"iv"],[37,8,37,6],[37,11,37,9,"Buffer"],[37,17,37,15],[37,18,37,16,"from"],[37,22,37,20],[37,23,37,21,"iv"],[37,25,37,23],[37,26,37,24],[38,4,38,2],[39,4,39,2],[39,8,39,6],[39,9,39,7,"_des"],[39,13,39,11],[39,16,39,14,"mode"],[39,20,39,18],[39,21,39,19,"create"],[39,27,39,25],[39,28,39,26],[40,6,40,4,"key"],[40,9,40,7],[40,11,40,9,"key"],[40,14,40,12],[41,6,41,4,"iv"],[41,8,41,6],[41,10,41,8,"iv"],[41,12,41,10],[42,6,42,4,"type"],[42,10,42,8],[42,12,42,10,"type"],[43,4,43,2],[43,5,43,3],[43,6,43,4],[44,2,44,0],[45,2,45,0,"DES"],[45,5,45,3],[45,6,45,4,"prototype"],[45,15,45,13],[45,16,45,14,"_update"],[45,23,45,21],[45,26,45,24],[45,36,45,34,"data"],[45,40,45,38],[45,42,45,40],[46,4,46,2],[46,11,46,9,"Buffer"],[46,17,46,15],[46,18,46,16,"from"],[46,22,46,20],[46,23,46,21],[46,27,46,25],[46,28,46,26,"_des"],[46,32,46,30],[46,33,46,31,"update"],[46,39,46,37],[46,40,46,38,"data"],[46,44,46,42],[46,45,46,43],[46,46,46,44],[47,2,47,0],[47,3,47,1],[48,2,48,0,"DES"],[48,5,48,3],[48,6,48,4,"prototype"],[48,15,48,13],[48,16,48,14,"_final"],[48,22,48,20],[48,25,48,23],[48,37,48,35],[49,4,49,2],[49,11,49,9,"Buffer"],[49,17,49,15],[49,18,49,16,"from"],[49,22,49,20],[49,23,49,21],[49,27,49,25],[49,28,49,26,"_des"],[49,32,49,30],[49,33,49,31,"final"],[49,38,49,36],[49,39,49,37],[49,40,49,38],[49,41,49,39],[50,2,50,0],[50,3,50,1],[51,0,50,1],[51,3]],"functionMap":{"names":["<global>","DES","DES.prototype._update","DES.prototype._final"],"mappings":"AAA;ACiB;CD0B;wBEC;CFE;uBGC;CHE"}},"type":"js/module"}]}