{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":60,"index":170}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":171},"end":{"line":4,"column":204,"index":375}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":376},"end":{"line":5,"column":46,"index":422}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"../serialization.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":423},"end":{"line":6,"column":61,"index":484}}],"key":"levm6odmRGOGV1wbjXTCeUtq0fk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeMintCloseAuthorityInstruction = createInitializeMintCloseAuthorityInstruction;\n  exports.decodeInitializeMintCloseAuthorityInstruction = decodeInitializeMintCloseAuthorityInstruction;\n  exports.decodeInitializeMintCloseAuthorityInstructionUnchecked = decodeInitializeMintCloseAuthorityInstructionUnchecked;\n  exports.initializeMintCloseAuthorityInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _types = require(_dependencyMap[4], \"./types.js\");\n  var _serialization = require(_dependencyMap[5], \"../serialization.js\");\n  /** TODO: docs */\n  const initializeMintCloseAuthorityInstructionData = exports.initializeMintCloseAuthorityInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), new _serialization.COptionPublicKeyLayout('closeAuthority')]);\n  /**\n   * Construct an InitializeMintCloseAuthority instruction\n   *\n   * @param mint            Token mint account\n   * @param closeAuthority  Optional authority that can close the mint\n   * @param programId       SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeMintCloseAuthorityInstruction(mint, closeAuthority, programId) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(34); // worst-case size\n    initializeMintCloseAuthorityInstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeMintCloseAuthority,\n      closeAuthority\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data: data.subarray(0, initializeMintCloseAuthorityInstructionData.getSpan(data))\n    });\n  }\n  /**\n   * Decode an InitializeMintCloseAuthority instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeMintCloseAuthorityInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintCloseAuthorityInstructionData.getSpan(instruction.data)) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        mint\n      },\n      data\n    } = decodeInitializeMintCloseAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeMintCloseAuthority) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!mint) throw new _errors.TokenInvalidInstructionKeysError();\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeMintCloseAuthority instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeMintCloseAuthorityInstructionUnchecked({\n    programId,\n    keys: [mint],\n    data\n  }) {\n    const {\n      instruction,\n      closeAuthority\n    } = initializeMintCloseAuthorityInstructionData.decode(data);\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data: {\n        instruction,\n        closeAuthority\n      }\n    };\n  }\n});","lineCount":100,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_types"],[13,12,5,0],[13,15,5,0,"require"],[13,22,5,0],[13,23,5,0,"_dependencyMap"],[13,37,5,0],[14,2,6,0],[14,6,6,0,"_serialization"],[14,20,6,0],[14,23,6,0,"require"],[14,30,6,0],[14,31,6,0,"_dependencyMap"],[14,45,6,0],[15,2,7,0],[16,2,8,7],[16,8,8,13,"initializeMintCloseAuthorityInstructionData"],[16,51,8,56],[16,54,8,56,"exports"],[16,61,8,56],[16,62,8,56,"initializeMintCloseAuthorityInstructionData"],[16,105,8,56],[16,108,8,59],[16,112,8,59,"struct"],[16,132,8,65],[16,134,8,66],[16,135,9,4],[16,139,9,4,"u8"],[16,155,9,6],[16,157,9,7],[16,170,9,20],[16,171,9,21],[16,173,10,4],[16,177,10,8,"COptionPublicKeyLayout"],[16,214,10,30],[16,215,10,31],[16,231,10,47],[16,232,10,48],[16,233,11,1],[16,234,11,2],[17,2,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,7],[26,11,21,16,"createInitializeMintCloseAuthorityInstruction"],[26,56,21,61,"createInitializeMintCloseAuthorityInstruction"],[26,57,21,62,"mint"],[26,61,21,66],[26,63,21,68,"closeAuthority"],[26,77,21,82],[26,79,21,84,"programId"],[26,88,21,93],[26,90,21,95],[27,4,22,4],[27,8,22,8],[27,9,22,9],[27,13,22,9,"programSupportsExtensions"],[27,49,22,34],[27,51,22,35,"programId"],[27,60,22,44],[27,61,22,45],[27,63,22,47],[28,6,23,8],[28,12,23,14],[28,16,23,18,"TokenUnsupportedInstructionError"],[28,56,23,50],[28,57,23,51],[28,58,23,52],[29,4,24,4],[30,4,25,4],[30,10,25,10,"keys"],[30,14,25,14],[30,17,25,17],[30,18,25,18],[31,6,25,20,"pubkey"],[31,12,25,26],[31,14,25,28,"mint"],[31,18,25,32],[32,6,25,34,"isSigner"],[32,14,25,42],[32,16,25,44],[32,21,25,49],[33,6,25,51,"isWritable"],[33,16,25,61],[33,18,25,63],[34,4,25,68],[34,5,25,69],[34,6,25,70],[35,4,26,4],[35,10,26,10,"data"],[35,14,26,14],[35,17,26,17,"Buffer"],[35,23,26,23],[35,24,26,24,"alloc"],[35,29,26,29],[35,30,26,30],[35,32,26,32],[35,33,26,33],[35,34,26,34],[35,35,26,35],[36,4,27,4,"initializeMintCloseAuthorityInstructionData"],[36,47,27,47],[36,48,27,48,"encode"],[36,54,27,54],[36,55,27,55],[37,6,28,8,"instruction"],[37,17,28,19],[37,19,28,21,"TokenInstruction"],[37,42,28,37],[37,43,28,38,"InitializeMintCloseAuthority"],[37,71,28,66],[38,6,29,8,"closeAuthority"],[39,4,30,4],[39,5,30,5],[39,7,30,7,"data"],[39,11,30,11],[39,12,30,12],[40,4,31,4],[40,11,31,11],[40,15,31,15,"TransactionInstruction"],[40,42,31,37],[40,43,31,38],[41,6,32,8,"keys"],[41,10,32,12],[42,6,33,8,"programId"],[42,15,33,17],[43,6,34,8,"data"],[43,10,34,12],[43,12,34,14,"data"],[43,16,34,18],[43,17,34,19,"subarray"],[43,25,34,27],[43,26,34,28],[43,27,34,29],[43,29,34,31,"initializeMintCloseAuthorityInstructionData"],[43,72,34,74],[43,73,34,75,"getSpan"],[43,80,34,82],[43,81,34,83,"data"],[43,85,34,87],[43,86,34,88],[44,4,35,4],[44,5,35,5],[44,6,35,6],[45,2,36,0],[46,2,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,0,44,0],[54,2,45,7],[54,11,45,16,"decodeInitializeMintCloseAuthorityInstruction"],[54,56,45,61,"decodeInitializeMintCloseAuthorityInstruction"],[54,57,45,62,"instruction"],[54,68,45,73],[54,70,45,75,"programId"],[54,79,45,84],[54,81,45,86],[55,4,46,4],[55,8,46,8],[55,9,46,9,"instruction"],[55,20,46,20],[55,21,46,21,"programId"],[55,30,46,30],[55,31,46,31,"equals"],[55,37,46,37],[55,38,46,38,"programId"],[55,47,46,47],[55,48,46,48],[55,50,47,8],[55,56,47,14],[55,60,47,18,"TokenInvalidInstructionProgramError"],[55,103,47,53],[55,104,47,54],[55,105,47,55],[56,4,48,4],[56,8,48,8,"instruction"],[56,19,48,19],[56,20,48,20,"data"],[56,24,48,24],[56,25,48,25,"length"],[56,31,48,31],[56,36,48,36,"initializeMintCloseAuthorityInstructionData"],[56,79,48,79],[56,80,48,80,"getSpan"],[56,87,48,87],[56,88,48,88,"instruction"],[56,99,48,99],[56,100,48,100,"data"],[56,104,48,104],[56,105,48,105],[56,107,49,8],[56,113,49,14],[56,117,49,18,"TokenInvalidInstructionDataError"],[56,157,49,50],[56,158,49,51],[56,159,49,52],[57,4,50,4],[57,10,50,10],[58,6,50,12,"keys"],[58,10,50,16],[58,12,50,18],[59,8,50,20,"mint"],[60,6,50,25],[60,7,50,26],[61,6,50,28,"data"],[62,4,50,34],[62,5,50,35],[62,8,50,38,"decodeInitializeMintCloseAuthorityInstructionUnchecked"],[62,62,50,92],[62,63,50,93,"instruction"],[62,74,50,104],[62,75,50,105],[63,4,51,4],[63,8,51,8,"data"],[63,12,51,12],[63,13,51,13,"instruction"],[63,24,51,24],[63,29,51,29,"TokenInstruction"],[63,52,51,45],[63,53,51,46,"InitializeMintCloseAuthority"],[63,81,51,74],[63,83,52,8],[63,89,52,14],[63,93,52,18,"TokenInvalidInstructionTypeError"],[63,133,52,50],[63,134,52,51],[63,135,52,52],[64,4,53,4],[64,8,53,8],[64,9,53,9,"mint"],[64,13,53,13],[64,15,54,8],[64,21,54,14],[64,25,54,18,"TokenInvalidInstructionKeysError"],[64,65,54,50],[64,66,54,51],[64,67,54,52],[65,4,55,4],[65,11,55,11],[66,6,56,8,"programId"],[66,15,56,17],[67,6,57,8,"keys"],[67,10,57,12],[67,12,57,14],[68,8,58,12,"mint"],[69,6,59,8],[69,7,59,9],[70,6,60,8,"data"],[71,4,61,4],[71,5,61,5],[72,2,62,0],[73,2,63,0],[74,0,64,0],[75,0,65,0],[76,0,66,0],[77,0,67,0],[78,0,68,0],[79,0,69,0],[80,2,70,7],[80,11,70,16,"decodeInitializeMintCloseAuthorityInstructionUnchecked"],[80,65,70,70,"decodeInitializeMintCloseAuthorityInstructionUnchecked"],[80,66,70,71],[81,4,70,73,"programId"],[81,13,70,82],[82,4,70,84,"keys"],[82,8,70,88],[82,10,70,90],[82,11,70,91,"mint"],[82,15,70,95],[82,16,70,96],[83,4,70,98,"data"],[84,2,70,104],[84,3,70,105],[84,5,70,107],[85,4,71,4],[85,10,71,10],[86,6,71,12,"instruction"],[86,17,71,23],[87,6,71,25,"closeAuthority"],[88,4,71,40],[88,5,71,41],[88,8,71,44,"initializeMintCloseAuthorityInstructionData"],[88,51,71,87],[88,52,71,88,"decode"],[88,58,71,94],[88,59,71,95,"data"],[88,63,71,99],[88,64,71,100],[89,4,72,4],[89,11,72,11],[90,6,73,8,"programId"],[90,15,73,17],[91,6,74,8,"keys"],[91,10,74,12],[91,12,74,14],[92,8,75,12,"mint"],[93,6,76,8],[93,7,76,9],[94,6,77,8,"data"],[94,10,77,12],[94,12,77,14],[95,8,78,12,"instruction"],[95,19,78,23],[96,8,79,12,"closeAuthority"],[97,6,80,8],[98,4,81,4],[98,5,81,5],[99,2,82,0],[100,0,82,1],[100,3]],"functionMap":{"names":["<global>","createInitializeMintCloseAuthorityInstruction","decodeInitializeMintCloseAuthorityInstruction","decodeInitializeMintCloseAuthorityInstructionUnchecked"],"mappings":"AAA;OCoB;CDe;OES;CFiB;OGQ;CHY"}},"type":"js/module"}]}