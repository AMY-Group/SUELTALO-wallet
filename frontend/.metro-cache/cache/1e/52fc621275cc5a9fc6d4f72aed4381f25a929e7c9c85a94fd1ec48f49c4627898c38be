{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":88,"index":140}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":141},"end":{"line":3,"column":51,"index":192}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":193},"end":{"line":4,"column":170,"index":363}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":364},"end":{"line":5,"column":46,"index":410}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeMultisigInstruction = createInitializeMultisigInstruction;\n  exports.decodeInitializeMultisigInstruction = decodeInitializeMultisigInstruction;\n  exports.decodeInitializeMultisigInstructionUnchecked = decodeInitializeMultisigInstructionUnchecked;\n  exports.initializeMultisigInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _types = require(_dependencyMap[4], \"./types.js\");\n  /** TODO: docs */\n  const initializeMultisigInstructionData = exports.initializeMultisigInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('m')]);\n  /**\n   * Construct an InitializeMultisig instruction\n   *\n   * @param account   Multisig account\n   * @param signers   Full set of signers\n   * @param m         Number of required signatures\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeMultisigInstruction(account, signers, m, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: _web.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    for (const signer of signers) {\n      keys.push({\n        pubkey: signer instanceof _web.PublicKey ? signer : signer.publicKey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    const data = Buffer.alloc(initializeMultisigInstructionData.span);\n    initializeMultisigInstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeMultisig,\n      m\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an InitializeMultisig instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeMultisigInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMultisigInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        rent,\n        signers\n      },\n      data\n    } = decodeInitializeMultisigInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeMultisig) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !rent || !signers.length) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        rent,\n        signers\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeMultisig instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeMultisigInstructionUnchecked({\n    programId,\n    keys: [account, rent, ...signers],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        rent,\n        signers\n      },\n      data: initializeMultisigInstructionData.decode(data)\n    };\n  }\n});","lineCount":108,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_types"],[13,12,5,0],[13,15,5,0,"require"],[13,22,5,0],[13,23,5,0,"_dependencyMap"],[13,37,5,0],[14,2,6,0],[15,2,7,7],[15,8,7,13,"initializeMultisigInstructionData"],[15,41,7,46],[15,44,7,46,"exports"],[15,51,7,46],[15,52,7,46,"initializeMultisigInstructionData"],[15,85,7,46],[15,88,7,49],[15,92,7,49,"struct"],[15,112,7,55],[15,114,7,56],[15,115,8,4],[15,119,8,4,"u8"],[15,135,8,6],[15,137,8,7],[15,150,8,20],[15,151,8,21],[15,153,9,4],[15,157,9,4,"u8"],[15,173,9,6],[15,175,9,7],[15,178,9,10],[15,179,9,11],[15,180,10,1],[15,181,10,2],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,7],[26,11,21,16,"createInitializeMultisigInstruction"],[26,46,21,51,"createInitializeMultisigInstruction"],[26,47,21,52,"account"],[26,54,21,59],[26,56,21,61,"signers"],[26,63,21,68],[26,65,21,70,"m"],[26,66,21,71],[26,68,21,73,"programId"],[26,77,21,82],[26,80,21,85,"TOKEN_PROGRAM_ID"],[26,107,21,101],[26,109,21,103],[27,4,22,4],[27,10,22,10,"keys"],[27,14,22,14],[27,17,22,17],[27,18,23,8],[28,6,23,10,"pubkey"],[28,12,23,16],[28,14,23,18,"account"],[28,21,23,25],[29,6,23,27,"isSigner"],[29,14,23,35],[29,16,23,37],[29,21,23,42],[30,6,23,44,"isWritable"],[30,16,23,54],[30,18,23,56],[31,4,23,61],[31,5,23,62],[31,7,24,8],[32,6,24,10,"pubkey"],[32,12,24,16],[32,14,24,18,"SYSVAR_RENT_PUBKEY"],[32,37,24,36],[33,6,24,38,"isSigner"],[33,14,24,46],[33,16,24,48],[33,21,24,53],[34,6,24,55,"isWritable"],[34,16,24,65],[34,18,24,67],[35,4,24,73],[35,5,24,74],[35,6,25,5],[36,4,26,4],[36,9,26,9],[36,15,26,15,"signer"],[36,21,26,21],[36,25,26,25,"signers"],[36,32,26,32],[36,34,26,34],[37,6,27,8,"keys"],[37,10,27,12],[37,11,27,13,"push"],[37,15,27,17],[37,16,27,18],[38,8,28,12,"pubkey"],[38,14,28,18],[38,16,28,20,"signer"],[38,22,28,26],[38,34,28,38,"PublicKey"],[38,48,28,47],[38,51,28,50,"signer"],[38,57,28,56],[38,60,28,59,"signer"],[38,66,28,65],[38,67,28,66,"publicKey"],[38,76,28,75],[39,8,29,12,"isSigner"],[39,16,29,20],[39,18,29,22],[39,23,29,27],[40,8,30,12,"isWritable"],[40,18,30,22],[40,20,30,24],[41,6,31,8],[41,7,31,9],[41,8,31,10],[42,4,32,4],[43,4,33,4],[43,10,33,10,"data"],[43,14,33,14],[43,17,33,17,"Buffer"],[43,23,33,23],[43,24,33,24,"alloc"],[43,29,33,29],[43,30,33,30,"initializeMultisigInstructionData"],[43,63,33,63],[43,64,33,64,"span"],[43,68,33,68],[43,69,33,69],[44,4,34,4,"initializeMultisigInstructionData"],[44,37,34,37],[44,38,34,38,"encode"],[44,44,34,44],[44,45,34,45],[45,6,35,8,"instruction"],[45,17,35,19],[45,19,35,21,"TokenInstruction"],[45,42,35,37],[45,43,35,38,"InitializeMultisig"],[45,61,35,56],[46,6,36,8,"m"],[47,4,37,4],[47,5,37,5],[47,7,37,7,"data"],[47,11,37,11],[47,12,37,12],[48,4,38,4],[48,11,38,11],[48,15,38,15,"TransactionInstruction"],[48,42,38,37],[48,43,38,38],[49,6,38,40,"keys"],[49,10,38,44],[50,6,38,46,"programId"],[50,15,38,55],[51,6,38,57,"data"],[52,4,38,62],[52,5,38,63],[52,6,38,64],[53,2,39,0],[54,2,40,0],[55,0,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,0,46,0],[61,0,47,0],[62,2,48,7],[62,11,48,16,"decodeInitializeMultisigInstruction"],[62,46,48,51,"decodeInitializeMultisigInstruction"],[62,47,48,52,"instruction"],[62,58,48,63],[62,60,48,65,"programId"],[62,69,48,74],[62,72,48,77,"TOKEN_PROGRAM_ID"],[62,99,48,93],[62,101,48,95],[63,4,49,4],[63,8,49,8],[63,9,49,9,"instruction"],[63,20,49,20],[63,21,49,21,"programId"],[63,30,49,30],[63,31,49,31,"equals"],[63,37,49,37],[63,38,49,38,"programId"],[63,47,49,47],[63,48,49,48],[63,50,50,8],[63,56,50,14],[63,60,50,18,"TokenInvalidInstructionProgramError"],[63,103,50,53],[63,104,50,54],[63,105,50,55],[64,4,51,4],[64,8,51,8,"instruction"],[64,19,51,19],[64,20,51,20,"data"],[64,24,51,24],[64,25,51,25,"length"],[64,31,51,31],[64,36,51,36,"initializeMultisigInstructionData"],[64,69,51,69],[64,70,51,70,"span"],[64,74,51,74],[64,76,52,8],[64,82,52,14],[64,86,52,18,"TokenInvalidInstructionDataError"],[64,126,52,50],[64,127,52,51],[64,128,52,52],[65,4,53,4],[65,10,53,10],[66,6,53,12,"keys"],[66,10,53,16],[66,12,53,18],[67,8,53,20,"account"],[67,15,53,27],[68,8,53,29,"rent"],[68,12,53,33],[69,8,53,35,"signers"],[70,6,53,43],[70,7,53,44],[71,6,53,46,"data"],[72,4,53,52],[72,5,53,53],[72,8,53,56,"decodeInitializeMultisigInstructionUnchecked"],[72,52,53,100],[72,53,53,101,"instruction"],[72,64,53,112],[72,65,53,113],[73,4,54,4],[73,8,54,8,"data"],[73,12,54,12],[73,13,54,13,"instruction"],[73,24,54,24],[73,29,54,29,"TokenInstruction"],[73,52,54,45],[73,53,54,46,"InitializeMultisig"],[73,71,54,64],[73,73,55,8],[73,79,55,14],[73,83,55,18,"TokenInvalidInstructionTypeError"],[73,123,55,50],[73,124,55,51],[73,125,55,52],[74,4,56,4],[74,8,56,8],[74,9,56,9,"account"],[74,16,56,16],[74,20,56,20],[74,21,56,21,"rent"],[74,25,56,25],[74,29,56,29],[74,30,56,30,"signers"],[74,37,56,37],[74,38,56,38,"length"],[74,44,56,44],[74,46,57,8],[74,52,57,14],[74,56,57,18,"TokenInvalidInstructionKeysError"],[74,96,57,50],[74,97,57,51],[74,98,57,52],[75,4,58,4],[76,4,59,4],[76,11,59,11],[77,6,60,8,"programId"],[77,15,60,17],[78,6,61,8,"keys"],[78,10,61,12],[78,12,61,14],[79,8,62,12,"account"],[79,15,62,19],[80,8,63,12,"rent"],[80,12,63,16],[81,8,64,12,"signers"],[82,6,65,8],[82,7,65,9],[83,6,66,8,"data"],[84,4,67,4],[84,5,67,5],[85,2,68,0],[86,2,69,0],[87,0,70,0],[88,0,71,0],[89,0,72,0],[90,0,73,0],[91,0,74,0],[92,0,75,0],[93,2,76,7],[93,11,76,16,"decodeInitializeMultisigInstructionUnchecked"],[93,55,76,60,"decodeInitializeMultisigInstructionUnchecked"],[93,56,76,61],[94,4,76,63,"programId"],[94,13,76,72],[95,4,76,74,"keys"],[95,8,76,78],[95,10,76,80],[95,11,76,81,"account"],[95,18,76,88],[95,20,76,90,"rent"],[95,24,76,94],[95,26,76,96],[95,29,76,99,"signers"],[95,36,76,106],[95,37,76,107],[96,4,76,109,"data"],[97,2,76,115],[97,3,76,116],[97,5,76,118],[98,4,77,4],[98,11,77,11],[99,6,78,8,"programId"],[99,15,78,17],[100,6,79,8,"keys"],[100,10,79,12],[100,12,79,14],[101,8,80,12,"account"],[101,15,80,19],[102,8,81,12,"rent"],[102,12,81,16],[103,8,82,12,"signers"],[104,6,83,8],[104,7,83,9],[105,6,84,8,"data"],[105,10,84,12],[105,12,84,14,"initializeMultisigInstructionData"],[105,45,84,47],[105,46,84,48,"decode"],[105,52,84,54],[105,53,84,55,"data"],[105,57,84,59],[106,4,85,4],[106,5,85,5],[107,2,86,0],[108,0,86,1],[108,3]],"functionMap":{"names":["<global>","createInitializeMultisigInstruction","decodeInitializeMultisigInstruction","decodeInitializeMultisigInstructionUnchecked"],"mappings":"AAA;OCoB;CDkB;OES;CFoB;OGQ;CHU"}},"type":"js/module"}]}