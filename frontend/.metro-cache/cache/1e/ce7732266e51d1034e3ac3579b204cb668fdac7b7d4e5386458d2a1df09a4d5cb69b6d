{"dependencies":[{"name":"es-errors/type","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":42,"index":57}}],"key":"JK6ql1q9XC7Vc2zUHS8FnD1mVEg=","exportNames":["*"]}},{"name":"call-bound","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":76},"end":{"line":5,"column":37,"index":97}}],"key":"xVV7LLeUILRahu/c6/GJ3JZjpdc=","exportNames":["*"]}},{"name":"is-typed-array","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":19,"index":282},"end":{"line":10,"column":44,"index":307}}],"key":"+jVK4dNGzGJloA1S383k+/ueLR4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var $TypeError = require(_dependencyMap[0], \"es-errors/type\");\n  var callBound = require(_dependencyMap[1], \"call-bound\");\n\n  /** @type {undefined | ((thisArg: import('.').TypedArray) => Buffer<ArrayBufferLike>)} */\n  var $typedArrayBuffer = callBound('TypedArray.prototype.buffer', true);\n  var isTypedArray = require(_dependencyMap[2], \"is-typed-array\");\n\n  /** @type {import('.')} */\n  // node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter\n  module.exports = $typedArrayBuffer || function typedArrayBuffer(x) {\n    if (!isTypedArray(x)) {\n      throw new $TypeError('Not a Typed Array');\n    }\n    return x.buffer;\n  };\n});","lineCount":19,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"$TypeError"],[4,16,3,14],[4,19,3,17,"require"],[4,26,3,24],[4,27,3,24,"_dependencyMap"],[4,41,3,24],[4,62,3,41],[4,63,3,42],[5,2,5,0],[5,6,5,4,"callBound"],[5,15,5,13],[5,18,5,16,"require"],[5,25,5,23],[5,26,5,23,"_dependencyMap"],[5,40,5,23],[5,57,5,36],[5,58,5,37],[7,2,7,0],[8,2,8,0],[8,6,8,4,"$typedArrayBuffer"],[8,23,8,21],[8,26,8,24,"callBound"],[8,35,8,33],[8,36,8,34],[8,65,8,63],[8,67,8,65],[8,71,8,69],[8,72,8,70],[9,2,10,0],[9,6,10,4,"isTypedArray"],[9,18,10,16],[9,21,10,19,"require"],[9,28,10,26],[9,29,10,26,"_dependencyMap"],[9,43,10,26],[9,64,10,43],[9,65,10,44],[11,2,12,0],[12,2,13,0],[13,2,14,0,"module"],[13,8,14,6],[13,9,14,7,"exports"],[13,16,14,14],[13,19,14,17,"$typedArrayBuffer"],[13,36,14,34],[13,40,14,38],[13,49,14,47,"typedArrayBuffer"],[13,65,14,63,"typedArrayBuffer"],[13,66,14,64,"x"],[13,67,14,65],[13,69,14,67],[14,4,15,1],[14,8,15,5],[14,9,15,6,"isTypedArray"],[14,21,15,18],[14,22,15,19,"x"],[14,23,15,20],[14,24,15,21],[14,26,15,23],[15,6,16,2],[15,12,16,8],[15,16,16,12,"$TypeError"],[15,26,16,22],[15,27,16,23],[15,46,16,42],[15,47,16,43],[16,4,17,1],[17,4,18,1],[17,11,18,8,"x"],[17,12,18,9],[17,13,18,10,"buffer"],[17,19,18,16],[18,2,19,0],[18,3,19,1],[19,0,19,2],[19,3]],"functionMap":{"names":["<global>","typedArrayBuffer"],"mappings":"AAA;sCCa;CDK"}},"type":"js/module"}]}