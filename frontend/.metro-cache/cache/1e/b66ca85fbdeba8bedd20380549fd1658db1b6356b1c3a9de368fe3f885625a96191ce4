{"dependencies":[],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){function t(){this.buffer=[],this.length=0}t.prototype={get:function(t){const n=Math.floor(t/8);return 1==(this.buffer[n]>>>7-t%8&1)},put:function(t,n){for(let h=0;h<n;h++)this.putBit(1==(t>>>n-h-1&1))},getLengthInBits:function(){return this.length},putBit:function(t){const n=Math.floor(this.length/8);this.buffer.length<=n&&this.buffer.push(0),t&&(this.buffer[n]|=128>>>this.length%8),this.length++}},m.exports=t});","lineCount":1,"map":[[1,29,1,0],[1,38,1,9,"BitBuffer"],[1,42,2,2,"this"],[1,47,2,7,"buffer"],[1,54,2,16],[1,57,3,2,"this"],[1,62,3,7,"length"],[1,69,3,16],[1,70,4,0],[1,71,6,0,"BitBuffer"],[1,73,6,10,"prototype"],[1,83,6,22],[1,84,8,2,"get"],[1,88,8,7],[1,97,8,17,"index"],[1,100,9,4],[1,106,9,10,"bufIndex"],[1,108,9,21,"Math"],[1,113,9,26,"floor"],[1,119,9,32,"index"],[1,121,9,40],[1,124,10,4],[1,131,10,65],[1,135,10,13,"this"],[1,140,10,18,"buffer"],[1,147,10,25,"bufIndex"],[1,152,10,40],[1,154,10,44,"index"],[1,156,10,52],[1,158,10,58],[1,160,11,2],[1,162,13,2,"put"],[1,166,13,7],[1,175,13,17,"num"],[1,177,13,22,"length"],[1,180,14,4],[1,184,14,9],[1,188,14,13,"i"],[1,190,14,17],[1,192,14,20,"i"],[1,194,14,24,"length"],[1,196,14,32,"i"],[1,200,15,6,"this"],[1,205,15,11,"putBit"],[1,212,15,55],[1,216,15,20,"num"],[1,220,15,29,"length"],[1,222,15,38,"i"],[1,224,15,42],[1,226,15,48],[1,229,17,2],[1,231,19,2,"getLengthInBits"],[1,247,19,19],[1,258,20,4],[1,265,20,11,"this"],[1,270,20,16,"length"],[1,276,21,2],[1,278,23,2,"putBit"],[1,285,23,10],[1,294,23,20,"bit"],[1,297,24,4],[1,303,24,10,"bufIndex"],[1,305,24,21,"Math"],[1,310,24,26,"floor"],[1,316,24,32,"this"],[1,321,24,37,"length"],[1,328,24,46],[1,331,25,8,"this"],[1,336,25,13,"buffer"],[1,343,25,20,"length"],[1,351,25,30,"bufIndex"],[1,354,26,6,"this"],[1,359,26,11,"buffer"],[1,366,26,18,"push"],[1,371,26,23],[1,374,29,8,"bit"],[1,378,30,6,"this"],[1,383,30,11,"buffer"],[1,390,30,18,"bufIndex"],[1,394,30,32],[1,400,30,42,"this"],[1,405,30,47,"length"],[1,412,30,56],[1,415,33,4,"this"],[1,420,33,9,"length"],[1,428,34,2],[1,431,37,0,"module"],[1,433,37,7,"exports"],[1,441,37,17,"BitBuffer"],[1,442,37,26],[1,445]],"functionMap":{"names":["BitBuffer","<global>","BitBuffer.prototype.get","BitBuffer.prototype.put","BitBuffer.prototype.getLengthInBits","BitBuffer.prototype.putBit"],"mappings":"AAA;CCG;OCI;GDG;OEE;GFI;mBGE;GHE;UIE;GJW"}},"type":"js/module"}]}