{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":56,"index":108}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":57,"index":166}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":167},"end":{"line":4,"column":51,"index":218}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":219},"end":{"line":5,"column":170,"index":389}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":390},"end":{"line":6,"column":46,"index":436}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}},{"name":"../serialization.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":437},"end":{"line":7,"column":61,"index":498}}],"key":"levm6odmRGOGV1wbjXTCeUtq0fk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeMint2Instruction = createInitializeMint2Instruction;\n  exports.decodeInitializeMint2Instruction = decodeInitializeMint2Instruction;\n  exports.decodeInitializeMint2InstructionUnchecked = decodeInitializeMint2InstructionUnchecked;\n  exports.initializeMint2InstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _types = require(_dependencyMap[5], \"./types.js\");\n  var _serialization = require(_dependencyMap[6], \"../serialization.js\");\n  /** TODO: docs */\n  const initializeMint2InstructionData = exports.initializeMint2InstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('decimals'), (0, _bufferLayoutUtils.publicKey)('mintAuthority'), new _serialization.COptionPublicKeyLayout('freezeAuthority')]);\n  /**\n   * Construct an InitializeMint2 instruction\n   *\n   * @param mint            Token mint account\n   * @param decimals        Number of decimals in token account amounts\n   * @param mintAuthority   Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   * @param programId       SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeMint2Instruction(mint, decimals, mintAuthority, freezeAuthority, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(67); // worst-case size\n    initializeMint2InstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeMint2,\n      decimals,\n      mintAuthority,\n      freezeAuthority\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data: data.subarray(0, initializeMint2InstructionData.getSpan(data))\n    });\n  }\n  /**\n   * Decode an InitializeMint2 instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeMint2Instruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMint2InstructionData.getSpan(instruction.data)) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        mint\n      },\n      data\n    } = decodeInitializeMint2InstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeMint2) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!mint) throw new _errors.TokenInvalidInstructionKeysError();\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeMint2 instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeMint2InstructionUnchecked({\n    programId,\n    keys: [mint],\n    data\n  }) {\n    const {\n      instruction,\n      decimals,\n      mintAuthority,\n      freezeAuthority\n    } = initializeMint2InstructionData.decode(data);\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data: {\n        instruction,\n        decimals,\n        mintAuthority,\n        freezeAuthority\n      }\n    };\n  }\n});","lineCount":106,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,0],[15,6,7,0,"_serialization"],[15,20,7,0],[15,23,7,0,"require"],[15,30,7,0],[15,31,7,0,"_dependencyMap"],[15,45,7,0],[16,2,8,0],[17,2,9,7],[17,8,9,13,"initializeMint2InstructionData"],[17,38,9,43],[17,41,9,43,"exports"],[17,48,9,43],[17,49,9,43,"initializeMint2InstructionData"],[17,79,9,43],[17,82,9,46],[17,86,9,46,"struct"],[17,106,9,52],[17,108,9,53],[17,109,10,4],[17,113,10,4,"u8"],[17,129,10,6],[17,131,10,7],[17,144,10,20],[17,145,10,21],[17,147,11,4],[17,151,11,4,"u8"],[17,167,11,6],[17,169,11,7],[17,179,11,17],[17,180,11,18],[17,182,12,4],[17,186,12,4,"publicKey"],[17,214,12,13],[17,216,12,14],[17,231,12,29],[17,232,12,30],[17,234,13,4],[17,238,13,8,"COptionPublicKeyLayout"],[17,275,13,30],[17,276,13,31],[17,293,13,48],[17,294,13,49],[17,295,14,1],[17,296,14,2],[18,2,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,2,26,7],[29,11,26,16,"createInitializeMint2Instruction"],[29,43,26,48,"createInitializeMint2Instruction"],[29,44,26,49,"mint"],[29,48,26,53],[29,50,26,55,"decimals"],[29,58,26,63],[29,60,26,65,"mintAuthority"],[29,73,26,78],[29,75,26,80,"freezeAuthority"],[29,90,26,95],[29,92,26,97,"programId"],[29,101,26,106],[29,104,26,109,"TOKEN_PROGRAM_ID"],[29,131,26,125],[29,133,26,127],[30,4,27,4],[30,10,27,10,"keys"],[30,14,27,14],[30,17,27,17],[30,18,27,18],[31,6,27,20,"pubkey"],[31,12,27,26],[31,14,27,28,"mint"],[31,18,27,32],[32,6,27,34,"isSigner"],[32,14,27,42],[32,16,27,44],[32,21,27,49],[33,6,27,51,"isWritable"],[33,16,27,61],[33,18,27,63],[34,4,27,68],[34,5,27,69],[34,6,27,70],[35,4,28,4],[35,10,28,10,"data"],[35,14,28,14],[35,17,28,17,"Buffer"],[35,23,28,23],[35,24,28,24,"alloc"],[35,29,28,29],[35,30,28,30],[35,32,28,32],[35,33,28,33],[35,34,28,34],[35,35,28,35],[36,4,29,4,"initializeMint2InstructionData"],[36,34,29,34],[36,35,29,35,"encode"],[36,41,29,41],[36,42,29,42],[37,6,30,8,"instruction"],[37,17,30,19],[37,19,30,21,"TokenInstruction"],[37,42,30,37],[37,43,30,38,"InitializeMint2"],[37,58,30,53],[38,6,31,8,"decimals"],[38,14,31,16],[39,6,32,8,"mintAuthority"],[39,19,32,21],[40,6,33,8,"freezeAuthority"],[41,4,34,4],[41,5,34,5],[41,7,34,7,"data"],[41,11,34,11],[41,12,34,12],[42,4,35,4],[42,11,35,11],[42,15,35,15,"TransactionInstruction"],[42,42,35,37],[42,43,35,38],[43,6,36,8,"keys"],[43,10,36,12],[44,6,37,8,"programId"],[44,15,37,17],[45,6,38,8,"data"],[45,10,38,12],[45,12,38,14,"data"],[45,16,38,18],[45,17,38,19,"subarray"],[45,25,38,27],[45,26,38,28],[45,27,38,29],[45,29,38,31,"initializeMint2InstructionData"],[45,59,38,61],[45,60,38,62,"getSpan"],[45,67,38,69],[45,68,38,70,"data"],[45,72,38,74],[45,73,38,75],[46,4,39,4],[46,5,39,5],[46,6,39,6],[47,2,40,0],[48,2,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[56,2,49,7],[56,11,49,16,"decodeInitializeMint2Instruction"],[56,43,49,48,"decodeInitializeMint2Instruction"],[56,44,49,49,"instruction"],[56,55,49,60],[56,57,49,62,"programId"],[56,66,49,71],[56,69,49,74,"TOKEN_PROGRAM_ID"],[56,96,49,90],[56,98,49,92],[57,4,50,4],[57,8,50,8],[57,9,50,9,"instruction"],[57,20,50,20],[57,21,50,21,"programId"],[57,30,50,30],[57,31,50,31,"equals"],[57,37,50,37],[57,38,50,38,"programId"],[57,47,50,47],[57,48,50,48],[57,50,51,8],[57,56,51,14],[57,60,51,18,"TokenInvalidInstructionProgramError"],[57,103,51,53],[57,104,51,54],[57,105,51,55],[58,4,52,4],[58,8,52,8,"instruction"],[58,19,52,19],[58,20,52,20,"data"],[58,24,52,24],[58,25,52,25,"length"],[58,31,52,31],[58,36,52,36,"initializeMint2InstructionData"],[58,66,52,66],[58,67,52,67,"getSpan"],[58,74,52,74],[58,75,52,75,"instruction"],[58,86,52,86],[58,87,52,87,"data"],[58,91,52,91],[58,92,52,92],[58,94,53,8],[58,100,53,14],[58,104,53,18,"TokenInvalidInstructionDataError"],[58,144,53,50],[58,145,53,51],[58,146,53,52],[59,4,54,4],[59,10,54,10],[60,6,54,12,"keys"],[60,10,54,16],[60,12,54,18],[61,8,54,20,"mint"],[62,6,54,25],[62,7,54,26],[63,6,54,28,"data"],[64,4,54,34],[64,5,54,35],[64,8,54,38,"decodeInitializeMint2InstructionUnchecked"],[64,49,54,79],[64,50,54,80,"instruction"],[64,61,54,91],[64,62,54,92],[65,4,55,4],[65,8,55,8,"data"],[65,12,55,12],[65,13,55,13,"instruction"],[65,24,55,24],[65,29,55,29,"TokenInstruction"],[65,52,55,45],[65,53,55,46,"InitializeMint2"],[65,68,55,61],[65,70,56,8],[65,76,56,14],[65,80,56,18,"TokenInvalidInstructionTypeError"],[65,120,56,50],[65,121,56,51],[65,122,56,52],[66,4,57,4],[66,8,57,8],[66,9,57,9,"mint"],[66,13,57,13],[66,15,58,8],[66,21,58,14],[66,25,58,18,"TokenInvalidInstructionKeysError"],[66,65,58,50],[66,66,58,51],[66,67,58,52],[67,4,59,4],[67,11,59,11],[68,6,60,8,"programId"],[68,15,60,17],[69,6,61,8,"keys"],[69,10,61,12],[69,12,61,14],[70,8,62,12,"mint"],[71,6,63,8],[71,7,63,9],[72,6,64,8,"data"],[73,4,65,4],[73,5,65,5],[74,2,66,0],[75,2,67,0],[76,0,68,0],[77,0,69,0],[78,0,70,0],[79,0,71,0],[80,0,72,0],[81,0,73,0],[82,2,74,7],[82,11,74,16,"decodeInitializeMint2InstructionUnchecked"],[82,52,74,57,"decodeInitializeMint2InstructionUnchecked"],[82,53,74,58],[83,4,74,60,"programId"],[83,13,74,69],[84,4,74,71,"keys"],[84,8,74,75],[84,10,74,77],[84,11,74,78,"mint"],[84,15,74,82],[84,16,74,83],[85,4,74,85,"data"],[86,2,74,91],[86,3,74,92],[86,5,74,94],[87,4,75,4],[87,10,75,10],[88,6,75,12,"instruction"],[88,17,75,23],[89,6,75,25,"decimals"],[89,14,75,33],[90,6,75,35,"mintAuthority"],[90,19,75,48],[91,6,75,50,"freezeAuthority"],[92,4,75,66],[92,5,75,67],[92,8,75,70,"initializeMint2InstructionData"],[92,38,75,100],[92,39,75,101,"decode"],[92,45,75,107],[92,46,75,108,"data"],[92,50,75,112],[92,51,75,113],[93,4,76,4],[93,11,76,11],[94,6,77,8,"programId"],[94,15,77,17],[95,6,78,8,"keys"],[95,10,78,12],[95,12,78,14],[96,8,79,12,"mint"],[97,6,80,8],[97,7,80,9],[98,6,81,8,"data"],[98,10,81,12],[98,12,81,14],[99,8,82,12,"instruction"],[99,19,82,23],[100,8,83,12,"decimals"],[100,16,83,20],[101,8,84,12,"mintAuthority"],[101,21,84,25],[102,8,85,12,"freezeAuthority"],[103,6,86,8],[104,4,87,4],[104,5,87,5],[105,2,88,0],[106,0,88,1],[106,3]],"functionMap":{"names":["<global>","createInitializeMint2Instruction","decodeInitializeMint2Instruction","decodeInitializeMint2InstructionUnchecked"],"mappings":"AAA;OCyB;CDc;OES;CFiB;OGQ;CHc"}},"type":"js/module"}]}