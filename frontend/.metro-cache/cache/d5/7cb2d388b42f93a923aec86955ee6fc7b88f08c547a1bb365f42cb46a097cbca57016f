{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":51,"index":125}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/setAuthority.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":80,"index":206}}],"key":"NsOWfHNyGCMYO5eCtOobPQo3V9k=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":207},"end":{"line":4,"column":43,"index":250}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.setAuthority = setAuthority;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _setAuthority = require(_dependencyMap[2], \"../instructions/setAuthority.js\");\n  var _internal = require(_dependencyMap[3], \"./internal.js\");\n  /**\n   * Assign a new authority to the account\n   *\n   * @param connection       Connection to use\n   * @param payer            Payer of the transaction fees\n   * @param account          Address of the account\n   * @param currentAuthority Current authority of the specified type\n   * @param authorityType    Type of authority to set\n   * @param newAuthority     New authority of the account\n   * @param multiSigners     Signing accounts if `currentAuthority` is a multisig\n   * @param confirmOptions   Options for confirming the transaction\n   * @param programId        SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function setAuthority(connection, payer, account, currentAuthority, authorityType, newAuthority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_PROGRAM_ID) {\n    const [currentAuthorityPublicKey, signers] = (0, _internal.getSigners)(currentAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _setAuthority.createSetAuthorityInstruction)(account, currentAuthorityPublicKey, authorityType, newAuthority, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":30,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_setAuthority"],[8,19,3,0],[8,22,3,0,"require"],[8,29,3,0],[8,30,3,0,"_dependencyMap"],[8,44,3,0],[9,2,4,0],[9,6,4,0,"_internal"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,2,20,7],[25,17,20,22,"setAuthority"],[25,29,20,34,"setAuthority"],[25,30,20,35,"connection"],[25,40,20,45],[25,42,20,47,"payer"],[25,47,20,52],[25,49,20,54,"account"],[25,56,20,61],[25,58,20,63,"currentAuthority"],[25,74,20,79],[25,76,20,81,"authorityType"],[25,89,20,94],[25,91,20,96,"newAuthority"],[25,103,20,108],[25,105,20,110,"multiSigners"],[25,117,20,122],[25,120,20,125],[25,122,20,127],[25,124,20,129,"confirmOptions"],[25,138,20,143],[25,140,20,145,"programId"],[25,149,20,154],[25,152,20,157,"TOKEN_PROGRAM_ID"],[25,179,20,173],[25,181,20,175],[26,4,21,4],[26,10,21,10],[26,11,21,11,"currentAuthorityPublicKey"],[26,36,21,36],[26,38,21,38,"signers"],[26,45,21,45],[26,46,21,46],[26,49,21,49],[26,53,21,49,"getSigners"],[26,73,21,59],[26,75,21,60,"currentAuthority"],[26,91,21,76],[26,93,21,78,"multiSigners"],[26,105,21,90],[26,106,21,91],[27,4,22,4],[27,10,22,10,"transaction"],[27,21,22,21],[27,24,22,24],[27,28,22,28,"Transaction"],[27,44,22,39],[27,45,22,40],[27,46,22,41],[27,47,22,42,"add"],[27,50,22,45],[27,51,22,46],[27,55,22,46,"createSetAuthorityInstruction"],[27,98,22,75],[27,100,22,76,"account"],[27,107,22,83],[27,109,22,85,"currentAuthorityPublicKey"],[27,134,22,110],[27,136,22,112,"authorityType"],[27,149,22,125],[27,151,22,127,"newAuthority"],[27,163,22,139],[27,165,22,141,"multiSigners"],[27,177,22,153],[27,179,22,155,"programId"],[27,188,22,164],[27,189,22,165],[27,190,22,166],[28,4,23,4],[28,11,23,11],[28,17,23,17],[28,21,23,17,"sendAndConfirmTransaction"],[28,51,23,42],[28,53,23,43,"connection"],[28,63,23,53],[28,65,23,55,"transaction"],[28,76,23,66],[28,78,23,68],[28,79,23,69,"payer"],[28,84,23,74],[28,86,23,76],[28,89,23,79,"signers"],[28,96,23,86],[28,97,23,87],[28,99,23,89,"confirmOptions"],[28,113,23,103],[28,114,23,104],[29,2,24,0],[30,0,24,1],[30,3]],"functionMap":{"names":["<global>","setAuthority"],"mappings":"AAA;OCmB;CDI"}},"type":"js/module"}]}