{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./ExpoSecureStore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"ZudhOBNf0EF2ra5GBlE3UCprcN0=","exportNames":["*"]}},{"name":"./byteCounter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":70,"index":119}}],"key":"xUg5IjQU0cu+B0aJJMunpd3JZec=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY = exports.WHEN_UNLOCKED = exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = exports.ALWAYS_THIS_DEVICE_ONLY = exports.ALWAYS = exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = exports.AFTER_FIRST_UNLOCK = void 0;\n  exports.canUseBiometricAuthentication = canUseBiometricAuthentication;\n  exports.deleteItemAsync = deleteItemAsync;\n  exports.getItem = getItem;\n  exports.getItemAsync = getItemAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.setItem = setItem;\n  exports.setItemAsync = setItemAsync;\n  var _ExpoSecureStore = _interopRequireDefault(require(_dependencyMap[1], \"./ExpoSecureStore\"));\n  var _byteCounter = require(_dependencyMap[2], \"./byteCounter\");\n  // @needsAudit\n  /**\n   * The data in the keychain item cannot be accessed after a restart until the device has been\n   * unlocked once by the user. This may be useful if you need to access the item when the phone\n   * is locked.\n   */\n  const AFTER_FIRST_UNLOCK = exports.AFTER_FIRST_UNLOCK = _ExpoSecureStore.default.AFTER_FIRST_UNLOCK;\n  // @needsAudit\n  /**\n   * Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\n   * from a backup.\n   */\n  const AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = exports.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = _ExpoSecureStore.default.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * The data in the keychain item can always be accessed regardless of whether the device is locked.\n   * This is the least secure option.\n   *\n   * @deprecated Use an accessibility level that provides some user protection, such as `AFTER_FIRST_UNLOCK`.\n   */\n  const ALWAYS = exports.ALWAYS = _ExpoSecureStore.default.ALWAYS;\n  // @needsAudit\n  /**\n   * Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\n   * store an entry. If the user removes their passcode, the entry will be deleted.\n   */\n  const WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = exports.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = _ExpoSecureStore.default.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup.\n   *\n   * @deprecated Use an accessibility level that provides some user protection, such as `AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY`.\n   */\n  const ALWAYS_THIS_DEVICE_ONLY = exports.ALWAYS_THIS_DEVICE_ONLY = _ExpoSecureStore.default.ALWAYS_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * The data in the keychain item can be accessed only while the device is unlocked by the user.\n   */\n  const WHEN_UNLOCKED = exports.WHEN_UNLOCKED = _ExpoSecureStore.default.WHEN_UNLOCKED;\n  // @needsAudit\n  /**\n   * Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\n   * a backup.\n   */\n  const WHEN_UNLOCKED_THIS_DEVICE_ONLY = exports.WHEN_UNLOCKED_THIS_DEVICE_ONLY = _ExpoSecureStore.default.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n  // @needsAudit\n  /**\n   * Returns whether the SecureStore API is enabled on the current device. This does not check the app\n   * permissions.\n   *\n   * @return Promise which fulfils with a `boolean`, indicating whether the SecureStore API is available\n   * on the current device. Currently, this resolves `true` on Android and iOS only.\n   */\n  async function isAvailableAsync() {\n    return !!_ExpoSecureStore.default.getValueWithKeyAsync;\n  }\n  // @needsAudit\n  /**\n   * Delete the value associated with the provided key.\n   *\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that rejects if the value can't be deleted.\n   */\n  async function deleteItemAsync(key, options = {}) {\n    ensureValidKey(key);\n    await _ExpoSecureStore.default.deleteValueWithKeyAsync(key, options);\n  }\n  // @needsAudit\n  /**\n   * Reads the stored value associated with the provided key.\n   *\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that resolves to the previously stored value. It resolves with `null` if there is no entry\n   * for the given key or if the key has been invalidated. It rejects if an error occurs while retrieving the value.\n   *\n   * > Keys are invalidated by the system when biometrics change, such as adding a new fingerprint or changing the face profile used for face recognition.\n   * > After a key has been invalidated, it becomes impossible to read its value.\n   * > This only applies to values stored with `requireAuthentication` set to `true`.\n   */\n  async function getItemAsync(key, options = {}) {\n    ensureValidKey(key);\n    return await _ExpoSecureStore.default.getValueWithKeyAsync(key, options);\n  }\n  // @needsAudit\n  /**\n   * Stores a key–value pair.\n   *\n   * @param key The key to associate with the stored value. Keys may contain alphanumeric characters, `.`, `-`, and `_`.\n   * @param value The value to store. Size limit is 2048 bytes.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return A promise that rejects if value cannot be stored on the device.\n   */\n  async function setItemAsync(key, value, options = {}) {\n    ensureValidKey(key);\n    if (!isValidValue(value)) {\n      throw new Error(`Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`);\n    }\n    await _ExpoSecureStore.default.setValueWithKeyAsync(value, key, options);\n  }\n  /**\n   * Stores a key–value pair synchronously.\n   * > **Note:** This function blocks the JavaScript thread, so the application may not be interactive when the `requireAuthentication` option is set to `true` until the user authenticates.\n   *\n   * @param key The key to associate with the stored value. Keys may contain alphanumeric characters, `.`, `-`, and `_`.\n   * @param value The value to store. Size limit is 2048 bytes.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   */\n  function setItem(key, value, options = {}) {\n    ensureValidKey(key);\n    if (!isValidValue(value)) {\n      throw new Error(`Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`);\n    }\n    return _ExpoSecureStore.default.setValueWithKeySync(value, key, options);\n  }\n  /**\n   * Synchronously reads the stored value associated with the provided key.\n   * > **Note:** This function blocks the JavaScript thread, so the application may not be interactive when reading a value with `requireAuthentication`\n   * > option set to `true` until the user authenticates.\n   * @param key The key that was used to store the associated value.\n   * @param options An [`SecureStoreOptions`](#securestoreoptions) object.\n   *\n   * @return Previously stored value. It resolves with `null` if there is no entry\n   * for the given key or if the key has been invalidated.\n   */\n  function getItem(key, options = {}) {\n    ensureValidKey(key);\n    return _ExpoSecureStore.default.getValueWithKeySync(key, options);\n  }\n  /**\n   * Checks if the value can be saved with `requireAuthentication` option enabled.\n   * @return `true` if the device supports biometric authentication and the enrolled method is sufficiently secure. Otherwise, returns `false`. Always returns false on tvOS.\n   * @platform android\n   * @platform ios\n   */\n  function canUseBiometricAuthentication() {\n    return _ExpoSecureStore.default.canUseBiometricAuthentication();\n  }\n  function ensureValidKey(key) {\n    if (!isValidKey(key)) {\n      throw new Error(`Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \".\", \"-\", and \"_\".`);\n    }\n  }\n  function isValidKey(key) {\n    return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n  }\n  function isValidValue(value) {\n    if (typeof value !== 'string') {\n      return false;\n    }\n    if ((0, _byteCounter.byteCountOverLimit)(value, _byteCounter.VALUE_BYTES_LIMIT)) {\n      console.warn(`Value being stored in SecureStore is larger than ${_byteCounter.VALUE_BYTES_LIMIT} bytes and it may not be stored successfully. In a future SDK version, this call may throw an error.`);\n    }\n    return true;\n  }\n});","lineCount":176,"map":[[14,2,1,0],[14,6,1,0,"_ExpoSecureStore"],[14,22,1,0],[14,25,1,0,"_interopRequireDefault"],[14,47,1,0],[14,48,1,0,"require"],[14,55,1,0],[14,56,1,0,"_dependencyMap"],[14,70,1,0],[15,2,2,0],[15,6,2,0,"_byteCounter"],[15,18,2,0],[15,21,2,0,"require"],[15,28,2,0],[15,29,2,0,"_dependencyMap"],[15,43,2,0],[16,2,3,0],[17,2,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[21,0,8,0],[22,2,9,7],[22,8,9,13,"AFTER_FIRST_UNLOCK"],[22,26,9,31],[22,29,9,31,"exports"],[22,36,9,31],[22,37,9,31,"AFTER_FIRST_UNLOCK"],[22,55,9,31],[22,58,9,34,"ExpoSecureStore"],[22,82,9,49],[22,83,9,50,"AFTER_FIRST_UNLOCK"],[22,101,9,68],[23,2,10,0],[24,2,11,0],[25,0,12,0],[26,0,13,0],[27,0,14,0],[28,2,15,7],[28,8,15,13,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[28,43,15,48],[28,46,15,48,"exports"],[28,53,15,48],[28,54,15,48,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[28,89,15,48],[28,92,15,51,"ExpoSecureStore"],[28,116,15,66],[28,117,15,67,"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"],[28,152,15,102],[29,2,16,0],[30,2,17,0],[31,0,18,0],[32,0,19,0],[33,0,20,0],[34,0,21,0],[35,0,22,0],[36,2,23,7],[36,8,23,13,"ALWAYS"],[36,14,23,19],[36,17,23,19,"exports"],[36,24,23,19],[36,25,23,19,"ALWAYS"],[36,31,23,19],[36,34,23,22,"ExpoSecureStore"],[36,58,23,37],[36,59,23,38,"ALWAYS"],[36,65,23,44],[37,2,24,0],[38,2,25,0],[39,0,26,0],[40,0,27,0],[41,0,28,0],[42,2,29,7],[42,8,29,13,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[42,42,29,47],[42,45,29,47,"exports"],[42,52,29,47],[42,53,29,47,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[42,87,29,47],[42,90,29,50,"ExpoSecureStore"],[42,114,29,65],[42,115,29,66,"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"],[42,149,29,100],[43,2,30,0],[44,2,31,0],[45,0,32,0],[46,0,33,0],[47,0,34,0],[48,0,35,0],[49,2,36,7],[49,8,36,13,"ALWAYS_THIS_DEVICE_ONLY"],[49,31,36,36],[49,34,36,36,"exports"],[49,41,36,36],[49,42,36,36,"ALWAYS_THIS_DEVICE_ONLY"],[49,65,36,36],[49,68,36,39,"ExpoSecureStore"],[49,92,36,54],[49,93,36,55,"ALWAYS_THIS_DEVICE_ONLY"],[49,116,36,78],[50,2,37,0],[51,2,38,0],[52,0,39,0],[53,0,40,0],[54,2,41,7],[54,8,41,13,"WHEN_UNLOCKED"],[54,21,41,26],[54,24,41,26,"exports"],[54,31,41,26],[54,32,41,26,"WHEN_UNLOCKED"],[54,45,41,26],[54,48,41,29,"ExpoSecureStore"],[54,72,41,44],[54,73,41,45,"WHEN_UNLOCKED"],[54,86,41,58],[55,2,42,0],[56,2,43,0],[57,0,44,0],[58,0,45,0],[59,0,46,0],[60,2,47,7],[60,8,47,13,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[60,38,47,43],[60,41,47,43,"exports"],[60,48,47,43],[60,49,47,43,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[60,79,47,43],[60,82,47,46,"ExpoSecureStore"],[60,106,47,61],[60,107,47,62,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[60,137,47,92],[61,2,48,0],[62,2,49,0],[63,0,50,0],[64,0,51,0],[65,0,52,0],[66,0,53,0],[67,0,54,0],[68,0,55,0],[69,2,56,7],[69,17,56,22,"isAvailableAsync"],[69,33,56,38,"isAvailableAsync"],[69,34,56,38],[69,36,56,41],[70,4,57,4],[70,11,57,11],[70,12,57,12],[70,13,57,13,"ExpoSecureStore"],[70,37,57,28],[70,38,57,29,"getValueWithKeyAsync"],[70,58,57,49],[71,2,58,0],[72,2,59,0],[73,2,60,0],[74,0,61,0],[75,0,62,0],[76,0,63,0],[77,0,64,0],[78,0,65,0],[79,0,66,0],[80,0,67,0],[81,2,68,7],[81,17,68,22,"deleteItemAsync"],[81,32,68,37,"deleteItemAsync"],[81,33,68,38,"key"],[81,36,68,41],[81,38,68,43,"options"],[81,45,68,50],[81,48,68,53],[81,49,68,54],[81,50,68,55],[81,52,68,57],[82,4,69,4,"ensureValidKey"],[82,18,69,18],[82,19,69,19,"key"],[82,22,69,22],[82,23,69,23],[83,4,70,4],[83,10,70,10,"ExpoSecureStore"],[83,34,70,25],[83,35,70,26,"deleteValueWithKeyAsync"],[83,58,70,49],[83,59,70,50,"key"],[83,62,70,53],[83,64,70,55,"options"],[83,71,70,62],[83,72,70,63],[84,2,71,0],[85,2,72,0],[86,2,73,0],[87,0,74,0],[88,0,75,0],[89,0,76,0],[90,0,77,0],[91,0,78,0],[92,0,79,0],[93,0,80,0],[94,0,81,0],[95,0,82,0],[96,0,83,0],[97,0,84,0],[98,0,85,0],[99,2,86,7],[99,17,86,22,"getItemAsync"],[99,29,86,34,"getItemAsync"],[99,30,86,35,"key"],[99,33,86,38],[99,35,86,40,"options"],[99,42,86,47],[99,45,86,50],[99,46,86,51],[99,47,86,52],[99,49,86,54],[100,4,87,4,"ensureValidKey"],[100,18,87,18],[100,19,87,19,"key"],[100,22,87,22],[100,23,87,23],[101,4,88,4],[101,11,88,11],[101,17,88,17,"ExpoSecureStore"],[101,41,88,32],[101,42,88,33,"getValueWithKeyAsync"],[101,62,88,53],[101,63,88,54,"key"],[101,66,88,57],[101,68,88,59,"options"],[101,75,88,66],[101,76,88,67],[102,2,89,0],[103,2,90,0],[104,2,91,0],[105,0,92,0],[106,0,93,0],[107,0,94,0],[108,0,95,0],[109,0,96,0],[110,0,97,0],[111,0,98,0],[112,0,99,0],[113,2,100,7],[113,17,100,22,"setItemAsync"],[113,29,100,34,"setItemAsync"],[113,30,100,35,"key"],[113,33,100,38],[113,35,100,40,"value"],[113,40,100,45],[113,42,100,47,"options"],[113,49,100,54],[113,52,100,57],[113,53,100,58],[113,54,100,59],[113,56,100,61],[114,4,101,4,"ensureValidKey"],[114,18,101,18],[114,19,101,19,"key"],[114,22,101,22],[114,23,101,23],[115,4,102,4],[115,8,102,8],[115,9,102,9,"isValidValue"],[115,21,102,21],[115,22,102,22,"value"],[115,27,102,27],[115,28,102,28],[115,30,102,30],[116,6,103,8],[116,12,103,14],[116,16,103,18,"Error"],[116,21,103,23],[116,22,103,24],[116,147,103,149],[116,148,103,150],[117,4,104,4],[118,4,105,4],[118,10,105,10,"ExpoSecureStore"],[118,34,105,25],[118,35,105,26,"setValueWithKeyAsync"],[118,55,105,46],[118,56,105,47,"value"],[118,61,105,52],[118,63,105,54,"key"],[118,66,105,57],[118,68,105,59,"options"],[118,75,105,66],[118,76,105,67],[119,2,106,0],[120,2,107,0],[121,0,108,0],[122,0,109,0],[123,0,110,0],[124,0,111,0],[125,0,112,0],[126,0,113,0],[127,0,114,0],[128,0,115,0],[129,2,116,7],[129,11,116,16,"setItem"],[129,18,116,23,"setItem"],[129,19,116,24,"key"],[129,22,116,27],[129,24,116,29,"value"],[129,29,116,34],[129,31,116,36,"options"],[129,38,116,43],[129,41,116,46],[129,42,116,47],[129,43,116,48],[129,45,116,50],[130,4,117,4,"ensureValidKey"],[130,18,117,18],[130,19,117,19,"key"],[130,22,117,22],[130,23,117,23],[131,4,118,4],[131,8,118,8],[131,9,118,9,"isValidValue"],[131,21,118,21],[131,22,118,22,"value"],[131,27,118,27],[131,28,118,28],[131,30,118,30],[132,6,119,8],[132,12,119,14],[132,16,119,18,"Error"],[132,21,119,23],[132,22,119,24],[132,147,119,149],[132,148,119,150],[133,4,120,4],[134,4,121,4],[134,11,121,11,"ExpoSecureStore"],[134,35,121,26],[134,36,121,27,"setValueWithKeySync"],[134,55,121,46],[134,56,121,47,"value"],[134,61,121,52],[134,63,121,54,"key"],[134,66,121,57],[134,68,121,59,"options"],[134,75,121,66],[134,76,121,67],[135,2,122,0],[136,2,123,0],[137,0,124,0],[138,0,125,0],[139,0,126,0],[140,0,127,0],[141,0,128,0],[142,0,129,0],[143,0,130,0],[144,0,131,0],[145,0,132,0],[146,2,133,7],[146,11,133,16,"getItem"],[146,18,133,23,"getItem"],[146,19,133,24,"key"],[146,22,133,27],[146,24,133,29,"options"],[146,31,133,36],[146,34,133,39],[146,35,133,40],[146,36,133,41],[146,38,133,43],[147,4,134,4,"ensureValidKey"],[147,18,134,18],[147,19,134,19,"key"],[147,22,134,22],[147,23,134,23],[148,4,135,4],[148,11,135,11,"ExpoSecureStore"],[148,35,135,26],[148,36,135,27,"getValueWithKeySync"],[148,55,135,46],[148,56,135,47,"key"],[148,59,135,50],[148,61,135,52,"options"],[148,68,135,59],[148,69,135,60],[149,2,136,0],[150,2,137,0],[151,0,138,0],[152,0,139,0],[153,0,140,0],[154,0,141,0],[155,0,142,0],[156,2,143,7],[156,11,143,16,"canUseBiometricAuthentication"],[156,40,143,45,"canUseBiometricAuthentication"],[156,41,143,45],[156,43,143,48],[157,4,144,4],[157,11,144,11,"ExpoSecureStore"],[157,35,144,26],[157,36,144,27,"canUseBiometricAuthentication"],[157,65,144,56],[157,66,144,57],[157,67,144,58],[158,2,145,0],[159,2,146,0],[159,11,146,9,"ensureValidKey"],[159,25,146,23,"ensureValidKey"],[159,26,146,24,"key"],[159,29,146,27],[159,31,146,29],[160,4,147,4],[160,8,147,8],[160,9,147,9,"isValidKey"],[160,19,147,19],[160,20,147,20,"key"],[160,23,147,23],[160,24,147,24],[160,26,147,26],[161,6,148,8],[161,12,148,14],[161,16,148,18,"Error"],[161,21,148,23],[161,22,148,24],[161,144,148,146],[161,145,148,147],[162,4,149,4],[163,2,150,0],[164,2,151,0],[164,11,151,9,"isValidKey"],[164,21,151,19,"isValidKey"],[164,22,151,20,"key"],[164,25,151,23],[164,27,151,25],[165,4,152,4],[165,11,152,11],[165,18,152,18,"key"],[165,21,152,21],[165,26,152,26],[165,34,152,34],[165,38,152,38],[165,49,152,49],[165,50,152,50,"test"],[165,54,152,54],[165,55,152,55,"key"],[165,58,152,58],[165,59,152,59],[166,2,153,0],[167,2,154,0],[167,11,154,9,"isValidValue"],[167,23,154,21,"isValidValue"],[167,24,154,22,"value"],[167,29,154,27],[167,31,154,29],[168,4,155,4],[168,8,155,8],[168,15,155,15,"value"],[168,20,155,20],[168,25,155,25],[168,33,155,33],[168,35,155,35],[169,6,156,8],[169,13,156,15],[169,18,156,20],[170,4,157,4],[171,4,158,4],[171,8,158,8],[171,12,158,8,"byteCountOverLimit"],[171,43,158,26],[171,45,158,27,"value"],[171,50,158,32],[171,52,158,34,"VALUE_BYTES_LIMIT"],[171,82,158,51],[171,83,158,52],[171,85,158,54],[172,6,159,8,"console"],[172,13,159,15],[172,14,159,16,"warn"],[172,18,159,20],[172,19,159,21],[172,71,159,73,"VALUE_BYTES_LIMIT"],[172,101,159,90],[172,203,159,192],[172,204,159,193],[173,4,160,4],[174,4,161,4],[174,11,161,11],[174,15,161,15],[175,2,162,0],[176,0,162,1],[176,3]],"functionMap":{"names":["<global>","isAvailableAsync","deleteItemAsync","getItemAsync","setItemAsync","setItem","getItem","canUseBiometricAuthentication","ensureValidKey","isValidKey","isValidValue"],"mappings":"AAA;OCuD;CDE;OEU;CFG;OGe;CHG;OIW;CJM;OKU;CLM;OMW;CNG;OOO;CPE;AQC;CRI;ASC;CTE;AUC;CVQ"}},"type":"js/module"}]}