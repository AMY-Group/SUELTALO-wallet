{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":35,"index":139}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"elliptic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":9,"index":184},"end":{"line":6,"column":28,"index":203}}],"key":"h6RIsoF9GgRhyZAr3TXxz6R4meA=","exportNames":["*"]}},{"name":"parse-asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":224},"end":{"line":7,"column":37,"index":245}}],"key":"COzMkWIbbKvXpM5KBuLue1rYJxE=","exportNames":["*"]}},{"name":"./curves.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":260},"end":{"line":8,"column":37,"index":284}}],"key":"asYIj/9Lslhm8Hnwqpi8fA5Jt4c=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\n  var Buffer = require(_dependencyMap[0], \"safe-buffer\").Buffer;\n  var BN = require(_dependencyMap[1], \"bn.js\");\n  var EC = require(_dependencyMap[2], \"elliptic\").ec;\n  var parseKeys = require(_dependencyMap[3], \"parse-asn1\");\n  var curves = require(_dependencyMap[4], \"./curves.json\");\n  function verify(sig, hash, key, signType, tag) {\n    var pub = parseKeys(key);\n    if (pub.type === 'ec') {\n      // rsa keys can be interpreted as ecdsa ones in openssl\n      if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') {\n        throw new Error('wrong public key type');\n      }\n      return ecVerify(sig, hash, pub);\n    } else if (pub.type === 'dsa') {\n      if (signType !== 'dsa') {\n        throw new Error('wrong public key type');\n      }\n      return dsaVerify(sig, hash, pub);\n    }\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') {\n      throw new Error('wrong public key type');\n    }\n    hash = Buffer.concat([tag, hash]);\n    var len = pub.modulus.byteLength();\n    var pad = [1];\n    var padNum = 0;\n    while (hash.length + pad.length + 2 < len) {\n      pad.push(0xff);\n      padNum += 1;\n    }\n    pad.push(0x00);\n    var i = -1;\n    while (++i < hash.length) {\n      pad.push(hash[i]);\n    }\n    pad = Buffer.from(pad);\n    var red = BN.mont(pub.modulus);\n    sig = new BN(sig).toRed(red);\n    sig = sig.redPow(new BN(pub.publicExponent));\n    sig = Buffer.from(sig.fromRed().toArray());\n    var out = padNum < 8 ? 1 : 0;\n    len = Math.min(sig.length, pad.length);\n    if (sig.length !== pad.length) {\n      out = 1;\n    }\n    i = -1;\n    while (++i < len) {\n      out |= sig[i] ^ pad[i];\n    }\n    return out === 0;\n  }\n  function ecVerify(sig, hash, pub) {\n    var curveId = curves[pub.data.algorithm.curve.join('.')];\n    if (!curveId) {\n      throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));\n    }\n    var curve = new EC(curveId);\n    var pubkey = pub.data.subjectPrivateKey.data;\n    return curve.verify(hash, sig, pubkey);\n  }\n  function dsaVerify(sig, hash, pub) {\n    var p = pub.data.p;\n    var q = pub.data.q;\n    var g = pub.data.g;\n    var y = pub.data.pub_key;\n    var unpacked = parseKeys.signature.decode(sig, 'der');\n    var s = unpacked.s;\n    var r = unpacked.r;\n    checkValue(s, q);\n    checkValue(r, q);\n    var montp = BN.mont(p);\n    var w = s.invm(q);\n    var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);\n    return v.cmp(r) === 0;\n  }\n  function checkValue(b, q) {\n    if (b.cmpn(0) <= 0) {\n      throw new Error('invalid sig');\n    }\n    if (b.cmp(q) >= 0) {\n      throw new Error('invalid sig');\n    }\n  }\n  module.exports = verify;\n});","lineCount":89,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[5,6,4,4,"Buffer"],[5,12,4,10],[5,15,4,13,"require"],[5,22,4,20],[5,23,4,20,"_dependencyMap"],[5,37,4,20],[5,55,4,34],[5,56,4,35],[5,57,4,36,"Buffer"],[5,63,4,42],[6,2,5,0],[6,6,5,4,"BN"],[6,8,5,6],[6,11,5,9,"require"],[6,18,5,16],[6,19,5,16,"_dependencyMap"],[6,33,5,16],[6,45,5,24],[6,46,5,25],[7,2,6,0],[7,6,6,4,"EC"],[7,8,6,6],[7,11,6,9,"require"],[7,18,6,16],[7,19,6,16,"_dependencyMap"],[7,33,6,16],[7,48,6,27],[7,49,6,28],[7,50,6,29,"ec"],[7,52,6,31],[8,2,7,0],[8,6,7,4,"parseKeys"],[8,15,7,13],[8,18,7,16,"require"],[8,25,7,23],[8,26,7,23,"_dependencyMap"],[8,40,7,23],[8,57,7,36],[8,58,7,37],[9,2,8,0],[9,6,8,4,"curves"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,57,8,36],[9,58,8,37],[10,2,10,0],[10,11,10,9,"verify"],[10,17,10,15,"verify"],[10,18,10,16,"sig"],[10,21,10,19],[10,23,10,21,"hash"],[10,27,10,25],[10,29,10,27,"key"],[10,32,10,30],[10,34,10,32,"signType"],[10,42,10,40],[10,44,10,42,"tag"],[10,47,10,45],[10,49,10,47],[11,4,11,2],[11,8,11,6,"pub"],[11,11,11,9],[11,14,11,12,"parseKeys"],[11,23,11,21],[11,24,11,22,"key"],[11,27,11,25],[11,28,11,26],[12,4,12,2],[12,8,12,6,"pub"],[12,11,12,9],[12,12,12,10,"type"],[12,16,12,14],[12,21,12,19],[12,25,12,23],[12,27,12,25],[13,6,13,4],[14,6,14,4],[14,10,14,8,"signType"],[14,18,14,16],[14,23,14,21],[14,30,14,28],[14,34,14,32,"signType"],[14,42,14,40],[14,47,14,45],[14,58,14,56],[14,60,14,58],[15,8,14,60],[15,14,14,66],[15,18,14,70,"Error"],[15,23,14,75],[15,24,14,76],[15,47,14,99],[15,48,14,100],[16,6,14,102],[17,6,15,4],[17,13,15,11,"ecVerify"],[17,21,15,19],[17,22,15,20,"sig"],[17,25,15,23],[17,27,15,25,"hash"],[17,31,15,29],[17,33,15,31,"pub"],[17,36,15,34],[17,37,15,35],[18,4,16,2],[18,5,16,3],[18,11,16,9],[18,15,16,13,"pub"],[18,18,16,16],[18,19,16,17,"type"],[18,23,16,21],[18,28,16,26],[18,33,16,31],[18,35,16,33],[19,6,17,4],[19,10,17,8,"signType"],[19,18,17,16],[19,23,17,21],[19,28,17,26],[19,30,17,28],[20,8,17,30],[20,14,17,36],[20,18,17,40,"Error"],[20,23,17,45],[20,24,17,46],[20,47,17,69],[20,48,17,70],[21,6,17,72],[22,6,18,4],[22,13,18,11,"dsaVerify"],[22,22,18,20],[22,23,18,21,"sig"],[22,26,18,24],[22,28,18,26,"hash"],[22,32,18,30],[22,34,18,32,"pub"],[22,37,18,35],[22,38,18,36],[23,4,19,2],[24,4,20,2],[24,8,20,6,"signType"],[24,16,20,14],[24,21,20,19],[24,26,20,24],[24,30,20,28,"signType"],[24,38,20,36],[24,43,20,41],[24,54,20,52],[24,56,20,54],[25,6,20,56],[25,12,20,62],[25,16,20,66,"Error"],[25,21,20,71],[25,22,20,72],[25,45,20,95],[25,46,20,96],[26,4,20,98],[27,4,22,2,"hash"],[27,8,22,6],[27,11,22,9,"Buffer"],[27,17,22,15],[27,18,22,16,"concat"],[27,24,22,22],[27,25,22,23],[27,26,22,24,"tag"],[27,29,22,27],[27,31,22,29,"hash"],[27,35,22,33],[27,36,22,34],[27,37,22,35],[28,4,23,2],[28,8,23,6,"len"],[28,11,23,9],[28,14,23,12,"pub"],[28,17,23,15],[28,18,23,16,"modulus"],[28,25,23,23],[28,26,23,24,"byteLength"],[28,36,23,34],[28,37,23,35],[28,38,23,36],[29,4,24,2],[29,8,24,6,"pad"],[29,11,24,9],[29,14,24,12],[29,15,24,13],[29,16,24,14],[29,17,24,15],[30,4,25,2],[30,8,25,6,"padNum"],[30,14,25,12],[30,17,25,15],[30,18,25,16],[31,4,26,2],[31,11,26,9,"hash"],[31,15,26,13],[31,16,26,14,"length"],[31,22,26,20],[31,25,26,23,"pad"],[31,28,26,26],[31,29,26,27,"length"],[31,35,26,33],[31,38,26,36],[31,39,26,37],[31,42,26,40,"len"],[31,45,26,43],[31,47,26,45],[32,6,27,4,"pad"],[32,9,27,7],[32,10,27,8,"push"],[32,14,27,12],[32,15,27,13],[32,19,27,17],[32,20,27,18],[33,6,28,4,"padNum"],[33,12,28,10],[33,16,28,14],[33,17,28,15],[34,4,29,2],[35,4,30,2,"pad"],[35,7,30,5],[35,8,30,6,"push"],[35,12,30,10],[35,13,30,11],[35,17,30,15],[35,18,30,16],[36,4,31,2],[36,8,31,6,"i"],[36,9,31,7],[36,12,31,10],[36,13,31,11],[36,14,31,12],[37,4,32,2],[37,11,32,9],[37,13,32,11,"i"],[37,14,32,12],[37,17,32,15,"hash"],[37,21,32,19],[37,22,32,20,"length"],[37,28,32,26],[37,30,32,28],[38,6,33,4,"pad"],[38,9,33,7],[38,10,33,8,"push"],[38,14,33,12],[38,15,33,13,"hash"],[38,19,33,17],[38,20,33,18,"i"],[38,21,33,19],[38,22,33,20],[38,23,33,21],[39,4,34,2],[40,4,35,2,"pad"],[40,7,35,5],[40,10,35,8,"Buffer"],[40,16,35,14],[40,17,35,15,"from"],[40,21,35,19],[40,22,35,20,"pad"],[40,25,35,23],[40,26,35,24],[41,4,36,2],[41,8,36,6,"red"],[41,11,36,9],[41,14,36,12,"BN"],[41,16,36,14],[41,17,36,15,"mont"],[41,21,36,19],[41,22,36,20,"pub"],[41,25,36,23],[41,26,36,24,"modulus"],[41,33,36,31],[41,34,36,32],[42,4,37,2,"sig"],[42,7,37,5],[42,10,37,8],[42,14,37,12,"BN"],[42,16,37,14],[42,17,37,15,"sig"],[42,20,37,18],[42,21,37,19],[42,22,37,20,"toRed"],[42,27,37,25],[42,28,37,26,"red"],[42,31,37,29],[42,32,37,30],[43,4,39,2,"sig"],[43,7,39,5],[43,10,39,8,"sig"],[43,13,39,11],[43,14,39,12,"redPow"],[43,20,39,18],[43,21,39,19],[43,25,39,23,"BN"],[43,27,39,25],[43,28,39,26,"pub"],[43,31,39,29],[43,32,39,30,"publicExponent"],[43,46,39,44],[43,47,39,45],[43,48,39,46],[44,4,40,2,"sig"],[44,7,40,5],[44,10,40,8,"Buffer"],[44,16,40,14],[44,17,40,15,"from"],[44,21,40,19],[44,22,40,20,"sig"],[44,25,40,23],[44,26,40,24,"fromRed"],[44,33,40,31],[44,34,40,32],[44,35,40,33],[44,36,40,34,"toArray"],[44,43,40,41],[44,44,40,42],[44,45,40,43],[44,46,40,44],[45,4,41,2],[45,8,41,6,"out"],[45,11,41,9],[45,14,41,12,"padNum"],[45,20,41,18],[45,23,41,21],[45,24,41,22],[45,27,41,25],[45,28,41,26],[45,31,41,29],[45,32,41,30],[46,4,42,2,"len"],[46,7,42,5],[46,10,42,8,"Math"],[46,14,42,12],[46,15,42,13,"min"],[46,18,42,16],[46,19,42,17,"sig"],[46,22,42,20],[46,23,42,21,"length"],[46,29,42,27],[46,31,42,29,"pad"],[46,34,42,32],[46,35,42,33,"length"],[46,41,42,39],[46,42,42,40],[47,4,43,2],[47,8,43,6,"sig"],[47,11,43,9],[47,12,43,10,"length"],[47,18,43,16],[47,23,43,21,"pad"],[47,26,43,24],[47,27,43,25,"length"],[47,33,43,31],[47,35,43,33],[48,6,43,35,"out"],[48,9,43,38],[48,12,43,41],[48,13,43,42],[49,4,43,44],[50,4,45,2,"i"],[50,5,45,3],[50,8,45,6],[50,9,45,7],[50,10,45,8],[51,4,46,2],[51,11,46,9],[51,13,46,11,"i"],[51,14,46,12],[51,17,46,15,"len"],[51,20,46,18],[51,22,46,20],[52,6,46,22,"out"],[52,9,46,25],[52,13,46,29,"sig"],[52,16,46,32],[52,17,46,33,"i"],[52,18,46,34],[52,19,46,35],[52,22,46,38,"pad"],[52,25,46,41],[52,26,46,42,"i"],[52,27,46,43],[52,28,46,44],[53,4,46,46],[54,4,47,2],[54,11,47,9,"out"],[54,14,47,12],[54,19,47,17],[54,20,47,18],[55,2,48,0],[56,2,50,0],[56,11,50,9,"ecVerify"],[56,19,50,17,"ecVerify"],[56,20,50,18,"sig"],[56,23,50,21],[56,25,50,23,"hash"],[56,29,50,27],[56,31,50,29,"pub"],[56,34,50,32],[56,36,50,34],[57,4,51,2],[57,8,51,6,"curveId"],[57,15,51,13],[57,18,51,16,"curves"],[57,24,51,22],[57,25,51,23,"pub"],[57,28,51,26],[57,29,51,27,"data"],[57,33,51,31],[57,34,51,32,"algorithm"],[57,43,51,41],[57,44,51,42,"curve"],[57,49,51,47],[57,50,51,48,"join"],[57,54,51,52],[57,55,51,53],[57,58,51,56],[57,59,51,57],[57,60,51,58],[58,4,52,2],[58,8,52,6],[58,9,52,7,"curveId"],[58,16,52,14],[58,18,52,16],[59,6,52,18],[59,12,52,24],[59,16,52,28,"Error"],[59,21,52,33],[59,22,52,34],[59,38,52,50],[59,41,52,53,"pub"],[59,44,52,56],[59,45,52,57,"data"],[59,49,52,61],[59,50,52,62,"algorithm"],[59,59,52,71],[59,60,52,72,"curve"],[59,65,52,77],[59,66,52,78,"join"],[59,70,52,82],[59,71,52,83],[59,74,52,86],[59,75,52,87],[59,76,52,88],[60,4,52,90],[61,4,54,2],[61,8,54,6,"curve"],[61,13,54,11],[61,16,54,14],[61,20,54,18,"EC"],[61,22,54,20],[61,23,54,21,"curveId"],[61,30,54,28],[61,31,54,29],[62,4,55,2],[62,8,55,6,"pubkey"],[62,14,55,12],[62,17,55,15,"pub"],[62,20,55,18],[62,21,55,19,"data"],[62,25,55,23],[62,26,55,24,"subjectPrivateKey"],[62,43,55,41],[62,44,55,42,"data"],[62,48,55,46],[63,4,57,2],[63,11,57,9,"curve"],[63,16,57,14],[63,17,57,15,"verify"],[63,23,57,21],[63,24,57,22,"hash"],[63,28,57,26],[63,30,57,28,"sig"],[63,33,57,31],[63,35,57,33,"pubkey"],[63,41,57,39],[63,42,57,40],[64,2,58,0],[65,2,60,0],[65,11,60,9,"dsaVerify"],[65,20,60,18,"dsaVerify"],[65,21,60,19,"sig"],[65,24,60,22],[65,26,60,24,"hash"],[65,30,60,28],[65,32,60,30,"pub"],[65,35,60,33],[65,37,60,35],[66,4,61,2],[66,8,61,6,"p"],[66,9,61,7],[66,12,61,10,"pub"],[66,15,61,13],[66,16,61,14,"data"],[66,20,61,18],[66,21,61,19,"p"],[66,22,61,20],[67,4,62,2],[67,8,62,6,"q"],[67,9,62,7],[67,12,62,10,"pub"],[67,15,62,13],[67,16,62,14,"data"],[67,20,62,18],[67,21,62,19,"q"],[67,22,62,20],[68,4,63,2],[68,8,63,6,"g"],[68,9,63,7],[68,12,63,10,"pub"],[68,15,63,13],[68,16,63,14,"data"],[68,20,63,18],[68,21,63,19,"g"],[68,22,63,20],[69,4,64,2],[69,8,64,6,"y"],[69,9,64,7],[69,12,64,10,"pub"],[69,15,64,13],[69,16,64,14,"data"],[69,20,64,18],[69,21,64,19,"pub_key"],[69,28,64,26],[70,4,65,2],[70,8,65,6,"unpacked"],[70,16,65,14],[70,19,65,17,"parseKeys"],[70,28,65,26],[70,29,65,27,"signature"],[70,38,65,36],[70,39,65,37,"decode"],[70,45,65,43],[70,46,65,44,"sig"],[70,49,65,47],[70,51,65,49],[70,56,65,54],[70,57,65,55],[71,4,66,2],[71,8,66,6,"s"],[71,9,66,7],[71,12,66,10,"unpacked"],[71,20,66,18],[71,21,66,19,"s"],[71,22,66,20],[72,4,67,2],[72,8,67,6,"r"],[72,9,67,7],[72,12,67,10,"unpacked"],[72,20,67,18],[72,21,67,19,"r"],[72,22,67,20],[73,4,68,2,"checkValue"],[73,14,68,12],[73,15,68,13,"s"],[73,16,68,14],[73,18,68,16,"q"],[73,19,68,17],[73,20,68,18],[74,4,69,2,"checkValue"],[74,14,69,12],[74,15,69,13,"r"],[74,16,69,14],[74,18,69,16,"q"],[74,19,69,17],[74,20,69,18],[75,4,70,2],[75,8,70,6,"montp"],[75,13,70,11],[75,16,70,14,"BN"],[75,18,70,16],[75,19,70,17,"mont"],[75,23,70,21],[75,24,70,22,"p"],[75,25,70,23],[75,26,70,24],[76,4,71,2],[76,8,71,6,"w"],[76,9,71,7],[76,12,71,10,"s"],[76,13,71,11],[76,14,71,12,"invm"],[76,18,71,16],[76,19,71,17,"q"],[76,20,71,18],[76,21,71,19],[77,4,72,2],[77,8,72,6,"v"],[77,9,72,7],[77,12,72,10,"g"],[77,13,72,11],[77,14,72,12,"toRed"],[77,19,72,17],[77,20,72,18,"montp"],[77,25,72,23],[77,26,72,24],[77,27,73,5,"redPow"],[77,33,73,11],[77,34,73,12],[77,38,73,16,"BN"],[77,40,73,18],[77,41,73,19,"hash"],[77,45,73,23],[77,46,73,24],[77,47,73,25,"mul"],[77,50,73,28],[77,51,73,29,"w"],[77,52,73,30],[77,53,73,31],[77,54,73,32,"mod"],[77,57,73,35],[77,58,73,36,"q"],[77,59,73,37],[77,60,73,38],[77,61,73,39],[77,62,74,5,"fromRed"],[77,69,74,12],[77,70,74,13],[77,71,74,14],[77,72,75,5,"mul"],[77,75,75,8],[77,76,75,9,"y"],[77,77,75,10],[77,78,75,11,"toRed"],[77,83,75,16],[77,84,75,17,"montp"],[77,89,75,22],[77,90,75,23],[77,91,75,24,"redPow"],[77,97,75,30],[77,98,75,31,"r"],[77,99,75,32],[77,100,75,33,"mul"],[77,103,75,36],[77,104,75,37,"w"],[77,105,75,38],[77,106,75,39],[77,107,75,40,"mod"],[77,110,75,43],[77,111,75,44,"q"],[77,112,75,45],[77,113,75,46],[77,114,75,47],[77,115,75,48,"fromRed"],[77,122,75,55],[77,123,75,56],[77,124,75,57],[77,125,75,58],[77,126,76,5,"mod"],[77,129,76,8],[77,130,76,9,"p"],[77,131,76,10],[77,132,76,11],[77,133,77,5,"mod"],[77,136,77,8],[77,137,77,9,"q"],[77,138,77,10],[77,139,77,11],[78,4,78,2],[78,11,78,9,"v"],[78,12,78,10],[78,13,78,11,"cmp"],[78,16,78,14],[78,17,78,15,"r"],[78,18,78,16],[78,19,78,17],[78,24,78,22],[78,25,78,23],[79,2,79,0],[80,2,81,0],[80,11,81,9,"checkValue"],[80,21,81,19,"checkValue"],[80,22,81,20,"b"],[80,23,81,21],[80,25,81,23,"q"],[80,26,81,24],[80,28,81,26],[81,4,82,2],[81,8,82,6,"b"],[81,9,82,7],[81,10,82,8,"cmpn"],[81,14,82,12],[81,15,82,13],[81,16,82,14],[81,17,82,15],[81,21,82,19],[81,22,82,20],[81,24,82,22],[82,6,82,24],[82,12,82,30],[82,16,82,34,"Error"],[82,21,82,39],[82,22,82,40],[82,35,82,53],[82,36,82,54],[83,4,82,56],[84,4,83,2],[84,8,83,6,"b"],[84,9,83,7],[84,10,83,8,"cmp"],[84,13,83,11],[84,14,83,12,"q"],[84,15,83,13],[84,16,83,14],[84,20,83,18],[84,21,83,19],[84,23,83,21],[85,6,83,23],[85,12,83,29],[85,16,83,33,"Error"],[85,21,83,38],[85,22,83,39],[85,35,83,52],[85,36,83,53],[86,4,83,55],[87,2,84,0],[88,2,86,0,"module"],[88,8,86,6],[88,9,86,7,"exports"],[88,16,86,14],[88,19,86,17,"verify"],[88,25,86,23],[89,0,86,24],[89,3]],"functionMap":{"names":["<global>","verify","ecVerify","dsaVerify","checkValue"],"mappings":"AAA;ACS;CDsC;AEE;CFQ;AGE;CHmB;AIE;CJG"}},"type":"js/module"}]}