{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":170,"index":280}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":46,"index":327}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeImmutableOwnerInstruction = createInitializeImmutableOwnerInstruction;\n  exports.decodeInitializeImmutableOwnerInstruction = decodeInitializeImmutableOwnerInstruction;\n  exports.decodeInitializeImmutableOwnerInstructionUnchecked = decodeInitializeImmutableOwnerInstructionUnchecked;\n  exports.initializeImmutableOwnerInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _errors = require(_dependencyMap[2], \"../errors.js\");\n  var _types = require(_dependencyMap[3], \"./types.js\");\n  /** The struct that represents the instruction data as it is read by the program */\n  const initializeImmutableOwnerInstructionData = exports.initializeImmutableOwnerInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction')]);\n  /**\n   * Construct an InitializeImmutableOwner instruction\n   *\n   * @param account           Immutable Owner Account\n   * @param programId         SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeImmutableOwnerInstruction(account, programId) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(initializeImmutableOwnerInstructionData.span);\n    initializeImmutableOwnerInstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeImmutableOwner\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an InitializeImmutableOwner instruction and validate it\n   *\n   * @param instruction InitializeImmutableOwner instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeImmutableOwnerInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account\n      },\n      data\n    } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeImmutableOwner) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account) throw new _errors.TokenInvalidInstructionKeysError();\n    return {\n      programId,\n      keys: {\n        account\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeImmutableOwner instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeImmutableOwnerInstructionUnchecked({\n    programId,\n    keys: [account],\n    data\n  }) {\n    const {\n      instruction\n    } = initializeImmutableOwnerInstructionData.decode(data);\n    return {\n      programId,\n      keys: {\n        account: account\n      },\n      data: {\n        instruction\n      }\n    };\n  }\n});","lineCount":91,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_errors"],[11,13,3,0],[11,16,3,0,"require"],[11,23,3,0],[11,24,3,0,"_dependencyMap"],[11,38,3,0],[12,2,4,0],[12,6,4,0,"_types"],[12,12,4,0],[12,15,4,0,"require"],[12,22,4,0],[12,23,4,0,"_dependencyMap"],[12,37,4,0],[13,2,5,0],[14,2,6,7],[14,8,6,13,"initializeImmutableOwnerInstructionData"],[14,47,6,52],[14,50,6,52,"exports"],[14,57,6,52],[14,58,6,52,"initializeImmutableOwnerInstructionData"],[14,97,6,52],[14,100,6,55],[14,104,6,55,"struct"],[14,124,6,61],[14,126,6,62],[14,127,7,4],[14,131,7,4,"u8"],[14,147,7,6],[14,149,7,7],[14,162,7,20],[14,163,7,21],[14,164,8,1],[14,165,8,2],[15,2,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,2,17,7],[23,11,17,16,"createInitializeImmutableOwnerInstruction"],[23,52,17,57,"createInitializeImmutableOwnerInstruction"],[23,53,17,58,"account"],[23,60,17,65],[23,62,17,67,"programId"],[23,71,17,76],[23,73,17,78],[24,4,18,4],[24,10,18,10,"keys"],[24,14,18,14],[24,17,18,17],[24,18,18,18],[25,6,18,20,"pubkey"],[25,12,18,26],[25,14,18,28,"account"],[25,21,18,35],[26,6,18,37,"isSigner"],[26,14,18,45],[26,16,18,47],[26,21,18,52],[27,6,18,54,"isWritable"],[27,16,18,64],[27,18,18,66],[28,4,18,71],[28,5,18,72],[28,6,18,73],[29,4,19,4],[29,10,19,10,"data"],[29,14,19,14],[29,17,19,17,"Buffer"],[29,23,19,23],[29,24,19,24,"alloc"],[29,29,19,29],[29,30,19,30,"initializeImmutableOwnerInstructionData"],[29,69,19,69],[29,70,19,70,"span"],[29,74,19,74],[29,75,19,75],[30,4,20,4,"initializeImmutableOwnerInstructionData"],[30,43,20,43],[30,44,20,44,"encode"],[30,50,20,50],[30,51,20,51],[31,6,21,8,"instruction"],[31,17,21,19],[31,19,21,21,"TokenInstruction"],[31,42,21,37],[31,43,21,38,"InitializeImmutableOwner"],[32,4,22,4],[32,5,22,5],[32,7,22,7,"data"],[32,11,22,11],[32,12,22,12],[33,4,23,4],[33,11,23,11],[33,15,23,15,"TransactionInstruction"],[33,42,23,37],[33,43,23,38],[34,6,23,40,"keys"],[34,10,23,44],[35,6,23,46,"programId"],[35,15,23,55],[36,6,23,57,"data"],[37,4,23,62],[37,5,23,63],[37,6,23,64],[38,2,24,0],[39,2,25,0],[40,0,26,0],[41,0,27,0],[42,0,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,2,33,7],[47,11,33,16,"decodeInitializeImmutableOwnerInstruction"],[47,52,33,57,"decodeInitializeImmutableOwnerInstruction"],[47,53,33,58,"instruction"],[47,64,33,69],[47,66,33,71,"programId"],[47,75,33,80],[47,77,33,82],[48,4,34,4],[48,8,34,8],[48,9,34,9,"instruction"],[48,20,34,20],[48,21,34,21,"programId"],[48,30,34,30],[48,31,34,31,"equals"],[48,37,34,37],[48,38,34,38,"programId"],[48,47,34,47],[48,48,34,48],[48,50,35,8],[48,56,35,14],[48,60,35,18,"TokenInvalidInstructionProgramError"],[48,103,35,53],[48,104,35,54],[48,105,35,55],[49,4,36,4],[49,8,36,8,"instruction"],[49,19,36,19],[49,20,36,20,"data"],[49,24,36,24],[49,25,36,25,"length"],[49,31,36,31],[49,36,36,36,"initializeImmutableOwnerInstructionData"],[49,75,36,75],[49,76,36,76,"span"],[49,80,36,80],[49,82,37,8],[49,88,37,14],[49,92,37,18,"TokenInvalidInstructionDataError"],[49,132,37,50],[49,133,37,51],[49,134,37,52],[50,4,38,4],[50,10,38,10],[51,6,38,12,"keys"],[51,10,38,16],[51,12,38,18],[52,8,38,20,"account"],[53,6,38,28],[53,7,38,29],[54,6,38,31,"data"],[55,4,38,37],[55,5,38,38],[55,8,38,41,"decodeInitializeImmutableOwnerInstructionUnchecked"],[55,58,38,91],[55,59,38,92,"instruction"],[55,70,38,103],[55,71,38,104],[56,4,39,4],[56,8,39,8,"data"],[56,12,39,12],[56,13,39,13,"instruction"],[56,24,39,24],[56,29,39,29,"TokenInstruction"],[56,52,39,45],[56,53,39,46,"InitializeImmutableOwner"],[56,77,39,70],[56,79,40,8],[56,85,40,14],[56,89,40,18,"TokenInvalidInstructionTypeError"],[56,129,40,50],[56,130,40,51],[56,131,40,52],[57,4,41,4],[57,8,41,8],[57,9,41,9,"account"],[57,16,41,16],[57,18,42,8],[57,24,42,14],[57,28,42,18,"TokenInvalidInstructionKeysError"],[57,68,42,50],[57,69,42,51],[57,70,42,52],[58,4,43,4],[58,11,43,11],[59,6,44,8,"programId"],[59,15,44,17],[60,6,45,8,"keys"],[60,10,45,12],[60,12,45,14],[61,8,46,12,"account"],[62,6,47,8],[62,7,47,9],[63,6,48,8,"data"],[64,4,49,4],[64,5,49,5],[65,2,50,0],[66,2,51,0],[67,0,52,0],[68,0,53,0],[69,0,54,0],[70,0,55,0],[71,0,56,0],[72,0,57,0],[73,2,58,7],[73,11,58,16,"decodeInitializeImmutableOwnerInstructionUnchecked"],[73,61,58,66,"decodeInitializeImmutableOwnerInstructionUnchecked"],[73,62,58,67],[74,4,58,69,"programId"],[74,13,58,78],[75,4,58,80,"keys"],[75,8,58,84],[75,10,58,86],[75,11,58,87,"account"],[75,18,58,94],[75,19,58,95],[76,4,58,97,"data"],[77,2,58,103],[77,3,58,104],[77,5,58,106],[78,4,59,4],[78,10,59,10],[79,6,59,12,"instruction"],[80,4,59,24],[80,5,59,25],[80,8,59,28,"initializeImmutableOwnerInstructionData"],[80,47,59,67],[80,48,59,68,"decode"],[80,54,59,74],[80,55,59,75,"data"],[80,59,59,79],[80,60,59,80],[81,4,60,4],[81,11,60,11],[82,6,61,8,"programId"],[82,15,61,17],[83,6,62,8,"keys"],[83,10,62,12],[83,12,62,14],[84,8,63,12,"account"],[84,15,63,19],[84,17,63,21,"account"],[85,6,64,8],[85,7,64,9],[86,6,65,8,"data"],[86,10,65,12],[86,12,65,14],[87,8,66,12,"instruction"],[88,6,67,8],[89,4,68,4],[89,5,68,5],[90,2,69,0],[91,0,69,1],[91,3]],"functionMap":{"names":["<global>","createInitializeImmutableOwnerInstruction","decodeInitializeImmutableOwnerInstruction","decodeInitializeImmutableOwnerInstructionUnchecked"],"mappings":"AAA;OCgB;CDO;OES;CFiB;OGQ;CHW"}},"type":"js/module"}]}