{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":51,"index":125}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/burnChecked.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":78,"index":204}}],"key":"m17LuUoWZFWanXBQ1iM0awdkfi0=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":205},"end":{"line":4,"column":43,"index":248}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.burnChecked = burnChecked;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _burnChecked = require(_dependencyMap[2], \"../instructions/burnChecked.js\");\n  var _internal = require(_dependencyMap[3], \"./internal.js\");\n  /**\n   * Burn tokens from an account, asserting the token mint and decimals\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param account        Account to burn tokens from\n   * @param mint           Mint for the account\n   * @param owner          Account owner\n   * @param amount         Amount to burn\n   * @param decimals       Number of decimals in amount to burn\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function burnChecked(connection, payer, account, mint, owner, amount, decimals, multiSigners = [], confirmOptions, programId = _constants.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _burnChecked.createBurnCheckedInstruction)(account, mint, ownerPublicKey, amount, decimals, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":31,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_burnChecked"],[8,18,3,0],[8,21,3,0,"require"],[8,28,3,0],[8,29,3,0,"_dependencyMap"],[8,43,3,0],[9,2,4,0],[9,6,4,0,"_internal"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,7],[26,17,21,22,"burnChecked"],[26,28,21,33,"burnChecked"],[26,29,21,34,"connection"],[26,39,21,44],[26,41,21,46,"payer"],[26,46,21,51],[26,48,21,53,"account"],[26,55,21,60],[26,57,21,62,"mint"],[26,61,21,66],[26,63,21,68,"owner"],[26,68,21,73],[26,70,21,75,"amount"],[26,76,21,81],[26,78,21,83,"decimals"],[26,86,21,91],[26,88,21,93,"multiSigners"],[26,100,21,105],[26,103,21,108],[26,105,21,110],[26,107,21,112,"confirmOptions"],[26,121,21,126],[26,123,21,128,"programId"],[26,132,21,137],[26,135,21,140,"TOKEN_PROGRAM_ID"],[26,162,21,156],[26,164,21,158],[27,4,22,4],[27,10,22,10],[27,11,22,11,"ownerPublicKey"],[27,25,22,25],[27,27,22,27,"signers"],[27,34,22,34],[27,35,22,35],[27,38,22,38],[27,42,22,38,"getSigners"],[27,62,22,48],[27,64,22,49,"owner"],[27,69,22,54],[27,71,22,56,"multiSigners"],[27,83,22,68],[27,84,22,69],[28,4,23,4],[28,10,23,10,"transaction"],[28,21,23,21],[28,24,23,24],[28,28,23,28,"Transaction"],[28,44,23,39],[28,45,23,40],[28,46,23,41],[28,47,23,42,"add"],[28,50,23,45],[28,51,23,46],[28,55,23,46,"createBurnCheckedInstruction"],[28,96,23,74],[28,98,23,75,"account"],[28,105,23,82],[28,107,23,84,"mint"],[28,111,23,88],[28,113,23,90,"ownerPublicKey"],[28,127,23,104],[28,129,23,106,"amount"],[28,135,23,112],[28,137,23,114,"decimals"],[28,145,23,122],[28,147,23,124,"multiSigners"],[28,159,23,136],[28,161,23,138,"programId"],[28,170,23,147],[28,171,23,148],[28,172,23,149],[29,4,24,4],[29,11,24,11],[29,17,24,17],[29,21,24,17,"sendAndConfirmTransaction"],[29,51,24,42],[29,53,24,43,"connection"],[29,63,24,53],[29,65,24,55,"transaction"],[29,76,24,66],[29,78,24,68],[29,79,24,69,"payer"],[29,84,24,74],[29,86,24,76],[29,89,24,79,"signers"],[29,96,24,86],[29,97,24,87],[29,99,24,89,"confirmOptions"],[29,113,24,103],[29,114,24,104],[30,2,25,0],[31,0,25,1],[31,3]],"functionMap":{"names":["<global>","burnChecked"],"mappings":"AAA;OCoB;CDI"}},"type":"js/module"}]}