{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":179,"index":243}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.unpackPubkeyData = unpackPubkeyData;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _errors = require(_dependencyMap[1], \"../../errors.js\");\n  async function unpackPubkeyData(keyDataConfig, previousMetas, instructionData, connection) {\n    const [discriminator, ...rest] = keyDataConfig;\n    const remaining = new Uint8Array(rest);\n    switch (discriminator) {\n      case 1:\n        return unpackPubkeyDataFromInstructionData(remaining, instructionData);\n      case 2:\n        return unpackPubkeyDataFromAccountData(remaining, previousMetas, connection);\n      default:\n        throw new _errors.TokenTransferHookInvalidPubkeyData();\n    }\n  }\n  function unpackPubkeyDataFromInstructionData(remaining, instructionData) {\n    if (remaining.length < 1) {\n      throw new _errors.TokenTransferHookInvalidPubkeyData();\n    }\n    const dataIndex = remaining[0];\n    if (instructionData.length < dataIndex + _web.PUBLIC_KEY_LENGTH) {\n      throw new _errors.TokenTransferHookPubkeyDataTooSmall();\n    }\n    return new _web.PublicKey(instructionData.subarray(dataIndex, dataIndex + _web.PUBLIC_KEY_LENGTH));\n  }\n  async function unpackPubkeyDataFromAccountData(remaining, previousMetas, connection) {\n    if (remaining.length < 2) {\n      throw new _errors.TokenTransferHookInvalidPubkeyData();\n    }\n    const [accountIndex, dataIndex] = remaining;\n    if (previousMetas.length <= accountIndex) {\n      throw new _errors.TokenTransferHookAccountDataNotFound();\n    }\n    const accountInfo = await connection.getAccountInfo(previousMetas[accountIndex].pubkey);\n    if (accountInfo == null) {\n      throw new _errors.TokenTransferHookAccountNotFound();\n    }\n    if (accountInfo.data.length < dataIndex + _web.PUBLIC_KEY_LENGTH) {\n      throw new _errors.TokenTransferHookPubkeyDataTooSmall();\n    }\n    return new _web.PublicKey(accountInfo.data.subarray(dataIndex, dataIndex + _web.PUBLIC_KEY_LENGTH));\n  }\n});","lineCount":47,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_errors"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,3,7],[8,17,3,22,"unpackPubkeyData"],[8,33,3,38,"unpackPubkeyData"],[8,34,3,39,"keyDataConfig"],[8,47,3,52],[8,49,3,54,"previousMetas"],[8,62,3,67],[8,64,3,69,"instructionData"],[8,79,3,84],[8,81,3,86,"connection"],[8,91,3,96],[8,93,3,98],[9,4,4,4],[9,10,4,10],[9,11,4,11,"discriminator"],[9,24,4,24],[9,26,4,26],[9,29,4,29,"rest"],[9,33,4,33],[9,34,4,34],[9,37,4,37,"keyDataConfig"],[9,50,4,50],[10,4,5,4],[10,10,5,10,"remaining"],[10,19,5,19],[10,22,5,22],[10,26,5,26,"Uint8Array"],[10,36,5,36],[10,37,5,37,"rest"],[10,41,5,41],[10,42,5,42],[11,4,6,4],[11,12,6,12,"discriminator"],[11,25,6,25],[12,6,7,8],[12,11,7,13],[12,12,7,14],[13,8,8,12],[13,15,8,19,"unpackPubkeyDataFromInstructionData"],[13,50,8,54],[13,51,8,55,"remaining"],[13,60,8,64],[13,62,8,66,"instructionData"],[13,77,8,81],[13,78,8,82],[14,6,9,8],[14,11,9,13],[14,12,9,14],[15,8,10,12],[15,15,10,19,"unpackPubkeyDataFromAccountData"],[15,46,10,50],[15,47,10,51,"remaining"],[15,56,10,60],[15,58,10,62,"previousMetas"],[15,71,10,75],[15,73,10,77,"connection"],[15,83,10,87],[15,84,10,88],[16,6,11,8],[17,8,12,12],[17,14,12,18],[17,18,12,22,"TokenTransferHookInvalidPubkeyData"],[17,60,12,56],[17,61,12,57],[17,62,12,58],[18,4,13,4],[19,2,14,0],[20,2,15,0],[20,11,15,9,"unpackPubkeyDataFromInstructionData"],[20,46,15,44,"unpackPubkeyDataFromInstructionData"],[20,47,15,45,"remaining"],[20,56,15,54],[20,58,15,56,"instructionData"],[20,73,15,71],[20,75,15,73],[21,4,16,4],[21,8,16,8,"remaining"],[21,17,16,17],[21,18,16,18,"length"],[21,24,16,24],[21,27,16,27],[21,28,16,28],[21,30,16,30],[22,6,17,8],[22,12,17,14],[22,16,17,18,"TokenTransferHookInvalidPubkeyData"],[22,58,17,52],[22,59,17,53],[22,60,17,54],[23,4,18,4],[24,4,19,4],[24,10,19,10,"dataIndex"],[24,19,19,19],[24,22,19,22,"remaining"],[24,31,19,31],[24,32,19,32],[24,33,19,33],[24,34,19,34],[25,4,20,4],[25,8,20,8,"instructionData"],[25,23,20,23],[25,24,20,24,"length"],[25,30,20,30],[25,33,20,33,"dataIndex"],[25,42,20,42],[25,45,20,45,"PUBLIC_KEY_LENGTH"],[25,67,20,62],[25,69,20,64],[26,6,21,8],[26,12,21,14],[26,16,21,18,"TokenTransferHookPubkeyDataTooSmall"],[26,59,21,53],[26,60,21,54],[26,61,21,55],[27,4,22,4],[28,4,23,4],[28,11,23,11],[28,15,23,15,"PublicKey"],[28,29,23,24],[28,30,23,25,"instructionData"],[28,45,23,40],[28,46,23,41,"subarray"],[28,54,23,49],[28,55,23,50,"dataIndex"],[28,64,23,59],[28,66,23,61,"dataIndex"],[28,75,23,70],[28,78,23,73,"PUBLIC_KEY_LENGTH"],[28,100,23,90],[28,101,23,91],[28,102,23,92],[29,2,24,0],[30,2,25,0],[30,17,25,15,"unpackPubkeyDataFromAccountData"],[30,48,25,46,"unpackPubkeyDataFromAccountData"],[30,49,25,47,"remaining"],[30,58,25,56],[30,60,25,58,"previousMetas"],[30,73,25,71],[30,75,25,73,"connection"],[30,85,25,83],[30,87,25,85],[31,4,26,4],[31,8,26,8,"remaining"],[31,17,26,17],[31,18,26,18,"length"],[31,24,26,24],[31,27,26,27],[31,28,26,28],[31,30,26,30],[32,6,27,8],[32,12,27,14],[32,16,27,18,"TokenTransferHookInvalidPubkeyData"],[32,58,27,52],[32,59,27,53],[32,60,27,54],[33,4,28,4],[34,4,29,4],[34,10,29,10],[34,11,29,11,"accountIndex"],[34,23,29,23],[34,25,29,25,"dataIndex"],[34,34,29,34],[34,35,29,35],[34,38,29,38,"remaining"],[34,47,29,47],[35,4,30,4],[35,8,30,8,"previousMetas"],[35,21,30,21],[35,22,30,22,"length"],[35,28,30,28],[35,32,30,32,"accountIndex"],[35,44,30,44],[35,46,30,46],[36,6,31,8],[36,12,31,14],[36,16,31,18,"TokenTransferHookAccountDataNotFound"],[36,60,31,54],[36,61,31,55],[36,62,31,56],[37,4,32,4],[38,4,33,4],[38,10,33,10,"accountInfo"],[38,21,33,21],[38,24,33,24],[38,30,33,30,"connection"],[38,40,33,40],[38,41,33,41,"getAccountInfo"],[38,55,33,55],[38,56,33,56,"previousMetas"],[38,69,33,69],[38,70,33,70,"accountIndex"],[38,82,33,82],[38,83,33,83],[38,84,33,84,"pubkey"],[38,90,33,90],[38,91,33,91],[39,4,34,4],[39,8,34,8,"accountInfo"],[39,19,34,19],[39,23,34,23],[39,27,34,27],[39,29,34,29],[40,6,35,8],[40,12,35,14],[40,16,35,18,"TokenTransferHookAccountNotFound"],[40,56,35,50],[40,57,35,51],[40,58,35,52],[41,4,36,4],[42,4,37,4],[42,8,37,8,"accountInfo"],[42,19,37,19],[42,20,37,20,"data"],[42,24,37,24],[42,25,37,25,"length"],[42,31,37,31],[42,34,37,34,"dataIndex"],[42,43,37,43],[42,46,37,46,"PUBLIC_KEY_LENGTH"],[42,68,37,63],[42,70,37,65],[43,6,38,8],[43,12,38,14],[43,16,38,18,"TokenTransferHookPubkeyDataTooSmall"],[43,59,38,53],[43,60,38,54],[43,61,38,55],[44,4,39,4],[45,4,40,4],[45,11,40,11],[45,15,40,15,"PublicKey"],[45,29,40,24],[45,30,40,25,"accountInfo"],[45,41,40,36],[45,42,40,37,"data"],[45,46,40,41],[45,47,40,42,"subarray"],[45,55,40,50],[45,56,40,51,"dataIndex"],[45,65,40,60],[45,67,40,62,"dataIndex"],[45,76,40,71],[45,79,40,74,"PUBLIC_KEY_LENGTH"],[45,101,40,91],[45,102,40,92],[45,103,40,93],[46,2,41,0],[47,0,41,1],[47,3]],"functionMap":{"names":["<global>","unpackPubkeyData","unpackPubkeyDataFromInstructionData","unpackPubkeyDataFromAccountData"],"mappings":"AAA;OCE;CDW;AEC;CFS;AGC;CHgB"}},"type":"js/module"}]}