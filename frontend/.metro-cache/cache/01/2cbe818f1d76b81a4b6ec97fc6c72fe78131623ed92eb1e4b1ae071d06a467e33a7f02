{"dependencies":[{"name":"./validate.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":39,"index":146},"end":{"line":8,"column":63,"index":170}}],"key":"qe2Uxmo/WbgG0hl9lWMaTIOtGSI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _validate = _interopRequireDefault(require(_dependencyMap[0], \"./validate.js\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */\n  const byteToHex = [];\n  for (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).substr(1));\n  }\n  function stringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n\n    if (!(0, _validate.default)(uuid)) {\n      throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n  }\n  var _default = stringify;\n  exports.default = _default;\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_validate"],[8,15,8,13],[8,18,8,16,"_interopRequireDefault"],[8,40,8,38],[8,41,8,39,"require"],[8,48,8,46],[8,49,8,46,"_dependencyMap"],[8,63,8,46],[8,83,8,62],[8,84,8,63],[8,85,8,64],[9,2,10,0],[9,11,10,9,"_interopRequireDefault"],[9,33,10,31,"_interopRequireDefault"],[9,34,10,32,"obj"],[9,37,10,35],[9,39,10,37],[10,4,10,39],[10,11,10,46,"obj"],[10,14,10,49],[10,18,10,53,"obj"],[10,21,10,56],[10,22,10,57,"__esModule"],[10,32,10,67],[10,35,10,70,"obj"],[10,38,10,73],[10,41,10,76],[11,6,10,78,"default"],[11,13,10,85],[11,15,10,87,"obj"],[12,4,10,91],[12,5,10,92],[13,2,10,94],[15,2,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,2,16,0],[19,8,16,6,"byteToHex"],[19,17,16,15],[19,20,16,18],[19,22,16,20],[20,2,18,0],[20,7,18,5],[20,11,18,9,"i"],[20,12,18,10],[20,15,18,13],[20,16,18,14],[20,18,18,16,"i"],[20,19,18,17],[20,22,18,20],[20,25,18,23],[20,27,18,25],[20,29,18,27,"i"],[20,30,18,28],[20,32,18,30],[21,4,19,2,"byteToHex"],[21,13,19,11],[21,14,19,12,"push"],[21,18,19,16],[21,19,19,17],[21,20,19,18,"i"],[21,21,19,19],[21,24,19,22],[21,29,19,27],[21,31,19,29,"toString"],[21,39,19,37],[21,40,19,38],[21,42,19,40],[21,43,19,41],[21,44,19,42,"substr"],[21,50,19,48],[21,51,19,49],[21,52,19,50],[21,53,19,51],[21,54,19,52],[22,2,20,0],[23,2,22,0],[23,11,22,9,"stringify"],[23,20,22,18,"stringify"],[23,21,22,19,"arr"],[23,24,22,22],[23,26,22,24,"offset"],[23,32,22,30],[23,35,22,33],[23,36,22,34],[23,38,22,36],[24,4,23,2],[25,4,24,2],[26,4,25,2],[26,10,25,8,"uuid"],[26,14,25,12],[26,17,25,15],[26,18,25,16,"byteToHex"],[26,27,25,25],[26,28,25,26,"arr"],[26,31,25,29],[26,32,25,30,"offset"],[26,38,25,36],[26,41,25,39],[26,42,25,40],[26,43,25,41],[26,44,25,42],[26,47,25,45,"byteToHex"],[26,56,25,54],[26,57,25,55,"arr"],[26,60,25,58],[26,61,25,59,"offset"],[26,67,25,65],[26,70,25,68],[26,71,25,69],[26,72,25,70],[26,73,25,71],[26,76,25,74,"byteToHex"],[26,85,25,83],[26,86,25,84,"arr"],[26,89,25,87],[26,90,25,88,"offset"],[26,96,25,94],[26,99,25,97],[26,100,25,98],[26,101,25,99],[26,102,25,100],[26,105,25,103,"byteToHex"],[26,114,25,112],[26,115,25,113,"arr"],[26,118,25,116],[26,119,25,117,"offset"],[26,125,25,123],[26,128,25,126],[26,129,25,127],[26,130,25,128],[26,131,25,129],[26,134,25,132],[26,137,25,135],[26,140,25,138,"byteToHex"],[26,149,25,147],[26,150,25,148,"arr"],[26,153,25,151],[26,154,25,152,"offset"],[26,160,25,158],[26,163,25,161],[26,164,25,162],[26,165,25,163],[26,166,25,164],[26,169,25,167,"byteToHex"],[26,178,25,176],[26,179,25,177,"arr"],[26,182,25,180],[26,183,25,181,"offset"],[26,189,25,187],[26,192,25,190],[26,193,25,191],[26,194,25,192],[26,195,25,193],[26,198,25,196],[26,201,25,199],[26,204,25,202,"byteToHex"],[26,213,25,211],[26,214,25,212,"arr"],[26,217,25,215],[26,218,25,216,"offset"],[26,224,25,222],[26,227,25,225],[26,228,25,226],[26,229,25,227],[26,230,25,228],[26,233,25,231,"byteToHex"],[26,242,25,240],[26,243,25,241,"arr"],[26,246,25,244],[26,247,25,245,"offset"],[26,253,25,251],[26,256,25,254],[26,257,25,255],[26,258,25,256],[26,259,25,257],[26,262,25,260],[26,265,25,263],[26,268,25,266,"byteToHex"],[26,277,25,275],[26,278,25,276,"arr"],[26,281,25,279],[26,282,25,280,"offset"],[26,288,25,286],[26,291,25,289],[26,292,25,290],[26,293,25,291],[26,294,25,292],[26,297,25,295,"byteToHex"],[26,306,25,304],[26,307,25,305,"arr"],[26,310,25,308],[26,311,25,309,"offset"],[26,317,25,315],[26,320,25,318],[26,321,25,319],[26,322,25,320],[26,323,25,321],[26,326,25,324],[26,329,25,327],[26,332,25,330,"byteToHex"],[26,341,25,339],[26,342,25,340,"arr"],[26,345,25,343],[26,346,25,344,"offset"],[26,352,25,350],[26,355,25,353],[26,357,25,355],[26,358,25,356],[26,359,25,357],[26,362,25,360,"byteToHex"],[26,371,25,369],[26,372,25,370,"arr"],[26,375,25,373],[26,376,25,374,"offset"],[26,382,25,380],[26,385,25,383],[26,387,25,385],[26,388,25,386],[26,389,25,387],[26,392,25,390,"byteToHex"],[26,401,25,399],[26,402,25,400,"arr"],[26,405,25,403],[26,406,25,404,"offset"],[26,412,25,410],[26,415,25,413],[26,417,25,415],[26,418,25,416],[26,419,25,417],[26,422,25,420,"byteToHex"],[26,431,25,429],[26,432,25,430,"arr"],[26,435,25,433],[26,436,25,434,"offset"],[26,442,25,440],[26,445,25,443],[26,447,25,445],[26,448,25,446],[26,449,25,447],[26,452,25,450,"byteToHex"],[26,461,25,459],[26,462,25,460,"arr"],[26,465,25,463],[26,466,25,464,"offset"],[26,472,25,470],[26,475,25,473],[26,477,25,475],[26,478,25,476],[26,479,25,477],[26,482,25,480,"byteToHex"],[26,491,25,489],[26,492,25,490,"arr"],[26,495,25,493],[26,496,25,494,"offset"],[26,502,25,500],[26,505,25,503],[26,507,25,505],[26,508,25,506],[26,509,25,507],[26,511,25,509,"toLowerCase"],[26,522,25,520],[26,523,25,521],[26,524,25,522],[26,525,25,523],[26,526,25,524],[27,4,26,2],[28,4,27,2],[29,4,28,2],[30,4,29,2],[32,4,31,2],[32,8,31,6],[32,9,31,7],[32,10,31,8],[32,11,31,9],[32,13,31,11,"_validate"],[32,22,31,20],[32,23,31,21,"default"],[32,30,31,28],[32,32,31,30,"uuid"],[32,36,31,34],[32,37,31,35],[32,39,31,37],[33,6,32,4],[33,12,32,10,"TypeError"],[33,21,32,19],[33,22,32,20],[33,51,32,49],[33,52,32,50],[34,4,33,2],[35,4,35,2],[35,11,35,9,"uuid"],[35,15,35,13],[36,2,36,0],[37,2,38,0],[37,6,38,4,"_default"],[37,14,38,12],[37,17,38,15,"stringify"],[37,26,38,24],[38,2,39,0,"exports"],[38,9,39,7],[38,10,39,8,"default"],[38,17,39,15],[38,20,39,18,"_default"],[38,28,39,26],[39,0,39,27],[39,3]],"functionMap":{"names":["<global>","_interopRequireDefault","stringify"],"mappings":"AAA;ACS,+FD;AEY;CFc"}},"type":"js/module"}]}