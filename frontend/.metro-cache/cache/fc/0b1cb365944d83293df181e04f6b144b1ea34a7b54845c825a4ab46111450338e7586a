{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":56,"index":108}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":77,"index":186}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":51,"index":238}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":239},"end":{"line":5,"column":170,"index":409}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":410},"end":{"line":6,"column":46,"index":456}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeAccount2Instruction = createInitializeAccount2Instruction;\n  exports.decodeInitializeAccount2Instruction = decodeInitializeAccount2Instruction;\n  exports.decodeInitializeAccount2InstructionUnchecked = decodeInitializeAccount2InstructionUnchecked;\n  exports.initializeAccount2InstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _types = require(_dependencyMap[5], \"./types.js\");\n  const initializeAccount2InstructionData = exports.initializeAccount2InstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayoutUtils.publicKey)('owner')]);\n  /**\n   * Construct an InitializeAccount2 instruction\n   *\n   * @param account   New token account\n   * @param mint      Mint account\n   * @param owner     New account's owner/multisignature\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeAccount2Instruction(account, mint, owner, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: _web.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const data = Buffer.alloc(initializeAccount2InstructionData.span);\n    initializeAccount2InstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeAccount2,\n      owner\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an InitializeAccount2 instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeAccount2Instruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount2InstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        mint,\n        rent\n      },\n      data\n    } = decodeInitializeAccount2InstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeAccount2) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !rent) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        rent\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeAccount2 instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeAccount2InstructionUnchecked({\n    programId,\n    keys: [account, mint, rent],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        rent\n      },\n      data: initializeAccount2InstructionData.decode(data)\n    };\n  }\n});","lineCount":105,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,7],[15,8,7,13,"initializeAccount2InstructionData"],[15,41,7,46],[15,44,7,46,"exports"],[15,51,7,46],[15,52,7,46,"initializeAccount2InstructionData"],[15,85,7,46],[15,88,7,49],[15,92,7,49,"struct"],[15,112,7,55],[15,114,7,56],[15,115,8,4],[15,119,8,4,"u8"],[15,135,8,6],[15,137,8,7],[15,150,8,20],[15,151,8,21],[15,153,9,4],[15,157,9,4,"publicKey"],[15,185,9,13],[15,187,9,14],[15,194,9,21],[15,195,9,22],[15,196,10,1],[15,197,10,2],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,7],[26,11,21,16,"createInitializeAccount2Instruction"],[26,46,21,51,"createInitializeAccount2Instruction"],[26,47,21,52,"account"],[26,54,21,59],[26,56,21,61,"mint"],[26,60,21,65],[26,62,21,67,"owner"],[26,67,21,72],[26,69,21,74,"programId"],[26,78,21,83],[26,81,21,86,"TOKEN_PROGRAM_ID"],[26,108,21,102],[26,110,21,104],[27,4,22,4],[27,10,22,10,"keys"],[27,14,22,14],[27,17,22,17],[27,18,23,8],[28,6,23,10,"pubkey"],[28,12,23,16],[28,14,23,18,"account"],[28,21,23,25],[29,6,23,27,"isSigner"],[29,14,23,35],[29,16,23,37],[29,21,23,42],[30,6,23,44,"isWritable"],[30,16,23,54],[30,18,23,56],[31,4,23,61],[31,5,23,62],[31,7,24,8],[32,6,24,10,"pubkey"],[32,12,24,16],[32,14,24,18,"mint"],[32,18,24,22],[33,6,24,24,"isSigner"],[33,14,24,32],[33,16,24,34],[33,21,24,39],[34,6,24,41,"isWritable"],[34,16,24,51],[34,18,24,53],[35,4,24,59],[35,5,24,60],[35,7,25,8],[36,6,25,10,"pubkey"],[36,12,25,16],[36,14,25,18,"SYSVAR_RENT_PUBKEY"],[36,37,25,36],[37,6,25,38,"isSigner"],[37,14,25,46],[37,16,25,48],[37,21,25,53],[38,6,25,55,"isWritable"],[38,16,25,65],[38,18,25,67],[39,4,25,73],[39,5,25,74],[39,6,26,5],[40,4,27,4],[40,10,27,10,"data"],[40,14,27,14],[40,17,27,17,"Buffer"],[40,23,27,23],[40,24,27,24,"alloc"],[40,29,27,29],[40,30,27,30,"initializeAccount2InstructionData"],[40,63,27,63],[40,64,27,64,"span"],[40,68,27,68],[40,69,27,69],[41,4,28,4,"initializeAccount2InstructionData"],[41,37,28,37],[41,38,28,38,"encode"],[41,44,28,44],[41,45,28,45],[42,6,28,47,"instruction"],[42,17,28,58],[42,19,28,60,"TokenInstruction"],[42,42,28,76],[42,43,28,77,"InitializeAccount2"],[42,61,28,95],[43,6,28,97,"owner"],[44,4,28,103],[44,5,28,104],[44,7,28,106,"data"],[44,11,28,110],[44,12,28,111],[45,4,29,4],[45,11,29,11],[45,15,29,15,"TransactionInstruction"],[45,42,29,37],[45,43,29,38],[46,6,29,40,"keys"],[46,10,29,44],[47,6,29,46,"programId"],[47,15,29,55],[48,6,29,57,"data"],[49,4,29,62],[49,5,29,63],[49,6,29,64],[50,2,30,0],[51,2,31,0],[52,0,32,0],[53,0,33,0],[54,0,34,0],[55,0,35,0],[56,0,36,0],[57,0,37,0],[58,0,38,0],[59,2,39,7],[59,11,39,16,"decodeInitializeAccount2Instruction"],[59,46,39,51,"decodeInitializeAccount2Instruction"],[59,47,39,52,"instruction"],[59,58,39,63],[59,60,39,65,"programId"],[59,69,39,74],[59,72,39,77,"TOKEN_PROGRAM_ID"],[59,99,39,93],[59,101,39,95],[60,4,40,4],[60,8,40,8],[60,9,40,9,"instruction"],[60,20,40,20],[60,21,40,21,"programId"],[60,30,40,30],[60,31,40,31,"equals"],[60,37,40,37],[60,38,40,38,"programId"],[60,47,40,47],[60,48,40,48],[60,50,41,8],[60,56,41,14],[60,60,41,18,"TokenInvalidInstructionProgramError"],[60,103,41,53],[60,104,41,54],[60,105,41,55],[61,4,42,4],[61,8,42,8,"instruction"],[61,19,42,19],[61,20,42,20,"data"],[61,24,42,24],[61,25,42,25,"length"],[61,31,42,31],[61,36,42,36,"initializeAccount2InstructionData"],[61,69,42,69],[61,70,42,70,"span"],[61,74,42,74],[61,76,43,8],[61,82,43,14],[61,86,43,18,"TokenInvalidInstructionDataError"],[61,126,43,50],[61,127,43,51],[61,128,43,52],[62,4,44,4],[62,10,44,10],[63,6,44,12,"keys"],[63,10,44,16],[63,12,44,18],[64,8,44,20,"account"],[64,15,44,27],[65,8,44,29,"mint"],[65,12,44,33],[66,8,44,35,"rent"],[67,6,44,40],[67,7,44,41],[68,6,44,43,"data"],[69,4,44,49],[69,5,44,50],[69,8,44,53,"decodeInitializeAccount2InstructionUnchecked"],[69,52,44,97],[69,53,44,98,"instruction"],[69,64,44,109],[69,65,44,110],[70,4,45,4],[70,8,45,8,"data"],[70,12,45,12],[70,13,45,13,"instruction"],[70,24,45,24],[70,29,45,29,"TokenInstruction"],[70,52,45,45],[70,53,45,46,"InitializeAccount2"],[70,71,45,64],[70,73,46,8],[70,79,46,14],[70,83,46,18,"TokenInvalidInstructionTypeError"],[70,123,46,50],[70,124,46,51],[70,125,46,52],[71,4,47,4],[71,8,47,8],[71,9,47,9,"account"],[71,16,47,16],[71,20,47,20],[71,21,47,21,"mint"],[71,25,47,25],[71,29,47,29],[71,30,47,30,"rent"],[71,34,47,34],[71,36,48,8],[71,42,48,14],[71,46,48,18,"TokenInvalidInstructionKeysError"],[71,86,48,50],[71,87,48,51],[71,88,48,52],[72,4,49,4],[73,4,50,4],[73,11,50,11],[74,6,51,8,"programId"],[74,15,51,17],[75,6,52,8,"keys"],[75,10,52,12],[75,12,52,14],[76,8,53,12,"account"],[76,15,53,19],[77,8,54,12,"mint"],[77,12,54,16],[78,8,55,12,"rent"],[79,6,56,8],[79,7,56,9],[80,6,57,8,"data"],[81,4,58,4],[81,5,58,5],[82,2,59,0],[83,2,60,0],[84,0,61,0],[85,0,62,0],[86,0,63,0],[87,0,64,0],[88,0,65,0],[89,0,66,0],[90,2,67,7],[90,11,67,16,"decodeInitializeAccount2InstructionUnchecked"],[90,55,67,60,"decodeInitializeAccount2InstructionUnchecked"],[90,56,67,61],[91,4,67,63,"programId"],[91,13,67,72],[92,4,67,74,"keys"],[92,8,67,78],[92,10,67,80],[92,11,67,81,"account"],[92,18,67,88],[92,20,67,90,"mint"],[92,24,67,94],[92,26,67,96,"rent"],[92,30,67,100],[92,31,67,101],[93,4,67,103,"data"],[94,2,67,109],[94,3,67,110],[94,5,67,112],[95,4,68,4],[95,11,68,11],[96,6,69,8,"programId"],[96,15,69,17],[97,6,70,8,"keys"],[97,10,70,12],[97,12,70,14],[98,8,71,12,"account"],[98,15,71,19],[99,8,72,12,"mint"],[99,12,72,16],[100,8,73,12,"rent"],[101,6,74,8],[101,7,74,9],[102,6,75,8,"data"],[102,10,75,12],[102,12,75,14,"initializeAccount2InstructionData"],[102,45,75,47],[102,46,75,48,"decode"],[102,52,75,54],[102,53,75,55,"data"],[102,57,75,59],[103,4,76,4],[103,5,76,5],[104,2,77,0],[105,0,77,1],[105,3]],"functionMap":{"names":["<global>","createInitializeAccount2Instruction","decodeInitializeAccount2Instruction","decodeInitializeAccount2InstructionUnchecked"],"mappings":"AAA;OCoB;CDS;OES;CFoB;OGQ;CHU"}},"type":"js/module"}]}