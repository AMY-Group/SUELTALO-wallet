{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":13,"index":486},"end":{"line":15,"column":35,"index":508}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // limit of Crypto.getRandomValues()\n  // https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n  var MAX_BYTES = 65536;\n\n  // Node supports requesting up to this number of bytes\n  // https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\n  var MAX_UINT32 = 4294967295;\n  function oldBrowser() {\n    throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');\n  }\n  var Buffer = require(_dependencyMap[0], \"safe-buffer\").Buffer;\n  var crypto = global.crypto || global.msCrypto;\n  if (crypto && crypto.getRandomValues) {\n    module.exports = randomBytes;\n  } else {\n    module.exports = oldBrowser;\n  }\n  function randomBytes(size, cb) {\n    // phantomjs needs to throw\n    if (size > MAX_UINT32) throw new RangeError('requested too many random bytes');\n    var bytes = Buffer.allocUnsafe(size);\n    if (size > 0) {\n      // getRandomValues fails on IE if size == 0\n      if (size > MAX_BYTES) {\n        // this is the max bytes crypto.getRandomValues\n        // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n        for (var generated = 0; generated < size; generated += MAX_BYTES) {\n          // buffer.slice automatically checks if the end is past the end of\n          // the buffer so we don't have to here\n          crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n        }\n      } else {\n        crypto.getRandomValues(bytes);\n      }\n    }\n    if (typeof cb === 'function') {\n      return process.nextTick(function () {\n        cb(null, bytes);\n      });\n    }\n    return bytes;\n  }\n});","lineCount":46,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[6,2,5,0],[6,6,5,4,"MAX_BYTES"],[6,15,5,13],[6,18,5,16],[6,23,5,21],[8,2,7,0],[9,2,8,0],[10,2,9,0],[10,6,9,4,"MAX_UINT32"],[10,16,9,14],[10,19,9,17],[10,29,9,27],[11,2,11,0],[11,11,11,9,"oldBrowser"],[11,21,11,19,"oldBrowser"],[11,22,11,19],[11,24,11,23],[12,4,12,2],[12,10,12,8],[12,14,12,12,"Error"],[12,19,12,17],[12,20,12,18],[12,132,12,130],[12,133,12,131],[13,2,13,0],[14,2,15,0],[14,6,15,4,"Buffer"],[14,12,15,10],[14,15,15,13,"require"],[14,22,15,20],[14,23,15,20,"_dependencyMap"],[14,37,15,20],[14,55,15,34],[14,56,15,35],[14,57,15,36,"Buffer"],[14,63,15,42],[15,2,16,0],[15,6,16,4,"crypto"],[15,12,16,10],[15,15,16,13,"global"],[15,21,16,19],[15,22,16,20,"crypto"],[15,28,16,26],[15,32,16,30,"global"],[15,38,16,36],[15,39,16,37,"msCrypto"],[15,47,16,45],[16,2,18,0],[16,6,18,4,"crypto"],[16,12,18,10],[16,16,18,14,"crypto"],[16,22,18,20],[16,23,18,21,"getRandomValues"],[16,38,18,36],[16,40,18,38],[17,4,19,2,"module"],[17,10,19,8],[17,11,19,9,"exports"],[17,18,19,16],[17,21,19,19,"randomBytes"],[17,32,19,30],[18,2,20,0],[18,3,20,1],[18,9,20,7],[19,4,21,2,"module"],[19,10,21,8],[19,11,21,9,"exports"],[19,18,21,16],[19,21,21,19,"oldBrowser"],[19,31,21,29],[20,2,22,0],[21,2,24,0],[21,11,24,9,"randomBytes"],[21,22,24,20,"randomBytes"],[21,23,24,22,"size"],[21,27,24,26],[21,29,24,28,"cb"],[21,31,24,30],[21,33,24,32],[22,4,25,2],[23,4,26,2],[23,8,26,6,"size"],[23,12,26,10],[23,15,26,13,"MAX_UINT32"],[23,25,26,23],[23,27,26,25],[23,33,26,31],[23,37,26,35,"RangeError"],[23,47,26,45],[23,48,26,46],[23,81,26,79],[23,82,26,80],[24,4,28,2],[24,8,28,6,"bytes"],[24,13,28,11],[24,16,28,14,"Buffer"],[24,22,28,20],[24,23,28,21,"allocUnsafe"],[24,34,28,32],[24,35,28,33,"size"],[24,39,28,37],[24,40,28,38],[25,4,30,2],[25,8,30,6,"size"],[25,12,30,10],[25,15,30,13],[25,16,30,14],[25,18,30,16],[26,6,30,19],[27,6,31,4],[27,10,31,8,"size"],[27,14,31,12],[27,17,31,15,"MAX_BYTES"],[27,26,31,24],[27,28,31,26],[28,8,31,28],[29,8,32,6],[30,8,33,6],[30,13,33,11],[30,17,33,15,"generated"],[30,26,33,24],[30,29,33,27],[30,30,33,28],[30,32,33,30,"generated"],[30,41,33,39],[30,44,33,42,"size"],[30,48,33,46],[30,50,33,48,"generated"],[30,59,33,57],[30,63,33,61,"MAX_BYTES"],[30,72,33,70],[30,74,33,72],[31,10,34,8],[32,10,35,8],[33,10,36,8,"crypto"],[33,16,36,14],[33,17,36,15,"getRandomValues"],[33,32,36,30],[33,33,36,31,"bytes"],[33,38,36,36],[33,39,36,37,"slice"],[33,44,36,42],[33,45,36,43,"generated"],[33,54,36,52],[33,56,36,54,"generated"],[33,65,36,63],[33,68,36,66,"MAX_BYTES"],[33,77,36,75],[33,78,36,76],[33,79,36,77],[34,8,37,6],[35,6,38,4],[35,7,38,5],[35,13,38,11],[36,8,39,6,"crypto"],[36,14,39,12],[36,15,39,13,"getRandomValues"],[36,30,39,28],[36,31,39,29,"bytes"],[36,36,39,34],[36,37,39,35],[37,6,40,4],[38,4,41,2],[39,4,43,2],[39,8,43,6],[39,15,43,13,"cb"],[39,17,43,15],[39,22,43,20],[39,32,43,30],[39,34,43,32],[40,6,44,4],[40,13,44,11,"process"],[40,20,44,18],[40,21,44,19,"nextTick"],[40,29,44,27],[40,30,44,28],[40,42,44,40],[41,8,45,6,"cb"],[41,10,45,8],[41,11,45,9],[41,15,45,13],[41,17,45,15,"bytes"],[41,22,45,20],[41,23,45,21],[42,6,46,4],[42,7,46,5],[42,8,46,6],[43,4,47,2],[44,4,49,2],[44,11,49,9,"bytes"],[44,16,49,14],[45,2,50,0],[46,0,50,1],[46,3]],"functionMap":{"names":["<global>","oldBrowser","randomBytes","process.nextTick$argument_0"],"mappings":"AAA;ACU;CDE;AEW;4BCoB;KDE;CFI"}},"type":"js/module"}]}