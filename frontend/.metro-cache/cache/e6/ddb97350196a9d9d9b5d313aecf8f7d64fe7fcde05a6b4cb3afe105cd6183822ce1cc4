{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../actions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":55,"index":129}}],"key":"NZfIk1TkYePfdrID7eibfh4eb4I=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":59,"index":189}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"./instructions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":74,"index":264}}],"key":"Fxi0HOb3XwlWafScFYPpLit1DEQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateMultiplier = updateMultiplier;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _internal = require(_dependencyMap[1], \"../../actions/internal.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _instructions = require(_dependencyMap[3], \"./instructions.js\");\n  /**\n   * Update scaled UI amount multiplier\n   *\n   * @param connection            Connection to use\n   * @param payer                 Payer of the transaction fees\n   * @param mint                  The token mint\n   * @param owner                 Owner of the scaled UI amount mint\n   * @param multiplier            New multiplier\n   * @param effectiveTimestamp    Effective time stamp for the new multiplier\n   * @param multiSigners          Signing accounts if `owner` is a multisig\n   * @param confirmOptions        Options for confirming the transaction\n   * @param programId             SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function updateMultiplier(connection, payer, mint, owner, multiplier, effectiveTimestamp, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createUpdateMultiplierDataInstruction)(mint, ownerPublicKey, multiplier, effectiveTimestamp, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":30,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_internal"],[7,15,2,0],[7,18,2,0,"require"],[7,25,2,0],[7,26,2,0,"_dependencyMap"],[7,40,2,0],[8,2,3,0],[8,6,3,0,"_constants"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[9,6,4,0,"_instructions"],[9,19,4,0],[9,22,4,0,"require"],[9,29,4,0],[9,30,4,0,"_dependencyMap"],[9,44,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,2,20,7],[25,17,20,22,"updateMultiplier"],[25,33,20,38,"updateMultiplier"],[25,34,20,39,"connection"],[25,44,20,49],[25,46,20,51,"payer"],[25,51,20,56],[25,53,20,58,"mint"],[25,57,20,62],[25,59,20,64,"owner"],[25,64,20,69],[25,66,20,71,"multiplier"],[25,76,20,81],[25,78,20,83,"effectiveTimestamp"],[25,96,20,101],[25,98,20,103,"multiSigners"],[25,110,20,115],[25,113,20,118],[25,115,20,120],[25,117,20,122,"confirmOptions"],[25,131,20,136],[25,133,20,138,"programId"],[25,142,20,147],[25,145,20,150,"TOKEN_2022_PROGRAM_ID"],[25,177,20,171],[25,179,20,173],[26,4,21,4],[26,10,21,10],[26,11,21,11,"ownerPublicKey"],[26,25,21,25],[26,27,21,27,"signers"],[26,34,21,34],[26,35,21,35],[26,38,21,38],[26,42,21,38,"getSigners"],[26,62,21,48],[26,64,21,49,"owner"],[26,69,21,54],[26,71,21,56,"multiSigners"],[26,83,21,68],[26,84,21,69],[27,4,22,4],[27,10,22,10,"transaction"],[27,21,22,21],[27,24,22,24],[27,28,22,28,"Transaction"],[27,44,22,39],[27,45,22,40],[27,46,22,41],[27,47,22,42,"add"],[27,50,22,45],[27,51,22,46],[27,55,22,46,"createUpdateMultiplierDataInstruction"],[27,106,22,83],[27,108,22,84,"mint"],[27,112,22,88],[27,114,22,90,"ownerPublicKey"],[27,128,22,104],[27,130,22,106,"multiplier"],[27,140,22,116],[27,142,22,118,"effectiveTimestamp"],[27,160,22,136],[27,162,22,138,"multiSigners"],[27,174,22,150],[27,176,22,152,"programId"],[27,185,22,161],[27,186,22,162],[27,187,22,163],[28,4,23,4],[28,11,23,11],[28,17,23,17],[28,21,23,17,"sendAndConfirmTransaction"],[28,51,23,42],[28,53,23,43,"connection"],[28,63,23,53],[28,65,23,55,"transaction"],[28,76,23,66],[28,78,23,68],[28,79,23,69,"payer"],[28,84,23,74],[28,86,23,76],[28,89,23,79,"signers"],[28,96,23,86],[28,97,23,87],[28,99,23,89,"confirmOptions"],[28,113,23,103],[28,114,23,104],[29,2,24,0],[30,0,24,1],[30,3]],"functionMap":{"names":["<global>","updateMultiplier"],"mappings":"AAA;OCmB;CDI"}},"type":"js/module"}]}