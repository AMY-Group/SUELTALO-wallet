{"dependencies":[{"name":"./asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}}],"key":"yqi9BX2AAMC3biG3RtcJ+fUBI2Q=","exportNames":["*"]}},{"name":"./aesid.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":57},"end":{"line":4,"column":35,"index":80}}],"key":"fTHBRP7VuOHS9wa4QYbIbLdSu7k=","exportNames":["*"]}},{"name":"./fixProc","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":96},"end":{"line":5,"column":34,"index":116}}],"key":"6r/P/GXupL9DQPEXbYjq/hGGFB0=","exportNames":["*"]}},{"name":"browserify-aes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":132},"end":{"line":6,"column":39,"index":157}}],"key":"wGSnDtBSNDYVJj7EcrGHDojgmHU=","exportNames":["*"]}},{"name":"pbkdf2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":172},"end":{"line":7,"column":30,"index":189}}],"key":"1/dbhwRh6o3OR9626P/2VdN0D7E=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":204},"end":{"line":8,"column":35,"index":226}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var asn1 = require(_dependencyMap[0], \"./asn1\");\n  var aesid = require(_dependencyMap[1], \"./aesid.json\");\n  var fixProc = require(_dependencyMap[2], \"./fixProc\");\n  var ciphers = require(_dependencyMap[3], \"browserify-aes\");\n  var compat = require(_dependencyMap[4], \"pbkdf2\");\n  var Buffer = require(_dependencyMap[5], \"safe-buffer\").Buffer;\n  function decrypt(data, password) {\n    var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n    var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n    var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n    var iv = data.algorithm.decrypt.cipher.iv;\n    var cipherText = data.subjectPrivateKey;\n    var keylen = parseInt(algo.split('-')[1], 10) / 8;\n    var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n    var cipher = ciphers.createDecipheriv(algo, key, iv);\n    var out = [];\n    out.push(cipher.update(cipherText));\n    out.push(cipher['final']());\n    return Buffer.concat(out);\n  }\n  function parseKeys(buffer) {\n    var password;\n    if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n      password = buffer.passphrase;\n      buffer = buffer.key;\n    }\n    if (typeof buffer === 'string') {\n      buffer = Buffer.from(buffer);\n    }\n    var stripped = fixProc(buffer, password);\n    var type = stripped.tag;\n    var data = stripped.data;\n    var subtype, ndata;\n    switch (type) {\n      case 'CERTIFICATE':\n        ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n      // falls through\n      case 'PUBLIC KEY':\n        if (!ndata) {\n          ndata = asn1.PublicKey.decode(data, 'der');\n        }\n        subtype = ndata.algorithm.algorithm.join('.');\n        switch (subtype) {\n          case '1.2.840.113549.1.1.1':\n            return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n          case '1.2.840.10045.2.1':\n            ndata.subjectPrivateKey = ndata.subjectPublicKey;\n            return {\n              type: 'ec',\n              data: ndata\n            };\n          case '1.2.840.10040.4.1':\n            ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n            return {\n              type: 'dsa',\n              data: ndata.algorithm.params\n            };\n          default:\n            throw new Error('unknown key id ' + subtype);\n        }\n      // throw new Error('unknown key type ' + type)\n      case 'ENCRYPTED PRIVATE KEY':\n        data = asn1.EncryptedPrivateKey.decode(data, 'der');\n        data = decrypt(data, password);\n      // falls through\n      case 'PRIVATE KEY':\n        ndata = asn1.PrivateKey.decode(data, 'der');\n        subtype = ndata.algorithm.algorithm.join('.');\n        switch (subtype) {\n          case '1.2.840.113549.1.1.1':\n            return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n          case '1.2.840.10045.2.1':\n            return {\n              curve: ndata.algorithm.curve,\n              privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n            };\n          case '1.2.840.10040.4.1':\n            ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n            return {\n              type: 'dsa',\n              params: ndata.algorithm.params\n            };\n          default:\n            throw new Error('unknown key id ' + subtype);\n        }\n      // throw new Error('unknown key type ' + type)\n      case 'RSA PUBLIC KEY':\n        return asn1.RSAPublicKey.decode(data, 'der');\n      case 'RSA PRIVATE KEY':\n        return asn1.RSAPrivateKey.decode(data, 'der');\n      case 'DSA PRIVATE KEY':\n        return {\n          type: 'dsa',\n          params: asn1.DSAPrivateKey.decode(data, 'der')\n        };\n      case 'EC PRIVATE KEY':\n        data = asn1.ECPrivateKey.decode(data, 'der');\n        return {\n          curve: data.parameters.value,\n          privateKey: data.privateKey\n        };\n      default:\n        throw new Error('unknown key type ' + type);\n    }\n  }\n  parseKeys.signature = asn1.signature;\n  module.exports = parseKeys;\n});","lineCount":111,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"asn1"],[4,10,3,8],[4,13,3,11,"require"],[4,20,3,18],[4,21,3,18,"_dependencyMap"],[4,35,3,18],[4,48,3,27],[4,49,3,28],[5,2,4,0],[5,6,4,4,"aesid"],[5,11,4,9],[5,14,4,12,"require"],[5,21,4,19],[5,22,4,19,"_dependencyMap"],[5,36,4,19],[5,55,4,34],[5,56,4,35],[6,2,5,0],[6,6,5,4,"fixProc"],[6,13,5,11],[6,16,5,14,"require"],[6,23,5,21],[6,24,5,21,"_dependencyMap"],[6,38,5,21],[6,54,5,33],[6,55,5,34],[7,2,6,0],[7,6,6,4,"ciphers"],[7,13,6,11],[7,16,6,14,"require"],[7,23,6,21],[7,24,6,21,"_dependencyMap"],[7,38,6,21],[7,59,6,38],[7,60,6,39],[8,2,7,0],[8,6,7,4,"compat"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,50,7,29],[8,51,7,30],[9,2,8,0],[9,6,8,4,"Buffer"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,55,8,34],[9,56,8,35],[9,57,8,36,"Buffer"],[9,63,8,42],[10,2,10,0],[10,11,10,9,"decrypt"],[10,18,10,16,"decrypt"],[10,19,10,17,"data"],[10,23,10,21],[10,25,10,23,"password"],[10,33,10,31],[10,35,10,33],[11,4,11,1],[11,8,11,5,"salt"],[11,12,11,9],[11,15,11,12,"data"],[11,19,11,16],[11,20,11,17,"algorithm"],[11,29,11,26],[11,30,11,27,"decrypt"],[11,37,11,34],[11,38,11,35,"kde"],[11,41,11,38],[11,42,11,39,"kdeparams"],[11,51,11,48],[11,52,11,49,"salt"],[11,56,11,53],[12,4,12,1],[12,8,12,5,"iters"],[12,13,12,10],[12,16,12,13,"parseInt"],[12,24,12,21],[12,25,12,22,"data"],[12,29,12,26],[12,30,12,27,"algorithm"],[12,39,12,36],[12,40,12,37,"decrypt"],[12,47,12,44],[12,48,12,45,"kde"],[12,51,12,48],[12,52,12,49,"kdeparams"],[12,61,12,58],[12,62,12,59,"iters"],[12,67,12,64],[12,68,12,65,"toString"],[12,76,12,73],[12,77,12,74],[12,78,12,75],[12,80,12,77],[12,82,12,79],[12,83,12,80],[13,4,13,1],[13,8,13,5,"algo"],[13,12,13,9],[13,15,13,12,"aesid"],[13,20,13,17],[13,21,13,18,"data"],[13,25,13,22],[13,26,13,23,"algorithm"],[13,35,13,32],[13,36,13,33,"decrypt"],[13,43,13,40],[13,44,13,41,"cipher"],[13,50,13,47],[13,51,13,48,"algo"],[13,55,13,52],[13,56,13,53,"join"],[13,60,13,57],[13,61,13,58],[13,64,13,61],[13,65,13,62],[13,66,13,63],[14,4,14,1],[14,8,14,5,"iv"],[14,10,14,7],[14,13,14,10,"data"],[14,17,14,14],[14,18,14,15,"algorithm"],[14,27,14,24],[14,28,14,25,"decrypt"],[14,35,14,32],[14,36,14,33,"cipher"],[14,42,14,39],[14,43,14,40,"iv"],[14,45,14,42],[15,4,15,1],[15,8,15,5,"cipherText"],[15,18,15,15],[15,21,15,18,"data"],[15,25,15,22],[15,26,15,23,"subjectPrivateKey"],[15,43,15,40],[16,4,16,1],[16,8,16,5,"keylen"],[16,14,16,11],[16,17,16,14,"parseInt"],[16,25,16,22],[16,26,16,23,"algo"],[16,30,16,27],[16,31,16,28,"split"],[16,36,16,33],[16,37,16,34],[16,40,16,37],[16,41,16,38],[16,42,16,39],[16,43,16,40],[16,44,16,41],[16,46,16,43],[16,48,16,45],[16,49,16,46],[16,52,16,49],[16,53,16,50],[17,4,17,1],[17,8,17,5,"key"],[17,11,17,8],[17,14,17,11,"compat"],[17,20,17,17],[17,21,17,18,"pbkdf2Sync"],[17,31,17,28],[17,32,17,29,"password"],[17,40,17,37],[17,42,17,39,"salt"],[17,46,17,43],[17,48,17,45,"iters"],[17,53,17,50],[17,55,17,52,"keylen"],[17,61,17,58],[17,63,17,60],[17,69,17,66],[17,70,17,67],[18,4,18,1],[18,8,18,5,"cipher"],[18,14,18,11],[18,17,18,14,"ciphers"],[18,24,18,21],[18,25,18,22,"createDecipheriv"],[18,41,18,38],[18,42,18,39,"algo"],[18,46,18,43],[18,48,18,45,"key"],[18,51,18,48],[18,53,18,50,"iv"],[18,55,18,52],[18,56,18,53],[19,4,19,1],[19,8,19,5,"out"],[19,11,19,8],[19,14,19,11],[19,16,19,13],[20,4,20,1,"out"],[20,7,20,4],[20,8,20,5,"push"],[20,12,20,9],[20,13,20,10,"cipher"],[20,19,20,16],[20,20,20,17,"update"],[20,26,20,23],[20,27,20,24,"cipherText"],[20,37,20,34],[20,38,20,35],[20,39,20,36],[21,4,21,1,"out"],[21,7,21,4],[21,8,21,5,"push"],[21,12,21,9],[21,13,21,10,"cipher"],[21,19,21,16],[21,20,21,17],[21,27,21,24],[21,28,21,25],[21,29,21,26],[21,30,21,27],[21,31,21,28],[22,4,22,1],[22,11,22,8,"Buffer"],[22,17,22,14],[22,18,22,15,"concat"],[22,24,22,21],[22,25,22,22,"out"],[22,28,22,25],[22,29,22,26],[23,2,23,0],[24,2,25,0],[24,11,25,9,"parseKeys"],[24,20,25,18,"parseKeys"],[24,21,25,19,"buffer"],[24,27,25,25],[24,29,25,27],[25,4,26,1],[25,8,26,5,"password"],[25,16,26,13],[26,4,27,1],[26,8,27,5],[26,15,27,12,"buffer"],[26,21,27,18],[26,26,27,23],[26,34,27,31],[26,38,27,35],[26,39,27,36,"Buffer"],[26,45,27,42],[26,46,27,43,"isBuffer"],[26,54,27,51],[26,55,27,52,"buffer"],[26,61,27,58],[26,62,27,59],[26,64,27,61],[27,6,28,2,"password"],[27,14,28,10],[27,17,28,13,"buffer"],[27,23,28,19],[27,24,28,20,"passphrase"],[27,34,28,30],[28,6,29,2,"buffer"],[28,12,29,8],[28,15,29,11,"buffer"],[28,21,29,17],[28,22,29,18,"key"],[28,25,29,21],[29,4,30,1],[30,4,31,1],[30,8,31,5],[30,15,31,12,"buffer"],[30,21,31,18],[30,26,31,23],[30,34,31,31],[30,36,31,33],[31,6,32,2,"buffer"],[31,12,32,8],[31,15,32,11,"Buffer"],[31,21,32,17],[31,22,32,18,"from"],[31,26,32,22],[31,27,32,23,"buffer"],[31,33,32,29],[31,34,32,30],[32,4,33,1],[33,4,35,1],[33,8,35,5,"stripped"],[33,16,35,13],[33,19,35,16,"fixProc"],[33,26,35,23],[33,27,35,24,"buffer"],[33,33,35,30],[33,35,35,32,"password"],[33,43,35,40],[33,44,35,41],[34,4,37,1],[34,8,37,5,"type"],[34,12,37,9],[34,15,37,12,"stripped"],[34,23,37,20],[34,24,37,21,"tag"],[34,27,37,24],[35,4,38,1],[35,8,38,5,"data"],[35,12,38,9],[35,15,38,12,"stripped"],[35,23,38,20],[35,24,38,21,"data"],[35,28,38,25],[36,4,39,1],[36,8,39,5,"subtype"],[36,15,39,12],[36,17,39,14,"ndata"],[36,22,39,19],[37,4,40,1],[37,12,40,9,"type"],[37,16,40,13],[38,6,41,2],[38,11,41,7],[38,24,41,20],[39,8,42,3,"ndata"],[39,13,42,8],[39,16,42,11,"asn1"],[39,20,42,15],[39,21,42,16,"certificate"],[39,32,42,27],[39,33,42,28,"decode"],[39,39,42,34],[39,40,42,35,"data"],[39,44,42,39],[39,46,42,41],[39,51,42,46],[39,52,42,47],[39,53,42,48,"tbsCertificate"],[39,67,42,62],[39,68,42,63,"subjectPublicKeyInfo"],[39,88,42,83],[40,6,43,3],[41,6,44,2],[41,11,44,7],[41,23,44,19],[42,8,45,3],[42,12,45,7],[42,13,45,8,"ndata"],[42,18,45,13],[42,20,45,15],[43,10,46,4,"ndata"],[43,15,46,9],[43,18,46,12,"asn1"],[43,22,46,16],[43,23,46,17,"PublicKey"],[43,32,46,26],[43,33,46,27,"decode"],[43,39,46,33],[43,40,46,34,"data"],[43,44,46,38],[43,46,46,40],[43,51,46,45],[43,52,46,46],[44,8,47,3],[45,8,48,3,"subtype"],[45,15,48,10],[45,18,48,13,"ndata"],[45,23,48,18],[45,24,48,19,"algorithm"],[45,33,48,28],[45,34,48,29,"algorithm"],[45,43,48,38],[45,44,48,39,"join"],[45,48,48,43],[45,49,48,44],[45,52,48,47],[45,53,48,48],[46,8,49,3],[46,16,49,11,"subtype"],[46,23,49,18],[47,10,50,4],[47,15,50,9],[47,37,50,31],[48,12,51,5],[48,19,51,12,"asn1"],[48,23,51,16],[48,24,51,17,"RSAPublicKey"],[48,36,51,29],[48,37,51,30,"decode"],[48,43,51,36],[48,44,51,37,"ndata"],[48,49,51,42],[48,50,51,43,"subjectPublicKey"],[48,66,51,59],[48,67,51,60,"data"],[48,71,51,64],[48,73,51,66],[48,78,51,71],[48,79,51,72],[49,10,52,4],[49,15,52,9],[49,34,52,28],[50,12,53,5,"ndata"],[50,17,53,10],[50,18,53,11,"subjectPrivateKey"],[50,35,53,28],[50,38,53,31,"ndata"],[50,43,53,36],[50,44,53,37,"subjectPublicKey"],[50,60,53,53],[51,12,54,5],[51,19,54,12],[52,14,55,6,"type"],[52,18,55,10],[52,20,55,12],[52,24,55,16],[53,14,56,6,"data"],[53,18,56,10],[53,20,56,12,"ndata"],[54,12,57,5],[54,13,57,6],[55,10,58,4],[55,15,58,9],[55,34,58,28],[56,12,59,5,"ndata"],[56,17,59,10],[56,18,59,11,"algorithm"],[56,27,59,20],[56,28,59,21,"params"],[56,34,59,27],[56,35,59,28,"pub_key"],[56,42,59,35],[56,45,59,38,"asn1"],[56,49,59,42],[56,50,59,43,"DSAparam"],[56,58,59,51],[56,59,59,52,"decode"],[56,65,59,58],[56,66,59,59,"ndata"],[56,71,59,64],[56,72,59,65,"subjectPublicKey"],[56,88,59,81],[56,89,59,82,"data"],[56,93,59,86],[56,95,59,88],[56,100,59,93],[56,101,59,94],[57,12,60,5],[57,19,60,12],[58,14,61,6,"type"],[58,18,61,10],[58,20,61,12],[58,25,61,17],[59,14,62,6,"data"],[59,18,62,10],[59,20,62,12,"ndata"],[59,25,62,17],[59,26,62,18,"algorithm"],[59,35,62,27],[59,36,62,28,"params"],[60,12,63,5],[60,13,63,6],[61,10,64,4],[62,12,64,13],[62,18,64,19],[62,22,64,23,"Error"],[62,27,64,28],[62,28,64,29],[62,45,64,46],[62,48,64,49,"subtype"],[62,55,64,56],[62,56,64,57],[63,8,65,3],[64,6,66,3],[65,6,67,2],[65,11,67,7],[65,34,67,30],[66,8,68,3,"data"],[66,12,68,7],[66,15,68,10,"asn1"],[66,19,68,14],[66,20,68,15,"EncryptedPrivateKey"],[66,39,68,34],[66,40,68,35,"decode"],[66,46,68,41],[66,47,68,42,"data"],[66,51,68,46],[66,53,68,48],[66,58,68,53],[66,59,68,54],[67,8,69,3,"data"],[67,12,69,7],[67,15,69,10,"decrypt"],[67,22,69,17],[67,23,69,18,"data"],[67,27,69,22],[67,29,69,24,"password"],[67,37,69,32],[67,38,69,33],[68,6,70,3],[69,6,71,2],[69,11,71,7],[69,24,71,20],[70,8,72,3,"ndata"],[70,13,72,8],[70,16,72,11,"asn1"],[70,20,72,15],[70,21,72,16,"PrivateKey"],[70,31,72,26],[70,32,72,27,"decode"],[70,38,72,33],[70,39,72,34,"data"],[70,43,72,38],[70,45,72,40],[70,50,72,45],[70,51,72,46],[71,8,73,3,"subtype"],[71,15,73,10],[71,18,73,13,"ndata"],[71,23,73,18],[71,24,73,19,"algorithm"],[71,33,73,28],[71,34,73,29,"algorithm"],[71,43,73,38],[71,44,73,39,"join"],[71,48,73,43],[71,49,73,44],[71,52,73,47],[71,53,73,48],[72,8,74,3],[72,16,74,11,"subtype"],[72,23,74,18],[73,10,75,4],[73,15,75,9],[73,37,75,31],[74,12,76,5],[74,19,76,12,"asn1"],[74,23,76,16],[74,24,76,17,"RSAPrivateKey"],[74,37,76,30],[74,38,76,31,"decode"],[74,44,76,37],[74,45,76,38,"ndata"],[74,50,76,43],[74,51,76,44,"subjectPrivateKey"],[74,68,76,61],[74,70,76,63],[74,75,76,68],[74,76,76,69],[75,10,77,4],[75,15,77,9],[75,34,77,28],[76,12,78,5],[76,19,78,12],[77,14,79,6,"curve"],[77,19,79,11],[77,21,79,13,"ndata"],[77,26,79,18],[77,27,79,19,"algorithm"],[77,36,79,28],[77,37,79,29,"curve"],[77,42,79,34],[78,14,80,6,"privateKey"],[78,24,80,16],[78,26,80,18,"asn1"],[78,30,80,22],[78,31,80,23,"ECPrivateKey"],[78,43,80,35],[78,44,80,36,"decode"],[78,50,80,42],[78,51,80,43,"ndata"],[78,56,80,48],[78,57,80,49,"subjectPrivateKey"],[78,74,80,66],[78,76,80,68],[78,81,80,73],[78,82,80,74],[78,83,80,75,"privateKey"],[79,12,81,5],[79,13,81,6],[80,10,82,4],[80,15,82,9],[80,34,82,28],[81,12,83,5,"ndata"],[81,17,83,10],[81,18,83,11,"algorithm"],[81,27,83,20],[81,28,83,21,"params"],[81,34,83,27],[81,35,83,28,"priv_key"],[81,43,83,36],[81,46,83,39,"asn1"],[81,50,83,43],[81,51,83,44,"DSAparam"],[81,59,83,52],[81,60,83,53,"decode"],[81,66,83,59],[81,67,83,60,"ndata"],[81,72,83,65],[81,73,83,66,"subjectPrivateKey"],[81,90,83,83],[81,92,83,85],[81,97,83,90],[81,98,83,91],[82,12,84,5],[82,19,84,12],[83,14,85,6,"type"],[83,18,85,10],[83,20,85,12],[83,25,85,17],[84,14,86,6,"params"],[84,20,86,12],[84,22,86,14,"ndata"],[84,27,86,19],[84,28,86,20,"algorithm"],[84,37,86,29],[84,38,86,30,"params"],[85,12,87,5],[85,13,87,6],[86,10,88,4],[87,12,88,13],[87,18,88,19],[87,22,88,23,"Error"],[87,27,88,28],[87,28,88,29],[87,45,88,46],[87,48,88,49,"subtype"],[87,55,88,56],[87,56,88,57],[88,8,89,3],[89,6,90,3],[90,6,91,2],[90,11,91,7],[90,27,91,23],[91,8,92,3],[91,15,92,10,"asn1"],[91,19,92,14],[91,20,92,15,"RSAPublicKey"],[91,32,92,27],[91,33,92,28,"decode"],[91,39,92,34],[91,40,92,35,"data"],[91,44,92,39],[91,46,92,41],[91,51,92,46],[91,52,92,47],[92,6,93,2],[92,11,93,7],[92,28,93,24],[93,8,94,3],[93,15,94,10,"asn1"],[93,19,94,14],[93,20,94,15,"RSAPrivateKey"],[93,33,94,28],[93,34,94,29,"decode"],[93,40,94,35],[93,41,94,36,"data"],[93,45,94,40],[93,47,94,42],[93,52,94,47],[93,53,94,48],[94,6,95,2],[94,11,95,7],[94,28,95,24],[95,8,96,3],[95,15,96,10],[96,10,97,4,"type"],[96,14,97,8],[96,16,97,10],[96,21,97,15],[97,10,98,4,"params"],[97,16,98,10],[97,18,98,12,"asn1"],[97,22,98,16],[97,23,98,17,"DSAPrivateKey"],[97,36,98,30],[97,37,98,31,"decode"],[97,43,98,37],[97,44,98,38,"data"],[97,48,98,42],[97,50,98,44],[97,55,98,49],[98,8,99,3],[98,9,99,4],[99,6,100,2],[99,11,100,7],[99,27,100,23],[100,8,101,3,"data"],[100,12,101,7],[100,15,101,10,"asn1"],[100,19,101,14],[100,20,101,15,"ECPrivateKey"],[100,32,101,27],[100,33,101,28,"decode"],[100,39,101,34],[100,40,101,35,"data"],[100,44,101,39],[100,46,101,41],[100,51,101,46],[100,52,101,47],[101,8,102,3],[101,15,102,10],[102,10,103,4,"curve"],[102,15,103,9],[102,17,103,11,"data"],[102,21,103,15],[102,22,103,16,"parameters"],[102,32,103,26],[102,33,103,27,"value"],[102,38,103,32],[103,10,104,4,"privateKey"],[103,20,104,14],[103,22,104,16,"data"],[103,26,104,20],[103,27,104,21,"privateKey"],[104,8,105,3],[104,9,105,4],[105,6,106,2],[106,8,106,11],[106,14,106,17],[106,18,106,21,"Error"],[106,23,106,26],[106,24,106,27],[106,43,106,46],[106,46,106,49,"type"],[106,50,106,53],[106,51,106,54],[107,4,107,1],[108,2,108,0],[109,2,109,0,"parseKeys"],[109,11,109,9],[109,12,109,10,"signature"],[109,21,109,19],[109,24,109,22,"asn1"],[109,28,109,26],[109,29,109,27,"signature"],[109,38,109,36],[110,2,111,0,"module"],[110,8,111,6],[110,9,111,7,"exports"],[110,16,111,14],[110,19,111,17,"parseKeys"],[110,28,111,26],[111,0,111,27],[111,3]],"functionMap":{"names":["<global>","decrypt","parseKeys"],"mappings":"AAA;ACS;CDa;AEE;CFmF"}},"type":"js/module"}]}