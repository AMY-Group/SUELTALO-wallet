{"dependencies":[{"name":"hash.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":29,"index":44}}],"key":"wgL2kNc06mq/tMLGadAVxXPgynA=","exportNames":["*"]}},{"name":"minimalistic-crypto-utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}}],"key":"LxQwbyF4lUQg/qW6zaXeo9xbNJM=","exportNames":["*"]}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":109},"end":{"line":5,"column":43,"index":139}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var hash = require(_dependencyMap[0], \"hash.js\");\n  var utils = require(_dependencyMap[1], \"minimalistic-crypto-utils\");\n  var assert = require(_dependencyMap[2], \"minimalistic-assert\");\n  function HmacDRBG(options) {\n    if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n    this.hash = options.hash;\n    this.predResist = !!options.predResist;\n    this.outLen = this.hash.outSize;\n    this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n    this._reseed = null;\n    this.reseedInterval = null;\n    this.K = null;\n    this.V = null;\n    var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n    var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n    var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n    this._init(entropy, nonce, pers);\n  }\n  module.exports = HmacDRBG;\n  HmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n    var seed = entropy.concat(nonce).concat(pers);\n    this.K = new Array(this.outLen / 8);\n    this.V = new Array(this.outLen / 8);\n    for (var i = 0; i < this.V.length; i++) {\n      this.K[i] = 0x00;\n      this.V[i] = 0x01;\n    }\n    this._update(seed);\n    this._reseed = 1;\n    this.reseedInterval = 0x1000000000000; // 2^48\n  };\n  HmacDRBG.prototype._hmac = function hmac() {\n    return new hash.hmac(this.hash, this.K);\n  };\n  HmacDRBG.prototype._update = function update(seed) {\n    var kmac = this._hmac().update(this.V).update([0x00]);\n    if (seed) kmac = kmac.update(seed);\n    this.K = kmac.digest();\n    this.V = this._hmac().update(this.V).digest();\n    if (!seed) return;\n    this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n    this.V = this._hmac().update(this.V).digest();\n  };\n  HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n    // Optional entropy enc\n    if (typeof entropyEnc !== 'string') {\n      addEnc = add;\n      add = entropyEnc;\n      entropyEnc = null;\n    }\n    entropy = utils.toArray(entropy, entropyEnc);\n    add = utils.toArray(add, addEnc);\n    assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n    this._update(entropy.concat(add || []));\n    this._reseed = 1;\n  };\n  HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n    if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');\n\n    // Optional encoding\n    if (typeof enc !== 'string') {\n      addEnc = add;\n      add = enc;\n      enc = null;\n    }\n\n    // Optional additional data\n    if (add) {\n      add = utils.toArray(add, addEnc || 'hex');\n      this._update(add);\n    }\n    var temp = [];\n    while (temp.length < len) {\n      this.V = this._hmac().update(this.V).digest();\n      temp = temp.concat(this.V);\n    }\n    var res = temp.slice(0, len);\n    this._update(add);\n    this._reseed++;\n    return utils.encode(res, enc);\n  };\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"hash"],[4,10,3,8],[4,13,3,11,"require"],[4,20,3,18],[4,21,3,18,"_dependencyMap"],[4,35,3,18],[4,49,3,28],[4,50,3,29],[5,2,4,0],[5,6,4,4,"utils"],[5,11,4,9],[5,14,4,12,"require"],[5,21,4,19],[5,22,4,19,"_dependencyMap"],[5,36,4,19],[5,68,4,47],[5,69,4,48],[6,2,5,0],[6,6,5,4,"assert"],[6,12,5,10],[6,15,5,13,"require"],[6,22,5,20],[6,23,5,20,"_dependencyMap"],[6,37,5,20],[6,63,5,42],[6,64,5,43],[7,2,7,0],[7,11,7,9,"HmacDRBG"],[7,19,7,17,"HmacDRBG"],[7,20,7,18,"options"],[7,27,7,25],[7,29,7,27],[8,4,8,2],[8,8,8,6],[8,10,8,8],[8,14,8,12],[8,26,8,24,"HmacDRBG"],[8,34,8,32],[8,35,8,33],[8,37,9,4],[8,44,9,11],[8,48,9,15,"HmacDRBG"],[8,56,9,23],[8,57,9,24,"options"],[8,64,9,31],[8,65,9,32],[9,4,10,2],[9,8,10,6],[9,9,10,7,"hash"],[9,13,10,11],[9,16,10,14,"options"],[9,23,10,21],[9,24,10,22,"hash"],[9,28,10,26],[10,4,11,2],[10,8,11,6],[10,9,11,7,"predResist"],[10,19,11,17],[10,22,11,20],[10,23,11,21],[10,24,11,22,"options"],[10,31,11,29],[10,32,11,30,"predResist"],[10,42,11,40],[11,4,13,2],[11,8,13,6],[11,9,13,7,"outLen"],[11,15,13,13],[11,18,13,16],[11,22,13,20],[11,23,13,21,"hash"],[11,27,13,25],[11,28,13,26,"outSize"],[11,35,13,33],[12,4,14,2],[12,8,14,6],[12,9,14,7,"minEntropy"],[12,19,14,17],[12,22,14,20,"options"],[12,29,14,27],[12,30,14,28,"minEntropy"],[12,40,14,38],[12,44,14,42],[12,48,14,46],[12,49,14,47,"hash"],[12,53,14,51],[12,54,14,52,"hmacStrength"],[12,66,14,64],[13,4,16,2],[13,8,16,6],[13,9,16,7,"_reseed"],[13,16,16,14],[13,19,16,17],[13,23,16,21],[14,4,17,2],[14,8,17,6],[14,9,17,7,"reseedInterval"],[14,23,17,21],[14,26,17,24],[14,30,17,28],[15,4,18,2],[15,8,18,6],[15,9,18,7,"K"],[15,10,18,8],[15,13,18,11],[15,17,18,15],[16,4,19,2],[16,8,19,6],[16,9,19,7,"V"],[16,10,19,8],[16,13,19,11],[16,17,19,15],[17,4,21,2],[17,8,21,6,"entropy"],[17,15,21,13],[17,18,21,16,"utils"],[17,23,21,21],[17,24,21,22,"toArray"],[17,31,21,29],[17,32,21,30,"options"],[17,39,21,37],[17,40,21,38,"entropy"],[17,47,21,45],[17,49,21,47,"options"],[17,56,21,54],[17,57,21,55,"entropyEnc"],[17,67,21,65],[17,71,21,69],[17,76,21,74],[17,77,21,75],[18,4,22,2],[18,8,22,6,"nonce"],[18,13,22,11],[18,16,22,14,"utils"],[18,21,22,19],[18,22,22,20,"toArray"],[18,29,22,27],[18,30,22,28,"options"],[18,37,22,35],[18,38,22,36,"nonce"],[18,43,22,41],[18,45,22,43,"options"],[18,52,22,50],[18,53,22,51,"nonceEnc"],[18,61,22,59],[18,65,22,63],[18,70,22,68],[18,71,22,69],[19,4,23,2],[19,8,23,6,"pers"],[19,12,23,10],[19,15,23,13,"utils"],[19,20,23,18],[19,21,23,19,"toArray"],[19,28,23,26],[19,29,23,27,"options"],[19,36,23,34],[19,37,23,35,"pers"],[19,41,23,39],[19,43,23,41,"options"],[19,50,23,48],[19,51,23,49,"persEnc"],[19,58,23,56],[19,62,23,60],[19,67,23,65],[19,68,23,66],[20,4,24,2,"assert"],[20,10,24,8],[20,11,24,9,"entropy"],[20,18,24,16],[20,19,24,17,"length"],[20,25,24,23],[20,29,24,28],[20,33,24,32],[20,34,24,33,"minEntropy"],[20,44,24,43],[20,47,24,46],[20,48,24,48],[20,50,25,9],[20,84,25,43],[20,87,25,46],[20,91,25,50],[20,92,25,51,"minEntropy"],[20,102,25,61],[20,105,25,64],[20,112,25,71],[20,113,25,72],[21,4,26,2],[21,8,26,6],[21,9,26,7,"_init"],[21,14,26,12],[21,15,26,13,"entropy"],[21,22,26,20],[21,24,26,22,"nonce"],[21,29,26,27],[21,31,26,29,"pers"],[21,35,26,33],[21,36,26,34],[22,2,27,0],[23,2,28,0,"module"],[23,8,28,6],[23,9,28,7,"exports"],[23,16,28,14],[23,19,28,17,"HmacDRBG"],[23,27,28,25],[24,2,30,0,"HmacDRBG"],[24,10,30,8],[24,11,30,9,"prototype"],[24,20,30,18],[24,21,30,19,"_init"],[24,26,30,24],[24,29,30,27],[24,38,30,36,"init"],[24,42,30,40,"init"],[24,43,30,41,"entropy"],[24,50,30,48],[24,52,30,50,"nonce"],[24,57,30,55],[24,59,30,57,"pers"],[24,63,30,61],[24,65,30,63],[25,4,31,2],[25,8,31,6,"seed"],[25,12,31,10],[25,15,31,13,"entropy"],[25,22,31,20],[25,23,31,21,"concat"],[25,29,31,27],[25,30,31,28,"nonce"],[25,35,31,33],[25,36,31,34],[25,37,31,35,"concat"],[25,43,31,41],[25,44,31,42,"pers"],[25,48,31,46],[25,49,31,47],[26,4,33,2],[26,8,33,6],[26,9,33,7,"K"],[26,10,33,8],[26,13,33,11],[26,17,33,15,"Array"],[26,22,33,20],[26,23,33,21],[26,27,33,25],[26,28,33,26,"outLen"],[26,34,33,32],[26,37,33,35],[26,38,33,36],[26,39,33,37],[27,4,34,2],[27,8,34,6],[27,9,34,7,"V"],[27,10,34,8],[27,13,34,11],[27,17,34,15,"Array"],[27,22,34,20],[27,23,34,21],[27,27,34,25],[27,28,34,26,"outLen"],[27,34,34,32],[27,37,34,35],[27,38,34,36],[27,39,34,37],[28,4,35,2],[28,9,35,7],[28,13,35,11,"i"],[28,14,35,12],[28,17,35,15],[28,18,35,16],[28,20,35,18,"i"],[28,21,35,19],[28,24,35,22],[28,28,35,26],[28,29,35,27,"V"],[28,30,35,28],[28,31,35,29,"length"],[28,37,35,35],[28,39,35,37,"i"],[28,40,35,38],[28,42,35,40],[28,44,35,42],[29,6,36,4],[29,10,36,8],[29,11,36,9,"K"],[29,12,36,10],[29,13,36,11,"i"],[29,14,36,12],[29,15,36,13],[29,18,36,16],[29,22,36,20],[30,6,37,4],[30,10,37,8],[30,11,37,9,"V"],[30,12,37,10],[30,13,37,11,"i"],[30,14,37,12],[30,15,37,13],[30,18,37,16],[30,22,37,20],[31,4,38,2],[32,4,40,2],[32,8,40,6],[32,9,40,7,"_update"],[32,16,40,14],[32,17,40,15,"seed"],[32,21,40,19],[32,22,40,20],[33,4,41,2],[33,8,41,6],[33,9,41,7,"_reseed"],[33,16,41,14],[33,19,41,17],[33,20,41,18],[34,4,42,2],[34,8,42,6],[34,9,42,7,"reseedInterval"],[34,23,42,21],[34,26,42,24],[34,41,42,39],[34,42,42,40],[34,43,42,42],[35,2,43,0],[35,3,43,1],[36,2,45,0,"HmacDRBG"],[36,10,45,8],[36,11,45,9,"prototype"],[36,20,45,18],[36,21,45,19,"_hmac"],[36,26,45,24],[36,29,45,27],[36,38,45,36,"hmac"],[36,42,45,40,"hmac"],[36,43,45,40],[36,45,45,43],[37,4,46,2],[37,11,46,9],[37,15,46,13,"hash"],[37,19,46,17],[37,20,46,18,"hmac"],[37,24,46,22],[37,25,46,23],[37,29,46,27],[37,30,46,28,"hash"],[37,34,46,32],[37,36,46,34],[37,40,46,38],[37,41,46,39,"K"],[37,42,46,40],[37,43,46,41],[38,2,47,0],[38,3,47,1],[39,2,49,0,"HmacDRBG"],[39,10,49,8],[39,11,49,9,"prototype"],[39,20,49,18],[39,21,49,19,"_update"],[39,28,49,26],[39,31,49,29],[39,40,49,38,"update"],[39,46,49,44,"update"],[39,47,49,45,"seed"],[39,51,49,49],[39,53,49,51],[40,4,50,2],[40,8,50,6,"kmac"],[40,12,50,10],[40,15,50,13],[40,19,50,17],[40,20,50,18,"_hmac"],[40,25,50,23],[40,26,50,24],[40,27,50,25],[40,28,51,18,"update"],[40,34,51,24],[40,35,51,25],[40,39,51,29],[40,40,51,30,"V"],[40,41,51,31],[40,42,51,32],[40,43,52,18,"update"],[40,49,52,24],[40,50,52,25],[40,51,52,27],[40,55,52,31],[40,56,52,33],[40,57,52,34],[41,4,53,2],[41,8,53,6,"seed"],[41,12,53,10],[41,14,54,4,"kmac"],[41,18,54,8],[41,21,54,11,"kmac"],[41,25,54,15],[41,26,54,16,"update"],[41,32,54,22],[41,33,54,23,"seed"],[41,37,54,27],[41,38,54,28],[42,4,55,2],[42,8,55,6],[42,9,55,7,"K"],[42,10,55,8],[42,13,55,11,"kmac"],[42,17,55,15],[42,18,55,16,"digest"],[42,24,55,22],[42,25,55,23],[42,26,55,24],[43,4,56,2],[43,8,56,6],[43,9,56,7,"V"],[43,10,56,8],[43,13,56,11],[43,17,56,15],[43,18,56,16,"_hmac"],[43,23,56,21],[43,24,56,22],[43,25,56,23],[43,26,56,24,"update"],[43,32,56,30],[43,33,56,31],[43,37,56,35],[43,38,56,36,"V"],[43,39,56,37],[43,40,56,38],[43,41,56,39,"digest"],[43,47,56,45],[43,48,56,46],[43,49,56,47],[44,4,57,2],[44,8,57,6],[44,9,57,7,"seed"],[44,13,57,11],[44,15,58,4],[45,4,60,2],[45,8,60,6],[45,9,60,7,"K"],[45,10,60,8],[45,13,60,11],[45,17,60,15],[45,18,60,16,"_hmac"],[45,23,60,21],[45,24,60,22],[45,25,60,23],[45,26,61,16,"update"],[45,32,61,22],[45,33,61,23],[45,37,61,27],[45,38,61,28,"V"],[45,39,61,29],[45,40,61,30],[45,41,62,16,"update"],[45,47,62,22],[45,48,62,23],[45,49,62,25],[45,53,62,29],[45,54,62,31],[45,55,62,32],[45,56,63,16,"update"],[45,62,63,22],[45,63,63,23,"seed"],[45,67,63,27],[45,68,63,28],[45,69,64,16,"digest"],[45,75,64,22],[45,76,64,23],[45,77,64,24],[46,4,65,2],[46,8,65,6],[46,9,65,7,"V"],[46,10,65,8],[46,13,65,11],[46,17,65,15],[46,18,65,16,"_hmac"],[46,23,65,21],[46,24,65,22],[46,25,65,23],[46,26,65,24,"update"],[46,32,65,30],[46,33,65,31],[46,37,65,35],[46,38,65,36,"V"],[46,39,65,37],[46,40,65,38],[46,41,65,39,"digest"],[46,47,65,45],[46,48,65,46],[46,49,65,47],[47,2,66,0],[47,3,66,1],[48,2,68,0,"HmacDRBG"],[48,10,68,8],[48,11,68,9,"prototype"],[48,20,68,18],[48,21,68,19,"reseed"],[48,27,68,25],[48,30,68,28],[48,39,68,37,"reseed"],[48,45,68,43,"reseed"],[48,46,68,44,"entropy"],[48,53,68,51],[48,55,68,53,"entropyEnc"],[48,65,68,63],[48,67,68,65,"add"],[48,70,68,68],[48,72,68,70,"addEnc"],[48,78,68,76],[48,80,68,78],[49,4,69,2],[50,4,70,2],[50,8,70,6],[50,15,70,13,"entropyEnc"],[50,25,70,23],[50,30,70,28],[50,38,70,36],[50,40,70,38],[51,6,71,4,"addEnc"],[51,12,71,10],[51,15,71,13,"add"],[51,18,71,16],[52,6,72,4,"add"],[52,9,72,7],[52,12,72,10,"entropyEnc"],[52,22,72,20],[53,6,73,4,"entropyEnc"],[53,16,73,14],[53,19,73,17],[53,23,73,21],[54,4,74,2],[55,4,76,2,"entropy"],[55,11,76,9],[55,14,76,12,"utils"],[55,19,76,17],[55,20,76,18,"toArray"],[55,27,76,25],[55,28,76,26,"entropy"],[55,35,76,33],[55,37,76,35,"entropyEnc"],[55,47,76,45],[55,48,76,46],[56,4,77,2,"add"],[56,7,77,5],[56,10,77,8,"utils"],[56,15,77,13],[56,16,77,14,"toArray"],[56,23,77,21],[56,24,77,22,"add"],[56,27,77,25],[56,29,77,27,"addEnc"],[56,35,77,33],[56,36,77,34],[57,4,79,2,"assert"],[57,10,79,8],[57,11,79,9,"entropy"],[57,18,79,16],[57,19,79,17,"length"],[57,25,79,23],[57,29,79,28],[57,33,79,32],[57,34,79,33,"minEntropy"],[57,44,79,43],[57,47,79,46],[57,48,79,48],[57,50,80,9],[57,84,80,43],[57,87,80,46],[57,91,80,50],[57,92,80,51,"minEntropy"],[57,102,80,61],[57,105,80,64],[57,112,80,71],[57,113,80,72],[58,4,82,2],[58,8,82,6],[58,9,82,7,"_update"],[58,16,82,14],[58,17,82,15,"entropy"],[58,24,82,22],[58,25,82,23,"concat"],[58,31,82,29],[58,32,82,30,"add"],[58,35,82,33],[58,39,82,37],[58,41,82,39],[58,42,82,40],[58,43,82,41],[59,4,83,2],[59,8,83,6],[59,9,83,7,"_reseed"],[59,16,83,14],[59,19,83,17],[59,20,83,18],[60,2,84,0],[60,3,84,1],[61,2,86,0,"HmacDRBG"],[61,10,86,8],[61,11,86,9,"prototype"],[61,20,86,18],[61,21,86,19,"generate"],[61,29,86,27],[61,32,86,30],[61,41,86,39,"generate"],[61,49,86,47,"generate"],[61,50,86,48,"len"],[61,53,86,51],[61,55,86,53,"enc"],[61,58,86,56],[61,60,86,58,"add"],[61,63,86,61],[61,65,86,63,"addEnc"],[61,71,86,69],[61,73,86,71],[62,4,87,2],[62,8,87,6],[62,12,87,10],[62,13,87,11,"_reseed"],[62,20,87,18],[62,23,87,21],[62,27,87,25],[62,28,87,26,"reseedInterval"],[62,42,87,40],[62,44,88,4],[62,50,88,10],[62,54,88,14,"Error"],[62,59,88,19],[62,60,88,20],[62,80,88,40],[62,81,88,41],[64,4,90,2],[65,4,91,2],[65,8,91,6],[65,15,91,13,"enc"],[65,18,91,16],[65,23,91,21],[65,31,91,29],[65,33,91,31],[66,6,92,4,"addEnc"],[66,12,92,10],[66,15,92,13,"add"],[66,18,92,16],[67,6,93,4,"add"],[67,9,93,7],[67,12,93,10,"enc"],[67,15,93,13],[68,6,94,4,"enc"],[68,9,94,7],[68,12,94,10],[68,16,94,14],[69,4,95,2],[71,4,97,2],[72,4,98,2],[72,8,98,6,"add"],[72,11,98,9],[72,13,98,11],[73,6,99,4,"add"],[73,9,99,7],[73,12,99,10,"utils"],[73,17,99,15],[73,18,99,16,"toArray"],[73,25,99,23],[73,26,99,24,"add"],[73,29,99,27],[73,31,99,29,"addEnc"],[73,37,99,35],[73,41,99,39],[73,46,99,44],[73,47,99,45],[74,6,100,4],[74,10,100,8],[74,11,100,9,"_update"],[74,18,100,16],[74,19,100,17,"add"],[74,22,100,20],[74,23,100,21],[75,4,101,2],[76,4,103,2],[76,8,103,6,"temp"],[76,12,103,10],[76,15,103,13],[76,17,103,15],[77,4,104,2],[77,11,104,9,"temp"],[77,15,104,13],[77,16,104,14,"length"],[77,22,104,20],[77,25,104,23,"len"],[77,28,104,26],[77,30,104,28],[78,6,105,4],[78,10,105,8],[78,11,105,9,"V"],[78,12,105,10],[78,15,105,13],[78,19,105,17],[78,20,105,18,"_hmac"],[78,25,105,23],[78,26,105,24],[78,27,105,25],[78,28,105,26,"update"],[78,34,105,32],[78,35,105,33],[78,39,105,37],[78,40,105,38,"V"],[78,41,105,39],[78,42,105,40],[78,43,105,41,"digest"],[78,49,105,47],[78,50,105,48],[78,51,105,49],[79,6,106,4,"temp"],[79,10,106,8],[79,13,106,11,"temp"],[79,17,106,15],[79,18,106,16,"concat"],[79,24,106,22],[79,25,106,23],[79,29,106,27],[79,30,106,28,"V"],[79,31,106,29],[79,32,106,30],[80,4,107,2],[81,4,109,2],[81,8,109,6,"res"],[81,11,109,9],[81,14,109,12,"temp"],[81,18,109,16],[81,19,109,17,"slice"],[81,24,109,22],[81,25,109,23],[81,26,109,24],[81,28,109,26,"len"],[81,31,109,29],[81,32,109,30],[82,4,110,2],[82,8,110,6],[82,9,110,7,"_update"],[82,16,110,14],[82,17,110,15,"add"],[82,20,110,18],[82,21,110,19],[83,4,111,2],[83,8,111,6],[83,9,111,7,"_reseed"],[83,16,111,14],[83,18,111,16],[84,4,112,2],[84,11,112,9,"utils"],[84,16,112,14],[84,17,112,15,"encode"],[84,23,112,21],[84,24,112,22,"res"],[84,27,112,25],[84,29,112,27,"enc"],[84,32,112,30],[84,33,112,31],[85,2,113,0],[85,3,113,1],[86,0,113,2],[86,3]],"functionMap":{"names":["<global>","HmacDRBG","init","hmac","update","reseed","generate"],"mappings":"AAA;ACM;CDoB;2BEG;CFa;2BGE;CHE;6BIE;CJiB;4BKE;CLgB;8BME;CN2B"}},"type":"js/module"}]}