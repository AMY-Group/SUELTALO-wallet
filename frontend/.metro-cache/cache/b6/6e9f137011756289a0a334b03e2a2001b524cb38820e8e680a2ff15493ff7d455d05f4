{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":35,"index":35}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Buffer = require(_dependencyMap[0], \"safe-buffer\").Buffer;\n  var ZEROES = Buffer.alloc(16, 0);\n  function toArray(buf) {\n    return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)];\n  }\n  function fromArray(out) {\n    var buf = Buffer.allocUnsafe(16);\n    buf.writeUInt32BE(out[0] >>> 0, 0);\n    buf.writeUInt32BE(out[1] >>> 0, 4);\n    buf.writeUInt32BE(out[2] >>> 0, 8);\n    buf.writeUInt32BE(out[3] >>> 0, 12);\n    return buf;\n  }\n  function GHASH(key) {\n    this.h = key;\n    this.state = Buffer.alloc(16, 0);\n    this.cache = Buffer.allocUnsafe(0);\n  }\n\n  // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n  // by Juho Vähä-Herttua\n  GHASH.prototype.ghash = function (block) {\n    var i = -1;\n    while (++i < block.length) {\n      this.state[i] ^= block[i];\n    }\n    this._multiply();\n  };\n  GHASH.prototype._multiply = function () {\n    var Vi = toArray(this.h);\n    var Zi = [0, 0, 0, 0];\n    var j, xi, lsbVi;\n    var i = -1;\n    while (++i < 128) {\n      xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;\n      if (xi) {\n        // Z_i+1 = Z_i ^ V_i\n        Zi[0] ^= Vi[0];\n        Zi[1] ^= Vi[1];\n        Zi[2] ^= Vi[2];\n        Zi[3] ^= Vi[3];\n      }\n\n      // Store the value of LSB(V_i)\n      lsbVi = (Vi[3] & 1) !== 0;\n\n      // V_i+1 = V_i >> 1\n      for (j = 3; j > 0; j--) {\n        Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;\n      }\n      Vi[0] = Vi[0] >>> 1;\n\n      // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n      if (lsbVi) {\n        Vi[0] = Vi[0] ^ 0xe1 << 24;\n      }\n    }\n    this.state = fromArray(Zi);\n  };\n  GHASH.prototype.update = function (buf) {\n    this.cache = Buffer.concat([this.cache, buf]);\n    var chunk;\n    while (this.cache.length >= 16) {\n      chunk = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      this.ghash(chunk);\n    }\n  };\n  GHASH.prototype.final = function (abl, bl) {\n    if (this.cache.length) {\n      this.ghash(Buffer.concat([this.cache, ZEROES], 16));\n    }\n    this.ghash(fromArray([0, abl, 0, bl]));\n    return this.state;\n  };\n  module.exports = GHASH;\n});","lineCount":78,"map":[[2,2,1,0],[2,6,1,4,"Buffer"],[2,12,1,10],[2,15,1,13,"require"],[2,22,1,20],[2,23,1,20,"_dependencyMap"],[2,37,1,20],[2,55,1,34],[2,56,1,35],[2,57,1,36,"Buffer"],[2,63,1,42],[3,2,2,0],[3,6,2,4,"ZEROES"],[3,12,2,10],[3,15,2,13,"Buffer"],[3,21,2,19],[3,22,2,20,"alloc"],[3,27,2,25],[3,28,2,26],[3,30,2,28],[3,32,2,30],[3,33,2,31],[3,34,2,32],[4,2,4,0],[4,11,4,9,"toArray"],[4,18,4,16,"toArray"],[4,19,4,18,"buf"],[4,22,4,21],[4,24,4,23],[5,4,5,2],[5,11,5,9],[5,12,6,4,"buf"],[5,15,6,7],[5,16,6,8,"readUInt32BE"],[5,28,6,20],[5,29,6,21],[5,30,6,22],[5,31,6,23],[5,33,7,4,"buf"],[5,36,7,7],[5,37,7,8,"readUInt32BE"],[5,49,7,20],[5,50,7,21],[5,51,7,22],[5,52,7,23],[5,54,8,4,"buf"],[5,57,8,7],[5,58,8,8,"readUInt32BE"],[5,70,8,20],[5,71,8,21],[5,72,8,22],[5,73,8,23],[5,75,9,4,"buf"],[5,78,9,7],[5,79,9,8,"readUInt32BE"],[5,91,9,20],[5,92,9,21],[5,94,9,23],[5,95,9,24],[5,96,10,3],[6,2,11,0],[7,2,13,0],[7,11,13,9,"fromArray"],[7,20,13,18,"fromArray"],[7,21,13,20,"out"],[7,24,13,23],[7,26,13,25],[8,4,14,2],[8,8,14,6,"buf"],[8,11,14,9],[8,14,14,12,"Buffer"],[8,20,14,18],[8,21,14,19,"allocUnsafe"],[8,32,14,30],[8,33,14,31],[8,35,14,33],[8,36,14,34],[9,4,15,2,"buf"],[9,7,15,5],[9,8,15,6,"writeUInt32BE"],[9,21,15,19],[9,22,15,20,"out"],[9,25,15,23],[9,26,15,24],[9,27,15,25],[9,28,15,26],[9,33,15,31],[9,34,15,32],[9,36,15,34],[9,37,15,35],[9,38,15,36],[10,4,16,2,"buf"],[10,7,16,5],[10,8,16,6,"writeUInt32BE"],[10,21,16,19],[10,22,16,20,"out"],[10,25,16,23],[10,26,16,24],[10,27,16,25],[10,28,16,26],[10,33,16,31],[10,34,16,32],[10,36,16,34],[10,37,16,35],[10,38,16,36],[11,4,17,2,"buf"],[11,7,17,5],[11,8,17,6,"writeUInt32BE"],[11,21,17,19],[11,22,17,20,"out"],[11,25,17,23],[11,26,17,24],[11,27,17,25],[11,28,17,26],[11,33,17,31],[11,34,17,32],[11,36,17,34],[11,37,17,35],[11,38,17,36],[12,4,18,2,"buf"],[12,7,18,5],[12,8,18,6,"writeUInt32BE"],[12,21,18,19],[12,22,18,20,"out"],[12,25,18,23],[12,26,18,24],[12,27,18,25],[12,28,18,26],[12,33,18,31],[12,34,18,32],[12,36,18,34],[12,38,18,36],[12,39,18,37],[13,4,19,2],[13,11,19,9,"buf"],[13,14,19,12],[14,2,20,0],[15,2,22,0],[15,11,22,9,"GHASH"],[15,16,22,14,"GHASH"],[15,17,22,16,"key"],[15,20,22,19],[15,22,22,21],[16,4,23,2],[16,8,23,6],[16,9,23,7,"h"],[16,10,23,8],[16,13,23,11,"key"],[16,16,23,14],[17,4,24,2],[17,8,24,6],[17,9,24,7,"state"],[17,14,24,12],[17,17,24,15,"Buffer"],[17,23,24,21],[17,24,24,22,"alloc"],[17,29,24,27],[17,30,24,28],[17,32,24,30],[17,34,24,32],[17,35,24,33],[17,36,24,34],[18,4,25,2],[18,8,25,6],[18,9,25,7,"cache"],[18,14,25,12],[18,17,25,15,"Buffer"],[18,23,25,21],[18,24,25,22,"allocUnsafe"],[18,35,25,33],[18,36,25,34],[18,37,25,35],[18,38,25,36],[19,2,26,0],[21,2,28,0],[22,2,29,0],[23,2,30,0,"GHASH"],[23,7,30,5],[23,8,30,6,"prototype"],[23,17,30,15],[23,18,30,16,"ghash"],[23,23,30,21],[23,26,30,24],[23,36,30,34,"block"],[23,41,30,39],[23,43,30,41],[24,4,31,2],[24,8,31,6,"i"],[24,9,31,7],[24,12,31,10],[24,13,31,11],[24,14,31,12],[25,4,32,2],[25,11,32,9],[25,13,32,11,"i"],[25,14,32,12],[25,17,32,15,"block"],[25,22,32,20],[25,23,32,21,"length"],[25,29,32,27],[25,31,32,29],[26,6,33,4],[26,10,33,8],[26,11,33,9,"state"],[26,16,33,14],[26,17,33,15,"i"],[26,18,33,16],[26,19,33,17],[26,23,33,21,"block"],[26,28,33,26],[26,29,33,27,"i"],[26,30,33,28],[26,31,33,29],[27,4,34,2],[28,4,35,2],[28,8,35,6],[28,9,35,7,"_multiply"],[28,18,35,16],[28,19,35,17],[28,20,35,18],[29,2,36,0],[29,3,36,1],[30,2,38,0,"GHASH"],[30,7,38,5],[30,8,38,6,"prototype"],[30,17,38,15],[30,18,38,16,"_multiply"],[30,27,38,25],[30,30,38,28],[30,42,38,40],[31,4,39,2],[31,8,39,6,"Vi"],[31,10,39,8],[31,13,39,11,"toArray"],[31,20,39,18],[31,21,39,19],[31,25,39,23],[31,26,39,24,"h"],[31,27,39,25],[31,28,39,26],[32,4,40,2],[32,8,40,6,"Zi"],[32,10,40,8],[32,13,40,11],[32,14,40,12],[32,15,40,13],[32,17,40,15],[32,18,40,16],[32,20,40,18],[32,21,40,19],[32,23,40,21],[32,24,40,22],[32,25,40,23],[33,4,41,2],[33,8,41,6,"j"],[33,9,41,7],[33,11,41,9,"xi"],[33,13,41,11],[33,15,41,13,"lsbVi"],[33,20,41,18],[34,4,42,2],[34,8,42,6,"i"],[34,9,42,7],[34,12,42,10],[34,13,42,11],[34,14,42,12],[35,4,43,2],[35,11,43,9],[35,13,43,11,"i"],[35,14,43,12],[35,17,43,15],[35,20,43,18],[35,22,43,20],[36,6,44,4,"xi"],[36,8,44,6],[36,11,44,9],[36,12,44,10],[36,16,44,14],[36,17,44,15,"state"],[36,22,44,20],[36,23,44,21],[36,24,44,22],[36,26,44,24,"i"],[36,27,44,25],[36,30,44,28],[36,31,44,29],[36,32,44,30],[36,33,44,31],[36,36,44,35],[36,37,44,36],[36,41,44,41],[36,42,44,42],[36,45,44,46,"i"],[36,46,44,47],[36,49,44,50],[36,50,44,54],[36,56,44,60],[36,57,44,61],[37,6,45,4],[37,10,45,8,"xi"],[37,12,45,10],[37,14,45,12],[38,8,46,6],[39,8,47,6,"Zi"],[39,10,47,8],[39,11,47,9],[39,12,47,10],[39,13,47,11],[39,17,47,15,"Vi"],[39,19,47,17],[39,20,47,18],[39,21,47,19],[39,22,47,20],[40,8,48,6,"Zi"],[40,10,48,8],[40,11,48,9],[40,12,48,10],[40,13,48,11],[40,17,48,15,"Vi"],[40,19,48,17],[40,20,48,18],[40,21,48,19],[40,22,48,20],[41,8,49,6,"Zi"],[41,10,49,8],[41,11,49,9],[41,12,49,10],[41,13,49,11],[41,17,49,15,"Vi"],[41,19,49,17],[41,20,49,18],[41,21,49,19],[41,22,49,20],[42,8,50,6,"Zi"],[42,10,50,8],[42,11,50,9],[42,12,50,10],[42,13,50,11],[42,17,50,15,"Vi"],[42,19,50,17],[42,20,50,18],[42,21,50,19],[42,22,50,20],[43,6,51,4],[45,6,53,4],[46,6,54,4,"lsbVi"],[46,11,54,9],[46,14,54,12],[46,15,54,13,"Vi"],[46,17,54,15],[46,18,54,16],[46,19,54,17],[46,20,54,18],[46,23,54,21],[46,24,54,22],[46,30,54,28],[46,31,54,29],[48,6,56,4],[49,6,57,4],[49,11,57,9,"j"],[49,12,57,10],[49,15,57,13],[49,16,57,14],[49,18,57,16,"j"],[49,19,57,17],[49,22,57,20],[49,23,57,21],[49,25,57,23,"j"],[49,26,57,24],[49,28,57,26],[49,30,57,28],[50,8,58,6,"Vi"],[50,10,58,8],[50,11,58,9,"j"],[50,12,58,10],[50,13,58,11],[50,16,58,15,"Vi"],[50,18,58,17],[50,19,58,18,"j"],[50,20,58,19],[50,21,58,20],[50,26,58,25],[50,27,58,26],[50,30,58,31],[50,31,58,32,"Vi"],[50,33,58,34],[50,34,58,35,"j"],[50,35,58,36],[50,38,58,39],[50,39,58,40],[50,40,58,41],[50,43,58,44],[50,44,58,45],[50,49,58,50],[50,51,58,53],[51,6,59,4],[52,6,60,4,"Vi"],[52,8,60,6],[52,9,60,7],[52,10,60,8],[52,11,60,9],[52,14,60,12,"Vi"],[52,16,60,14],[52,17,60,15],[52,18,60,16],[52,19,60,17],[52,24,60,22],[52,25,60,23],[54,6,62,4],[55,6,63,4],[55,10,63,8,"lsbVi"],[55,15,63,13],[55,17,63,15],[56,8,64,6,"Vi"],[56,10,64,8],[56,11,64,9],[56,12,64,10],[56,13,64,11],[56,16,64,14,"Vi"],[56,18,64,16],[56,19,64,17],[56,20,64,18],[56,21,64,19],[56,24,64,23],[56,28,64,27],[56,32,64,31],[56,34,64,34],[57,6,65,4],[58,4,66,2],[59,4,67,2],[59,8,67,6],[59,9,67,7,"state"],[59,14,67,12],[59,17,67,15,"fromArray"],[59,26,67,24],[59,27,67,25,"Zi"],[59,29,67,27],[59,30,67,28],[60,2,68,0],[60,3,68,1],[61,2,70,0,"GHASH"],[61,7,70,5],[61,8,70,6,"prototype"],[61,17,70,15],[61,18,70,16,"update"],[61,24,70,22],[61,27,70,25],[61,37,70,35,"buf"],[61,40,70,38],[61,42,70,40],[62,4,71,2],[62,8,71,6],[62,9,71,7,"cache"],[62,14,71,12],[62,17,71,15,"Buffer"],[62,23,71,21],[62,24,71,22,"concat"],[62,30,71,28],[62,31,71,29],[62,32,71,30],[62,36,71,34],[62,37,71,35,"cache"],[62,42,71,40],[62,44,71,42,"buf"],[62,47,71,45],[62,48,71,46],[62,49,71,47],[63,4,72,2],[63,8,72,6,"chunk"],[63,13,72,11],[64,4,73,2],[64,11,73,9],[64,15,73,13],[64,16,73,14,"cache"],[64,21,73,19],[64,22,73,20,"length"],[64,28,73,26],[64,32,73,30],[64,34,73,32],[64,36,73,34],[65,6,74,4,"chunk"],[65,11,74,9],[65,14,74,12],[65,18,74,16],[65,19,74,17,"cache"],[65,24,74,22],[65,25,74,23,"slice"],[65,30,74,28],[65,31,74,29],[65,32,74,30],[65,34,74,32],[65,36,74,34],[65,37,74,35],[66,6,75,4],[66,10,75,8],[66,11,75,9,"cache"],[66,16,75,14],[66,19,75,17],[66,23,75,21],[66,24,75,22,"cache"],[66,29,75,27],[66,30,75,28,"slice"],[66,35,75,33],[66,36,75,34],[66,38,75,36],[66,39,75,37],[67,6,76,4],[67,10,76,8],[67,11,76,9,"ghash"],[67,16,76,14],[67,17,76,15,"chunk"],[67,22,76,20],[67,23,76,21],[68,4,77,2],[69,2,78,0],[69,3,78,1],[70,2,80,0,"GHASH"],[70,7,80,5],[70,8,80,6,"prototype"],[70,17,80,15],[70,18,80,16,"final"],[70,23,80,21],[70,26,80,24],[70,36,80,34,"abl"],[70,39,80,37],[70,41,80,39,"bl"],[70,43,80,41],[70,45,80,43],[71,4,81,2],[71,8,81,6],[71,12,81,10],[71,13,81,11,"cache"],[71,18,81,16],[71,19,81,17,"length"],[71,25,81,23],[71,27,81,25],[72,6,82,4],[72,10,82,8],[72,11,82,9,"ghash"],[72,16,82,14],[72,17,82,15,"Buffer"],[72,23,82,21],[72,24,82,22,"concat"],[72,30,82,28],[72,31,82,29],[72,32,82,30],[72,36,82,34],[72,37,82,35,"cache"],[72,42,82,40],[72,44,82,42,"ZEROES"],[72,50,82,48],[72,51,82,49],[72,53,82,51],[72,55,82,53],[72,56,82,54],[72,57,82,55],[73,4,83,2],[74,4,85,2],[74,8,85,6],[74,9,85,7,"ghash"],[74,14,85,12],[74,15,85,13,"fromArray"],[74,24,85,22],[74,25,85,23],[74,26,85,24],[74,27,85,25],[74,29,85,27,"abl"],[74,32,85,30],[74,34,85,32],[74,35,85,33],[74,37,85,35,"bl"],[74,39,85,37],[74,40,85,38],[74,41,85,39],[74,42,85,40],[75,4,86,2],[75,11,86,9],[75,15,86,13],[75,16,86,14,"state"],[75,21,86,19],[76,2,87,0],[76,3,87,1],[77,2,89,0,"module"],[77,8,89,6],[77,9,89,7,"exports"],[77,16,89,14],[77,19,89,17,"GHASH"],[77,24,89,22],[78,0,89,22],[78,3]],"functionMap":{"names":["<global>","toArray","fromArray","GHASH","GHASH.prototype.ghash","GHASH.prototype._multiply","GHASH.prototype.update","GHASH.prototype.final"],"mappings":"AAA;ACG;CDO;AEE;CFO;AGE;CHI;wBII;CJM;4BKE;CL8B;yBME;CNQ;wBOE;CPO"}},"type":"js/module"}]}