{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":104,"index":214}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":215},"end":{"line":4,"column":67,"index":282}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}},{"name":"../../instructions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":283},"end":{"line":5,"column":60,"index":343}}],"key":"QpUR88Ww2osC9HHudq73tq+tOtM=","exportNames":["*"]}},{"name":"../../instructions/types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":344},"end":{"line":6,"column":63,"index":407}}],"key":"wArSmpIPPWx7emCppvmPBLNSdfs=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":408},"end":{"line":7,"column":56,"index":464}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"../../instructions/transferChecked.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":465},"end":{"line":8,"column":89,"index":554}}],"key":"jO3poqxp7WPpVxZPUI4aC5tZ8vI=","exportNames":["*"]}},{"name":"../transferFee/instructions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":555},"end":{"line":9,"column":89,"index":644}}],"key":"Li/vOk2o1I8UZRzFAN4oM0JCuMU=","exportNames":["*"]}},{"name":"../../state/mint.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":645},"end":{"line":10,"column":46,"index":691}}],"key":"+iOqxf1zaiiIvH80FNQCgt5rHS4=","exportNames":["*"]}},{"name":"./state.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":692},"end":{"line":11,"column":120,"index":812}}],"key":"rB8wndvMacSDC2MZWlKfGQ0zrEg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TransferHookInstruction = void 0;\n  exports.addExtraAccountMetasForExecute = addExtraAccountMetasForExecute;\n  exports.createExecuteInstruction = createExecuteInstruction;\n  exports.createInitializeTransferHookInstruction = createInitializeTransferHookInstruction;\n  exports.createTransferCheckedWithFeeAndTransferHookInstruction = createTransferCheckedWithFeeAndTransferHookInstruction;\n  exports.createTransferCheckedWithTransferHookInstruction = createTransferCheckedWithTransferHookInstruction;\n  exports.createUpdateTransferHookInstruction = createUpdateTransferHookInstruction;\n  exports.updateTransferHookInstructionData = exports.initializeTransferHookInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../../errors.js\");\n  var _internal = require(_dependencyMap[4], \"../../instructions/internal.js\");\n  var _types = require(_dependencyMap[5], \"../../instructions/types.js\");\n  var _bufferLayoutUtils = require(_dependencyMap[6], \"@solana/buffer-layout-utils\");\n  var _transferChecked = require(_dependencyMap[7], \"../../instructions/transferChecked.js\");\n  var _instructions = require(_dependencyMap[8], \"../transferFee/instructions.js\");\n  var _mint = require(_dependencyMap[9], \"../../state/mint.js\");\n  var _state = require(_dependencyMap[10], \"./state.js\");\n  var TransferHookInstruction;\n  (function (TransferHookInstruction) {\n    TransferHookInstruction[TransferHookInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    TransferHookInstruction[TransferHookInstruction[\"Update\"] = 1] = \"Update\";\n  })(TransferHookInstruction || (exports.TransferHookInstruction = TransferHookInstruction = {}));\n  /** The struct that represents the instruction data as it is read by the program */\n  const initializeTransferHookInstructionData = exports.initializeTransferHookInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('transferHookInstruction'), (0, _bufferLayoutUtils.publicKey)('authority'), (0, _bufferLayoutUtils.publicKey)('transferHookProgramId')]);\n  /**\n   * Construct an InitializeTransferHook instruction\n   *\n   * @param mint                  Token mint account\n   * @param authority             Transfer hook authority account\n   * @param transferHookProgramId Transfer hook program account\n   * @param programId             SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeTransferHookInstruction(mint, authority, transferHookProgramId, programId) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(initializeTransferHookInstructionData.span);\n    initializeTransferHookInstructionData.encode({\n      instruction: _types.TokenInstruction.TransferHookExtension,\n      transferHookInstruction: TransferHookInstruction.Initialize,\n      authority,\n      transferHookProgramId\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /** The struct that represents the instruction data as it is read by the program */\n  const updateTransferHookInstructionData = exports.updateTransferHookInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('transferHookInstruction'), (0, _bufferLayoutUtils.publicKey)('transferHookProgramId')]);\n  /**\n   * Construct an UpdateTransferHook instruction\n   *\n   * @param mint                  Mint to update\n   * @param authority             The mint's transfer hook authority\n   * @param transferHookProgramId The new transfer hook program account\n   * @param signers               The signer account(s) for a multisig\n   * @param tokenProgramId        SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createUpdateTransferHookInstruction(mint, authority, transferHookProgramId, multiSigners = [], programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = (0, _internal.addSigners)([{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }], authority, multiSigners);\n    const data = Buffer.alloc(updateTransferHookInstructionData.span);\n    updateTransferHookInstructionData.encode({\n      instruction: _types.TokenInstruction.TransferHookExtension,\n      transferHookInstruction: TransferHookInstruction.Update,\n      transferHookProgramId\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  function deEscalateAccountMeta(accountMeta, accountMetas) {\n    const maybeHighestPrivileges = accountMetas.filter(x => x.pubkey.equals(accountMeta.pubkey)).reduce((acc, x) => {\n      if (!acc) return {\n        isSigner: x.isSigner,\n        isWritable: x.isWritable\n      };\n      return {\n        isSigner: acc.isSigner || x.isSigner,\n        isWritable: acc.isWritable || x.isWritable\n      };\n    }, undefined);\n    if (maybeHighestPrivileges) {\n      const {\n        isSigner,\n        isWritable\n      } = maybeHighestPrivileges;\n      if (!isSigner && isSigner !== accountMeta.isSigner) {\n        accountMeta.isSigner = false;\n      }\n      if (!isWritable && isWritable !== accountMeta.isWritable) {\n        accountMeta.isWritable = false;\n      }\n    }\n    return accountMeta;\n  }\n  /**\n   * Construct an `ExecuteInstruction` for a transfer hook program, without the\n   * additional accounts\n   *\n   * @param programId             The program ID of the transfer hook program\n   * @param source                The source account\n   * @param mint                  The mint account\n   * @param destination           The destination account\n   * @param owner                 Owner of the source account\n   * @param validateStatePubkey   The validate state pubkey\n   * @param amount                The amount of tokens to transfer\n   * @returns Instruction to add to a transaction\n   */\n  function createExecuteInstruction(programId, source, mint, destination, owner, validateStatePubkey, amount) {\n    const keys = [source, mint, destination, owner, validateStatePubkey].map(pubkey => ({\n      pubkey,\n      isSigner: false,\n      isWritable: false\n    }));\n    const data = Buffer.alloc(16);\n    data.set(Buffer.from([105, 37, 101, 197, 75, 251, 102, 26]), 0); // `ExecuteInstruction` discriminator\n    data.writeBigUInt64LE(BigInt(amount), 8);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Adds all the extra accounts needed for a transfer hook to an instruction.\n   *\n   * Note this will modify the instruction passed in.\n   *\n   * @param connection            Connection to use\n   * @param instruction           The instruction to add accounts to\n   * @param programId             Transfer hook program ID\n   * @param source                The source account\n   * @param mint                  The mint account\n   * @param destination           The destination account\n   * @param owner                 Owner of the source account\n   * @param amount                The amount of tokens to transfer\n   * @param commitment            Commitment to use\n   */\n  async function addExtraAccountMetasForExecute(connection, instruction, programId, source, mint, destination, owner, amount, commitment) {\n    const validateStatePubkey = (0, _state.getExtraAccountMetaAddress)(mint, programId);\n    const validateStateAccount = await connection.getAccountInfo(validateStatePubkey, commitment);\n    if (validateStateAccount == null) {\n      return instruction;\n    }\n    const validateStateData = (0, _state.getExtraAccountMetas)(validateStateAccount);\n    // Check to make sure the provided keys are in the instruction\n    if (![source, mint, destination, owner].every(key => instruction.keys.some(meta => meta.pubkey.equals(key)))) {\n      throw new Error('Missing required account in instruction');\n    }\n    const executeInstruction = createExecuteInstruction(programId, source, mint, destination, owner, validateStatePubkey, BigInt(amount));\n    for (const extraAccountMeta of validateStateData) {\n      executeInstruction.keys.push(deEscalateAccountMeta(await (0, _state.resolveExtraAccountMeta)(connection, extraAccountMeta, executeInstruction.keys, executeInstruction.data, executeInstruction.programId), executeInstruction.keys));\n    }\n    // Add only the extra accounts resolved from the validation state\n    instruction.keys.push(...executeInstruction.keys.slice(5));\n    // Add the transfer hook program ID and the validation state account\n    instruction.keys.push({\n      pubkey: programId,\n      isSigner: false,\n      isWritable: false\n    });\n    instruction.keys.push({\n      pubkey: validateStatePubkey,\n      isSigner: false,\n      isWritable: false\n    });\n  }\n  /**\n   * Construct an transferChecked instruction with extra accounts for transfer hook\n   *\n   * @param connection            Connection to use\n   * @param source                Source account\n   * @param mint                  Mint to update\n   * @param destination           Destination account\n   * @param owner                 Owner of the source account\n   * @param amount                The amount of tokens to transfer\n   * @param decimals              Number of decimals in transfer amount\n   * @param multiSigners          The signer account(s) for a multisig\n   * @param commitment            Commitment to use\n   * @param programId             SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  async function createTransferCheckedWithTransferHookInstruction(connection, source, mint, destination, owner, amount, decimals, multiSigners = [], commitment, programId = _constants.TOKEN_PROGRAM_ID) {\n    const instruction = (0, _transferChecked.createTransferCheckedInstruction)(source, mint, destination, owner, amount, decimals, multiSigners, programId);\n    const mintInfo = await (0, _mint.getMint)(connection, mint, commitment, programId);\n    const transferHook = (0, _state.getTransferHook)(mintInfo);\n    if (transferHook) {\n      await addExtraAccountMetasForExecute(connection, instruction, transferHook.programId, source, mint, destination, owner, amount, commitment);\n    }\n    return instruction;\n  }\n  /**\n   * Construct an transferChecked instruction with extra accounts for transfer hook\n   *\n   * @param connection            Connection to use\n   * @param source                Source account\n   * @param mint                  Mint to update\n   * @param destination           Destination account\n   * @param owner                 Owner of the source account\n   * @param amount                The amount of tokens to transfer\n   * @param decimals              Number of decimals in transfer amount\n   * @param fee                   The calculated fee for the transfer fee extension\n   * @param multiSigners          The signer account(s) for a multisig\n   * @param commitment            Commitment to use\n   * @param programId             SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  async function createTransferCheckedWithFeeAndTransferHookInstruction(connection, source, mint, destination, owner, amount, decimals, fee, multiSigners = [], commitment, programId = _constants.TOKEN_PROGRAM_ID) {\n    const instruction = (0, _instructions.createTransferCheckedWithFeeInstruction)(source, mint, destination, owner, amount, decimals, fee, multiSigners, programId);\n    const mintInfo = await (0, _mint.getMint)(connection, mint, commitment, programId);\n    const transferHook = (0, _state.getTransferHook)(mintInfo);\n    if (transferHook) {\n      await addExtraAccountMetasForExecute(connection, instruction, transferHook.programId, source, mint, destination, owner, amount, commitment);\n    }\n    return instruction;\n  }\n});","lineCount":245,"map":[[13,2,1,0],[13,6,1,0,"_bufferLayout"],[13,19,1,0],[13,22,1,0,"require"],[13,29,1,0],[13,30,1,0,"_dependencyMap"],[13,44,1,0],[14,2,2,0],[14,6,2,0,"_web"],[14,10,2,0],[14,13,2,0,"require"],[14,20,2,0],[14,21,2,0,"_dependencyMap"],[14,35,2,0],[15,2,3,0],[15,6,3,0,"_constants"],[15,16,3,0],[15,19,3,0,"require"],[15,26,3,0],[15,27,3,0,"_dependencyMap"],[15,41,3,0],[16,2,4,0],[16,6,4,0,"_errors"],[16,13,4,0],[16,16,4,0,"require"],[16,23,4,0],[16,24,4,0,"_dependencyMap"],[16,38,4,0],[17,2,5,0],[17,6,5,0,"_internal"],[17,15,5,0],[17,18,5,0,"require"],[17,25,5,0],[17,26,5,0,"_dependencyMap"],[17,40,5,0],[18,2,6,0],[18,6,6,0,"_types"],[18,12,6,0],[18,15,6,0,"require"],[18,22,6,0],[18,23,6,0,"_dependencyMap"],[18,37,6,0],[19,2,7,0],[19,6,7,0,"_bufferLayoutUtils"],[19,24,7,0],[19,27,7,0,"require"],[19,34,7,0],[19,35,7,0,"_dependencyMap"],[19,49,7,0],[20,2,8,0],[20,6,8,0,"_transferChecked"],[20,22,8,0],[20,25,8,0,"require"],[20,32,8,0],[20,33,8,0,"_dependencyMap"],[20,47,8,0],[21,2,9,0],[21,6,9,0,"_instructions"],[21,19,9,0],[21,22,9,0,"require"],[21,29,9,0],[21,30,9,0,"_dependencyMap"],[21,44,9,0],[22,2,10,0],[22,6,10,0,"_mint"],[22,11,10,0],[22,14,10,0,"require"],[22,21,10,0],[22,22,10,0,"_dependencyMap"],[22,36,10,0],[23,2,11,0],[23,6,11,0,"_state"],[23,12,11,0],[23,15,11,0,"require"],[23,22,11,0],[23,23,11,0,"_dependencyMap"],[23,37,11,0],[24,2,12,7],[24,6,12,11,"TransferHookInstruction"],[24,29,12,34],[25,2,13,0],[25,3,13,1],[25,13,13,11,"TransferHookInstruction"],[25,36,13,34],[25,38,13,36],[26,4,14,4,"TransferHookInstruction"],[26,27,14,27],[26,28,14,28,"TransferHookInstruction"],[26,51,14,51],[26,52,14,52],[26,64,14,64],[26,65,14,65],[26,68,14,68],[26,69,14,69],[26,70,14,70],[26,73,14,73],[26,85,14,85],[27,4,15,4,"TransferHookInstruction"],[27,27,15,27],[27,28,15,28,"TransferHookInstruction"],[27,51,15,51],[27,52,15,52],[27,60,15,60],[27,61,15,61],[27,64,15,64],[27,65,15,65],[27,66,15,66],[27,69,15,69],[27,77,15,77],[28,2,16,0],[28,3,16,1],[28,5,16,3,"TransferHookInstruction"],[28,28,16,26],[28,33,16,26,"exports"],[28,40,16,26],[28,41,16,26,"TransferHookInstruction"],[28,64,16,26],[28,67,16,31,"TransferHookInstruction"],[28,90,16,54],[28,93,16,57],[28,94,16,58],[28,95,16,59],[28,96,16,60],[28,97,16,61],[29,2,17,0],[30,2,18,7],[30,8,18,13,"initializeTransferHookInstructionData"],[30,45,18,50],[30,48,18,50,"exports"],[30,55,18,50],[30,56,18,50,"initializeTransferHookInstructionData"],[30,93,18,50],[30,96,18,53],[30,100,18,53,"struct"],[30,120,18,59],[30,122,18,60],[30,123,19,4],[30,127,19,4,"u8"],[30,143,19,6],[30,145,19,7],[30,158,19,20],[30,159,19,21],[30,161,20,4],[30,165,20,4,"u8"],[30,181,20,6],[30,183,20,7],[30,208,20,32],[30,209,20,33],[30,211,21,4],[30,215,21,4,"publicKey"],[30,243,21,13],[30,245,21,14],[30,256,21,25],[30,257,21,26],[30,259,22,4],[30,263,22,4,"publicKey"],[30,291,22,13],[30,293,22,14],[30,316,22,37],[30,317,22,38],[30,318,23,1],[30,319,23,2],[31,2,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[41,2,34,7],[41,11,34,16,"createInitializeTransferHookInstruction"],[41,50,34,55,"createInitializeTransferHookInstruction"],[41,51,34,56,"mint"],[41,55,34,60],[41,57,34,62,"authority"],[41,66,34,71],[41,68,34,73,"transferHookProgramId"],[41,89,34,94],[41,91,34,96,"programId"],[41,100,34,105],[41,102,34,107],[42,4,35,4],[42,8,35,8],[42,9,35,9],[42,13,35,9,"programSupportsExtensions"],[42,49,35,34],[42,51,35,35,"programId"],[42,60,35,44],[42,61,35,45],[42,63,35,47],[43,6,36,8],[43,12,36,14],[43,16,36,18,"TokenUnsupportedInstructionError"],[43,56,36,50],[43,57,36,51],[43,58,36,52],[44,4,37,4],[45,4,38,4],[45,10,38,10,"keys"],[45,14,38,14],[45,17,38,17],[45,18,38,18],[46,6,38,20,"pubkey"],[46,12,38,26],[46,14,38,28,"mint"],[46,18,38,32],[47,6,38,34,"isSigner"],[47,14,38,42],[47,16,38,44],[47,21,38,49],[48,6,38,51,"isWritable"],[48,16,38,61],[48,18,38,63],[49,4,38,68],[49,5,38,69],[49,6,38,70],[50,4,39,4],[50,10,39,10,"data"],[50,14,39,14],[50,17,39,17,"Buffer"],[50,23,39,23],[50,24,39,24,"alloc"],[50,29,39,29],[50,30,39,30,"initializeTransferHookInstructionData"],[50,67,39,67],[50,68,39,68,"span"],[50,72,39,72],[50,73,39,73],[51,4,40,4,"initializeTransferHookInstructionData"],[51,41,40,41],[51,42,40,42,"encode"],[51,48,40,48],[51,49,40,49],[52,6,41,8,"instruction"],[52,17,41,19],[52,19,41,21,"TokenInstruction"],[52,42,41,37],[52,43,41,38,"TransferHookExtension"],[52,64,41,59],[53,6,42,8,"transferHookInstruction"],[53,29,42,31],[53,31,42,33,"TransferHookInstruction"],[53,54,42,56],[53,55,42,57,"Initialize"],[53,65,42,67],[54,6,43,8,"authority"],[54,15,43,17],[55,6,44,8,"transferHookProgramId"],[56,4,45,4],[56,5,45,5],[56,7,45,7,"data"],[56,11,45,11],[56,12,45,12],[57,4,46,4],[57,11,46,11],[57,15,46,15,"TransactionInstruction"],[57,42,46,37],[57,43,46,38],[58,6,46,40,"keys"],[58,10,46,44],[59,6,46,46,"programId"],[59,15,46,55],[60,6,46,57,"data"],[61,4,46,62],[61,5,46,63],[61,6,46,64],[62,2,47,0],[63,2,48,0],[64,2,49,7],[64,8,49,13,"updateTransferHookInstructionData"],[64,41,49,46],[64,44,49,46,"exports"],[64,51,49,46],[64,52,49,46,"updateTransferHookInstructionData"],[64,85,49,46],[64,88,49,49],[64,92,49,49,"struct"],[64,112,49,55],[64,114,49,56],[64,115,50,4],[64,119,50,4,"u8"],[64,135,50,6],[64,137,50,7],[64,150,50,20],[64,151,50,21],[64,153,51,4],[64,157,51,4,"u8"],[64,173,51,6],[64,175,51,7],[64,200,51,32],[64,201,51,33],[64,203,52,4],[64,207,52,4,"publicKey"],[64,235,52,13],[64,237,52,14],[64,260,52,37],[64,261,52,38],[64,262,53,1],[64,263,53,2],[65,2,54,0],[66,0,55,0],[67,0,56,0],[68,0,57,0],[69,0,58,0],[70,0,59,0],[71,0,60,0],[72,0,61,0],[73,0,62,0],[74,0,63,0],[75,0,64,0],[76,2,65,7],[76,11,65,16,"createUpdateTransferHookInstruction"],[76,46,65,51,"createUpdateTransferHookInstruction"],[76,47,65,52,"mint"],[76,51,65,56],[76,53,65,58,"authority"],[76,62,65,67],[76,64,65,69,"transferHookProgramId"],[76,85,65,90],[76,87,65,92,"multiSigners"],[76,99,65,104],[76,102,65,107],[76,104,65,109],[76,106,65,111,"programId"],[76,115,65,120],[76,118,65,123,"TOKEN_2022_PROGRAM_ID"],[76,150,65,144],[76,152,65,146],[77,4,66,4],[77,8,66,8],[77,9,66,9],[77,13,66,9,"programSupportsExtensions"],[77,49,66,34],[77,51,66,35,"programId"],[77,60,66,44],[77,61,66,45],[77,63,66,47],[78,6,67,8],[78,12,67,14],[78,16,67,18,"TokenUnsupportedInstructionError"],[78,56,67,50],[78,57,67,51],[78,58,67,52],[79,4,68,4],[80,4,69,4],[80,10,69,10,"keys"],[80,14,69,14],[80,17,69,17],[80,21,69,17,"addSigners"],[80,41,69,27],[80,43,69,28],[80,44,69,29],[81,6,69,31,"pubkey"],[81,12,69,37],[81,14,69,39,"mint"],[81,18,69,43],[82,6,69,45,"isSigner"],[82,14,69,53],[82,16,69,55],[82,21,69,60],[83,6,69,62,"isWritable"],[83,16,69,72],[83,18,69,74],[84,4,69,79],[84,5,69,80],[84,6,69,81],[84,8,69,83,"authority"],[84,17,69,92],[84,19,69,94,"multiSigners"],[84,31,69,106],[84,32,69,107],[85,4,70,4],[85,10,70,10,"data"],[85,14,70,14],[85,17,70,17,"Buffer"],[85,23,70,23],[85,24,70,24,"alloc"],[85,29,70,29],[85,30,70,30,"updateTransferHookInstructionData"],[85,63,70,63],[85,64,70,64,"span"],[85,68,70,68],[85,69,70,69],[86,4,71,4,"updateTransferHookInstructionData"],[86,37,71,37],[86,38,71,38,"encode"],[86,44,71,44],[86,45,71,45],[87,6,72,8,"instruction"],[87,17,72,19],[87,19,72,21,"TokenInstruction"],[87,42,72,37],[87,43,72,38,"TransferHookExtension"],[87,64,72,59],[88,6,73,8,"transferHookInstruction"],[88,29,73,31],[88,31,73,33,"TransferHookInstruction"],[88,54,73,56],[88,55,73,57,"Update"],[88,61,73,63],[89,6,74,8,"transferHookProgramId"],[90,4,75,4],[90,5,75,5],[90,7,75,7,"data"],[90,11,75,11],[90,12,75,12],[91,4,76,4],[91,11,76,11],[91,15,76,15,"TransactionInstruction"],[91,42,76,37],[91,43,76,38],[92,6,76,40,"keys"],[92,10,76,44],[93,6,76,46,"programId"],[93,15,76,55],[94,6,76,57,"data"],[95,4,76,62],[95,5,76,63],[95,6,76,64],[96,2,77,0],[97,2,78,0],[97,11,78,9,"deEscalateAccountMeta"],[97,32,78,30,"deEscalateAccountMeta"],[97,33,78,31,"accountMeta"],[97,44,78,42],[97,46,78,44,"accountMetas"],[97,58,78,56],[97,60,78,58],[98,4,79,4],[98,10,79,10,"maybeHighestPrivileges"],[98,32,79,32],[98,35,79,35,"accountMetas"],[98,47,79,47],[98,48,80,9,"filter"],[98,54,80,15],[98,55,80,16,"x"],[98,56,80,17],[98,60,80,21,"x"],[98,61,80,22],[98,62,80,23,"pubkey"],[98,68,80,29],[98,69,80,30,"equals"],[98,75,80,36],[98,76,80,37,"accountMeta"],[98,87,80,48],[98,88,80,49,"pubkey"],[98,94,80,55],[98,95,80,56],[98,96,80,57],[98,97,81,9,"reduce"],[98,103,81,15],[98,104,81,16],[98,105,81,17,"acc"],[98,108,81,20],[98,110,81,22,"x"],[98,111,81,23],[98,116,81,28],[99,6,82,8],[99,10,82,12],[99,11,82,13,"acc"],[99,14,82,16],[99,16,83,12],[99,23,83,19],[100,8,83,21,"isSigner"],[100,16,83,29],[100,18,83,31,"x"],[100,19,83,32],[100,20,83,33,"isSigner"],[100,28,83,41],[101,8,83,43,"isWritable"],[101,18,83,53],[101,20,83,55,"x"],[101,21,83,56],[101,22,83,57,"isWritable"],[102,6,83,68],[102,7,83,69],[103,6,84,8],[103,13,84,15],[104,8,84,17,"isSigner"],[104,16,84,25],[104,18,84,27,"acc"],[104,21,84,30],[104,22,84,31,"isSigner"],[104,30,84,39],[104,34,84,43,"x"],[104,35,84,44],[104,36,84,45,"isSigner"],[104,44,84,53],[105,8,84,55,"isWritable"],[105,18,84,65],[105,20,84,67,"acc"],[105,23,84,70],[105,24,84,71,"isWritable"],[105,34,84,81],[105,38,84,85,"x"],[105,39,84,86],[105,40,84,87,"isWritable"],[106,6,84,98],[106,7,84,99],[107,4,85,4],[107,5,85,5],[107,7,85,7,"undefined"],[107,16,85,16],[107,17,85,17],[108,4,86,4],[108,8,86,8,"maybeHighestPrivileges"],[108,30,86,30],[108,32,86,32],[109,6,87,8],[109,12,87,14],[110,8,87,16,"isSigner"],[110,16,87,24],[111,8,87,26,"isWritable"],[112,6,87,37],[112,7,87,38],[112,10,87,41,"maybeHighestPrivileges"],[112,32,87,63],[113,6,88,8],[113,10,88,12],[113,11,88,13,"isSigner"],[113,19,88,21],[113,23,88,25,"isSigner"],[113,31,88,33],[113,36,88,38,"accountMeta"],[113,47,88,49],[113,48,88,50,"isSigner"],[113,56,88,58],[113,58,88,60],[114,8,89,12,"accountMeta"],[114,19,89,23],[114,20,89,24,"isSigner"],[114,28,89,32],[114,31,89,35],[114,36,89,40],[115,6,90,8],[116,6,91,8],[116,10,91,12],[116,11,91,13,"isWritable"],[116,21,91,23],[116,25,91,27,"isWritable"],[116,35,91,37],[116,40,91,42,"accountMeta"],[116,51,91,53],[116,52,91,54,"isWritable"],[116,62,91,64],[116,64,91,66],[117,8,92,12,"accountMeta"],[117,19,92,23],[117,20,92,24,"isWritable"],[117,30,92,34],[117,33,92,37],[117,38,92,42],[118,6,93,8],[119,4,94,4],[120,4,95,4],[120,11,95,11,"accountMeta"],[120,22,95,22],[121,2,96,0],[122,2,97,0],[123,0,98,0],[124,0,99,0],[125,0,100,0],[126,0,101,0],[127,0,102,0],[128,0,103,0],[129,0,104,0],[130,0,105,0],[131,0,106,0],[132,0,107,0],[133,0,108,0],[134,0,109,0],[135,2,110,7],[135,11,110,16,"createExecuteInstruction"],[135,35,110,40,"createExecuteInstruction"],[135,36,110,41,"programId"],[135,45,110,50],[135,47,110,52,"source"],[135,53,110,58],[135,55,110,60,"mint"],[135,59,110,64],[135,61,110,66,"destination"],[135,72,110,77],[135,74,110,79,"owner"],[135,79,110,84],[135,81,110,86,"validateStatePubkey"],[135,100,110,105],[135,102,110,107,"amount"],[135,108,110,113],[135,110,110,115],[136,4,111,4],[136,10,111,10,"keys"],[136,14,111,14],[136,17,111,17],[136,18,111,18,"source"],[136,24,111,24],[136,26,111,26,"mint"],[136,30,111,30],[136,32,111,32,"destination"],[136,43,111,43],[136,45,111,45,"owner"],[136,50,111,50],[136,52,111,52,"validateStatePubkey"],[136,71,111,71],[136,72,111,72],[136,73,111,73,"map"],[136,76,111,76],[136,77,111,77,"pubkey"],[136,83,111,83],[136,88,111,88],[137,6,112,8,"pubkey"],[137,12,112,14],[138,6,113,8,"isSigner"],[138,14,113,16],[138,16,113,18],[138,21,113,23],[139,6,114,8,"isWritable"],[139,16,114,18],[139,18,114,20],[140,4,115,4],[140,5,115,5],[140,6,115,6],[140,7,115,7],[141,4,116,4],[141,10,116,10,"data"],[141,14,116,14],[141,17,116,17,"Buffer"],[141,23,116,23],[141,24,116,24,"alloc"],[141,29,116,29],[141,30,116,30],[141,32,116,32],[141,33,116,33],[142,4,117,4,"data"],[142,8,117,8],[142,9,117,9,"set"],[142,12,117,12],[142,13,117,13,"Buffer"],[142,19,117,19],[142,20,117,20,"from"],[142,24,117,24],[142,25,117,25],[142,26,117,26],[142,29,117,29],[142,31,117,31],[142,33,117,33],[142,35,117,35],[142,38,117,38],[142,40,117,40],[142,43,117,43],[142,45,117,45],[142,47,117,47],[142,49,117,49],[142,52,117,52],[142,54,117,54],[142,57,117,57],[142,59,117,59],[142,61,117,61],[142,62,117,62],[142,63,117,63],[142,65,117,65],[142,66,117,66],[142,67,117,67],[142,68,117,68],[142,69,117,69],[143,4,118,4,"data"],[143,8,118,8],[143,9,118,9,"writeBigUInt64LE"],[143,25,118,25],[143,26,118,26,"BigInt"],[143,32,118,32],[143,33,118,33,"amount"],[143,39,118,39],[143,40,118,40],[143,42,118,42],[143,43,118,43],[143,44,118,44],[144,4,119,4],[144,11,119,11],[144,15,119,15,"TransactionInstruction"],[144,42,119,37],[144,43,119,38],[145,6,119,40,"keys"],[145,10,119,44],[146,6,119,46,"programId"],[146,15,119,55],[147,6,119,57,"data"],[148,4,119,62],[148,5,119,63],[148,6,119,64],[149,2,120,0],[150,2,121,0],[151,0,122,0],[152,0,123,0],[153,0,124,0],[154,0,125,0],[155,0,126,0],[156,0,127,0],[157,0,128,0],[158,0,129,0],[159,0,130,0],[160,0,131,0],[161,0,132,0],[162,0,133,0],[163,0,134,0],[164,0,135,0],[165,2,136,7],[165,17,136,22,"addExtraAccountMetasForExecute"],[165,47,136,52,"addExtraAccountMetasForExecute"],[165,48,136,53,"connection"],[165,58,136,63],[165,60,136,65,"instruction"],[165,71,136,76],[165,73,136,78,"programId"],[165,82,136,87],[165,84,136,89,"source"],[165,90,136,95],[165,92,136,97,"mint"],[165,96,136,101],[165,98,136,103,"destination"],[165,109,136,114],[165,111,136,116,"owner"],[165,116,136,121],[165,118,136,123,"amount"],[165,124,136,129],[165,126,136,131,"commitment"],[165,136,136,141],[165,138,136,143],[166,4,137,4],[166,10,137,10,"validateStatePubkey"],[166,29,137,29],[166,32,137,32],[166,36,137,32,"getExtraAccountMetaAddress"],[166,69,137,58],[166,71,137,59,"mint"],[166,75,137,63],[166,77,137,65,"programId"],[166,86,137,74],[166,87,137,75],[167,4,138,4],[167,10,138,10,"validateStateAccount"],[167,30,138,30],[167,33,138,33],[167,39,138,39,"connection"],[167,49,138,49],[167,50,138,50,"getAccountInfo"],[167,64,138,64],[167,65,138,65,"validateStatePubkey"],[167,84,138,84],[167,86,138,86,"commitment"],[167,96,138,96],[167,97,138,97],[168,4,139,4],[168,8,139,8,"validateStateAccount"],[168,28,139,28],[168,32,139,32],[168,36,139,36],[168,38,139,38],[169,6,140,8],[169,13,140,15,"instruction"],[169,24,140,26],[170,4,141,4],[171,4,142,4],[171,10,142,10,"validateStateData"],[171,27,142,27],[171,30,142,30],[171,34,142,30,"getExtraAccountMetas"],[171,61,142,50],[171,63,142,51,"validateStateAccount"],[171,83,142,71],[171,84,142,72],[172,4,143,4],[173,4,144,4],[173,8,144,8],[173,9,144,9],[173,10,144,10,"source"],[173,16,144,16],[173,18,144,18,"mint"],[173,22,144,22],[173,24,144,24,"destination"],[173,35,144,35],[173,37,144,37,"owner"],[173,42,144,42],[173,43,144,43],[173,44,144,44,"every"],[173,49,144,49],[173,50,144,50,"key"],[173,53,144,53],[173,57,144,57,"instruction"],[173,68,144,68],[173,69,144,69,"keys"],[173,73,144,73],[173,74,144,74,"some"],[173,78,144,78],[173,79,144,79,"meta"],[173,83,144,83],[173,87,144,87,"meta"],[173,91,144,91],[173,92,144,92,"pubkey"],[173,98,144,98],[173,99,144,99,"equals"],[173,105,144,105],[173,106,144,106,"key"],[173,109,144,109],[173,110,144,110],[173,111,144,111],[173,112,144,112],[173,114,144,114],[174,6,145,8],[174,12,145,14],[174,16,145,18,"Error"],[174,21,145,23],[174,22,145,24],[174,63,145,65],[174,64,145,66],[175,4,146,4],[176,4,147,4],[176,10,147,10,"executeInstruction"],[176,28,147,28],[176,31,147,31,"createExecuteInstruction"],[176,55,147,55],[176,56,147,56,"programId"],[176,65,147,65],[176,67,147,67,"source"],[176,73,147,73],[176,75,147,75,"mint"],[176,79,147,79],[176,81,147,81,"destination"],[176,92,147,92],[176,94,147,94,"owner"],[176,99,147,99],[176,101,147,101,"validateStatePubkey"],[176,120,147,120],[176,122,147,122,"BigInt"],[176,128,147,128],[176,129,147,129,"amount"],[176,135,147,135],[176,136,147,136],[176,137,147,137],[177,4,148,4],[177,9,148,9],[177,15,148,15,"extraAccountMeta"],[177,31,148,31],[177,35,148,35,"validateStateData"],[177,52,148,52],[177,54,148,54],[178,6,149,8,"executeInstruction"],[178,24,149,26],[178,25,149,27,"keys"],[178,29,149,31],[178,30,149,32,"push"],[178,34,149,36],[178,35,149,37,"deEscalateAccountMeta"],[178,56,149,58],[178,57,149,59],[178,63,149,65],[178,67,149,65,"resolveExtraAccountMeta"],[178,97,149,88],[178,99,149,89,"connection"],[178,109,149,99],[178,111,149,101,"extraAccountMeta"],[178,127,149,117],[178,129,149,119,"executeInstruction"],[178,147,149,137],[178,148,149,138,"keys"],[178,152,149,142],[178,154,149,144,"executeInstruction"],[178,172,149,162],[178,173,149,163,"data"],[178,177,149,167],[178,179,149,169,"executeInstruction"],[178,197,149,187],[178,198,149,188,"programId"],[178,207,149,197],[178,208,149,198],[178,210,149,200,"executeInstruction"],[178,228,149,218],[178,229,149,219,"keys"],[178,233,149,223],[178,234,149,224],[178,235,149,225],[179,4,150,4],[180,4,151,4],[181,4,152,4,"instruction"],[181,15,152,15],[181,16,152,16,"keys"],[181,20,152,20],[181,21,152,21,"push"],[181,25,152,25],[181,26,152,26],[181,29,152,29,"executeInstruction"],[181,47,152,47],[181,48,152,48,"keys"],[181,52,152,52],[181,53,152,53,"slice"],[181,58,152,58],[181,59,152,59],[181,60,152,60],[181,61,152,61],[181,62,152,62],[182,4,153,4],[183,4,154,4,"instruction"],[183,15,154,15],[183,16,154,16,"keys"],[183,20,154,20],[183,21,154,21,"push"],[183,25,154,25],[183,26,154,26],[184,6,154,28,"pubkey"],[184,12,154,34],[184,14,154,36,"programId"],[184,23,154,45],[185,6,154,47,"isSigner"],[185,14,154,55],[185,16,154,57],[185,21,154,62],[186,6,154,64,"isWritable"],[186,16,154,74],[186,18,154,76],[187,4,154,82],[187,5,154,83],[187,6,154,84],[188,4,155,4,"instruction"],[188,15,155,15],[188,16,155,16,"keys"],[188,20,155,20],[188,21,155,21,"push"],[188,25,155,25],[188,26,155,26],[189,6,155,28,"pubkey"],[189,12,155,34],[189,14,155,36,"validateStatePubkey"],[189,33,155,55],[190,6,155,57,"isSigner"],[190,14,155,65],[190,16,155,67],[190,21,155,72],[191,6,155,74,"isWritable"],[191,16,155,84],[191,18,155,86],[192,4,155,92],[192,5,155,93],[192,6,155,94],[193,2,156,0],[194,2,157,0],[195,0,158,0],[196,0,159,0],[197,0,160,0],[198,0,161,0],[199,0,162,0],[200,0,163,0],[201,0,164,0],[202,0,165,0],[203,0,166,0],[204,0,167,0],[205,0,168,0],[206,0,169,0],[207,0,170,0],[208,0,171,0],[209,0,172,0],[210,2,173,7],[210,17,173,22,"createTransferCheckedWithTransferHookInstruction"],[210,65,173,70,"createTransferCheckedWithTransferHookInstruction"],[210,66,173,71,"connection"],[210,76,173,81],[210,78,173,83,"source"],[210,84,173,89],[210,86,173,91,"mint"],[210,90,173,95],[210,92,173,97,"destination"],[210,103,173,108],[210,105,173,110,"owner"],[210,110,173,115],[210,112,173,117,"amount"],[210,118,173,123],[210,120,173,125,"decimals"],[210,128,173,133],[210,130,173,135,"multiSigners"],[210,142,173,147],[210,145,173,150],[210,147,173,152],[210,149,173,154,"commitment"],[210,159,173,164],[210,161,173,166,"programId"],[210,170,173,175],[210,173,173,178,"TOKEN_PROGRAM_ID"],[210,200,173,194],[210,202,173,196],[211,4,174,4],[211,10,174,10,"instruction"],[211,21,174,21],[211,24,174,24],[211,28,174,24,"createTransferCheckedInstruction"],[211,77,174,56],[211,79,174,57,"source"],[211,85,174,63],[211,87,174,65,"mint"],[211,91,174,69],[211,93,174,71,"destination"],[211,104,174,82],[211,106,174,84,"owner"],[211,111,174,89],[211,113,174,91,"amount"],[211,119,174,97],[211,121,174,99,"decimals"],[211,129,174,107],[211,131,174,109,"multiSigners"],[211,143,174,121],[211,145,174,123,"programId"],[211,154,174,132],[211,155,174,133],[212,4,175,4],[212,10,175,10,"mintInfo"],[212,18,175,18],[212,21,175,21],[212,27,175,27],[212,31,175,27,"getMint"],[212,44,175,34],[212,46,175,35,"connection"],[212,56,175,45],[212,58,175,47,"mint"],[212,62,175,51],[212,64,175,53,"commitment"],[212,74,175,63],[212,76,175,65,"programId"],[212,85,175,74],[212,86,175,75],[213,4,176,4],[213,10,176,10,"transferHook"],[213,22,176,22],[213,25,176,25],[213,29,176,25,"getTransferHook"],[213,51,176,40],[213,53,176,41,"mintInfo"],[213,61,176,49],[213,62,176,50],[214,4,177,4],[214,8,177,8,"transferHook"],[214,20,177,20],[214,22,177,22],[215,6,178,8],[215,12,178,14,"addExtraAccountMetasForExecute"],[215,42,178,44],[215,43,178,45,"connection"],[215,53,178,55],[215,55,178,57,"instruction"],[215,66,178,68],[215,68,178,70,"transferHook"],[215,80,178,82],[215,81,178,83,"programId"],[215,90,178,92],[215,92,178,94,"source"],[215,98,178,100],[215,100,178,102,"mint"],[215,104,178,106],[215,106,178,108,"destination"],[215,117,178,119],[215,119,178,121,"owner"],[215,124,178,126],[215,126,178,128,"amount"],[215,132,178,134],[215,134,178,136,"commitment"],[215,144,178,146],[215,145,178,147],[216,4,179,4],[217,4,180,4],[217,11,180,11,"instruction"],[217,22,180,22],[218,2,181,0],[219,2,182,0],[220,0,183,0],[221,0,184,0],[222,0,185,0],[223,0,186,0],[224,0,187,0],[225,0,188,0],[226,0,189,0],[227,0,190,0],[228,0,191,0],[229,0,192,0],[230,0,193,0],[231,0,194,0],[232,0,195,0],[233,0,196,0],[234,0,197,0],[235,0,198,0],[236,2,199,7],[236,17,199,22,"createTransferCheckedWithFeeAndTransferHookInstruction"],[236,71,199,76,"createTransferCheckedWithFeeAndTransferHookInstruction"],[236,72,199,77,"connection"],[236,82,199,87],[236,84,199,89,"source"],[236,90,199,95],[236,92,199,97,"mint"],[236,96,199,101],[236,98,199,103,"destination"],[236,109,199,114],[236,111,199,116,"owner"],[236,116,199,121],[236,118,199,123,"amount"],[236,124,199,129],[236,126,199,131,"decimals"],[236,134,199,139],[236,136,199,141,"fee"],[236,139,199,144],[236,141,199,146,"multiSigners"],[236,153,199,158],[236,156,199,161],[236,158,199,163],[236,160,199,165,"commitment"],[236,170,199,175],[236,172,199,177,"programId"],[236,181,199,186],[236,184,199,189,"TOKEN_PROGRAM_ID"],[236,211,199,205],[236,213,199,207],[237,4,200,4],[237,10,200,10,"instruction"],[237,21,200,21],[237,24,200,24],[237,28,200,24,"createTransferCheckedWithFeeInstruction"],[237,81,200,63],[237,83,200,64,"source"],[237,89,200,70],[237,91,200,72,"mint"],[237,95,200,76],[237,97,200,78,"destination"],[237,108,200,89],[237,110,200,91,"owner"],[237,115,200,96],[237,117,200,98,"amount"],[237,123,200,104],[237,125,200,106,"decimals"],[237,133,200,114],[237,135,200,116,"fee"],[237,138,200,119],[237,140,200,121,"multiSigners"],[237,152,200,133],[237,154,200,135,"programId"],[237,163,200,144],[237,164,200,145],[238,4,201,4],[238,10,201,10,"mintInfo"],[238,18,201,18],[238,21,201,21],[238,27,201,27],[238,31,201,27,"getMint"],[238,44,201,34],[238,46,201,35,"connection"],[238,56,201,45],[238,58,201,47,"mint"],[238,62,201,51],[238,64,201,53,"commitment"],[238,74,201,63],[238,76,201,65,"programId"],[238,85,201,74],[238,86,201,75],[239,4,202,4],[239,10,202,10,"transferHook"],[239,22,202,22],[239,25,202,25],[239,29,202,25,"getTransferHook"],[239,51,202,40],[239,53,202,41,"mintInfo"],[239,61,202,49],[239,62,202,50],[240,4,203,4],[240,8,203,8,"transferHook"],[240,20,203,20],[240,22,203,22],[241,6,204,8],[241,12,204,14,"addExtraAccountMetasForExecute"],[241,42,204,44],[241,43,204,45,"connection"],[241,53,204,55],[241,55,204,57,"instruction"],[241,66,204,68],[241,68,204,70,"transferHook"],[241,80,204,82],[241,81,204,83,"programId"],[241,90,204,92],[241,92,204,94,"source"],[241,98,204,100],[241,100,204,102,"mint"],[241,104,204,106],[241,106,204,108,"destination"],[241,117,204,119],[241,119,204,121,"owner"],[241,124,204,126],[241,126,204,128,"amount"],[241,132,204,134],[241,134,204,136,"commitment"],[241,144,204,146],[241,145,204,147],[242,4,205,4],[243,4,206,4],[243,11,206,11,"instruction"],[243,22,206,22],[244,2,207,0],[245,0,207,1],[245,3]],"functionMap":{"names":["<global>","<anonymous>","createInitializeTransferHookInstruction","createUpdateTransferHookInstruction","deEscalateAccountMeta","accountMetas.filter$argument_0","accountMetas.filter.reduce$argument_0","createExecuteInstruction","map$argument_0","addExtraAccountMetasForExecute","every$argument_0","instruction.keys.some$argument_0","createTransferCheckedWithTransferHookInstruction","createTransferCheckedWithFeeAndTransferHookInstruction"],"mappings":"AAA;CCY;CDG;OEkB;CFa;OGkB;CHY;AIC;gBCE,wCD;gBEC;KFI;CJW;OOc;6ECC;MDI;CPK;OSgB;kDCQ,6BC,+BD,CD;CTY;OYiB;CZQ;OakB;CbQ"}},"type":"js/module"}]}