{"dependencies":[{"name":"elliptic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"h6RIsoF9GgRhyZAr3TXxz6R4meA=","exportNames":["*"]}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":9,"index":44},"end":{"line":2,"column":25,"index":60}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var elliptic = require(_dependencyMap[0], \"elliptic\");\n  var BN = require(_dependencyMap[1], \"bn.js\");\n  module.exports = function createECDH(curve) {\n    return new ECDH(curve);\n  };\n  var aliases = {\n    secp256k1: {\n      name: 'secp256k1',\n      byteLength: 32\n    },\n    secp224r1: {\n      name: 'p224',\n      byteLength: 28\n    },\n    prime256v1: {\n      name: 'p256',\n      byteLength: 32\n    },\n    prime192v1: {\n      name: 'p192',\n      byteLength: 24\n    },\n    ed25519: {\n      name: 'ed25519',\n      byteLength: 32\n    },\n    secp384r1: {\n      name: 'p384',\n      byteLength: 48\n    },\n    secp521r1: {\n      name: 'p521',\n      byteLength: 66\n    }\n  };\n  aliases.p224 = aliases.secp224r1;\n  aliases.p256 = aliases.secp256r1 = aliases.prime256v1;\n  aliases.p192 = aliases.secp192r1 = aliases.prime192v1;\n  aliases.p384 = aliases.secp384r1;\n  aliases.p521 = aliases.secp521r1;\n  function ECDH(curve) {\n    this.curveType = aliases[curve];\n    if (!this.curveType) {\n      this.curveType = {\n        name: curve\n      };\n    }\n    this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap\n    this.keys = void 0;\n  }\n  ECDH.prototype.generateKeys = function (enc, format) {\n    this.keys = this.curve.genKeyPair();\n    return this.getPublicKey(enc, format);\n  };\n  ECDH.prototype.computeSecret = function (other, inenc, enc) {\n    inenc = inenc || 'utf8';\n    if (!Buffer.isBuffer(other)) {\n      other = new Buffer(other, inenc);\n    }\n    var otherPub = this.curve.keyFromPublic(other).getPublic();\n    var out = otherPub.mul(this.keys.getPrivate()).getX();\n    return formatReturnValue(out, enc, this.curveType.byteLength);\n  };\n  ECDH.prototype.getPublicKey = function (enc, format) {\n    var key = this.keys.getPublic(format === 'compressed', true);\n    if (format === 'hybrid') {\n      if (key[key.length - 1] % 2) {\n        key[0] = 7;\n      } else {\n        key[0] = 6;\n      }\n    }\n    return formatReturnValue(key, enc);\n  };\n  ECDH.prototype.getPrivateKey = function (enc) {\n    return formatReturnValue(this.keys.getPrivate(), enc);\n  };\n  ECDH.prototype.setPublicKey = function (pub, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(pub)) {\n      pub = new Buffer(pub, enc);\n    }\n    this.keys._importPublic(pub);\n    return this;\n  };\n  ECDH.prototype.setPrivateKey = function (priv, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(priv)) {\n      priv = new Buffer(priv, enc);\n    }\n    var _priv = new BN(priv);\n    _priv = _priv.toString(16);\n    this.keys = this.curve.genKeyPair();\n    this.keys._importPrivate(_priv);\n    return this;\n  };\n  function formatReturnValue(bn, enc, len) {\n    if (!Array.isArray(bn)) {\n      bn = bn.toArray();\n    }\n    var buf = new Buffer(bn);\n    if (len && buf.length < len) {\n      var zeros = new Buffer(len - buf.length);\n      zeros.fill(0);\n      buf = Buffer.concat([zeros, buf]);\n    }\n    if (!enc) {\n      return buf;\n    } else {\n      return buf.toString(enc);\n    }\n  }\n});","lineCount":114,"map":[[2,2,1,0],[2,6,1,4,"elliptic"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,54,1,33],[2,55,1,34],[3,2,2,0],[3,6,2,4,"BN"],[3,8,2,6],[3,11,2,9,"require"],[3,18,2,16],[3,19,2,16,"_dependencyMap"],[3,33,2,16],[3,45,2,24],[3,46,2,25],[4,2,4,0,"module"],[4,8,4,6],[4,9,4,7,"exports"],[4,16,4,14],[4,19,4,17],[4,28,4,26,"createECDH"],[4,38,4,36,"createECDH"],[4,39,4,38,"curve"],[4,44,4,43],[4,46,4,45],[5,4,5,2],[5,11,5,9],[5,15,5,13,"ECDH"],[5,19,5,17],[5,20,5,18,"curve"],[5,25,5,23],[5,26,5,24],[6,2,6,0],[6,3,6,1],[7,2,8,0],[7,6,8,4,"aliases"],[7,13,8,11],[7,16,8,14],[8,4,9,2,"secp256k1"],[8,13,9,11],[8,15,9,13],[9,6,10,4,"name"],[9,10,10,8],[9,12,10,10],[9,23,10,21],[10,6,11,4,"byteLength"],[10,16,11,14],[10,18,11,16],[11,4,12,2],[11,5,12,3],[12,4,13,2,"secp224r1"],[12,13,13,11],[12,15,13,13],[13,6,14,4,"name"],[13,10,14,8],[13,12,14,10],[13,18,14,16],[14,6,15,4,"byteLength"],[14,16,15,14],[14,18,15,16],[15,4,16,2],[15,5,16,3],[16,4,17,2,"prime256v1"],[16,14,17,12],[16,16,17,14],[17,6,18,4,"name"],[17,10,18,8],[17,12,18,10],[17,18,18,16],[18,6,19,4,"byteLength"],[18,16,19,14],[18,18,19,16],[19,4,20,2],[19,5,20,3],[20,4,21,2,"prime192v1"],[20,14,21,12],[20,16,21,14],[21,6,22,4,"name"],[21,10,22,8],[21,12,22,10],[21,18,22,16],[22,6,23,4,"byteLength"],[22,16,23,14],[22,18,23,16],[23,4,24,2],[23,5,24,3],[24,4,25,2,"ed25519"],[24,11,25,9],[24,13,25,11],[25,6,26,4,"name"],[25,10,26,8],[25,12,26,10],[25,21,26,19],[26,6,27,4,"byteLength"],[26,16,27,14],[26,18,27,16],[27,4,28,2],[27,5,28,3],[28,4,29,2,"secp384r1"],[28,13,29,11],[28,15,29,13],[29,6,30,4,"name"],[29,10,30,8],[29,12,30,10],[29,18,30,16],[30,6,31,4,"byteLength"],[30,16,31,14],[30,18,31,16],[31,4,32,2],[31,5,32,3],[32,4,33,2,"secp521r1"],[32,13,33,11],[32,15,33,13],[33,6,34,4,"name"],[33,10,34,8],[33,12,34,10],[33,18,34,16],[34,6,35,4,"byteLength"],[34,16,35,14],[34,18,35,16],[35,4,36,2],[36,2,37,0],[36,3,37,1],[37,2,39,0,"aliases"],[37,9,39,7],[37,10,39,8,"p224"],[37,14,39,12],[37,17,39,15,"aliases"],[37,24,39,22],[37,25,39,23,"secp224r1"],[37,34,39,32],[38,2,40,0,"aliases"],[38,9,40,7],[38,10,40,8,"p256"],[38,14,40,12],[38,17,40,15,"aliases"],[38,24,40,22],[38,25,40,23,"secp256r1"],[38,34,40,32],[38,37,40,35,"aliases"],[38,44,40,42],[38,45,40,43,"prime256v1"],[38,55,40,53],[39,2,41,0,"aliases"],[39,9,41,7],[39,10,41,8,"p192"],[39,14,41,12],[39,17,41,15,"aliases"],[39,24,41,22],[39,25,41,23,"secp192r1"],[39,34,41,32],[39,37,41,35,"aliases"],[39,44,41,42],[39,45,41,43,"prime192v1"],[39,55,41,53],[40,2,42,0,"aliases"],[40,9,42,7],[40,10,42,8,"p384"],[40,14,42,12],[40,17,42,15,"aliases"],[40,24,42,22],[40,25,42,23,"secp384r1"],[40,34,42,32],[41,2,43,0,"aliases"],[41,9,43,7],[41,10,43,8,"p521"],[41,14,43,12],[41,17,43,15,"aliases"],[41,24,43,22],[41,25,43,23,"secp521r1"],[41,34,43,32],[42,2,45,0],[42,11,45,9,"ECDH"],[42,15,45,13,"ECDH"],[42,16,45,15,"curve"],[42,21,45,20],[42,23,45,22],[43,4,46,2],[43,8,46,6],[43,9,46,7,"curveType"],[43,18,46,16],[43,21,46,19,"aliases"],[43,28,46,26],[43,29,46,27,"curve"],[43,34,46,32],[43,35,46,33],[44,4,47,2],[44,8,47,6],[44,9,47,7],[44,13,47,11],[44,14,47,12,"curveType"],[44,23,47,21],[44,25,47,23],[45,6,48,4],[45,10,48,8],[45,11,48,9,"curveType"],[45,20,48,18],[45,23,48,21],[46,8,49,6,"name"],[46,12,49,10],[46,14,49,12,"curve"],[47,6,50,4],[47,7,50,5],[48,4,51,2],[49,4,52,2],[49,8,52,6],[49,9,52,7,"curve"],[49,14,52,12],[49,17,52,15],[49,21,52,19,"elliptic"],[49,29,52,27],[49,30,52,28,"ec"],[49,32,52,30],[49,33,52,31],[49,37,52,35],[49,38,52,36,"curveType"],[49,47,52,45],[49,48,52,46,"name"],[49,52,52,50],[49,53,52,51],[49,55,52,52],[50,4,53,2],[50,8,53,6],[50,9,53,7,"keys"],[50,13,53,11],[50,16,53,14],[50,21,53,19],[50,22,53,20],[51,2,54,0],[52,2,56,0,"ECDH"],[52,6,56,4],[52,7,56,5,"prototype"],[52,16,56,14],[52,17,56,15,"generateKeys"],[52,29,56,27],[52,32,56,30],[52,42,56,40,"enc"],[52,45,56,43],[52,47,56,45,"format"],[52,53,56,51],[52,55,56,53],[53,4,57,2],[53,8,57,6],[53,9,57,7,"keys"],[53,13,57,11],[53,16,57,14],[53,20,57,18],[53,21,57,19,"curve"],[53,26,57,24],[53,27,57,25,"genKeyPair"],[53,37,57,35],[53,38,57,36],[53,39,57,37],[54,4,58,2],[54,11,58,9],[54,15,58,13],[54,16,58,14,"getPublicKey"],[54,28,58,26],[54,29,58,27,"enc"],[54,32,58,30],[54,34,58,32,"format"],[54,40,58,38],[54,41,58,39],[55,2,59,0],[55,3,59,1],[56,2,61,0,"ECDH"],[56,6,61,4],[56,7,61,5,"prototype"],[56,16,61,14],[56,17,61,15,"computeSecret"],[56,30,61,28],[56,33,61,31],[56,43,61,41,"other"],[56,48,61,46],[56,50,61,48,"inenc"],[56,55,61,53],[56,57,61,55,"enc"],[56,60,61,58],[56,62,61,60],[57,4,62,2,"inenc"],[57,9,62,7],[57,12,62,10,"inenc"],[57,17,62,15],[57,21,62,19],[57,27,62,25],[58,4,63,2],[58,8,63,6],[58,9,63,7,"Buffer"],[58,15,63,13],[58,16,63,14,"isBuffer"],[58,24,63,22],[58,25,63,23,"other"],[58,30,63,28],[58,31,63,29],[58,33,63,31],[59,6,64,4,"other"],[59,11,64,9],[59,14,64,12],[59,18,64,16,"Buffer"],[59,24,64,22],[59,25,64,23,"other"],[59,30,64,28],[59,32,64,30,"inenc"],[59,37,64,35],[59,38,64,36],[60,4,65,2],[61,4,66,2],[61,8,66,6,"otherPub"],[61,16,66,14],[61,19,66,17],[61,23,66,21],[61,24,66,22,"curve"],[61,29,66,27],[61,30,66,28,"keyFromPublic"],[61,43,66,41],[61,44,66,42,"other"],[61,49,66,47],[61,50,66,48],[61,51,66,49,"getPublic"],[61,60,66,58],[61,61,66,59],[61,62,66,60],[62,4,67,2],[62,8,67,6,"out"],[62,11,67,9],[62,14,67,12,"otherPub"],[62,22,67,20],[62,23,67,21,"mul"],[62,26,67,24],[62,27,67,25],[62,31,67,29],[62,32,67,30,"keys"],[62,36,67,34],[62,37,67,35,"getPrivate"],[62,47,67,45],[62,48,67,46],[62,49,67,47],[62,50,67,48],[62,51,67,49,"getX"],[62,55,67,53],[62,56,67,54],[62,57,67,55],[63,4,68,2],[63,11,68,9,"formatReturnValue"],[63,28,68,26],[63,29,68,27,"out"],[63,32,68,30],[63,34,68,32,"enc"],[63,37,68,35],[63,39,68,37],[63,43,68,41],[63,44,68,42,"curveType"],[63,53,68,51],[63,54,68,52,"byteLength"],[63,64,68,62],[63,65,68,63],[64,2,69,0],[64,3,69,1],[65,2,71,0,"ECDH"],[65,6,71,4],[65,7,71,5,"prototype"],[65,16,71,14],[65,17,71,15,"getPublicKey"],[65,29,71,27],[65,32,71,30],[65,42,71,40,"enc"],[65,45,71,43],[65,47,71,45,"format"],[65,53,71,51],[65,55,71,53],[66,4,72,2],[66,8,72,6,"key"],[66,11,72,9],[66,14,72,12],[66,18,72,16],[66,19,72,17,"keys"],[66,23,72,21],[66,24,72,22,"getPublic"],[66,33,72,31],[66,34,72,32,"format"],[66,40,72,38],[66,45,72,43],[66,57,72,55],[66,59,72,57],[66,63,72,61],[66,64,72,62],[67,4,73,2],[67,8,73,6,"format"],[67,14,73,12],[67,19,73,17],[67,27,73,25],[67,29,73,27],[68,6,74,4],[68,10,74,8,"key"],[68,13,74,11],[68,14,74,12,"key"],[68,17,74,15],[68,18,74,16,"length"],[68,24,74,22],[68,27,74,25],[68,28,74,26],[68,29,74,27],[68,32,74,30],[68,33,74,31],[68,35,74,33],[69,8,75,6,"key"],[69,11,75,9],[69,12,75,10],[69,13,75,11],[69,14,75,12],[69,17,75,15],[69,18,75,16],[70,6,76,4],[70,7,76,5],[70,13,76,11],[71,8,77,6,"key"],[71,11,77,9],[71,12,77,10],[71,13,77,11],[71,14,77,12],[71,17,77,15],[71,18,77,16],[72,6,78,4],[73,4,79,2],[74,4,80,2],[74,11,80,9,"formatReturnValue"],[74,28,80,26],[74,29,80,27,"key"],[74,32,80,30],[74,34,80,32,"enc"],[74,37,80,35],[74,38,80,36],[75,2,81,0],[75,3,81,1],[76,2,83,0,"ECDH"],[76,6,83,4],[76,7,83,5,"prototype"],[76,16,83,14],[76,17,83,15,"getPrivateKey"],[76,30,83,28],[76,33,83,31],[76,43,83,41,"enc"],[76,46,83,44],[76,48,83,46],[77,4,84,2],[77,11,84,9,"formatReturnValue"],[77,28,84,26],[77,29,84,27],[77,33,84,31],[77,34,84,32,"keys"],[77,38,84,36],[77,39,84,37,"getPrivate"],[77,49,84,47],[77,50,84,48],[77,51,84,49],[77,53,84,51,"enc"],[77,56,84,54],[77,57,84,55],[78,2,85,0],[78,3,85,1],[79,2,87,0,"ECDH"],[79,6,87,4],[79,7,87,5,"prototype"],[79,16,87,14],[79,17,87,15,"setPublicKey"],[79,29,87,27],[79,32,87,30],[79,42,87,40,"pub"],[79,45,87,43],[79,47,87,45,"enc"],[79,50,87,48],[79,52,87,50],[80,4,88,2,"enc"],[80,7,88,5],[80,10,88,8,"enc"],[80,13,88,11],[80,17,88,15],[80,23,88,21],[81,4,89,2],[81,8,89,6],[81,9,89,7,"Buffer"],[81,15,89,13],[81,16,89,14,"isBuffer"],[81,24,89,22],[81,25,89,23,"pub"],[81,28,89,26],[81,29,89,27],[81,31,89,29],[82,6,90,4,"pub"],[82,9,90,7],[82,12,90,10],[82,16,90,14,"Buffer"],[82,22,90,20],[82,23,90,21,"pub"],[82,26,90,24],[82,28,90,26,"enc"],[82,31,90,29],[82,32,90,30],[83,4,91,2],[84,4,92,2],[84,8,92,6],[84,9,92,7,"keys"],[84,13,92,11],[84,14,92,12,"_importPublic"],[84,27,92,25],[84,28,92,26,"pub"],[84,31,92,29],[84,32,92,30],[85,4,93,2],[85,11,93,9],[85,15,93,13],[86,2,94,0],[86,3,94,1],[87,2,96,0,"ECDH"],[87,6,96,4],[87,7,96,5,"prototype"],[87,16,96,14],[87,17,96,15,"setPrivateKey"],[87,30,96,28],[87,33,96,31],[87,43,96,41,"priv"],[87,47,96,45],[87,49,96,47,"enc"],[87,52,96,50],[87,54,96,52],[88,4,97,2,"enc"],[88,7,97,5],[88,10,97,8,"enc"],[88,13,97,11],[88,17,97,15],[88,23,97,21],[89,4,98,2],[89,8,98,6],[89,9,98,7,"Buffer"],[89,15,98,13],[89,16,98,14,"isBuffer"],[89,24,98,22],[89,25,98,23,"priv"],[89,29,98,27],[89,30,98,28],[89,32,98,30],[90,6,99,4,"priv"],[90,10,99,8],[90,13,99,11],[90,17,99,15,"Buffer"],[90,23,99,21],[90,24,99,22,"priv"],[90,28,99,26],[90,30,99,28,"enc"],[90,33,99,31],[90,34,99,32],[91,4,100,2],[92,4,102,2],[92,8,102,6,"_priv"],[92,13,102,11],[92,16,102,14],[92,20,102,18,"BN"],[92,22,102,20],[92,23,102,21,"priv"],[92,27,102,25],[92,28,102,26],[93,4,103,2,"_priv"],[93,9,103,7],[93,12,103,10,"_priv"],[93,17,103,15],[93,18,103,16,"toString"],[93,26,103,24],[93,27,103,25],[93,29,103,27],[93,30,103,28],[94,4,104,2],[94,8,104,6],[94,9,104,7,"keys"],[94,13,104,11],[94,16,104,14],[94,20,104,18],[94,21,104,19,"curve"],[94,26,104,24],[94,27,104,25,"genKeyPair"],[94,37,104,35],[94,38,104,36],[94,39,104,37],[95,4,105,2],[95,8,105,6],[95,9,105,7,"keys"],[95,13,105,11],[95,14,105,12,"_importPrivate"],[95,28,105,26],[95,29,105,27,"_priv"],[95,34,105,32],[95,35,105,33],[96,4,106,2],[96,11,106,9],[96,15,106,13],[97,2,107,0],[97,3,107,1],[98,2,109,0],[98,11,109,9,"formatReturnValue"],[98,28,109,26,"formatReturnValue"],[98,29,109,28,"bn"],[98,31,109,30],[98,33,109,32,"enc"],[98,36,109,35],[98,38,109,37,"len"],[98,41,109,40],[98,43,109,42],[99,4,110,2],[99,8,110,6],[99,9,110,7,"Array"],[99,14,110,12],[99,15,110,13,"isArray"],[99,22,110,20],[99,23,110,21,"bn"],[99,25,110,23],[99,26,110,24],[99,28,110,26],[100,6,111,4,"bn"],[100,8,111,6],[100,11,111,9,"bn"],[100,13,111,11],[100,14,111,12,"toArray"],[100,21,111,19],[100,22,111,20],[100,23,111,21],[101,4,112,2],[102,4,113,2],[102,8,113,6,"buf"],[102,11,113,9],[102,14,113,12],[102,18,113,16,"Buffer"],[102,24,113,22],[102,25,113,23,"bn"],[102,27,113,25],[102,28,113,26],[103,4,114,2],[103,8,114,6,"len"],[103,11,114,9],[103,15,114,13,"buf"],[103,18,114,16],[103,19,114,17,"length"],[103,25,114,23],[103,28,114,26,"len"],[103,31,114,29],[103,33,114,31],[104,6,115,4],[104,10,115,8,"zeros"],[104,15,115,13],[104,18,115,16],[104,22,115,20,"Buffer"],[104,28,115,26],[104,29,115,27,"len"],[104,32,115,30],[104,35,115,33,"buf"],[104,38,115,36],[104,39,115,37,"length"],[104,45,115,43],[104,46,115,44],[105,6,116,4,"zeros"],[105,11,116,9],[105,12,116,10,"fill"],[105,16,116,14],[105,17,116,15],[105,18,116,16],[105,19,116,17],[106,6,117,4,"buf"],[106,9,117,7],[106,12,117,10,"Buffer"],[106,18,117,16],[106,19,117,17,"concat"],[106,25,117,23],[106,26,117,24],[106,27,117,25,"zeros"],[106,32,117,30],[106,34,117,32,"buf"],[106,37,117,35],[106,38,117,36],[106,39,117,37],[107,4,118,2],[108,4,119,2],[108,8,119,6],[108,9,119,7,"enc"],[108,12,119,10],[108,14,119,12],[109,6,120,4],[109,13,120,11,"buf"],[109,16,120,14],[110,4,121,2],[110,5,121,3],[110,11,121,9],[111,6,122,4],[111,13,122,11,"buf"],[111,16,122,14],[111,17,122,15,"toString"],[111,25,122,23],[111,26,122,24,"enc"],[111,29,122,27],[111,30,122,28],[112,4,123,2],[113,2,124,0],[114,0,124,1],[114,3]],"functionMap":{"names":["<global>","createECDH","ECDH","ECDH.prototype.generateKeys","ECDH.prototype.computeSecret","ECDH.prototype.getPublicKey","ECDH.prototype.getPrivateKey","ECDH.prototype.setPublicKey","ECDH.prototype.setPrivateKey","formatReturnValue"],"mappings":"AAA;iBCG;CDE;AEuC;CFS;8BGE;CHG;+BIE;CJQ;8BKE;CLU;+BME;CNE;8BOE;CPO;+BQE;CRW;ASE;CTe"}},"type":"js/module"}]}