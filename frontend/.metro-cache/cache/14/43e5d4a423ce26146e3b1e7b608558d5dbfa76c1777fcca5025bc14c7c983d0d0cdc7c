{"dependencies":[{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":43,"index":58}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM=","exportNames":["*"]}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":75},"end":{"line":4,"column":34,"index":94}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var assert = require(_dependencyMap[0], \"minimalistic-assert\");\n  var inherits = require(_dependencyMap[1], \"inherits\");\n  var proto = {};\n  function CBCState(iv) {\n    assert.equal(iv.length, 8, 'Invalid IV length');\n    this.iv = new Array(8);\n    for (var i = 0; i < this.iv.length; i++) this.iv[i] = iv[i];\n  }\n  function instantiate(Base) {\n    function CBC(options) {\n      Base.call(this, options);\n      this._cbcInit();\n    }\n    inherits(CBC, Base);\n    var keys = Object.keys(proto);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      CBC.prototype[key] = proto[key];\n    }\n    CBC.create = function create(options) {\n      return new CBC(options);\n    };\n    return CBC;\n  }\n  exports.instantiate = instantiate;\n  proto._cbcInit = function _cbcInit() {\n    var state = new CBCState(this.options.iv);\n    this._cbcState = state;\n  };\n  proto._update = function _update(inp, inOff, out, outOff) {\n    var state = this._cbcState;\n    var superProto = this.constructor.super_.prototype;\n    var iv = state.iv;\n    if (this.type === 'encrypt') {\n      for (var i = 0; i < this.blockSize; i++) iv[i] ^= inp[inOff + i];\n      superProto._update.call(this, iv, 0, out, outOff);\n      for (var i = 0; i < this.blockSize; i++) iv[i] = out[outOff + i];\n    } else {\n      superProto._update.call(this, inp, inOff, out, outOff);\n      for (var i = 0; i < this.blockSize; i++) out[outOff + i] ^= iv[i];\n      for (var i = 0; i < this.blockSize; i++) iv[i] = inp[inOff + i];\n    }\n  };\n});","lineCount":47,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"assert"],[4,12,3,10],[4,15,3,13,"require"],[4,22,3,20],[4,23,3,20,"_dependencyMap"],[4,37,3,20],[4,63,3,42],[4,64,3,43],[5,2,4,0],[5,6,4,4,"inherits"],[5,14,4,12],[5,17,4,15,"require"],[5,24,4,22],[5,25,4,22,"_dependencyMap"],[5,39,4,22],[5,54,4,33],[5,55,4,34],[6,2,6,0],[6,6,6,4,"proto"],[6,11,6,9],[6,14,6,12],[6,15,6,13],[6,16,6,14],[7,2,8,0],[7,11,8,9,"CBCState"],[7,19,8,17,"CBCState"],[7,20,8,18,"iv"],[7,22,8,20],[7,24,8,22],[8,4,9,2,"assert"],[8,10,9,8],[8,11,9,9,"equal"],[8,16,9,14],[8,17,9,15,"iv"],[8,19,9,17],[8,20,9,18,"length"],[8,26,9,24],[8,28,9,26],[8,29,9,27],[8,31,9,29],[8,50,9,48],[8,51,9,49],[9,4,11,2],[9,8,11,6],[9,9,11,7,"iv"],[9,11,11,9],[9,14,11,12],[9,18,11,16,"Array"],[9,23,11,21],[9,24,11,22],[9,25,11,23],[9,26,11,24],[10,4,12,2],[10,9,12,7],[10,13,12,11,"i"],[10,14,12,12],[10,17,12,15],[10,18,12,16],[10,20,12,18,"i"],[10,21,12,19],[10,24,12,22],[10,28,12,26],[10,29,12,27,"iv"],[10,31,12,29],[10,32,12,30,"length"],[10,38,12,36],[10,40,12,38,"i"],[10,41,12,39],[10,43,12,41],[10,45,13,4],[10,49,13,8],[10,50,13,9,"iv"],[10,52,13,11],[10,53,13,12,"i"],[10,54,13,13],[10,55,13,14],[10,58,13,17,"iv"],[10,60,13,19],[10,61,13,20,"i"],[10,62,13,21],[10,63,13,22],[11,2,14,0],[12,2,16,0],[12,11,16,9,"instantiate"],[12,22,16,20,"instantiate"],[12,23,16,21,"Base"],[12,27,16,25],[12,29,16,27],[13,4,17,2],[13,13,17,11,"CBC"],[13,16,17,14,"CBC"],[13,17,17,15,"options"],[13,24,17,22],[13,26,17,24],[14,6,18,4,"Base"],[14,10,18,8],[14,11,18,9,"call"],[14,15,18,13],[14,16,18,14],[14,20,18,18],[14,22,18,20,"options"],[14,29,18,27],[14,30,18,28],[15,6,19,4],[15,10,19,8],[15,11,19,9,"_cbcInit"],[15,19,19,17],[15,20,19,18],[15,21,19,19],[16,4,20,2],[17,4,21,2,"inherits"],[17,12,21,10],[17,13,21,11,"CBC"],[17,16,21,14],[17,18,21,16,"Base"],[17,22,21,20],[17,23,21,21],[18,4,23,2],[18,8,23,6,"keys"],[18,12,23,10],[18,15,23,13,"Object"],[18,21,23,19],[18,22,23,20,"keys"],[18,26,23,24],[18,27,23,25,"proto"],[18,32,23,30],[18,33,23,31],[19,4,24,2],[19,9,24,7],[19,13,24,11,"i"],[19,14,24,12],[19,17,24,15],[19,18,24,16],[19,20,24,18,"i"],[19,21,24,19],[19,24,24,22,"keys"],[19,28,24,26],[19,29,24,27,"length"],[19,35,24,33],[19,37,24,35,"i"],[19,38,24,36],[19,40,24,38],[19,42,24,40],[20,6,25,4],[20,10,25,8,"key"],[20,13,25,11],[20,16,25,14,"keys"],[20,20,25,18],[20,21,25,19,"i"],[20,22,25,20],[20,23,25,21],[21,6,26,4,"CBC"],[21,9,26,7],[21,10,26,8,"prototype"],[21,19,26,17],[21,20,26,18,"key"],[21,23,26,21],[21,24,26,22],[21,27,26,25,"proto"],[21,32,26,30],[21,33,26,31,"key"],[21,36,26,34],[21,37,26,35],[22,4,27,2],[23,4,29,2,"CBC"],[23,7,29,5],[23,8,29,6,"create"],[23,14,29,12],[23,17,29,15],[23,26,29,24,"create"],[23,32,29,30,"create"],[23,33,29,31,"options"],[23,40,29,38],[23,42,29,40],[24,6,30,4],[24,13,30,11],[24,17,30,15,"CBC"],[24,20,30,18],[24,21,30,19,"options"],[24,28,30,26],[24,29,30,27],[25,4,31,2],[25,5,31,3],[26,4,33,2],[26,11,33,9,"CBC"],[26,14,33,12],[27,2,34,0],[28,2,36,0,"exports"],[28,9,36,7],[28,10,36,8,"instantiate"],[28,21,36,19],[28,24,36,22,"instantiate"],[28,35,36,33],[29,2,38,0,"proto"],[29,7,38,5],[29,8,38,6,"_cbcInit"],[29,16,38,14],[29,19,38,17],[29,28,38,26,"_cbcInit"],[29,36,38,34,"_cbcInit"],[29,37,38,34],[29,39,38,37],[30,4,39,2],[30,8,39,6,"state"],[30,13,39,11],[30,16,39,14],[30,20,39,18,"CBCState"],[30,28,39,26],[30,29,39,27],[30,33,39,31],[30,34,39,32,"options"],[30,41,39,39],[30,42,39,40,"iv"],[30,44,39,42],[30,45,39,43],[31,4,40,2],[31,8,40,6],[31,9,40,7,"_cbcState"],[31,18,40,16],[31,21,40,19,"state"],[31,26,40,24],[32,2,41,0],[32,3,41,1],[33,2,43,0,"proto"],[33,7,43,5],[33,8,43,6,"_update"],[33,15,43,13],[33,18,43,16],[33,27,43,25,"_update"],[33,34,43,32,"_update"],[33,35,43,33,"inp"],[33,38,43,36],[33,40,43,38,"inOff"],[33,45,43,43],[33,47,43,45,"out"],[33,50,43,48],[33,52,43,50,"outOff"],[33,58,43,56],[33,60,43,58],[34,4,44,2],[34,8,44,6,"state"],[34,13,44,11],[34,16,44,14],[34,20,44,18],[34,21,44,19,"_cbcState"],[34,30,44,28],[35,4,45,2],[35,8,45,6,"superProto"],[35,18,45,16],[35,21,45,19],[35,25,45,23],[35,26,45,24,"constructor"],[35,37,45,35],[35,38,45,36,"super_"],[35,44,45,42],[35,45,45,43,"prototype"],[35,54,45,52],[36,4,47,2],[36,8,47,6,"iv"],[36,10,47,8],[36,13,47,11,"state"],[36,18,47,16],[36,19,47,17,"iv"],[36,21,47,19],[37,4,48,2],[37,8,48,6],[37,12,48,10],[37,13,48,11,"type"],[37,17,48,15],[37,22,48,20],[37,31,48,29],[37,33,48,31],[38,6,49,4],[38,11,49,9],[38,15,49,13,"i"],[38,16,49,14],[38,19,49,17],[38,20,49,18],[38,22,49,20,"i"],[38,23,49,21],[38,26,49,24],[38,30,49,28],[38,31,49,29,"blockSize"],[38,40,49,38],[38,42,49,40,"i"],[38,43,49,41],[38,45,49,43],[38,47,50,6,"iv"],[38,49,50,8],[38,50,50,9,"i"],[38,51,50,10],[38,52,50,11],[38,56,50,15,"inp"],[38,59,50,18],[38,60,50,19,"inOff"],[38,65,50,24],[38,68,50,27,"i"],[38,69,50,28],[38,70,50,29],[39,6,52,4,"superProto"],[39,16,52,14],[39,17,52,15,"_update"],[39,24,52,22],[39,25,52,23,"call"],[39,29,52,27],[39,30,52,28],[39,34,52,32],[39,36,52,34,"iv"],[39,38,52,36],[39,40,52,38],[39,41,52,39],[39,43,52,41,"out"],[39,46,52,44],[39,48,52,46,"outOff"],[39,54,52,52],[39,55,52,53],[40,6,54,4],[40,11,54,9],[40,15,54,13,"i"],[40,16,54,14],[40,19,54,17],[40,20,54,18],[40,22,54,20,"i"],[40,23,54,21],[40,26,54,24],[40,30,54,28],[40,31,54,29,"blockSize"],[40,40,54,38],[40,42,54,40,"i"],[40,43,54,41],[40,45,54,43],[40,47,55,6,"iv"],[40,49,55,8],[40,50,55,9,"i"],[40,51,55,10],[40,52,55,11],[40,55,55,14,"out"],[40,58,55,17],[40,59,55,18,"outOff"],[40,65,55,24],[40,68,55,27,"i"],[40,69,55,28],[40,70,55,29],[41,4,56,2],[41,5,56,3],[41,11,56,9],[42,6,57,4,"superProto"],[42,16,57,14],[42,17,57,15,"_update"],[42,24,57,22],[42,25,57,23,"call"],[42,29,57,27],[42,30,57,28],[42,34,57,32],[42,36,57,34,"inp"],[42,39,57,37],[42,41,57,39,"inOff"],[42,46,57,44],[42,48,57,46,"out"],[42,51,57,49],[42,53,57,51,"outOff"],[42,59,57,57],[42,60,57,58],[43,6,59,4],[43,11,59,9],[43,15,59,13,"i"],[43,16,59,14],[43,19,59,17],[43,20,59,18],[43,22,59,20,"i"],[43,23,59,21],[43,26,59,24],[43,30,59,28],[43,31,59,29,"blockSize"],[43,40,59,38],[43,42,59,40,"i"],[43,43,59,41],[43,45,59,43],[43,47,60,6,"out"],[43,50,60,9],[43,51,60,10,"outOff"],[43,57,60,16],[43,60,60,19,"i"],[43,61,60,20],[43,62,60,21],[43,66,60,25,"iv"],[43,68,60,27],[43,69,60,28,"i"],[43,70,60,29],[43,71,60,30],[44,6,62,4],[44,11,62,9],[44,15,62,13,"i"],[44,16,62,14],[44,19,62,17],[44,20,62,18],[44,22,62,20,"i"],[44,23,62,21],[44,26,62,24],[44,30,62,28],[44,31,62,29,"blockSize"],[44,40,62,38],[44,42,62,40,"i"],[44,43,62,41],[44,45,62,43],[44,47,63,6,"iv"],[44,49,63,8],[44,50,63,9,"i"],[44,51,63,10],[44,52,63,11],[44,55,63,14,"inp"],[44,58,63,17],[44,59,63,18,"inOff"],[44,64,63,23],[44,67,63,26,"i"],[44,68,63,27],[44,69,63,28],[45,4,64,2],[46,2,65,0],[46,3,65,1],[47,0,65,2],[47,3]],"functionMap":{"names":["<global>","CBCState","instantiate","CBC","create","_cbcInit","_update"],"mappings":"AAA;ACO;CDM;AEE;ECC;GDG;eES;GFE;CFG;iBKI;CLG;gBME;CNsB"}},"type":"js/module"}]}