{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":51,"index":125}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/transferChecked.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":86,"index":212}}],"key":"vWU7boDshcjBkZ507wfgiMqKulo=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":213},"end":{"line":4,"column":43,"index":256}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.transferChecked = transferChecked;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _transferChecked = require(_dependencyMap[2], \"../instructions/transferChecked.js\");\n  var _internal = require(_dependencyMap[3], \"./internal.js\");\n  /**\n   * Transfer tokens from one account to another, asserting the token mint and decimals\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param source         Source account\n   * @param mint           Mint for the account\n   * @param destination    Destination account\n   * @param owner          Owner of the source account\n   * @param amount         Number of tokens to transfer\n   * @param decimals       Number of decimals in transfer amount\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function transferChecked(connection, payer, source, mint, destination, owner, amount, decimals, multiSigners = [], confirmOptions, programId = _constants.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _transferChecked.createTransferCheckedInstruction)(source, mint, destination, ownerPublicKey, amount, decimals, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":32,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_transferChecked"],[8,22,3,0],[8,25,3,0,"require"],[8,32,3,0],[8,33,3,0,"_dependencyMap"],[8,47,3,0],[9,2,4,0],[9,6,4,0,"_internal"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,7],[27,17,22,22,"transferChecked"],[27,32,22,37,"transferChecked"],[27,33,22,38,"connection"],[27,43,22,48],[27,45,22,50,"payer"],[27,50,22,55],[27,52,22,57,"source"],[27,58,22,63],[27,60,22,65,"mint"],[27,64,22,69],[27,66,22,71,"destination"],[27,77,22,82],[27,79,22,84,"owner"],[27,84,22,89],[27,86,22,91,"amount"],[27,92,22,97],[27,94,22,99,"decimals"],[27,102,22,107],[27,104,22,109,"multiSigners"],[27,116,22,121],[27,119,22,124],[27,121,22,126],[27,123,22,128,"confirmOptions"],[27,137,22,142],[27,139,22,144,"programId"],[27,148,22,153],[27,151,22,156,"TOKEN_PROGRAM_ID"],[27,178,22,172],[27,180,22,174],[28,4,23,4],[28,10,23,10],[28,11,23,11,"ownerPublicKey"],[28,25,23,25],[28,27,23,27,"signers"],[28,34,23,34],[28,35,23,35],[28,38,23,38],[28,42,23,38,"getSigners"],[28,62,23,48],[28,64,23,49,"owner"],[28,69,23,54],[28,71,23,56,"multiSigners"],[28,83,23,68],[28,84,23,69],[29,4,24,4],[29,10,24,10,"transaction"],[29,21,24,21],[29,24,24,24],[29,28,24,28,"Transaction"],[29,44,24,39],[29,45,24,40],[29,46,24,41],[29,47,24,42,"add"],[29,50,24,45],[29,51,24,46],[29,55,24,46,"createTransferCheckedInstruction"],[29,104,24,78],[29,106,24,79,"source"],[29,112,24,85],[29,114,24,87,"mint"],[29,118,24,91],[29,120,24,93,"destination"],[29,131,24,104],[29,133,24,106,"ownerPublicKey"],[29,147,24,120],[29,149,24,122,"amount"],[29,155,24,128],[29,157,24,130,"decimals"],[29,165,24,138],[29,167,24,140,"multiSigners"],[29,179,24,152],[29,181,24,154,"programId"],[29,190,24,163],[29,191,24,164],[29,192,24,165],[30,4,25,4],[30,11,25,11],[30,17,25,17],[30,21,25,17,"sendAndConfirmTransaction"],[30,51,25,42],[30,53,25,43,"connection"],[30,63,25,53],[30,65,25,55,"transaction"],[30,76,25,66],[30,78,25,68],[30,79,25,69,"payer"],[30,84,25,74],[30,86,25,76],[30,89,25,79,"signers"],[30,96,25,86],[30,97,25,87],[30,99,25,89,"confirmOptions"],[30,113,25,103],[30,114,25,104],[31,2,26,0],[32,0,26,1],[32,3]],"functionMap":{"names":["<global>","transferChecked"],"mappings":"AAA;OCqB;CDI"}},"type":"js/module"}]}