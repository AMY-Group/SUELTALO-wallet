{"dependencies":[{"name":"parse-asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":37,"index":37}}],"key":"COzMkWIbbKvXpM5KBuLue1rYJxE=","exportNames":["*"]}},{"name":"./mgf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":10,"index":48},"end":{"line":2,"column":26,"index":64}}],"key":"oLASPktrADryWflSrNuGCrZB31Y=","exportNames":["*"]}},{"name":"./xor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":10,"index":75},"end":{"line":3,"column":26,"index":91}}],"key":"uacRIxk+SP/r2vTjF8sBXB2uaAQ=","exportNames":["*"]}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":9,"index":101},"end":{"line":4,"column":25,"index":117}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"browserify-rsa","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":10,"index":128},"end":{"line":5,"column":35,"index":153}}],"key":"i91NB5S6fkkom0NK1NSlNMPM/ZQ=","exportNames":["*"]}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":171},"end":{"line":6,"column":39,"index":193}}],"key":"7Wxhpesb6O8KtkMXbqnF6GdF3fo=","exportNames":["*"]}},{"name":"./withPublic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":17,"index":211},"end":{"line":7,"column":40,"index":234}}],"key":"O+TxBUnGwgZALueMuoyKGC02+3s=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":248},"end":{"line":8,"column":35,"index":270}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var parseKeys = require(_dependencyMap[0], \"parse-asn1\");\n  var mgf = require(_dependencyMap[1], \"./mgf\");\n  var xor = require(_dependencyMap[2], \"./xor\");\n  var BN = require(_dependencyMap[3], \"bn.js\");\n  var crt = require(_dependencyMap[4], \"browserify-rsa\");\n  var createHash = require(_dependencyMap[5], \"create-hash\");\n  var withPublic = require(_dependencyMap[6], \"./withPublic\");\n  var Buffer = require(_dependencyMap[7], \"safe-buffer\").Buffer;\n  module.exports = function privateDecrypt(privateKey, enc, reverse) {\n    var padding;\n    if (privateKey.padding) {\n      padding = privateKey.padding;\n    } else if (reverse) {\n      padding = 1;\n    } else {\n      padding = 4;\n    }\n    var key = parseKeys(privateKey);\n    var k = key.modulus.byteLength();\n    if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n      throw new Error('decryption error');\n    }\n    var msg;\n    if (reverse) {\n      msg = withPublic(new BN(enc), key);\n    } else {\n      msg = crt(enc, key);\n    }\n    var zBuffer = Buffer.alloc(k - msg.length);\n    msg = Buffer.concat([zBuffer, msg], k);\n    if (padding === 4) {\n      return oaep(key, msg);\n    } else if (padding === 1) {\n      return pkcs1(key, msg, reverse);\n    } else if (padding === 3) {\n      return msg;\n    } else {\n      throw new Error('unknown padding');\n    }\n  };\n  function oaep(key, msg) {\n    var k = key.modulus.byteLength();\n    var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();\n    var hLen = iHash.length;\n    if (msg[0] !== 0) {\n      throw new Error('decryption error');\n    }\n    var maskedSeed = msg.slice(1, hLen + 1);\n    var maskedDb = msg.slice(hLen + 1);\n    var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n    var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n    if (compare(iHash, db.slice(0, hLen))) {\n      throw new Error('decryption error');\n    }\n    var i = hLen;\n    while (db[i] === 0) {\n      i++;\n    }\n    if (db[i++] !== 1) {\n      throw new Error('decryption error');\n    }\n    return db.slice(i);\n  }\n  function pkcs1(key, msg, reverse) {\n    var p1 = msg.slice(0, 2);\n    var i = 2;\n    var status = 0;\n    while (msg[i++] !== 0) {\n      if (i >= msg.length) {\n        status++;\n        break;\n      }\n    }\n    var ps = msg.slice(2, i - 1);\n    if (p1.toString('hex') !== '0002' && !reverse || p1.toString('hex') !== '0001' && reverse) {\n      status++;\n    }\n    if (ps.length < 8) {\n      status++;\n    }\n    if (status) {\n      throw new Error('decryption error');\n    }\n    return msg.slice(i);\n  }\n  function compare(a, b) {\n    a = Buffer.from(a);\n    b = Buffer.from(b);\n    var dif = 0;\n    var len = a.length;\n    if (a.length !== b.length) {\n      dif++;\n      len = Math.min(a.length, b.length);\n    }\n    var i = -1;\n    while (++i < len) {\n      dif += a[i] ^ b[i];\n    }\n    return dif;\n  }\n});","lineCount":102,"map":[[2,2,1,0],[2,6,1,4,"parseKeys"],[2,15,1,13],[2,18,1,16,"require"],[2,25,1,23],[2,26,1,23,"_dependencyMap"],[2,40,1,23],[2,57,1,36],[2,58,1,37],[3,2,2,0],[3,6,2,4,"mgf"],[3,9,2,7],[3,12,2,10,"require"],[3,19,2,17],[3,20,2,17,"_dependencyMap"],[3,34,2,17],[3,46,2,25],[3,47,2,26],[4,2,3,0],[4,6,3,4,"xor"],[4,9,3,7],[4,12,3,10,"require"],[4,19,3,17],[4,20,3,17,"_dependencyMap"],[4,34,3,17],[4,46,3,25],[4,47,3,26],[5,2,4,0],[5,6,4,4,"BN"],[5,8,4,6],[5,11,4,9,"require"],[5,18,4,16],[5,19,4,16,"_dependencyMap"],[5,33,4,16],[5,45,4,24],[5,46,4,25],[6,2,5,0],[6,6,5,4,"crt"],[6,9,5,7],[6,12,5,10,"require"],[6,19,5,17],[6,20,5,17,"_dependencyMap"],[6,34,5,17],[6,55,5,34],[6,56,5,35],[7,2,6,0],[7,6,6,4,"createHash"],[7,16,6,14],[7,19,6,17,"require"],[7,26,6,24],[7,27,6,24,"_dependencyMap"],[7,41,6,24],[7,59,6,38],[7,60,6,39],[8,2,7,0],[8,6,7,4,"withPublic"],[8,16,7,14],[8,19,7,17,"require"],[8,26,7,24],[8,27,7,24,"_dependencyMap"],[8,41,7,24],[8,60,7,39],[8,61,7,40],[9,2,8,0],[9,6,8,4,"Buffer"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,55,8,34],[9,56,8,35],[9,57,8,36,"Buffer"],[9,63,8,42],[10,2,10,0,"module"],[10,8,10,6],[10,9,10,7,"exports"],[10,16,10,14],[10,19,10,17],[10,28,10,26,"privateDecrypt"],[10,42,10,40,"privateDecrypt"],[10,43,10,42,"privateKey"],[10,53,10,52],[10,55,10,54,"enc"],[10,58,10,57],[10,60,10,59,"reverse"],[10,67,10,66],[10,69,10,68],[11,4,11,2],[11,8,11,6,"padding"],[11,15,11,13],[12,4,12,2],[12,8,12,6,"privateKey"],[12,18,12,16],[12,19,12,17,"padding"],[12,26,12,24],[12,28,12,26],[13,6,13,4,"padding"],[13,13,13,11],[13,16,13,14,"privateKey"],[13,26,13,24],[13,27,13,25,"padding"],[13,34,13,32],[14,4,14,2],[14,5,14,3],[14,11,14,9],[14,15,14,13,"reverse"],[14,22,14,20],[14,24,14,22],[15,6,15,4,"padding"],[15,13,15,11],[15,16,15,14],[15,17,15,15],[16,4,16,2],[16,5,16,3],[16,11,16,9],[17,6,17,4,"padding"],[17,13,17,11],[17,16,17,14],[17,17,17,15],[18,4,18,2],[19,4,20,2],[19,8,20,6,"key"],[19,11,20,9],[19,14,20,12,"parseKeys"],[19,23,20,21],[19,24,20,22,"privateKey"],[19,34,20,32],[19,35,20,33],[20,4,21,2],[20,8,21,6,"k"],[20,9,21,7],[20,12,21,10,"key"],[20,15,21,13],[20,16,21,14,"modulus"],[20,23,21,21],[20,24,21,22,"byteLength"],[20,34,21,32],[20,35,21,33],[20,36,21,34],[21,4,22,2],[21,8,22,6,"enc"],[21,11,22,9],[21,12,22,10,"length"],[21,18,22,16],[21,21,22,19,"k"],[21,22,22,20],[21,26,22,24],[21,30,22,28,"BN"],[21,32,22,30],[21,33,22,31,"enc"],[21,36,22,34],[21,37,22,35],[21,38,22,36,"cmp"],[21,41,22,39],[21,42,22,40,"key"],[21,45,22,43],[21,46,22,44,"modulus"],[21,53,22,51],[21,54,22,52],[21,58,22,56],[21,59,22,57],[21,61,22,59],[22,6,23,4],[22,12,23,10],[22,16,23,14,"Error"],[22,21,23,19],[22,22,23,20],[22,40,23,38],[22,41,23,39],[23,4,24,2],[24,4,25,2],[24,8,25,6,"msg"],[24,11,25,9],[25,4,26,2],[25,8,26,6,"reverse"],[25,15,26,13],[25,17,26,15],[26,6,27,4,"msg"],[26,9,27,7],[26,12,27,10,"withPublic"],[26,22,27,20],[26,23,27,21],[26,27,27,25,"BN"],[26,29,27,27],[26,30,27,28,"enc"],[26,33,27,31],[26,34,27,32],[26,36,27,34,"key"],[26,39,27,37],[26,40,27,38],[27,4,28,2],[27,5,28,3],[27,11,28,9],[28,6,29,4,"msg"],[28,9,29,7],[28,12,29,10,"crt"],[28,15,29,13],[28,16,29,14,"enc"],[28,19,29,17],[28,21,29,19,"key"],[28,24,29,22],[28,25,29,23],[29,4,30,2],[30,4,31,2],[30,8,31,6,"zBuffer"],[30,15,31,13],[30,18,31,16,"Buffer"],[30,24,31,22],[30,25,31,23,"alloc"],[30,30,31,28],[30,31,31,29,"k"],[30,32,31,30],[30,35,31,33,"msg"],[30,38,31,36],[30,39,31,37,"length"],[30,45,31,43],[30,46,31,44],[31,4,32,2,"msg"],[31,7,32,5],[31,10,32,8,"Buffer"],[31,16,32,14],[31,17,32,15,"concat"],[31,23,32,21],[31,24,32,22],[31,25,32,23,"zBuffer"],[31,32,32,30],[31,34,32,32,"msg"],[31,37,32,35],[31,38,32,36],[31,40,32,38,"k"],[31,41,32,39],[31,42,32,40],[32,4,33,2],[32,8,33,6,"padding"],[32,15,33,13],[32,20,33,18],[32,21,33,19],[32,23,33,21],[33,6,34,4],[33,13,34,11,"oaep"],[33,17,34,15],[33,18,34,16,"key"],[33,21,34,19],[33,23,34,21,"msg"],[33,26,34,24],[33,27,34,25],[34,4,35,2],[34,5,35,3],[34,11,35,9],[34,15,35,13,"padding"],[34,22,35,20],[34,27,35,25],[34,28,35,26],[34,30,35,28],[35,6,36,4],[35,13,36,11,"pkcs1"],[35,18,36,16],[35,19,36,17,"key"],[35,22,36,20],[35,24,36,22,"msg"],[35,27,36,25],[35,29,36,27,"reverse"],[35,36,36,34],[35,37,36,35],[36,4,37,2],[36,5,37,3],[36,11,37,9],[36,15,37,13,"padding"],[36,22,37,20],[36,27,37,25],[36,28,37,26],[36,30,37,28],[37,6,38,4],[37,13,38,11,"msg"],[37,16,38,14],[38,4,39,2],[38,5,39,3],[38,11,39,9],[39,6,40,4],[39,12,40,10],[39,16,40,14,"Error"],[39,21,40,19],[39,22,40,20],[39,39,40,37],[39,40,40,38],[40,4,41,2],[41,2,42,0],[41,3,42,1],[42,2,44,0],[42,11,44,9,"oaep"],[42,15,44,13,"oaep"],[42,16,44,15,"key"],[42,19,44,18],[42,21,44,20,"msg"],[42,24,44,23],[42,26,44,25],[43,4,45,2],[43,8,45,6,"k"],[43,9,45,7],[43,12,45,10,"key"],[43,15,45,13],[43,16,45,14,"modulus"],[43,23,45,21],[43,24,45,22,"byteLength"],[43,34,45,32],[43,35,45,33],[43,36,45,34],[44,4,46,2],[44,8,46,6,"iHash"],[44,13,46,11],[44,16,46,14,"createHash"],[44,26,46,24],[44,27,46,25],[44,33,46,31],[44,34,46,32],[44,35,46,33,"update"],[44,41,46,39],[44,42,46,40,"Buffer"],[44,48,46,46],[44,49,46,47,"alloc"],[44,54,46,52],[44,55,46,53],[44,56,46,54],[44,57,46,55],[44,58,46,56],[44,59,46,57,"digest"],[44,65,46,63],[44,66,46,64],[44,67,46,65],[45,4,47,2],[45,8,47,6,"hLen"],[45,12,47,10],[45,15,47,13,"iHash"],[45,20,47,18],[45,21,47,19,"length"],[45,27,47,25],[46,4,48,2],[46,8,48,6,"msg"],[46,11,48,9],[46,12,48,10],[46,13,48,11],[46,14,48,12],[46,19,48,17],[46,20,48,18],[46,22,48,20],[47,6,49,4],[47,12,49,10],[47,16,49,14,"Error"],[47,21,49,19],[47,22,49,20],[47,40,49,38],[47,41,49,39],[48,4,50,2],[49,4,51,2],[49,8,51,6,"maskedSeed"],[49,18,51,16],[49,21,51,19,"msg"],[49,24,51,22],[49,25,51,23,"slice"],[49,30,51,28],[49,31,51,29],[49,32,51,30],[49,34,51,32,"hLen"],[49,38,51,36],[49,41,51,39],[49,42,51,40],[49,43,51,41],[50,4,52,2],[50,8,52,6,"maskedDb"],[50,16,52,14],[50,19,52,17,"msg"],[50,22,52,20],[50,23,52,21,"slice"],[50,28,52,26],[50,29,52,27,"hLen"],[50,33,52,31],[50,36,52,34],[50,37,52,35],[50,38,52,36],[51,4,53,2],[51,8,53,6,"seed"],[51,12,53,10],[51,15,53,13,"xor"],[51,18,53,16],[51,19,53,17,"maskedSeed"],[51,29,53,27],[51,31,53,29,"mgf"],[51,34,53,32],[51,35,53,33,"maskedDb"],[51,43,53,41],[51,45,53,43,"hLen"],[51,49,53,47],[51,50,53,48],[51,51,53,49],[52,4,54,2],[52,8,54,6,"db"],[52,10,54,8],[52,13,54,11,"xor"],[52,16,54,14],[52,17,54,15,"maskedDb"],[52,25,54,23],[52,27,54,25,"mgf"],[52,30,54,28],[52,31,54,29,"seed"],[52,35,54,33],[52,37,54,35,"k"],[52,38,54,36],[52,41,54,39,"hLen"],[52,45,54,43],[52,48,54,46],[52,49,54,47],[52,50,54,48],[52,51,54,49],[53,4,55,2],[53,8,55,6,"compare"],[53,15,55,13],[53,16,55,14,"iHash"],[53,21,55,19],[53,23,55,21,"db"],[53,25,55,23],[53,26,55,24,"slice"],[53,31,55,29],[53,32,55,30],[53,33,55,31],[53,35,55,33,"hLen"],[53,39,55,37],[53,40,55,38],[53,41,55,39],[53,43,55,41],[54,6,56,4],[54,12,56,10],[54,16,56,14,"Error"],[54,21,56,19],[54,22,56,20],[54,40,56,38],[54,41,56,39],[55,4,57,2],[56,4,58,2],[56,8,58,6,"i"],[56,9,58,7],[56,12,58,10,"hLen"],[56,16,58,14],[57,4,59,2],[57,11,59,9,"db"],[57,13,59,11],[57,14,59,12,"i"],[57,15,59,13],[57,16,59,14],[57,21,59,19],[57,22,59,20],[57,24,59,22],[58,6,60,4,"i"],[58,7,60,5],[58,9,60,7],[59,4,61,2],[60,4,62,2],[60,8,62,6,"db"],[60,10,62,8],[60,11,62,9,"i"],[60,12,62,10],[60,14,62,12],[60,15,62,13],[60,20,62,18],[60,21,62,19],[60,23,62,21],[61,6,63,4],[61,12,63,10],[61,16,63,14,"Error"],[61,21,63,19],[61,22,63,20],[61,40,63,38],[61,41,63,39],[62,4,64,2],[63,4,65,2],[63,11,65,9,"db"],[63,13,65,11],[63,14,65,12,"slice"],[63,19,65,17],[63,20,65,18,"i"],[63,21,65,19],[63,22,65,20],[64,2,66,0],[65,2,68,0],[65,11,68,9,"pkcs1"],[65,16,68,14,"pkcs1"],[65,17,68,16,"key"],[65,20,68,19],[65,22,68,21,"msg"],[65,25,68,24],[65,27,68,26,"reverse"],[65,34,68,33],[65,36,68,35],[66,4,69,2],[66,8,69,6,"p1"],[66,10,69,8],[66,13,69,11,"msg"],[66,16,69,14],[66,17,69,15,"slice"],[66,22,69,20],[66,23,69,21],[66,24,69,22],[66,26,69,24],[66,27,69,25],[66,28,69,26],[67,4,70,2],[67,8,70,6,"i"],[67,9,70,7],[67,12,70,10],[67,13,70,11],[68,4,71,2],[68,8,71,6,"status"],[68,14,71,12],[68,17,71,15],[68,18,71,16],[69,4,72,2],[69,11,72,9,"msg"],[69,14,72,12],[69,15,72,13,"i"],[69,16,72,14],[69,18,72,16],[69,19,72,17],[69,24,72,22],[69,25,72,23],[69,27,72,25],[70,6,73,4],[70,10,73,8,"i"],[70,11,73,9],[70,15,73,13,"msg"],[70,18,73,16],[70,19,73,17,"length"],[70,25,73,23],[70,27,73,25],[71,8,74,6,"status"],[71,14,74,12],[71,16,74,14],[72,8,75,6],[73,6,76,4],[74,4,77,2],[75,4,78,2],[75,8,78,6,"ps"],[75,10,78,8],[75,13,78,11,"msg"],[75,16,78,14],[75,17,78,15,"slice"],[75,22,78,20],[75,23,78,21],[75,24,78,22],[75,26,78,24,"i"],[75,27,78,25],[75,30,78,28],[75,31,78,29],[75,32,78,30],[76,4,80,2],[76,8,80,7,"p1"],[76,10,80,9],[76,11,80,10,"toString"],[76,19,80,18],[76,20,80,19],[76,25,80,24],[76,26,80,25],[76,31,80,30],[76,37,80,36],[76,41,80,40],[76,42,80,41,"reverse"],[76,49,80,48],[76,53,80,54,"p1"],[76,55,80,56],[76,56,80,57,"toString"],[76,64,80,65],[76,65,80,66],[76,70,80,71],[76,71,80,72],[76,76,80,77],[76,82,80,83],[76,86,80,87,"reverse"],[76,93,80,95],[76,95,80,97],[77,6,81,4,"status"],[77,12,81,10],[77,14,81,12],[78,4,82,2],[79,4,83,2],[79,8,83,6,"ps"],[79,10,83,8],[79,11,83,9,"length"],[79,17,83,15],[79,20,83,18],[79,21,83,19],[79,23,83,21],[80,6,84,4,"status"],[80,12,84,10],[80,14,84,12],[81,4,85,2],[82,4,86,2],[82,8,86,6,"status"],[82,14,86,12],[82,16,86,14],[83,6,87,4],[83,12,87,10],[83,16,87,14,"Error"],[83,21,87,19],[83,22,87,20],[83,40,87,38],[83,41,87,39],[84,4,88,2],[85,4,89,2],[85,11,89,9,"msg"],[85,14,89,12],[85,15,89,13,"slice"],[85,20,89,18],[85,21,89,19,"i"],[85,22,89,20],[85,23,89,21],[86,2,90,0],[87,2,91,0],[87,11,91,9,"compare"],[87,18,91,16,"compare"],[87,19,91,18,"a"],[87,20,91,19],[87,22,91,21,"b"],[87,23,91,22],[87,25,91,24],[88,4,92,2,"a"],[88,5,92,3],[88,8,92,6,"Buffer"],[88,14,92,12],[88,15,92,13,"from"],[88,19,92,17],[88,20,92,18,"a"],[88,21,92,19],[88,22,92,20],[89,4,93,2,"b"],[89,5,93,3],[89,8,93,6,"Buffer"],[89,14,93,12],[89,15,93,13,"from"],[89,19,93,17],[89,20,93,18,"b"],[89,21,93,19],[89,22,93,20],[90,4,94,2],[90,8,94,6,"dif"],[90,11,94,9],[90,14,94,12],[90,15,94,13],[91,4,95,2],[91,8,95,6,"len"],[91,11,95,9],[91,14,95,12,"a"],[91,15,95,13],[91,16,95,14,"length"],[91,22,95,20],[92,4,96,2],[92,8,96,6,"a"],[92,9,96,7],[92,10,96,8,"length"],[92,16,96,14],[92,21,96,19,"b"],[92,22,96,20],[92,23,96,21,"length"],[92,29,96,27],[92,31,96,29],[93,6,97,4,"dif"],[93,9,97,7],[93,11,97,9],[94,6,98,4,"len"],[94,9,98,7],[94,12,98,10,"Math"],[94,16,98,14],[94,17,98,15,"min"],[94,20,98,18],[94,21,98,19,"a"],[94,22,98,20],[94,23,98,21,"length"],[94,29,98,27],[94,31,98,29,"b"],[94,32,98,30],[94,33,98,31,"length"],[94,39,98,37],[94,40,98,38],[95,4,99,2],[96,4,100,2],[96,8,100,6,"i"],[96,9,100,7],[96,12,100,10],[96,13,100,11],[96,14,100,12],[97,4,101,2],[97,11,101,9],[97,13,101,11,"i"],[97,14,101,12],[97,17,101,15,"len"],[97,20,101,18],[97,22,101,20],[98,6,102,4,"dif"],[98,9,102,7],[98,13,102,12,"a"],[98,14,102,13],[98,15,102,14,"i"],[98,16,102,15],[98,17,102,16],[98,20,102,19,"b"],[98,21,102,20],[98,22,102,21,"i"],[98,23,102,22],[98,24,102,24],[99,4,103,2],[100,4,104,2],[100,11,104,9,"dif"],[100,14,104,12],[101,2,105,0],[102,0,105,1],[102,3]],"functionMap":{"names":["<global>","privateDecrypt","oaep","pkcs1","compare"],"mappings":"AAA;iBCS;CDgC;AEE;CFsB;AGE;CHsB;AIC;CJc"}},"type":"js/module"}]}