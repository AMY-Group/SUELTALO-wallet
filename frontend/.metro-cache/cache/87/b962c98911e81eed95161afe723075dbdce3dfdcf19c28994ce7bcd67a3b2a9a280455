{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":56,"index":108}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":57,"index":166}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":167},"end":{"line":4,"column":51,"index":218}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":219},"end":{"line":5,"column":170,"index":389}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":390},"end":{"line":6,"column":46,"index":436}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeAccount3Instruction = createInitializeAccount3Instruction;\n  exports.decodeInitializeAccount3Instruction = decodeInitializeAccount3Instruction;\n  exports.decodeInitializeAccount3InstructionUnchecked = decodeInitializeAccount3InstructionUnchecked;\n  exports.initializeAccount3InstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _types = require(_dependencyMap[5], \"./types.js\");\n  const initializeAccount3InstructionData = exports.initializeAccount3InstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayoutUtils.publicKey)('owner')]);\n  /**\n   * Construct an InitializeAccount3 instruction\n   *\n   * @param account   New token account\n   * @param mint      Mint account\n   * @param owner     New account's owner/multisignature\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeAccount3Instruction(account, mint, owner, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n    const data = Buffer.alloc(initializeAccount3InstructionData.span);\n    initializeAccount3InstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeAccount3,\n      owner\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an InitializeAccount3 instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeAccount3Instruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount3InstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        mint\n      },\n      data\n    } = decodeInitializeAccount3InstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeAccount3) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !mint) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        mint\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeAccount3 instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeAccount3InstructionUnchecked({\n    programId,\n    keys: [account, mint],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        mint\n      },\n      data: initializeAccount3InstructionData.decode(data)\n    };\n  }\n});","lineCount":98,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,7],[15,8,7,13,"initializeAccount3InstructionData"],[15,41,7,46],[15,44,7,46,"exports"],[15,51,7,46],[15,52,7,46,"initializeAccount3InstructionData"],[15,85,7,46],[15,88,7,49],[15,92,7,49,"struct"],[15,112,7,55],[15,114,7,56],[15,115,8,4],[15,119,8,4,"u8"],[15,135,8,6],[15,137,8,7],[15,150,8,20],[15,151,8,21],[15,153,9,4],[15,157,9,4,"publicKey"],[15,185,9,13],[15,187,9,14],[15,194,9,21],[15,195,9,22],[15,196,10,1],[15,197,10,2],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,7],[26,11,21,16,"createInitializeAccount3Instruction"],[26,46,21,51,"createInitializeAccount3Instruction"],[26,47,21,52,"account"],[26,54,21,59],[26,56,21,61,"mint"],[26,60,21,65],[26,62,21,67,"owner"],[26,67,21,72],[26,69,21,74,"programId"],[26,78,21,83],[26,81,21,86,"TOKEN_PROGRAM_ID"],[26,108,21,102],[26,110,21,104],[27,4,22,4],[27,10,22,10,"keys"],[27,14,22,14],[27,17,22,17],[27,18,23,8],[28,6,23,10,"pubkey"],[28,12,23,16],[28,14,23,18,"account"],[28,21,23,25],[29,6,23,27,"isSigner"],[29,14,23,35],[29,16,23,37],[29,21,23,42],[30,6,23,44,"isWritable"],[30,16,23,54],[30,18,23,56],[31,4,23,61],[31,5,23,62],[31,7,24,8],[32,6,24,10,"pubkey"],[32,12,24,16],[32,14,24,18,"mint"],[32,18,24,22],[33,6,24,24,"isSigner"],[33,14,24,32],[33,16,24,34],[33,21,24,39],[34,6,24,41,"isWritable"],[34,16,24,51],[34,18,24,53],[35,4,24,59],[35,5,24,60],[35,6,25,5],[36,4,26,4],[36,10,26,10,"data"],[36,14,26,14],[36,17,26,17,"Buffer"],[36,23,26,23],[36,24,26,24,"alloc"],[36,29,26,29],[36,30,26,30,"initializeAccount3InstructionData"],[36,63,26,63],[36,64,26,64,"span"],[36,68,26,68],[36,69,26,69],[37,4,27,4,"initializeAccount3InstructionData"],[37,37,27,37],[37,38,27,38,"encode"],[37,44,27,44],[37,45,27,45],[38,6,27,47,"instruction"],[38,17,27,58],[38,19,27,60,"TokenInstruction"],[38,42,27,76],[38,43,27,77,"InitializeAccount3"],[38,61,27,95],[39,6,27,97,"owner"],[40,4,27,103],[40,5,27,104],[40,7,27,106,"data"],[40,11,27,110],[40,12,27,111],[41,4,28,4],[41,11,28,11],[41,15,28,15,"TransactionInstruction"],[41,42,28,37],[41,43,28,38],[42,6,28,40,"keys"],[42,10,28,44],[43,6,28,46,"programId"],[43,15,28,55],[44,6,28,57,"data"],[45,4,28,62],[45,5,28,63],[45,6,28,64],[46,2,29,0],[47,2,30,0],[48,0,31,0],[49,0,32,0],[50,0,33,0],[51,0,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,2,38,7],[55,11,38,16,"decodeInitializeAccount3Instruction"],[55,46,38,51,"decodeInitializeAccount3Instruction"],[55,47,38,52,"instruction"],[55,58,38,63],[55,60,38,65,"programId"],[55,69,38,74],[55,72,38,77,"TOKEN_PROGRAM_ID"],[55,99,38,93],[55,101,38,95],[56,4,39,4],[56,8,39,8],[56,9,39,9,"instruction"],[56,20,39,20],[56,21,39,21,"programId"],[56,30,39,30],[56,31,39,31,"equals"],[56,37,39,37],[56,38,39,38,"programId"],[56,47,39,47],[56,48,39,48],[56,50,40,8],[56,56,40,14],[56,60,40,18,"TokenInvalidInstructionProgramError"],[56,103,40,53],[56,104,40,54],[56,105,40,55],[57,4,41,4],[57,8,41,8,"instruction"],[57,19,41,19],[57,20,41,20,"data"],[57,24,41,24],[57,25,41,25,"length"],[57,31,41,31],[57,36,41,36,"initializeAccount3InstructionData"],[57,69,41,69],[57,70,41,70,"span"],[57,74,41,74],[57,76,42,8],[57,82,42,14],[57,86,42,18,"TokenInvalidInstructionDataError"],[57,126,42,50],[57,127,42,51],[57,128,42,52],[58,4,43,4],[58,10,43,10],[59,6,43,12,"keys"],[59,10,43,16],[59,12,43,18],[60,8,43,20,"account"],[60,15,43,27],[61,8,43,29,"mint"],[62,6,43,34],[62,7,43,35],[63,6,43,37,"data"],[64,4,43,43],[64,5,43,44],[64,8,43,47,"decodeInitializeAccount3InstructionUnchecked"],[64,52,43,91],[64,53,43,92,"instruction"],[64,64,43,103],[64,65,43,104],[65,4,44,4],[65,8,44,8,"data"],[65,12,44,12],[65,13,44,13,"instruction"],[65,24,44,24],[65,29,44,29,"TokenInstruction"],[65,52,44,45],[65,53,44,46,"InitializeAccount3"],[65,71,44,64],[65,73,45,8],[65,79,45,14],[65,83,45,18,"TokenInvalidInstructionTypeError"],[65,123,45,50],[65,124,45,51],[65,125,45,52],[66,4,46,4],[66,8,46,8],[66,9,46,9,"account"],[66,16,46,16],[66,20,46,20],[66,21,46,21,"mint"],[66,25,46,25],[66,27,47,8],[66,33,47,14],[66,37,47,18,"TokenInvalidInstructionKeysError"],[66,77,47,50],[66,78,47,51],[66,79,47,52],[67,4,48,4],[68,4,49,4],[68,11,49,11],[69,6,50,8,"programId"],[69,15,50,17],[70,6,51,8,"keys"],[70,10,51,12],[70,12,51,14],[71,8,52,12,"account"],[71,15,52,19],[72,8,53,12,"mint"],[73,6,54,8],[73,7,54,9],[74,6,55,8,"data"],[75,4,56,4],[75,5,56,5],[76,2,57,0],[77,2,58,0],[78,0,59,0],[79,0,60,0],[80,0,61,0],[81,0,62,0],[82,0,63,0],[83,0,64,0],[84,2,65,7],[84,11,65,16,"decodeInitializeAccount3InstructionUnchecked"],[84,55,65,60,"decodeInitializeAccount3InstructionUnchecked"],[84,56,65,61],[85,4,65,63,"programId"],[85,13,65,72],[86,4,65,74,"keys"],[86,8,65,78],[86,10,65,80],[86,11,65,81,"account"],[86,18,65,88],[86,20,65,90,"mint"],[86,24,65,94],[86,25,65,95],[87,4,65,97,"data"],[88,2,65,103],[88,3,65,104],[88,5,65,106],[89,4,66,4],[89,11,66,11],[90,6,67,8,"programId"],[90,15,67,17],[91,6,68,8,"keys"],[91,10,68,12],[91,12,68,14],[92,8,69,12,"account"],[92,15,69,19],[93,8,70,12,"mint"],[94,6,71,8],[94,7,71,9],[95,6,72,8,"data"],[95,10,72,12],[95,12,72,14,"initializeAccount3InstructionData"],[95,45,72,47],[95,46,72,48,"decode"],[95,52,72,54],[95,53,72,55,"data"],[95,57,72,59],[96,4,73,4],[96,5,73,5],[97,2,74,0],[98,0,74,1],[98,3]],"functionMap":{"names":["<global>","createInitializeAccount3Instruction","decodeInitializeAccount3Instruction","decodeInitializeAccount3InstructionUnchecked"],"mappings":"AAA;OCoB;CDQ;OES;CFmB;OGQ;CHS"}},"type":"js/module"}]}