{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":30,"index":45}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"]}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":60},"end":{"line":4,"column":43,"index":90}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = require(_dependencyMap[0], \"./utils\");\n  var assert = require(_dependencyMap[1], \"minimalistic-assert\");\n  function Hmac(hash, key, enc) {\n    if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n    this.Hash = hash;\n    this.blockSize = hash.blockSize / 8;\n    this.outSize = hash.outSize / 8;\n    this.inner = null;\n    this.outer = null;\n    this._init(utils.toArray(key, enc));\n  }\n  module.exports = Hmac;\n  Hmac.prototype._init = function init(key) {\n    // Shorten key, if needed\n    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n    assert(key.length <= this.blockSize);\n\n    // Add padding to key\n    for (var i = key.length; i < this.blockSize; i++) key.push(0);\n    for (i = 0; i < key.length; i++) key[i] ^= 0x36;\n    this.inner = new this.Hash().update(key);\n\n    // 0x36 ^ 0x5c = 0x6a\n    for (i = 0; i < key.length; i++) key[i] ^= 0x6a;\n    this.outer = new this.Hash().update(key);\n  };\n  Hmac.prototype.update = function update(msg, enc) {\n    this.inner.update(msg, enc);\n    return this;\n  };\n  Hmac.prototype.digest = function digest(enc) {\n    this.outer.update(this.inner.digest());\n    return this.outer.digest(enc);\n  };\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,21,3,19],[4,22,3,19,"_dependencyMap"],[4,36,3,19],[4,50,3,29],[4,51,3,30],[5,2,4,0],[5,6,4,4,"assert"],[5,12,4,10],[5,15,4,13,"require"],[5,22,4,20],[5,23,4,20,"_dependencyMap"],[5,37,4,20],[5,63,4,42],[5,64,4,43],[6,2,6,0],[6,11,6,9,"Hmac"],[6,15,6,13,"Hmac"],[6,16,6,14,"hash"],[6,20,6,18],[6,22,6,20,"key"],[6,25,6,23],[6,27,6,25,"enc"],[6,30,6,28],[6,32,6,30],[7,4,7,2],[7,8,7,6],[7,10,7,8],[7,14,7,12],[7,26,7,24,"Hmac"],[7,30,7,28],[7,31,7,29],[7,33,8,4],[7,40,8,11],[7,44,8,15,"Hmac"],[7,48,8,19],[7,49,8,20,"hash"],[7,53,8,24],[7,55,8,26,"key"],[7,58,8,29],[7,60,8,31,"enc"],[7,63,8,34],[7,64,8,35],[8,4,9,2],[8,8,9,6],[8,9,9,7,"Hash"],[8,13,9,11],[8,16,9,14,"hash"],[8,20,9,18],[9,4,10,2],[9,8,10,6],[9,9,10,7,"blockSize"],[9,18,10,16],[9,21,10,19,"hash"],[9,25,10,23],[9,26,10,24,"blockSize"],[9,35,10,33],[9,38,10,36],[9,39,10,37],[10,4,11,2],[10,8,11,6],[10,9,11,7,"outSize"],[10,16,11,14],[10,19,11,17,"hash"],[10,23,11,21],[10,24,11,22,"outSize"],[10,31,11,29],[10,34,11,32],[10,35,11,33],[11,4,12,2],[11,8,12,6],[11,9,12,7,"inner"],[11,14,12,12],[11,17,12,15],[11,21,12,19],[12,4,13,2],[12,8,13,6],[12,9,13,7,"outer"],[12,14,13,12],[12,17,13,15],[12,21,13,19],[13,4,15,2],[13,8,15,6],[13,9,15,7,"_init"],[13,14,15,12],[13,15,15,13,"utils"],[13,20,15,18],[13,21,15,19,"toArray"],[13,28,15,26],[13,29,15,27,"key"],[13,32,15,30],[13,34,15,32,"enc"],[13,37,15,35],[13,38,15,36],[13,39,15,37],[14,2,16,0],[15,2,17,0,"module"],[15,8,17,6],[15,9,17,7,"exports"],[15,16,17,14],[15,19,17,17,"Hmac"],[15,23,17,21],[16,2,19,0,"Hmac"],[16,6,19,4],[16,7,19,5,"prototype"],[16,16,19,14],[16,17,19,15,"_init"],[16,22,19,20],[16,25,19,23],[16,34,19,32,"init"],[16,38,19,36,"init"],[16,39,19,37,"key"],[16,42,19,40],[16,44,19,42],[17,4,20,2],[18,4,21,2],[18,8,21,6,"key"],[18,11,21,9],[18,12,21,10,"length"],[18,18,21,16],[18,21,21,19],[18,25,21,23],[18,26,21,24,"blockSize"],[18,35,21,33],[18,37,22,4,"key"],[18,40,22,7],[18,43,22,10],[18,47,22,14],[18,51,22,18],[18,52,22,19,"Hash"],[18,56,22,23],[18,57,22,24],[18,58,22,25],[18,59,22,26,"update"],[18,65,22,32],[18,66,22,33,"key"],[18,69,22,36],[18,70,22,37],[18,71,22,38,"digest"],[18,77,22,44],[18,78,22,45],[18,79,22,46],[19,4,23,2,"assert"],[19,10,23,8],[19,11,23,9,"key"],[19,14,23,12],[19,15,23,13,"length"],[19,21,23,19],[19,25,23,23],[19,29,23,27],[19,30,23,28,"blockSize"],[19,39,23,37],[19,40,23,38],[21,4,25,2],[22,4,26,2],[22,9,26,7],[22,13,26,11,"i"],[22,14,26,12],[22,17,26,15,"key"],[22,20,26,18],[22,21,26,19,"length"],[22,27,26,25],[22,29,26,27,"i"],[22,30,26,28],[22,33,26,31],[22,37,26,35],[22,38,26,36,"blockSize"],[22,47,26,45],[22,49,26,47,"i"],[22,50,26,48],[22,52,26,50],[22,54,27,4,"key"],[22,57,27,7],[22,58,27,8,"push"],[22,62,27,12],[22,63,27,13],[22,64,27,14],[22,65,27,15],[23,4,29,2],[23,9,29,7,"i"],[23,10,29,8],[23,13,29,11],[23,14,29,12],[23,16,29,14,"i"],[23,17,29,15],[23,20,29,18,"key"],[23,23,29,21],[23,24,29,22,"length"],[23,30,29,28],[23,32,29,30,"i"],[23,33,29,31],[23,35,29,33],[23,37,30,4,"key"],[23,40,30,7],[23,41,30,8,"i"],[23,42,30,9],[23,43,30,10],[23,47,30,14],[23,51,30,18],[24,4,31,2],[24,8,31,6],[24,9,31,7,"inner"],[24,14,31,12],[24,17,31,15],[24,21,31,19],[24,25,31,23],[24,26,31,24,"Hash"],[24,30,31,28],[24,31,31,29],[24,32,31,30],[24,33,31,31,"update"],[24,39,31,37],[24,40,31,38,"key"],[24,43,31,41],[24,44,31,42],[26,4,33,2],[27,4,34,2],[27,9,34,7,"i"],[27,10,34,8],[27,13,34,11],[27,14,34,12],[27,16,34,14,"i"],[27,17,34,15],[27,20,34,18,"key"],[27,23,34,21],[27,24,34,22,"length"],[27,30,34,28],[27,32,34,30,"i"],[27,33,34,31],[27,35,34,33],[27,37,35,4,"key"],[27,40,35,7],[27,41,35,8,"i"],[27,42,35,9],[27,43,35,10],[27,47,35,14],[27,51,35,18],[28,4,36,2],[28,8,36,6],[28,9,36,7,"outer"],[28,14,36,12],[28,17,36,15],[28,21,36,19],[28,25,36,23],[28,26,36,24,"Hash"],[28,30,36,28],[28,31,36,29],[28,32,36,30],[28,33,36,31,"update"],[28,39,36,37],[28,40,36,38,"key"],[28,43,36,41],[28,44,36,42],[29,2,37,0],[29,3,37,1],[30,2,39,0,"Hmac"],[30,6,39,4],[30,7,39,5,"prototype"],[30,16,39,14],[30,17,39,15,"update"],[30,23,39,21],[30,26,39,24],[30,35,39,33,"update"],[30,41,39,39,"update"],[30,42,39,40,"msg"],[30,45,39,43],[30,47,39,45,"enc"],[30,50,39,48],[30,52,39,50],[31,4,40,2],[31,8,40,6],[31,9,40,7,"inner"],[31,14,40,12],[31,15,40,13,"update"],[31,21,40,19],[31,22,40,20,"msg"],[31,25,40,23],[31,27,40,25,"enc"],[31,30,40,28],[31,31,40,29],[32,4,41,2],[32,11,41,9],[32,15,41,13],[33,2,42,0],[33,3,42,1],[34,2,44,0,"Hmac"],[34,6,44,4],[34,7,44,5,"prototype"],[34,16,44,14],[34,17,44,15,"digest"],[34,23,44,21],[34,26,44,24],[34,35,44,33,"digest"],[34,41,44,39,"digest"],[34,42,44,40,"enc"],[34,45,44,43],[34,47,44,45],[35,4,45,2],[35,8,45,6],[35,9,45,7,"outer"],[35,14,45,12],[35,15,45,13,"update"],[35,21,45,19],[35,22,45,20],[35,26,45,24],[35,27,45,25,"inner"],[35,32,45,30],[35,33,45,31,"digest"],[35,39,45,37],[35,40,45,38],[35,41,45,39],[35,42,45,40],[36,4,46,2],[36,11,46,9],[36,15,46,13],[36,16,46,14,"outer"],[36,21,46,19],[36,22,46,20,"digest"],[36,28,46,26],[36,29,46,27,"enc"],[36,32,46,30],[36,33,46,31],[37,2,47,0],[37,3,47,1],[38,0,47,2],[38,3]],"functionMap":{"names":["<global>","Hmac","init","update","digest"],"mappings":"AAA;ACK;CDU;uBEG;CFkB;wBGE;CHG;wBIE;CJG"}},"type":"js/module"}]}