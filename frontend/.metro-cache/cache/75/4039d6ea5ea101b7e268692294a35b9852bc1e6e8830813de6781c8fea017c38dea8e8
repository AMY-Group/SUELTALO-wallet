{"dependencies":[{"name":"@solana/codecs-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":153,"index":153}}],"key":"yOhtjYcQTCpjpWk0ghQ84j3tYKg=","exportNames":["*"]}},{"name":"@solana/codecs-data-structures","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":154},"end":{"line":2,"column":226,"index":380}}],"key":"k5HiHe6Mt+FMAcax9+1mN0RVi34=","exportNames":["*"]}},{"name":"@solana/codecs-numbers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":381},"end":{"line":3,"column":68,"index":449}}],"key":"wG+BMOkl+BRilXeCQaWTqeg2cvc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getOptionCodec = getOptionCodec;\n  exports.getOptionDecoder = getOptionDecoder;\n  exports.getOptionEncoder = getOptionEncoder;\n  exports.some = exports.none = exports.isSome = exports.isOption = exports.isNone = void 0;\n  exports.unwrapOption = unwrapOption;\n  exports.unwrapOptionRecursively = unwrapOptionRecursively;\n  exports.wrapNullable = void 0;\n  var _codecsCore = require(_dependencyMap[0], \"@solana/codecs-core\");\n  var _codecsDataStructures = require(_dependencyMap[1], \"@solana/codecs-data-structures\");\n  var _codecsNumbers = require(_dependencyMap[2], \"@solana/codecs-numbers\");\n  // src/option.ts\n  var some = value => ({\n    __option: \"Some\",\n    value\n  });\n  exports.some = some;\n  var none = () => ({\n    __option: \"None\"\n  });\n  exports.none = none;\n  var isOption = input => !!(input && typeof input === \"object\" && \"__option\" in input && (input.__option === \"Some\" && \"value\" in input || input.__option === \"None\"));\n  exports.isOption = isOption;\n  var isSome = option => option.__option === \"Some\";\n  exports.isSome = isSome;\n  var isNone = option => option.__option === \"None\";\n\n  // src/unwrap-option.ts\n  exports.isNone = isNone;\n  function unwrapOption(option, fallback) {\n    if (isSome(option)) return option.value;\n    return fallback ? fallback() : null;\n  }\n  var wrapNullable = nullable => nullable !== null ? some(nullable) : none();\n\n  // src/option-codec.ts\n  exports.wrapNullable = wrapNullable;\n  function getOptionEncoder(item, config = {}) {\n    const prefix = (() => {\n      if (config.prefix === null) {\n        return (0, _codecsCore.transformEncoder)((0, _codecsDataStructures.getUnitEncoder)(), _boolean => void 0);\n      }\n      return (0, _codecsDataStructures.getBooleanEncoder)({\n        size: config.prefix ?? (0, _codecsNumbers.getU8Encoder)()\n      });\n    })();\n    const noneValue = (() => {\n      if (config.noneValue === \"zeroes\") {\n        (0, _codecsCore.assertIsFixedSize)(item);\n        return (0, _codecsCore.fixEncoderSize)((0, _codecsDataStructures.getUnitEncoder)(), item.fixedSize);\n      }\n      if (!config.noneValue) {\n        return (0, _codecsDataStructures.getUnitEncoder)();\n      }\n      return (0, _codecsDataStructures.getConstantEncoder)(config.noneValue);\n    })();\n    return (0, _codecsDataStructures.getUnionEncoder)([(0, _codecsCore.transformEncoder)((0, _codecsDataStructures.getTupleEncoder)([prefix, noneValue]), _value => [false, void 0]), (0, _codecsCore.transformEncoder)((0, _codecsDataStructures.getTupleEncoder)([prefix, item]), value => [true, isOption(value) && isSome(value) ? value.value : value])], variant => {\n      const option = isOption(variant) ? variant : wrapNullable(variant);\n      return Number(isSome(option));\n    });\n  }\n  function getOptionDecoder(item, config = {}) {\n    const prefix = (() => {\n      if (config.prefix === null) {\n        return (0, _codecsCore.transformDecoder)((0, _codecsDataStructures.getUnitDecoder)(), () => false);\n      }\n      return (0, _codecsDataStructures.getBooleanDecoder)({\n        size: config.prefix ?? (0, _codecsNumbers.getU8Decoder)()\n      });\n    })();\n    const noneValue = (() => {\n      if (config.noneValue === \"zeroes\") {\n        (0, _codecsCore.assertIsFixedSize)(item);\n        return (0, _codecsCore.fixDecoderSize)((0, _codecsDataStructures.getUnitDecoder)(), item.fixedSize);\n      }\n      if (!config.noneValue) {\n        return (0, _codecsDataStructures.getUnitDecoder)();\n      }\n      return (0, _codecsDataStructures.getConstantDecoder)(config.noneValue);\n    })();\n    return (0, _codecsDataStructures.getUnionDecoder)([(0, _codecsCore.transformDecoder)((0, _codecsDataStructures.getTupleDecoder)([prefix, noneValue]), () => none()), (0, _codecsCore.transformDecoder)((0, _codecsDataStructures.getTupleDecoder)([prefix, item]), ([, value]) => some(value))], (bytes, offset) => {\n      if (config.prefix === null && !config.noneValue) {\n        return Number(offset < bytes.length);\n      }\n      if (config.prefix === null && config.noneValue != null) {\n        const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n        return (0, _codecsCore.containsBytes)(bytes, zeroValue, offset) ? 0 : 1;\n      }\n      return Number(prefix.read(bytes, offset)[0]);\n    });\n  }\n  function getOptionCodec(item, config = {}) {\n    return (0, _codecsCore.combineCodec)(getOptionEncoder(item, config), getOptionDecoder(item, config));\n  }\n\n  // src/unwrap-option-recursively.ts\n  function unwrapOptionRecursively(input, fallback) {\n    if (!input || ArrayBuffer.isView(input)) {\n      return input;\n    }\n    const next = x => fallback ? unwrapOptionRecursively(x, fallback) : unwrapOptionRecursively(x);\n    if (isOption(input)) {\n      if (isSome(input)) return next(input.value);\n      return fallback ? fallback() : null;\n    }\n    if (Array.isArray(input)) {\n      return input.map(next);\n    }\n    if (typeof input === \"object\") {\n      return Object.fromEntries(Object.entries(input).map(([k, v]) => [k, next(v)]));\n    }\n    return input;\n  }\n});","lineCount":117,"map":[[12,2,1,0],[12,6,1,0,"_codecsCore"],[12,17,1,0],[12,20,1,0,"require"],[12,27,1,0],[12,28,1,0,"_dependencyMap"],[12,42,1,0],[13,2,2,0],[13,6,2,0,"_codecsDataStructures"],[13,27,2,0],[13,30,2,0,"require"],[13,37,2,0],[13,38,2,0,"_dependencyMap"],[13,52,2,0],[14,2,3,0],[14,6,3,0,"_codecsNumbers"],[14,20,3,0],[14,23,3,0,"require"],[14,30,3,0],[14,31,3,0,"_dependencyMap"],[14,45,3,0],[15,2,5,0],[16,2,6,0],[16,6,6,4,"some"],[16,10,6,8],[16,13,6,12,"value"],[16,18,6,17],[16,23,6,23],[17,4,6,25,"__option"],[17,12,6,33],[17,14,6,35],[17,20,6,41],[18,4,6,43,"value"],[19,2,6,49],[19,3,6,50],[19,4,6,51],[20,2,6,52,"exports"],[20,9,6,52],[20,10,6,52,"some"],[20,14,6,52],[20,17,6,52,"some"],[20,21,6,52],[21,2,7,0],[21,6,7,4,"none"],[21,10,7,8],[21,13,7,11,"none"],[21,14,7,11],[21,20,7,18],[22,4,7,20,"__option"],[22,12,7,28],[22,14,7,30],[23,2,7,37],[23,3,7,38],[23,4,7,39],[24,2,7,40,"exports"],[24,9,7,40],[24,10,7,40,"none"],[24,14,7,40],[24,17,7,40,"none"],[24,21,7,40],[25,2,8,0],[25,6,8,4,"isOption"],[25,14,8,12],[25,17,8,16,"input"],[25,22,8,21],[25,26,8,26],[25,27,8,27],[25,29,8,29,"input"],[25,34,8,34],[25,38,8,38],[25,45,8,45,"input"],[25,50,8,50],[25,55,8,55],[25,63,8,63],[25,67,8,67],[25,77,8,77],[25,81,8,81,"input"],[25,86,8,86],[25,91,8,91,"input"],[25,96,8,96],[25,97,8,97,"__option"],[25,105,8,105],[25,110,8,110],[25,116,8,116],[25,120,8,120],[25,127,8,127],[25,131,8,131,"input"],[25,136,8,136],[25,140,8,140,"input"],[25,145,8,145],[25,146,8,146,"__option"],[25,154,8,154],[25,159,8,159],[25,165,8,165],[25,166,8,166],[25,167,8,167],[26,2,8,168,"exports"],[26,9,8,168],[26,10,8,168,"isOption"],[26,18,8,168],[26,21,8,168,"isOption"],[26,29,8,168],[27,2,9,0],[27,6,9,4,"isSome"],[27,12,9,10],[27,15,9,14,"option"],[27,21,9,20],[27,25,9,25,"option"],[27,31,9,31],[27,32,9,32,"__option"],[27,40,9,40],[27,45,9,45],[27,51,9,51],[28,2,9,52,"exports"],[28,9,9,52],[28,10,9,52,"isSome"],[28,16,9,52],[28,19,9,52,"isSome"],[28,25,9,52],[29,2,10,0],[29,6,10,4,"isNone"],[29,12,10,10],[29,15,10,14,"option"],[29,21,10,20],[29,25,10,25,"option"],[29,31,10,31],[29,32,10,32,"__option"],[29,40,10,40],[29,45,10,45],[29,51,10,51],[31,2,12,0],[32,2,12,0,"exports"],[32,9,12,0],[32,10,12,0,"isNone"],[32,16,12,0],[32,19,12,0,"isNone"],[32,25,12,0],[33,2,13,0],[33,11,13,9,"unwrapOption"],[33,23,13,21,"unwrapOption"],[33,24,13,22,"option"],[33,30,13,28],[33,32,13,30,"fallback"],[33,40,13,38],[33,42,13,40],[34,4,14,2],[34,8,14,6,"isSome"],[34,14,14,12],[34,15,14,13,"option"],[34,21,14,19],[34,22,14,20],[34,24,14,22],[34,31,14,29,"option"],[34,37,14,35],[34,38,14,36,"value"],[34,43,14,41],[35,4,15,2],[35,11,15,9,"fallback"],[35,19,15,17],[35,22,15,20,"fallback"],[35,30,15,28],[35,31,15,29],[35,32,15,30],[35,35,15,33],[35,39,15,37],[36,2,16,0],[37,2,17,0],[37,6,17,4,"wrapNullable"],[37,18,17,16],[37,21,17,20,"nullable"],[37,29,17,28],[37,33,17,33,"nullable"],[37,41,17,41],[37,46,17,46],[37,50,17,50],[37,53,17,53,"some"],[37,57,17,57],[37,58,17,58,"nullable"],[37,66,17,66],[37,67,17,67],[37,70,17,70,"none"],[37,74,17,74],[37,75,17,75],[37,76,17,76],[39,2,19,0],[40,2,19,0,"exports"],[40,9,19,0],[40,10,19,0,"wrapNullable"],[40,22,19,0],[40,25,19,0,"wrapNullable"],[40,37,19,0],[41,2,20,0],[41,11,20,9,"getOptionEncoder"],[41,27,20,25,"getOptionEncoder"],[41,28,20,26,"item"],[41,32,20,30],[41,34,20,32,"config"],[41,40,20,38],[41,43,20,41],[41,44,20,42],[41,45,20,43],[41,47,20,45],[42,4,21,2],[42,10,21,8,"prefix"],[42,16,21,14],[42,19,21,17],[42,20,21,18],[42,26,21,24],[43,6,22,4],[43,10,22,8,"config"],[43,16,22,14],[43,17,22,15,"prefix"],[43,23,22,21],[43,28,22,26],[43,32,22,30],[43,34,22,32],[44,8,23,6],[44,15,23,13],[44,19,23,13,"transformEncoder"],[44,47,23,29],[44,49,23,30],[44,53,23,30,"getUnitEncoder"],[44,89,23,44],[44,91,23,45],[44,92,23,46],[44,94,23,49,"_boolean"],[44,102,23,57],[44,106,23,62],[44,111,23,67],[44,112,23,68],[44,113,23,69],[45,6,24,4],[46,6,25,4],[46,13,25,11],[46,17,25,11,"getBooleanEncoder"],[46,56,25,28],[46,58,25,29],[47,8,25,31,"size"],[47,12,25,35],[47,14,25,37,"config"],[47,20,25,43],[47,21,25,44,"prefix"],[47,27,25,50],[47,31,25,54],[47,35,25,54,"getU8Encoder"],[47,62,25,66],[47,64,25,67],[48,6,25,69],[48,7,25,70],[48,8,25,71],[49,4,26,2],[49,5,26,3],[49,7,26,5],[49,8,26,6],[50,4,27,2],[50,10,27,8,"noneValue"],[50,19,27,17],[50,22,27,20],[50,23,27,21],[50,29,27,27],[51,6,28,4],[51,10,28,8,"config"],[51,16,28,14],[51,17,28,15,"noneValue"],[51,26,28,24],[51,31,28,29],[51,39,28,37],[51,41,28,39],[52,8,29,6],[52,12,29,6,"assertIsFixedSize"],[52,41,29,23],[52,43,29,24,"item"],[52,47,29,28],[52,48,29,29],[53,8,30,6],[53,15,30,13],[53,19,30,13,"fixEncoderSize"],[53,45,30,27],[53,47,30,28],[53,51,30,28,"getUnitEncoder"],[53,87,30,42],[53,89,30,43],[53,90,30,44],[53,92,30,46,"item"],[53,96,30,50],[53,97,30,51,"fixedSize"],[53,106,30,60],[53,107,30,61],[54,6,31,4],[55,6,32,4],[55,10,32,8],[55,11,32,9,"config"],[55,17,32,15],[55,18,32,16,"noneValue"],[55,27,32,25],[55,29,32,27],[56,8,33,6],[56,15,33,13],[56,19,33,13,"getUnitEncoder"],[56,55,33,27],[56,57,33,28],[56,58,33,29],[57,6,34,4],[58,6,35,4],[58,13,35,11],[58,17,35,11,"getConstantEncoder"],[58,57,35,29],[58,59,35,30,"config"],[58,65,35,36],[58,66,35,37,"noneValue"],[58,75,35,46],[58,76,35,47],[59,4,36,2],[59,5,36,3],[59,7,36,5],[59,8,36,6],[60,4,37,2],[60,11,37,9],[60,15,37,9,"getUnionEncoder"],[60,52,37,24],[60,54,38,4],[60,55,39,6],[60,59,39,6,"transformEncoder"],[60,87,39,22],[60,89,39,23],[60,93,39,23,"getTupleEncoder"],[60,130,39,38],[60,132,39,39],[60,133,39,40,"prefix"],[60,139,39,46],[60,141,39,48,"noneValue"],[60,150,39,57],[60,151,39,58],[60,152,39,59],[60,154,39,62,"_value"],[60,160,39,68],[60,164,39,73],[60,165,40,8],[60,170,40,13],[60,172,41,8],[60,177,41,13],[60,178,41,14],[60,179,42,7],[60,180,42,8],[60,182,43,6],[60,186,43,6,"transformEncoder"],[60,214,43,22],[60,216,43,23],[60,220,43,23,"getTupleEncoder"],[60,257,43,38],[60,259,43,39],[60,260,43,40,"prefix"],[60,266,43,46],[60,268,43,48,"item"],[60,272,43,52],[60,273,43,53],[60,274,43,54],[60,276,43,57,"value"],[60,281,43,62],[60,285,43,67],[60,286,44,8],[60,290,44,12],[60,292,45,8,"isOption"],[60,300,45,16],[60,301,45,17,"value"],[60,306,45,22],[60,307,45,23],[60,311,45,27,"isSome"],[60,317,45,33],[60,318,45,34,"value"],[60,323,45,39],[60,324,45,40],[60,327,45,43,"value"],[60,332,45,48],[60,333,45,49,"value"],[60,338,45,54],[60,341,45,57,"value"],[60,346,45,62],[60,347,46,7],[60,348,46,8],[60,349,47,5],[60,351,48,5,"variant"],[60,358,48,12],[60,362,48,17],[61,6,49,6],[61,12,49,12,"option"],[61,18,49,18],[61,21,49,21,"isOption"],[61,29,49,29],[61,30,49,30,"variant"],[61,37,49,37],[61,38,49,38],[61,41,49,41,"variant"],[61,48,49,48],[61,51,49,51,"wrapNullable"],[61,63,49,63],[61,64,49,64,"variant"],[61,71,49,71],[61,72,49,72],[62,6,50,6],[62,13,50,13,"Number"],[62,19,50,19],[62,20,50,20,"isSome"],[62,26,50,26],[62,27,50,27,"option"],[62,33,50,33],[62,34,50,34],[62,35,50,35],[63,4,51,4],[63,5,52,2],[63,6,52,3],[64,2,53,0],[65,2,54,0],[65,11,54,9,"getOptionDecoder"],[65,27,54,25,"getOptionDecoder"],[65,28,54,26,"item"],[65,32,54,30],[65,34,54,32,"config"],[65,40,54,38],[65,43,54,41],[65,44,54,42],[65,45,54,43],[65,47,54,45],[66,4,55,2],[66,10,55,8,"prefix"],[66,16,55,14],[66,19,55,17],[66,20,55,18],[66,26,55,24],[67,6,56,4],[67,10,56,8,"config"],[67,16,56,14],[67,17,56,15,"prefix"],[67,23,56,21],[67,28,56,26],[67,32,56,30],[67,34,56,32],[68,8,57,6],[68,15,57,13],[68,19,57,13,"transformDecoder"],[68,47,57,29],[68,49,57,30],[68,53,57,30,"getUnitDecoder"],[68,89,57,44],[68,91,57,45],[68,92,57,46],[68,94,57,48],[68,100,57,54],[68,105,57,59],[68,106,57,60],[69,6,58,4],[70,6,59,4],[70,13,59,11],[70,17,59,11,"getBooleanDecoder"],[70,56,59,28],[70,58,59,29],[71,8,59,31,"size"],[71,12,59,35],[71,14,59,37,"config"],[71,20,59,43],[71,21,59,44,"prefix"],[71,27,59,50],[71,31,59,54],[71,35,59,54,"getU8Decoder"],[71,62,59,66],[71,64,59,67],[72,6,59,69],[72,7,59,70],[72,8,59,71],[73,4,60,2],[73,5,60,3],[73,7,60,5],[73,8,60,6],[74,4,61,2],[74,10,61,8,"noneValue"],[74,19,61,17],[74,22,61,20],[74,23,61,21],[74,29,61,27],[75,6,62,4],[75,10,62,8,"config"],[75,16,62,14],[75,17,62,15,"noneValue"],[75,26,62,24],[75,31,62,29],[75,39,62,37],[75,41,62,39],[76,8,63,6],[76,12,63,6,"assertIsFixedSize"],[76,41,63,23],[76,43,63,24,"item"],[76,47,63,28],[76,48,63,29],[77,8,64,6],[77,15,64,13],[77,19,64,13,"fixDecoderSize"],[77,45,64,27],[77,47,64,28],[77,51,64,28,"getUnitDecoder"],[77,87,64,42],[77,89,64,43],[77,90,64,44],[77,92,64,46,"item"],[77,96,64,50],[77,97,64,51,"fixedSize"],[77,106,64,60],[77,107,64,61],[78,6,65,4],[79,6,66,4],[79,10,66,8],[79,11,66,9,"config"],[79,17,66,15],[79,18,66,16,"noneValue"],[79,27,66,25],[79,29,66,27],[80,8,67,6],[80,15,67,13],[80,19,67,13,"getUnitDecoder"],[80,55,67,27],[80,57,67,28],[80,58,67,29],[81,6,68,4],[82,6,69,4],[82,13,69,11],[82,17,69,11,"getConstantDecoder"],[82,57,69,29],[82,59,69,30,"config"],[82,65,69,36],[82,66,69,37,"noneValue"],[82,75,69,46],[82,76,69,47],[83,4,70,2],[83,5,70,3],[83,7,70,5],[83,8,70,6],[84,4,71,2],[84,11,71,9],[84,15,71,9,"getUnionDecoder"],[84,52,71,24],[84,54,72,4],[84,55,73,6],[84,59,73,6,"transformDecoder"],[84,87,73,22],[84,89,73,23],[84,93,73,23,"getTupleDecoder"],[84,130,73,38],[84,132,73,39],[84,133,73,40,"prefix"],[84,139,73,46],[84,141,73,48,"noneValue"],[84,150,73,57],[84,151,73,58],[84,152,73,59],[84,154,73,61],[84,160,73,67,"none"],[84,164,73,71],[84,165,73,72],[84,166,73,73],[84,167,73,74],[84,169,74,6],[84,173,74,6,"transformDecoder"],[84,201,74,22],[84,203,74,23],[84,207,74,23,"getTupleDecoder"],[84,244,74,38],[84,246,74,39],[84,247,74,40,"prefix"],[84,253,74,46],[84,255,74,48,"item"],[84,259,74,52],[84,260,74,53],[84,261,74,54],[84,263,74,56],[84,264,74,57],[84,267,74,60,"value"],[84,272,74,65],[84,273,74,66],[84,278,74,71,"some"],[84,282,74,75],[84,283,74,76,"value"],[84,288,74,81],[84,289,74,82],[84,290,74,83],[84,291,75,5],[84,293,76,4],[84,294,76,5,"bytes"],[84,299,76,10],[84,301,76,12,"offset"],[84,307,76,18],[84,312,76,23],[85,6,77,6],[85,10,77,10,"config"],[85,16,77,16],[85,17,77,17,"prefix"],[85,23,77,23],[85,28,77,28],[85,32,77,32],[85,36,77,36],[85,37,77,37,"config"],[85,43,77,43],[85,44,77,44,"noneValue"],[85,53,77,53],[85,55,77,55],[86,8,78,8],[86,15,78,15,"Number"],[86,21,78,21],[86,22,78,22,"offset"],[86,28,78,28],[86,31,78,31,"bytes"],[86,36,78,36],[86,37,78,37,"length"],[86,43,78,43],[86,44,78,44],[87,6,79,6],[88,6,80,6],[88,10,80,10,"config"],[88,16,80,16],[88,17,80,17,"prefix"],[88,23,80,23],[88,28,80,28],[88,32,80,32],[88,36,80,36,"config"],[88,42,80,42],[88,43,80,43,"noneValue"],[88,52,80,52],[88,56,80,56],[88,60,80,60],[88,62,80,62],[89,8,81,8],[89,14,81,14,"zeroValue"],[89,23,81,23],[89,26,81,26,"config"],[89,32,81,32],[89,33,81,33,"noneValue"],[89,42,81,42],[89,47,81,47],[89,55,81,55],[89,58,81,58],[89,62,81,62,"Uint8Array"],[89,72,81,72],[89,73,81,73,"noneValue"],[89,82,81,82],[89,83,81,83,"fixedSize"],[89,92,81,92],[89,93,81,93],[89,94,81,94,"fill"],[89,98,81,98],[89,99,81,99],[89,100,81,100],[89,101,81,101],[89,104,81,104,"config"],[89,110,81,110],[89,111,81,111,"noneValue"],[89,120,81,120],[90,8,82,8],[90,15,82,15],[90,19,82,15,"containsBytes"],[90,44,82,28],[90,46,82,29,"bytes"],[90,51,82,34],[90,53,82,36,"zeroValue"],[90,62,82,45],[90,64,82,47,"offset"],[90,70,82,53],[90,71,82,54],[90,74,82,57],[90,75,82,58],[90,78,82,61],[90,79,82,62],[91,6,83,6],[92,6,84,6],[92,13,84,13,"Number"],[92,19,84,19],[92,20,84,20,"prefix"],[92,26,84,26],[92,27,84,27,"read"],[92,31,84,31],[92,32,84,32,"bytes"],[92,37,84,37],[92,39,84,39,"offset"],[92,45,84,45],[92,46,84,46],[92,47,84,47],[92,48,84,48],[92,49,84,49],[92,50,84,50],[93,4,85,4],[93,5,86,2],[93,6,86,3],[94,2,87,0],[95,2,88,0],[95,11,88,9,"getOptionCodec"],[95,25,88,23,"getOptionCodec"],[95,26,88,24,"item"],[95,30,88,28],[95,32,88,30,"config"],[95,38,88,36],[95,41,88,39],[95,42,88,40],[95,43,88,41],[95,45,88,43],[96,4,89,2],[96,11,89,9],[96,15,89,9,"combineCodec"],[96,39,89,21],[96,41,90,4,"getOptionEncoder"],[96,57,90,20],[96,58,90,21,"item"],[96,62,90,25],[96,64,90,27,"config"],[96,70,90,33],[96,71,90,34],[96,73,91,4,"getOptionDecoder"],[96,89,91,20],[96,90,91,21,"item"],[96,94,91,25],[96,96,91,27,"config"],[96,102,91,33],[96,103,92,2],[96,104,92,3],[97,2,93,0],[99,2,95,0],[100,2,96,0],[100,11,96,9,"unwrapOptionRecursively"],[100,34,96,32,"unwrapOptionRecursively"],[100,35,96,33,"input"],[100,40,96,38],[100,42,96,40,"fallback"],[100,50,96,48],[100,52,96,50],[101,4,97,2],[101,8,97,6],[101,9,97,7,"input"],[101,14,97,12],[101,18,97,16,"ArrayBuffer"],[101,29,97,27],[101,30,97,28,"isView"],[101,36,97,34],[101,37,97,35,"input"],[101,42,97,40],[101,43,97,41],[101,45,97,43],[102,6,98,4],[102,13,98,11,"input"],[102,18,98,16],[103,4,99,2],[104,4,100,2],[104,10,100,8,"next"],[104,14,100,12],[104,17,100,16,"x"],[104,18,100,17],[104,22,100,22,"fallback"],[104,30,100,30],[104,33,100,33,"unwrapOptionRecursively"],[104,56,100,56],[104,57,100,57,"x"],[104,58,100,58],[104,60,100,60,"fallback"],[104,68,100,68],[104,69,100,69],[104,72,100,72,"unwrapOptionRecursively"],[104,95,100,95],[104,96,100,96,"x"],[104,97,100,97],[104,98,100,98],[105,4,101,2],[105,8,101,6,"isOption"],[105,16,101,14],[105,17,101,15,"input"],[105,22,101,20],[105,23,101,21],[105,25,101,23],[106,6,102,4],[106,10,102,8,"isSome"],[106,16,102,14],[106,17,102,15,"input"],[106,22,102,20],[106,23,102,21],[106,25,102,23],[106,32,102,30,"next"],[106,36,102,34],[106,37,102,35,"input"],[106,42,102,40],[106,43,102,41,"value"],[106,48,102,46],[106,49,102,47],[107,6,103,4],[107,13,103,11,"fallback"],[107,21,103,19],[107,24,103,22,"fallback"],[107,32,103,30],[107,33,103,31],[107,34,103,32],[107,37,103,35],[107,41,103,39],[108,4,104,2],[109,4,105,2],[109,8,105,6,"Array"],[109,13,105,11],[109,14,105,12,"isArray"],[109,21,105,19],[109,22,105,20,"input"],[109,27,105,25],[109,28,105,26],[109,30,105,28],[110,6,106,4],[110,13,106,11,"input"],[110,18,106,16],[110,19,106,17,"map"],[110,22,106,20],[110,23,106,21,"next"],[110,27,106,25],[110,28,106,26],[111,4,107,2],[112,4,108,2],[112,8,108,6],[112,15,108,13,"input"],[112,20,108,18],[112,25,108,23],[112,33,108,31],[112,35,108,33],[113,6,109,4],[113,13,109,11,"Object"],[113,19,109,17],[113,20,109,18,"fromEntries"],[113,31,109,29],[113,32,109,30,"Object"],[113,38,109,36],[113,39,109,37,"entries"],[113,46,109,44],[113,47,109,45,"input"],[113,52,109,50],[113,53,109,51],[113,54,109,52,"map"],[113,57,109,55],[113,58,109,56],[113,59,109,57],[113,60,109,58,"k"],[113,61,109,59],[113,63,109,61,"v"],[113,64,109,62],[113,65,109,63],[113,70,109,68],[113,71,109,69,"k"],[113,72,109,70],[113,74,109,72,"next"],[113,78,109,76],[113,79,109,77,"v"],[113,80,109,78],[113,81,109,79],[113,82,109,80],[113,83,109,81],[113,84,109,82],[114,4,110,2],[115,4,111,2],[115,11,111,9,"input"],[115,16,111,14],[116,2,112,0],[117,0,112,1],[117,3]],"functionMap":{"names":["<global>","some","none","isOption","isSome","isNone","unwrapOption","wrapNullable","getOptionEncoder","<anonymous>","transformEncoder$argument_1","getUnionEncoder$argument_1","getOptionDecoder","transformDecoder$argument_1","getUnionDecoder$argument_1","getOptionCodec","unwrapOptionRecursively","next","Object.entries.map$argument_0"],"mappings":"AAA;WCK,wCD;WEC,4BF;eGC,wJH;aIC,sCJ;aKC,sCL;AMG;CNG;mBOC,yDP;AQG;kBCC;gDCE,oBD;GDG;qBCC;GDS;6DEG;OFG;wDEC;OFG;IGE;KHG;CRE;AYC;kBHC;gDIE,WJ;GGG;qBHC;GGS;6DCG,YD;wDCC,0BD;IEE;KFS;CZE;AeC;CfK;AgBG;eCI,mFD;wDES,wBF;ChBG"}},"type":"js/module"}]}