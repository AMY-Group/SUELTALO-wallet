{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../actions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":55,"index":129}}],"key":"NZfIk1TkYePfdrID7eibfh4eb4I=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":59,"index":189}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"./instructions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":258,"index":448}}],"key":"Fxi0HOb3XwlWafScFYPpLit1DEQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.harvestWithheldTokensToMint = harvestWithheldTokensToMint;\n  exports.setTransferFee = setTransferFee;\n  exports.transferCheckedWithFee = transferCheckedWithFee;\n  exports.withdrawWithheldTokensFromAccounts = withdrawWithheldTokensFromAccounts;\n  exports.withdrawWithheldTokensFromMint = withdrawWithheldTokensFromMint;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _internal = require(_dependencyMap[1], \"../../actions/internal.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _instructions = require(_dependencyMap[3], \"./instructions.js\");\n  /**\n   * Transfer tokens from one account to another, asserting the transfer fee, token mint, and decimals\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param source         Source account\n   * @param mint           Mint for the account\n   * @param destination    Destination account\n   * @param owner          Owner of the source account\n   * @param amount         Number of tokens to transfer\n   * @param decimals       Number of decimals in transfer amount\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function transferCheckedWithFee(connection, payer, source, mint, destination, owner, amount, decimals, fee, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createTransferCheckedWithFeeInstruction)(source, mint, destination, ownerPublicKey, amount, decimals, fee, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Withdraw withheld tokens from mint\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param mint           The token mint\n   * @param destination    The destination account\n   * @param authority      The mint's withdraw withheld tokens authority\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function withdrawWithheldTokensFromMint(connection, payer, mint, destination, authority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0, _internal.getSigners)(authority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createWithdrawWithheldTokensFromMintInstruction)(mint, destination, authorityPublicKey, signers, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Withdraw withheld tokens from accounts\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param mint           The token mint\n   * @param destination    The destination account\n   * @param authority      The mint's withdraw withheld tokens authority\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param sources        Source accounts from which to withdraw withheld fees\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function withdrawWithheldTokensFromAccounts(connection, payer, mint, destination, authority, multiSigners, sources, confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0, _internal.getSigners)(authority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createWithdrawWithheldTokensFromAccountsInstruction)(mint, destination, authorityPublicKey, signers, sources, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Harvest withheld tokens from accounts to the mint\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param mint           The token mint\n   * @param sources        Source accounts from which to withdraw withheld fees\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function harvestWithheldTokensToMint(connection, payer, mint, sources, confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const transaction = new _web.Transaction().add((0, _instructions.createHarvestWithheldTokensToMintInstruction)(mint, sources, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n  }\n  /**\n   * Update transfer fee and maximum fee\n   *\n   * @param connection                Connection to use\n   * @param payer                     Payer of the transaction fees\n   * @param mint                      The token mint\n   * @param authority                 The authority of the transfer fee\n   * @param multiSigners              Signing accounts if `owner` is a multisig\n   * @param transferFeeBasisPoints    Amount of transfer collected as fees, expressed as basis points of the transfer amount\n   * @param maximumFee                Maximum fee assessed on transfers\n   * @param confirmOptions            Options for confirming the transaction\n   * @param programId                 SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function setTransferFee(connection, payer, mint, authority, multiSigners, transferFeeBasisPoints, maximumFee, confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [authorityPublicKey, signers] = (0, _internal.getSigners)(authority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createSetTransferFeeInstruction)(mint, authorityPublicKey, signers, transferFeeBasisPoints, maximumFee, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":111,"map":[[10,2,1,0],[10,6,1,0,"_web"],[10,10,1,0],[10,13,1,0,"require"],[10,20,1,0],[10,21,1,0,"_dependencyMap"],[10,35,1,0],[11,2,2,0],[11,6,2,0,"_internal"],[11,15,2,0],[11,18,2,0,"require"],[11,25,2,0],[11,26,2,0,"_dependencyMap"],[11,40,2,0],[12,2,3,0],[12,6,3,0,"_constants"],[12,16,3,0],[12,19,3,0,"require"],[12,26,3,0],[12,27,3,0,"_dependencyMap"],[12,41,3,0],[13,2,4,0],[13,6,4,0,"_instructions"],[13,19,4,0],[13,22,4,0,"require"],[13,29,4,0],[13,30,4,0,"_dependencyMap"],[13,44,4,0],[14,2,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[19,0,10,0],[20,0,11,0],[21,0,12,0],[22,0,13,0],[23,0,14,0],[24,0,15,0],[25,0,16,0],[26,0,17,0],[27,0,18,0],[28,0,19,0],[29,0,20,0],[30,0,21,0],[31,2,22,7],[31,17,22,22,"transferCheckedWithFee"],[31,39,22,44,"transferCheckedWithFee"],[31,40,22,45,"connection"],[31,50,22,55],[31,52,22,57,"payer"],[31,57,22,62],[31,59,22,64,"source"],[31,65,22,70],[31,67,22,72,"mint"],[31,71,22,76],[31,73,22,78,"destination"],[31,84,22,89],[31,86,22,91,"owner"],[31,91,22,96],[31,93,22,98,"amount"],[31,99,22,104],[31,101,22,106,"decimals"],[31,109,22,114],[31,111,22,116,"fee"],[31,114,22,119],[31,116,22,121,"multiSigners"],[31,128,22,133],[31,131,22,136],[31,133,22,138],[31,135,22,140,"confirmOptions"],[31,149,22,154],[31,151,22,156,"programId"],[31,160,22,165],[31,163,22,168,"TOKEN_2022_PROGRAM_ID"],[31,195,22,189],[31,197,22,191],[32,4,23,4],[32,10,23,10],[32,11,23,11,"ownerPublicKey"],[32,25,23,25],[32,27,23,27,"signers"],[32,34,23,34],[32,35,23,35],[32,38,23,38],[32,42,23,38,"getSigners"],[32,62,23,48],[32,64,23,49,"owner"],[32,69,23,54],[32,71,23,56,"multiSigners"],[32,83,23,68],[32,84,23,69],[33,4,24,4],[33,10,24,10,"transaction"],[33,21,24,21],[33,24,24,24],[33,28,24,28,"Transaction"],[33,44,24,39],[33,45,24,40],[33,46,24,41],[33,47,24,42,"add"],[33,50,24,45],[33,51,24,46],[33,55,24,46,"createTransferCheckedWithFeeInstruction"],[33,108,24,85],[33,110,24,86,"source"],[33,116,24,92],[33,118,24,94,"mint"],[33,122,24,98],[33,124,24,100,"destination"],[33,135,24,111],[33,137,24,113,"ownerPublicKey"],[33,151,24,127],[33,153,24,129,"amount"],[33,159,24,135],[33,161,24,137,"decimals"],[33,169,24,145],[33,171,24,147,"fee"],[33,174,24,150],[33,176,24,152,"multiSigners"],[33,188,24,164],[33,190,24,166,"programId"],[33,199,24,175],[33,200,24,176],[33,201,24,177],[34,4,25,4],[34,11,25,11],[34,17,25,17],[34,21,25,17,"sendAndConfirmTransaction"],[34,51,25,42],[34,53,25,43,"connection"],[34,63,25,53],[34,65,25,55,"transaction"],[34,76,25,66],[34,78,25,68],[34,79,25,69,"payer"],[34,84,25,74],[34,86,25,76],[34,89,25,79,"signers"],[34,96,25,86],[34,97,25,87],[34,99,25,89,"confirmOptions"],[34,113,25,103],[34,114,25,104],[35,2,26,0],[36,2,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,0,35,0],[45,0,36,0],[46,0,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,2,41,7],[50,17,41,22,"withdrawWithheldTokensFromMint"],[50,47,41,52,"withdrawWithheldTokensFromMint"],[50,48,41,53,"connection"],[50,58,41,63],[50,60,41,65,"payer"],[50,65,41,70],[50,67,41,72,"mint"],[50,71,41,76],[50,73,41,78,"destination"],[50,84,41,89],[50,86,41,91,"authority"],[50,95,41,100],[50,97,41,102,"multiSigners"],[50,109,41,114],[50,112,41,117],[50,114,41,119],[50,116,41,121,"confirmOptions"],[50,130,41,135],[50,132,41,137,"programId"],[50,141,41,146],[50,144,41,149,"TOKEN_2022_PROGRAM_ID"],[50,176,41,170],[50,178,41,172],[51,4,42,4],[51,10,42,10],[51,11,42,11,"authorityPublicKey"],[51,29,42,29],[51,31,42,31,"signers"],[51,38,42,38],[51,39,42,39],[51,42,42,42],[51,46,42,42,"getSigners"],[51,66,42,52],[51,68,42,53,"authority"],[51,77,42,62],[51,79,42,64,"multiSigners"],[51,91,42,76],[51,92,42,77],[52,4,43,4],[52,10,43,10,"transaction"],[52,21,43,21],[52,24,43,24],[52,28,43,28,"Transaction"],[52,44,43,39],[52,45,43,40],[52,46,43,41],[52,47,43,42,"add"],[52,50,43,45],[52,51,43,46],[52,55,43,46,"createWithdrawWithheldTokensFromMintInstruction"],[52,116,43,93],[52,118,43,94,"mint"],[52,122,43,98],[52,124,43,100,"destination"],[52,135,43,111],[52,137,43,113,"authorityPublicKey"],[52,155,43,131],[52,157,43,133,"signers"],[52,164,43,140],[52,166,43,142,"programId"],[52,175,43,151],[52,176,43,152],[52,177,43,153],[53,4,44,4],[53,11,44,11],[53,17,44,17],[53,21,44,17,"sendAndConfirmTransaction"],[53,51,44,42],[53,53,44,43,"connection"],[53,63,44,53],[53,65,44,55,"transaction"],[53,76,44,66],[53,78,44,68],[53,79,44,69,"payer"],[53,84,44,74],[53,86,44,76],[53,89,44,79,"signers"],[53,96,44,86],[53,97,44,87],[53,99,44,89,"confirmOptions"],[53,113,44,103],[53,114,44,104],[54,2,45,0],[55,2,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,0,51,0],[61,0,52,0],[62,0,53,0],[63,0,54,0],[64,0,55,0],[65,0,56,0],[66,0,57,0],[67,0,58,0],[68,0,59,0],[69,0,60,0],[70,2,61,7],[70,17,61,22,"withdrawWithheldTokensFromAccounts"],[70,51,61,56,"withdrawWithheldTokensFromAccounts"],[70,52,61,57,"connection"],[70,62,61,67],[70,64,61,69,"payer"],[70,69,61,74],[70,71,61,76,"mint"],[70,75,61,80],[70,77,61,82,"destination"],[70,88,61,93],[70,90,61,95,"authority"],[70,99,61,104],[70,101,61,106,"multiSigners"],[70,113,61,118],[70,115,61,120,"sources"],[70,122,61,127],[70,124,61,129,"confirmOptions"],[70,138,61,143],[70,140,61,145,"programId"],[70,149,61,154],[70,152,61,157,"TOKEN_2022_PROGRAM_ID"],[70,184,61,178],[70,186,61,180],[71,4,62,4],[71,10,62,10],[71,11,62,11,"authorityPublicKey"],[71,29,62,29],[71,31,62,31,"signers"],[71,38,62,38],[71,39,62,39],[71,42,62,42],[71,46,62,42,"getSigners"],[71,66,62,52],[71,68,62,53,"authority"],[71,77,62,62],[71,79,62,64,"multiSigners"],[71,91,62,76],[71,92,62,77],[72,4,63,4],[72,10,63,10,"transaction"],[72,21,63,21],[72,24,63,24],[72,28,63,28,"Transaction"],[72,44,63,39],[72,45,63,40],[72,46,63,41],[72,47,63,42,"add"],[72,50,63,45],[72,51,63,46],[72,55,63,46,"createWithdrawWithheldTokensFromAccountsInstruction"],[72,120,63,97],[72,122,63,98,"mint"],[72,126,63,102],[72,128,63,104,"destination"],[72,139,63,115],[72,141,63,117,"authorityPublicKey"],[72,159,63,135],[72,161,63,137,"signers"],[72,168,63,144],[72,170,63,146,"sources"],[72,177,63,153],[72,179,63,155,"programId"],[72,188,63,164],[72,189,63,165],[72,190,63,166],[73,4,64,4],[73,11,64,11],[73,17,64,17],[73,21,64,17,"sendAndConfirmTransaction"],[73,51,64,42],[73,53,64,43,"connection"],[73,63,64,53],[73,65,64,55,"transaction"],[73,76,64,66],[73,78,64,68],[73,79,64,69,"payer"],[73,84,64,74],[73,86,64,76],[73,89,64,79,"signers"],[73,96,64,86],[73,97,64,87],[73,99,64,89,"confirmOptions"],[73,113,64,103],[73,114,64,104],[74,2,65,0],[75,2,66,0],[76,0,67,0],[77,0,68,0],[78,0,69,0],[79,0,70,0],[80,0,71,0],[81,0,72,0],[82,0,73,0],[83,0,74,0],[84,0,75,0],[85,0,76,0],[86,0,77,0],[87,2,78,7],[87,17,78,22,"harvestWithheldTokensToMint"],[87,44,78,49,"harvestWithheldTokensToMint"],[87,45,78,50,"connection"],[87,55,78,60],[87,57,78,62,"payer"],[87,62,78,67],[87,64,78,69,"mint"],[87,68,78,73],[87,70,78,75,"sources"],[87,77,78,82],[87,79,78,84,"confirmOptions"],[87,93,78,98],[87,95,78,100,"programId"],[87,104,78,109],[87,107,78,112,"TOKEN_2022_PROGRAM_ID"],[87,139,78,133],[87,141,78,135],[88,4,79,4],[88,10,79,10,"transaction"],[88,21,79,21],[88,24,79,24],[88,28,79,28,"Transaction"],[88,44,79,39],[88,45,79,40],[88,46,79,41],[88,47,79,42,"add"],[88,50,79,45],[88,51,79,46],[88,55,79,46,"createHarvestWithheldTokensToMintInstruction"],[88,113,79,90],[88,115,79,91,"mint"],[88,119,79,95],[88,121,79,97,"sources"],[88,128,79,104],[88,130,79,106,"programId"],[88,139,79,115],[88,140,79,116],[88,141,79,117],[89,4,80,4],[89,11,80,11],[89,17,80,17],[89,21,80,17,"sendAndConfirmTransaction"],[89,51,80,42],[89,53,80,43,"connection"],[89,63,80,53],[89,65,80,55,"transaction"],[89,76,80,66],[89,78,80,68],[89,79,80,69,"payer"],[89,84,80,74],[89,85,80,75],[89,87,80,77,"confirmOptions"],[89,101,80,91],[89,102,80,92],[90,2,81,0],[91,2,82,0],[92,0,83,0],[93,0,84,0],[94,0,85,0],[95,0,86,0],[96,0,87,0],[97,0,88,0],[98,0,89,0],[99,0,90,0],[100,0,91,0],[101,0,92,0],[102,0,93,0],[103,0,94,0],[104,0,95,0],[105,0,96,0],[106,2,97,7],[106,17,97,22,"setTransferFee"],[106,31,97,36,"setTransferFee"],[106,32,97,37,"connection"],[106,42,97,47],[106,44,97,49,"payer"],[106,49,97,54],[106,51,97,56,"mint"],[106,55,97,60],[106,57,97,62,"authority"],[106,66,97,71],[106,68,97,73,"multiSigners"],[106,80,97,85],[106,82,97,87,"transferFeeBasisPoints"],[106,104,97,109],[106,106,97,111,"maximumFee"],[106,116,97,121],[106,118,97,123,"confirmOptions"],[106,132,97,137],[106,134,97,139,"programId"],[106,143,97,148],[106,146,97,151,"TOKEN_2022_PROGRAM_ID"],[106,178,97,172],[106,180,97,174],[107,4,98,4],[107,10,98,10],[107,11,98,11,"authorityPublicKey"],[107,29,98,29],[107,31,98,31,"signers"],[107,38,98,38],[107,39,98,39],[107,42,98,42],[107,46,98,42,"getSigners"],[107,66,98,52],[107,68,98,53,"authority"],[107,77,98,62],[107,79,98,64,"multiSigners"],[107,91,98,76],[107,92,98,77],[108,4,99,4],[108,10,99,10,"transaction"],[108,21,99,21],[108,24,99,24],[108,28,99,28,"Transaction"],[108,44,99,39],[108,45,99,40],[108,46,99,41],[108,47,99,42,"add"],[108,50,99,45],[108,51,99,46],[108,55,99,46,"createSetTransferFeeInstruction"],[108,100,99,77],[108,102,99,78,"mint"],[108,106,99,82],[108,108,99,84,"authorityPublicKey"],[108,126,99,102],[108,128,99,104,"signers"],[108,135,99,111],[108,137,99,113,"transferFeeBasisPoints"],[108,159,99,135],[108,161,99,137,"maximumFee"],[108,171,99,147],[108,173,99,149,"programId"],[108,182,99,158],[108,183,99,159],[108,184,99,160],[109,4,100,4],[109,11,100,11],[109,17,100,17],[109,21,100,17,"sendAndConfirmTransaction"],[109,51,100,42],[109,53,100,43,"connection"],[109,63,100,53],[109,65,100,55,"transaction"],[109,76,100,66],[109,78,100,68],[109,79,100,69,"payer"],[109,84,100,74],[109,86,100,76],[109,89,100,79,"signers"],[109,96,100,86],[109,97,100,87],[109,99,100,89,"confirmOptions"],[109,113,100,103],[109,114,100,104],[110,2,101,0],[111,0,101,1],[111,3]],"functionMap":{"names":["<global>","transferCheckedWithFee","withdrawWithheldTokensFromMint","withdrawWithheldTokensFromAccounts","harvestWithheldTokensToMint","setTransferFee"],"mappings":"AAA;OCqB;CDI;OEe;CFI;OGgB;CHI;OIa;CJG;OKgB;CLI"}},"type":"js/module"}]}