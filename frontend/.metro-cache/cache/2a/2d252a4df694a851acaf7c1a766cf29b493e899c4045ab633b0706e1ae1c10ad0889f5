{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":51,"index":161}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":170,"index":332}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":333},"end":{"line":5,"column":46,"index":379}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createSyncNativeInstruction = createSyncNativeInstruction;\n  exports.decodeSyncNativeInstruction = decodeSyncNativeInstruction;\n  exports.decodeSyncNativeInstructionUnchecked = decodeSyncNativeInstructionUnchecked;\n  exports.syncNativeInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _types = require(_dependencyMap[4], \"./types.js\");\n  /** TODO: docs */\n  const syncNativeInstructionData = exports.syncNativeInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction')]);\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param account   Native account to sync lamports from\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createSyncNativeInstruction(account, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(syncNativeInstructionData.span);\n    syncNativeInstructionData.encode({\n      instruction: _types.TokenInstruction.SyncNative\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode a SyncNative instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeSyncNativeInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== syncNativeInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account\n      },\n      data\n    } = decodeSyncNativeInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.SyncNative) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account\n      },\n      data\n    };\n  }\n  /**\n   * Decode a SyncNative instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeSyncNativeInstructionUnchecked({\n    programId,\n    keys: [account],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account\n      },\n      data: syncNativeInstructionData.decode(data)\n    };\n  }\n});","lineCount":88,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_types"],[13,12,5,0],[13,15,5,0,"require"],[13,22,5,0],[13,23,5,0,"_dependencyMap"],[13,37,5,0],[14,2,6,0],[15,2,7,7],[15,8,7,13,"syncNativeInstructionData"],[15,33,7,38],[15,36,7,38,"exports"],[15,43,7,38],[15,44,7,38,"syncNativeInstructionData"],[15,69,7,38],[15,72,7,41],[15,76,7,41,"struct"],[15,96,7,47],[15,98,7,48],[15,99,7,49],[15,103,7,49,"u8"],[15,119,7,51],[15,121,7,52],[15,134,7,65],[15,135,7,66],[15,136,7,67],[15,137,7,68],[16,2,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,2,16,7],[24,11,16,16,"createSyncNativeInstruction"],[24,38,16,43,"createSyncNativeInstruction"],[24,39,16,44,"account"],[24,46,16,51],[24,48,16,53,"programId"],[24,57,16,62],[24,60,16,65,"TOKEN_PROGRAM_ID"],[24,87,16,81],[24,89,16,83],[25,4,17,4],[25,10,17,10,"keys"],[25,14,17,14],[25,17,17,17],[25,18,17,18],[26,6,17,20,"pubkey"],[26,12,17,26],[26,14,17,28,"account"],[26,21,17,35],[27,6,17,37,"isSigner"],[27,14,17,45],[27,16,17,47],[27,21,17,52],[28,6,17,54,"isWritable"],[28,16,17,64],[28,18,17,66],[29,4,17,71],[29,5,17,72],[29,6,17,73],[30,4,18,4],[30,10,18,10,"data"],[30,14,18,14],[30,17,18,17,"Buffer"],[30,23,18,23],[30,24,18,24,"alloc"],[30,29,18,29],[30,30,18,30,"syncNativeInstructionData"],[30,55,18,55],[30,56,18,56,"span"],[30,60,18,60],[30,61,18,61],[31,4,19,4,"syncNativeInstructionData"],[31,29,19,29],[31,30,19,30,"encode"],[31,36,19,36],[31,37,19,37],[32,6,19,39,"instruction"],[32,17,19,50],[32,19,19,52,"TokenInstruction"],[32,42,19,68],[32,43,19,69,"SyncNative"],[33,4,19,80],[33,5,19,81],[33,7,19,83,"data"],[33,11,19,87],[33,12,19,88],[34,4,20,4],[34,11,20,11],[34,15,20,15,"TransactionInstruction"],[34,42,20,37],[34,43,20,38],[35,6,20,40,"keys"],[35,10,20,44],[36,6,20,46,"programId"],[36,15,20,55],[37,6,20,57,"data"],[38,4,20,62],[38,5,20,63],[38,6,20,64],[39,2,21,0],[40,2,22,0],[41,0,23,0],[42,0,24,0],[43,0,25,0],[44,0,26,0],[45,0,27,0],[46,0,28,0],[47,0,29,0],[48,2,30,7],[48,11,30,16,"decodeSyncNativeInstruction"],[48,38,30,43,"decodeSyncNativeInstruction"],[48,39,30,44,"instruction"],[48,50,30,55],[48,52,30,57,"programId"],[48,61,30,66],[48,64,30,69,"TOKEN_PROGRAM_ID"],[48,91,30,85],[48,93,30,87],[49,4,31,4],[49,8,31,8],[49,9,31,9,"instruction"],[49,20,31,20],[49,21,31,21,"programId"],[49,30,31,30],[49,31,31,31,"equals"],[49,37,31,37],[49,38,31,38,"programId"],[49,47,31,47],[49,48,31,48],[49,50,32,8],[49,56,32,14],[49,60,32,18,"TokenInvalidInstructionProgramError"],[49,103,32,53],[49,104,32,54],[49,105,32,55],[50,4,33,4],[50,8,33,8,"instruction"],[50,19,33,19],[50,20,33,20,"data"],[50,24,33,24],[50,25,33,25,"length"],[50,31,33,31],[50,36,33,36,"syncNativeInstructionData"],[50,61,33,61],[50,62,33,62,"span"],[50,66,33,66],[50,68,34,8],[50,74,34,14],[50,78,34,18,"TokenInvalidInstructionDataError"],[50,118,34,50],[50,119,34,51],[50,120,34,52],[51,4,35,4],[51,10,35,10],[52,6,35,12,"keys"],[52,10,35,16],[52,12,35,18],[53,8,35,20,"account"],[54,6,35,28],[54,7,35,29],[55,6,35,31,"data"],[56,4,35,37],[56,5,35,38],[56,8,35,41,"decodeSyncNativeInstructionUnchecked"],[56,44,35,77],[56,45,35,78,"instruction"],[56,56,35,89],[56,57,35,90],[57,4,36,4],[57,8,36,8,"data"],[57,12,36,12],[57,13,36,13,"instruction"],[57,24,36,24],[57,29,36,29,"TokenInstruction"],[57,52,36,45],[57,53,36,46,"SyncNative"],[57,63,36,56],[57,65,37,8],[57,71,37,14],[57,75,37,18,"TokenInvalidInstructionTypeError"],[57,115,37,50],[57,116,37,51],[57,117,37,52],[58,4,38,4],[58,8,38,8],[58,9,38,9,"account"],[58,16,38,16],[58,18,39,8],[58,24,39,14],[58,28,39,18,"TokenInvalidInstructionKeysError"],[58,68,39,50],[58,69,39,51],[58,70,39,52],[59,4,40,4],[60,4,41,4],[60,11,41,11],[61,6,42,8,"programId"],[61,15,42,17],[62,6,43,8,"keys"],[62,10,43,12],[62,12,43,14],[63,8,44,12,"account"],[64,6,45,8],[64,7,45,9],[65,6,46,8,"data"],[66,4,47,4],[66,5,47,5],[67,2,48,0],[68,2,49,0],[69,0,50,0],[70,0,51,0],[71,0,52,0],[72,0,53,0],[73,0,54,0],[74,0,55,0],[75,2,56,7],[75,11,56,16,"decodeSyncNativeInstructionUnchecked"],[75,47,56,52,"decodeSyncNativeInstructionUnchecked"],[75,48,56,53],[76,4,56,55,"programId"],[76,13,56,64],[77,4,56,66,"keys"],[77,8,56,70],[77,10,56,72],[77,11,56,73,"account"],[77,18,56,80],[77,19,56,81],[78,4,56,83,"data"],[79,2,56,89],[79,3,56,90],[79,5,56,92],[80,4,57,4],[80,11,57,11],[81,6,58,8,"programId"],[81,15,58,17],[82,6,59,8,"keys"],[82,10,59,12],[82,12,59,14],[83,8,60,12,"account"],[84,6,61,8],[84,7,61,9],[85,6,62,8,"data"],[85,10,62,12],[85,12,62,14,"syncNativeInstructionData"],[85,37,62,39],[85,38,62,40,"decode"],[85,44,62,46],[85,45,62,47,"data"],[85,49,62,51],[86,4,63,4],[86,5,63,5],[87,2,64,0],[88,0,64,1],[88,3]],"functionMap":{"names":["<global>","createSyncNativeInstruction","decodeSyncNativeInstruction","decodeSyncNativeInstructionUnchecked"],"mappings":"AAA;OCe;CDK;OES;CFkB;OGQ;CHQ"}},"type":"js/module"}]}