{"dependencies":[{"name":"../../../errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":21,"index":318},"end":{"line":15,"column":47,"index":344}}],"key":"qo8P6ncfoScjryDx4l+xmXlm9pw=","exportNames":["*"]}},{"name":"./end-of-stream","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":31,"index":867},"end":{"line":31,"column":57,"index":893}}],"key":"wYzLdnrEbrGjPeg9yNcs7/vHpVc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Ported from https://github.com/mafintosh/pump with\n  // permission from the author, Mathias Buus (@mafintosh).\n\n  'use strict';\n\n  var eos;\n  function once(callback) {\n    var called = false;\n    return function () {\n      if (called) return;\n      called = true;\n      callback.apply(void 0, arguments);\n    };\n  }\n  var _require$codes = require(_dependencyMap[0], \"../../../errors\").codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n  function noop(err) {\n    // Rethrow the error if it exists to avoid swallowing it\n    if (err) throw err;\n  }\n  function isRequest(stream) {\n    return stream.setHeader && typeof stream.abort === 'function';\n  }\n  function destroyer(stream, reading, writing, callback) {\n    callback = once(callback);\n    var closed = false;\n    stream.on('close', function () {\n      closed = true;\n    });\n    if (eos === undefined) eos = require(_dependencyMap[1], \"./end-of-stream\");\n    eos(stream, {\n      readable: reading,\n      writable: writing\n    }, function (err) {\n      if (err) return callback(err);\n      closed = true;\n      callback();\n    });\n    var destroyed = false;\n    return function (err) {\n      if (closed) return;\n      if (destroyed) return;\n      destroyed = true;\n\n      // request.destroy just do .end - .abort is what we want\n      if (isRequest(stream)) return stream.abort();\n      if (typeof stream.destroy === 'function') return stream.destroy();\n      callback(err || new ERR_STREAM_DESTROYED('pipe'));\n    };\n  }\n  function call(fn) {\n    fn();\n  }\n  function pipe(from, to) {\n    return from.pipe(to);\n  }\n  function popCallback(streams) {\n    if (!streams.length) return noop;\n    if (typeof streams[streams.length - 1] !== 'function') return noop;\n    return streams.pop();\n  }\n  function pipeline() {\n    for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n      streams[_key] = arguments[_key];\n    }\n    var callback = popCallback(streams);\n    if (Array.isArray(streams[0])) streams = streams[0];\n    if (streams.length < 2) {\n      throw new ERR_MISSING_ARGS('streams');\n    }\n    var error;\n    var destroys = streams.map(function (stream, i) {\n      var reading = i < streams.length - 1;\n      var writing = i > 0;\n      return destroyer(stream, reading, writing, function (err) {\n        if (!error) error = err;\n        if (err) destroys.forEach(call);\n        if (reading) return;\n        destroys.forEach(call);\n        callback(error);\n      });\n    });\n    return streams.reduce(pipe);\n  }\n  module.exports = pipeline;\n});","lineCount":88,"map":[[2,2,1,0],[3,2,2,0],[5,2,4,0],[5,14,4,12],[7,2,6,0],[7,6,6,4,"eos"],[7,9,6,7],[8,2,7,0],[8,11,7,9,"once"],[8,15,7,13,"once"],[8,16,7,14,"callback"],[8,24,7,22],[8,26,7,24],[9,4,8,2],[9,8,8,6,"called"],[9,14,8,12],[9,17,8,15],[9,22,8,20],[10,4,9,2],[10,11,9,9],[10,23,9,21],[11,6,10,4],[11,10,10,8,"called"],[11,16,10,14],[11,18,10,16],[12,6,11,4,"called"],[12,12,11,10],[12,15,11,13],[12,19,11,17],[13,6,12,4,"callback"],[13,14,12,12],[13,15,12,13,"apply"],[13,20,12,18],[13,21,12,19],[13,26,12,24],[13,27,12,25],[13,29,12,27,"arguments"],[13,38,12,36],[13,39,12,37],[14,4,13,2],[14,5,13,3],[15,2,14,0],[16,2,15,0],[16,6,15,4,"_require$codes"],[16,20,15,18],[16,23,15,21,"require"],[16,30,15,28],[16,31,15,28,"_dependencyMap"],[16,45,15,28],[16,67,15,46],[16,68,15,47],[16,69,15,48,"codes"],[16,74,15,53],[17,4,16,2,"ERR_MISSING_ARGS"],[17,20,16,18],[17,23,16,21,"_require$codes"],[17,37,16,35],[17,38,16,36,"ERR_MISSING_ARGS"],[17,54,16,52],[18,4,17,2,"ERR_STREAM_DESTROYED"],[18,24,17,22],[18,27,17,25,"_require$codes"],[18,41,17,39],[18,42,17,40,"ERR_STREAM_DESTROYED"],[18,62,17,60],[19,2,18,0],[19,11,18,9,"noop"],[19,15,18,13,"noop"],[19,16,18,14,"err"],[19,19,18,17],[19,21,18,19],[20,4,19,2],[21,4,20,2],[21,8,20,6,"err"],[21,11,20,9],[21,13,20,11],[21,19,20,17,"err"],[21,22,20,20],[22,2,21,0],[23,2,22,0],[23,11,22,9,"isRequest"],[23,20,22,18,"isRequest"],[23,21,22,19,"stream"],[23,27,22,25],[23,29,22,27],[24,4,23,2],[24,11,23,9,"stream"],[24,17,23,15],[24,18,23,16,"setHeader"],[24,27,23,25],[24,31,23,29],[24,38,23,36,"stream"],[24,44,23,42],[24,45,23,43,"abort"],[24,50,23,48],[24,55,23,53],[24,65,23,63],[25,2,24,0],[26,2,25,0],[26,11,25,9,"destroyer"],[26,20,25,18,"destroyer"],[26,21,25,19,"stream"],[26,27,25,25],[26,29,25,27,"reading"],[26,36,25,34],[26,38,25,36,"writing"],[26,45,25,43],[26,47,25,45,"callback"],[26,55,25,53],[26,57,25,55],[27,4,26,2,"callback"],[27,12,26,10],[27,15,26,13,"once"],[27,19,26,17],[27,20,26,18,"callback"],[27,28,26,26],[27,29,26,27],[28,4,27,2],[28,8,27,6,"closed"],[28,14,27,12],[28,17,27,15],[28,22,27,20],[29,4,28,2,"stream"],[29,10,28,8],[29,11,28,9,"on"],[29,13,28,11],[29,14,28,12],[29,21,28,19],[29,23,28,21],[29,35,28,33],[30,6,29,4,"closed"],[30,12,29,10],[30,15,29,13],[30,19,29,17],[31,4,30,2],[31,5,30,3],[31,6,30,4],[32,4,31,2],[32,8,31,6,"eos"],[32,11,31,9],[32,16,31,14,"undefined"],[32,25,31,23],[32,27,31,25,"eos"],[32,30,31,28],[32,33,31,31,"require"],[32,40,31,38],[32,41,31,38,"_dependencyMap"],[32,55,31,38],[32,77,31,56],[32,78,31,57],[33,4,32,2,"eos"],[33,7,32,5],[33,8,32,6,"stream"],[33,14,32,12],[33,16,32,14],[34,6,33,4,"readable"],[34,14,33,12],[34,16,33,14,"reading"],[34,23,33,21],[35,6,34,4,"writable"],[35,14,34,12],[35,16,34,14,"writing"],[36,4,35,2],[36,5,35,3],[36,7,35,5],[36,17,35,15,"err"],[36,20,35,18],[36,22,35,20],[37,6,36,4],[37,10,36,8,"err"],[37,13,36,11],[37,15,36,13],[37,22,36,20,"callback"],[37,30,36,28],[37,31,36,29,"err"],[37,34,36,32],[37,35,36,33],[38,6,37,4,"closed"],[38,12,37,10],[38,15,37,13],[38,19,37,17],[39,6,38,4,"callback"],[39,14,38,12],[39,15,38,13],[39,16,38,14],[40,4,39,2],[40,5,39,3],[40,6,39,4],[41,4,40,2],[41,8,40,6,"destroyed"],[41,17,40,15],[41,20,40,18],[41,25,40,23],[42,4,41,2],[42,11,41,9],[42,21,41,19,"err"],[42,24,41,22],[42,26,41,24],[43,6,42,4],[43,10,42,8,"closed"],[43,16,42,14],[43,18,42,16],[44,6,43,4],[44,10,43,8,"destroyed"],[44,19,43,17],[44,21,43,19],[45,6,44,4,"destroyed"],[45,15,44,13],[45,18,44,16],[45,22,44,20],[47,6,46,4],[48,6,47,4],[48,10,47,8,"isRequest"],[48,19,47,17],[48,20,47,18,"stream"],[48,26,47,24],[48,27,47,25],[48,29,47,27],[48,36,47,34,"stream"],[48,42,47,40],[48,43,47,41,"abort"],[48,48,47,46],[48,49,47,47],[48,50,47,48],[49,6,48,4],[49,10,48,8],[49,17,48,15,"stream"],[49,23,48,21],[49,24,48,22,"destroy"],[49,31,48,29],[49,36,48,34],[49,46,48,44],[49,48,48,46],[49,55,48,53,"stream"],[49,61,48,59],[49,62,48,60,"destroy"],[49,69,48,67],[49,70,48,68],[49,71,48,69],[50,6,49,4,"callback"],[50,14,49,12],[50,15,49,13,"err"],[50,18,49,16],[50,22,49,20],[50,26,49,24,"ERR_STREAM_DESTROYED"],[50,46,49,44],[50,47,49,45],[50,53,49,51],[50,54,49,52],[50,55,49,53],[51,4,50,2],[51,5,50,3],[52,2,51,0],[53,2,52,0],[53,11,52,9,"call"],[53,15,52,13,"call"],[53,16,52,14,"fn"],[53,18,52,16],[53,20,52,18],[54,4,53,2,"fn"],[54,6,53,4],[54,7,53,5],[54,8,53,6],[55,2,54,0],[56,2,55,0],[56,11,55,9,"pipe"],[56,15,55,13,"pipe"],[56,16,55,14,"from"],[56,20,55,18],[56,22,55,20,"to"],[56,24,55,22],[56,26,55,24],[57,4,56,2],[57,11,56,9,"from"],[57,15,56,13],[57,16,56,14,"pipe"],[57,20,56,18],[57,21,56,19,"to"],[57,23,56,21],[57,24,56,22],[58,2,57,0],[59,2,58,0],[59,11,58,9,"popCallback"],[59,22,58,20,"popCallback"],[59,23,58,21,"streams"],[59,30,58,28],[59,32,58,30],[60,4,59,2],[60,8,59,6],[60,9,59,7,"streams"],[60,16,59,14],[60,17,59,15,"length"],[60,23,59,21],[60,25,59,23],[60,32,59,30,"noop"],[60,36,59,34],[61,4,60,2],[61,8,60,6],[61,15,60,13,"streams"],[61,22,60,20],[61,23,60,21,"streams"],[61,30,60,28],[61,31,60,29,"length"],[61,37,60,35],[61,40,60,38],[61,41,60,39],[61,42,60,40],[61,47,60,45],[61,57,60,55],[61,59,60,57],[61,66,60,64,"noop"],[61,70,60,68],[62,4,61,2],[62,11,61,9,"streams"],[62,18,61,16],[62,19,61,17,"pop"],[62,22,61,20],[62,23,61,21],[62,24,61,22],[63,2,62,0],[64,2,63,0],[64,11,63,9,"pipeline"],[64,19,63,17,"pipeline"],[64,20,63,17],[64,22,63,20],[65,4,64,2],[65,9,64,7],[65,13,64,11,"_len"],[65,17,64,15],[65,20,64,18,"arguments"],[65,29,64,27],[65,30,64,28,"length"],[65,36,64,34],[65,38,64,36,"streams"],[65,45,64,43],[65,48,64,46],[65,52,64,50,"Array"],[65,57,64,55],[65,58,64,56,"_len"],[65,62,64,60],[65,63,64,61],[65,65,64,63,"_key"],[65,69,64,67],[65,72,64,70],[65,73,64,71],[65,75,64,73,"_key"],[65,79,64,77],[65,82,64,80,"_len"],[65,86,64,84],[65,88,64,86,"_key"],[65,92,64,90],[65,94,64,92],[65,96,64,94],[66,6,65,4,"streams"],[66,13,65,11],[66,14,65,12,"_key"],[66,18,65,16],[66,19,65,17],[66,22,65,20,"arguments"],[66,31,65,29],[66,32,65,30,"_key"],[66,36,65,34],[66,37,65,35],[67,4,66,2],[68,4,67,2],[68,8,67,6,"callback"],[68,16,67,14],[68,19,67,17,"popCallback"],[68,30,67,28],[68,31,67,29,"streams"],[68,38,67,36],[68,39,67,37],[69,4,68,2],[69,8,68,6,"Array"],[69,13,68,11],[69,14,68,12,"isArray"],[69,21,68,19],[69,22,68,20,"streams"],[69,29,68,27],[69,30,68,28],[69,31,68,29],[69,32,68,30],[69,33,68,31],[69,35,68,33,"streams"],[69,42,68,40],[69,45,68,43,"streams"],[69,52,68,50],[69,53,68,51],[69,54,68,52],[69,55,68,53],[70,4,69,2],[70,8,69,6,"streams"],[70,15,69,13],[70,16,69,14,"length"],[70,22,69,20],[70,25,69,23],[70,26,69,24],[70,28,69,26],[71,6,70,4],[71,12,70,10],[71,16,70,14,"ERR_MISSING_ARGS"],[71,32,70,30],[71,33,70,31],[71,42,70,40],[71,43,70,41],[72,4,71,2],[73,4,72,2],[73,8,72,6,"error"],[73,13,72,11],[74,4,73,2],[74,8,73,6,"destroys"],[74,16,73,14],[74,19,73,17,"streams"],[74,26,73,24],[74,27,73,25,"map"],[74,30,73,28],[74,31,73,29],[74,41,73,39,"stream"],[74,47,73,45],[74,49,73,47,"i"],[74,50,73,48],[74,52,73,50],[75,6,74,4],[75,10,74,8,"reading"],[75,17,74,15],[75,20,74,18,"i"],[75,21,74,19],[75,24,74,22,"streams"],[75,31,74,29],[75,32,74,30,"length"],[75,38,74,36],[75,41,74,39],[75,42,74,40],[76,6,75,4],[76,10,75,8,"writing"],[76,17,75,15],[76,20,75,18,"i"],[76,21,75,19],[76,24,75,22],[76,25,75,23],[77,6,76,4],[77,13,76,11,"destroyer"],[77,22,76,20],[77,23,76,21,"stream"],[77,29,76,27],[77,31,76,29,"reading"],[77,38,76,36],[77,40,76,38,"writing"],[77,47,76,45],[77,49,76,47],[77,59,76,57,"err"],[77,62,76,60],[77,64,76,62],[78,8,77,6],[78,12,77,10],[78,13,77,11,"error"],[78,18,77,16],[78,20,77,18,"error"],[78,25,77,23],[78,28,77,26,"err"],[78,31,77,29],[79,8,78,6],[79,12,78,10,"err"],[79,15,78,13],[79,17,78,15,"destroys"],[79,25,78,23],[79,26,78,24,"forEach"],[79,33,78,31],[79,34,78,32,"call"],[79,38,78,36],[79,39,78,37],[80,8,79,6],[80,12,79,10,"reading"],[80,19,79,17],[80,21,79,19],[81,8,80,6,"destroys"],[81,16,80,14],[81,17,80,15,"forEach"],[81,24,80,22],[81,25,80,23,"call"],[81,29,80,27],[81,30,80,28],[82,8,81,6,"callback"],[82,16,81,14],[82,17,81,15,"error"],[82,22,81,20],[82,23,81,21],[83,6,82,4],[83,7,82,5],[83,8,82,6],[84,4,83,2],[84,5,83,3],[84,6,83,4],[85,4,84,2],[85,11,84,9,"streams"],[85,18,84,16],[85,19,84,17,"reduce"],[85,25,84,23],[85,26,84,24,"pipe"],[85,30,84,28],[85,31,84,29],[86,2,85,0],[87,2,86,0,"module"],[87,8,86,6],[87,9,86,7,"exports"],[87,16,86,14],[87,19,86,17,"pipeline"],[87,27,86,25],[88,0,86,26],[88,3]],"functionMap":{"names":["<global>","once","<anonymous>","noop","isRequest","destroyer","stream.on$argument_1","eos$argument_2","call","pipe","popCallback","pipeline","streams.map$argument_0","destroyer$argument_3"],"mappings":"AAA;ACM;SCE;GDI;CDC;AGI;CHG;AIC;CJE;AKC;qBCG;GDE;KEK;GFI;SHE;GGS;CLC;AQC;CRE;ASC;CTE;AUC;CVI;AWC;6BCU;+CCG;KDM;GDC;CXE"}},"type":"js/module"}]}