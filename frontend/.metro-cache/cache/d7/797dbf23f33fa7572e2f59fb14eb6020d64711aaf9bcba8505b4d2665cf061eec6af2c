{"dependencies":[{"name":"uuid","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":28,"index":43}}],"key":"jDVWfT8IaDtrIKMfZusH6IH9Zlc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const uuid = require(_dependencyMap[0], \"uuid\").v4;\n\n  /**\n   *  Generates a JSON-RPC 1.0 or 2.0 request\n   *  @param {String} method Name of method to call\n   *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n   *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n   *  @param {Object} [options]\n   *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n   *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n   *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n   *  @throws {TypeError} If any of the parameters are invalid\n   *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n   *  @memberOf Utils\n   */\n  const generateRequest = function (method, params, id, options) {\n    if (typeof method !== 'string') {\n      throw new TypeError(method + ' must be a string');\n    }\n    options = options || {};\n\n    // check valid version provided\n    const version = typeof options.version === 'number' ? options.version : 2;\n    if (version !== 1 && version !== 2) {\n      throw new TypeError(version + ' must be 1 or 2');\n    }\n    const request = {\n      method: method\n    };\n    if (version === 2) {\n      request.jsonrpc = '2.0';\n    }\n    if (params) {\n      // params given, but invalid?\n      if (typeof params !== 'object' && !Array.isArray(params)) {\n        throw new TypeError(params + ' must be an object, array or omitted');\n      }\n      request.params = params;\n    }\n\n    // if id was left out, generate one (null means explicit notification)\n    if (typeof id === 'undefined') {\n      const generator = typeof options.generator === 'function' ? options.generator : function () {\n        return uuid();\n      };\n      request.id = generator(request, options);\n    } else if (version === 2 && id === null) {\n      // we have a version 2 notification\n      if (options.notificationIdNull) {\n        request.id = null; // id will not be set at all unless option provided\n      }\n    } else {\n      request.id = id;\n    }\n    return request;\n  };\n  module.exports = generateRequest;\n});","lineCount":61,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6,"uuid"],[4,12,3,10],[4,15,3,13,"require"],[4,22,3,20],[4,23,3,20,"_dependencyMap"],[4,37,3,20],[4,48,3,27],[4,49,3,28],[4,50,3,29,"v4"],[4,52,3,31],[6,2,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,2,18,0],[19,8,18,6,"generateRequest"],[19,23,18,21],[19,26,18,24],[19,35,18,24,"generateRequest"],[19,36,18,33,"method"],[19,42,18,39],[19,44,18,41,"params"],[19,50,18,47],[19,52,18,49,"id"],[19,54,18,51],[19,56,18,53,"options"],[19,63,18,60],[19,65,18,62],[20,4,19,2],[20,8,19,5],[20,15,19,12,"method"],[20,21,19,18],[20,26,19,23],[20,34,19,31],[20,36,19,33],[21,6,20,4],[21,12,20,10],[21,16,20,14,"TypeError"],[21,25,20,23],[21,26,20,24,"method"],[21,32,20,30],[21,35,20,33],[21,54,20,52],[21,55,20,53],[22,4,21,2],[23,4,23,2,"options"],[23,11,23,9],[23,14,23,12,"options"],[23,21,23,19],[23,25,23,23],[23,26,23,24],[23,27,23,25],[25,4,25,2],[26,4,26,2],[26,10,26,8,"version"],[26,17,26,15],[26,20,26,18],[26,27,26,25,"options"],[26,34,26,32],[26,35,26,33,"version"],[26,42,26,40],[26,47,26,45],[26,55,26,53],[26,58,26,56,"options"],[26,65,26,63],[26,66,26,64,"version"],[26,73,26,71],[26,76,26,74],[26,77,26,75],[27,4,27,2],[27,8,27,6,"version"],[27,15,27,13],[27,20,27,18],[27,21,27,19],[27,25,27,23,"version"],[27,32,27,30],[27,37,27,35],[27,38,27,36],[27,40,27,38],[28,6,28,4],[28,12,28,10],[28,16,28,14,"TypeError"],[28,25,28,23],[28,26,28,24,"version"],[28,33,28,31],[28,36,28,34],[28,53,28,51],[28,54,28,52],[29,4,29,2],[30,4,31,2],[30,10,31,8,"request"],[30,17,31,15],[30,20,31,18],[31,6,32,4,"method"],[31,12,32,10],[31,14,32,12,"method"],[32,4,33,2],[32,5,33,3],[33,4,35,2],[33,8,35,5,"version"],[33,15,35,12],[33,20,35,17],[33,21,35,18],[33,23,35,20],[34,6,36,4,"request"],[34,13,36,11],[34,14,36,12,"jsonrpc"],[34,21,36,19],[34,24,36,22],[34,29,36,27],[35,4,37,2],[36,4,39,2],[36,8,39,5,"params"],[36,14,39,11],[36,16,39,13],[37,6,40,4],[38,6,41,4],[38,10,41,7],[38,17,41,14,"params"],[38,23,41,20],[38,28,41,25],[38,36,41,33],[38,40,41,37],[38,41,41,38,"Array"],[38,46,41,43],[38,47,41,44,"isArray"],[38,54,41,51],[38,55,41,52,"params"],[38,61,41,58],[38,62,41,59],[38,64,41,61],[39,8,42,6],[39,14,42,12],[39,18,42,16,"TypeError"],[39,27,42,25],[39,28,42,26,"params"],[39,34,42,32],[39,37,42,35],[39,75,42,73],[39,76,42,74],[40,6,43,4],[41,6,44,4,"request"],[41,13,44,11],[41,14,44,12,"params"],[41,20,44,18],[41,23,44,21,"params"],[41,29,44,27],[42,4,45,2],[44,4,47,2],[45,4,48,2],[45,8,48,5],[45,15,48,12,"id"],[45,17,48,15],[45,22,48,20],[45,33,48,31],[45,35,48,33],[46,6,49,4],[46,12,49,10,"generator"],[46,21,49,19],[46,24,49,22],[46,31,49,29,"options"],[46,38,49,36],[46,39,49,37,"generator"],[46,48,49,46],[46,53,49,51],[46,63,49,61],[46,66,49,64,"options"],[46,73,49,71],[46,74,49,72,"generator"],[46,83,49,81],[46,86,49,84],[46,98,49,95],[47,8,49,97],[47,15,49,104,"uuid"],[47,19,49,108],[47,20,49,109],[47,21,49,110],[48,6,49,112],[48,7,49,113],[49,6,50,4,"request"],[49,13,50,11],[49,14,50,12,"id"],[49,16,50,14],[49,19,50,17,"generator"],[49,28,50,26],[49,29,50,27,"request"],[49,36,50,34],[49,38,50,36,"options"],[49,45,50,43],[49,46,50,44],[50,4,51,2],[50,5,51,3],[50,11,51,9],[50,15,51,13,"version"],[50,22,51,20],[50,27,51,25],[50,28,51,26],[50,32,51,30,"id"],[50,34,51,32],[50,39,51,37],[50,43,51,41],[50,45,51,43],[51,6,52,4],[52,6,53,4],[52,10,53,8,"options"],[52,17,53,15],[52,18,53,16,"notificationIdNull"],[52,36,53,34],[52,38,53,36],[53,8,54,6,"request"],[53,15,54,13],[53,16,54,14,"id"],[53,18,54,16],[53,21,54,19],[53,25,54,23],[53,26,54,24],[53,27,54,25],[54,6,55,4],[55,4,56,2],[55,5,56,3],[55,11,56,9],[56,6,57,4,"request"],[56,13,57,11],[56,14,57,12,"id"],[56,16,57,14],[56,19,57,17,"id"],[56,21,57,19],[57,4,58,2],[58,4,60,2],[58,11,60,9,"request"],[58,18,60,16],[59,2,61,0],[59,3,61,1],[60,2,63,0,"module"],[60,8,63,6],[60,9,63,7,"exports"],[60,16,63,14],[60,19,63,17,"generateRequest"],[60,34,63,32],[61,0,63,33],[61,3]],"functionMap":{"names":["<global>","generateRequest","<anonymous>"],"mappings":"AAA;wBCiB;oFC+B,6BD;CDY"}},"type":"js/module"}]}