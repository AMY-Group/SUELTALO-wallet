{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"]}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":276},"end":{"line":12,"column":43,"index":319}}],"key":"bGUa+dDG2WEhPiIlobT3urS95UE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){var s=r(d[0],\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(e,\"__esModule\",{value:!0}),e.CellRenderMask=void 0;var i=s(r(d[1],\"@babel/runtime/helpers/objectSpread2\")),t=s(r(d[2],\"fbjs/lib/invariant\"));e.CellRenderMask=class{constructor(s){(0,t.default)(s>=0,'CellRenderMask must contain a non-negative number os cells'),this._numCells=s,this._regions=0===s?[]:[{first:0,last:s-1,isSpacer:!0}]}enumerateRegions(){return this._regions}addCells(s){if((0,t.default)(s.first>=0&&s.first<this._numCells&&s.last>=-1&&s.last<this._numCells&&s.last>=s.first-1,'CellRenderMask.addCells called with invalid cell range'),!(s.last<s.first)){var l=this._findRegion(s.first),n=l[0],f=l[1],o=this._findRegion(s.last),u=o[0],_=o[1];if(f!==_||n.isSpacer){var h=[],c=[],p=(0,i.default)((0,i.default)({},s),{},{isSpacer:!1});n.first<p.first&&(n.isSpacer?h.push({first:n.first,last:p.first-1,isSpacer:!0}):p.first=n.first),u.last>p.last&&(u.isSpacer?c.push({first:p.last+1,last:u.last,isSpacer:!0}):p.last=u.last);var v=[...h,p,...c],C=_-f+1;this._regions.splice(f,C,...v)}}}numCells(){return this._numCells}equals(s){return this._numCells===s._numCells&&this._regions.length===s._regions.length&&this._regions.every((i,t)=>i.first===s._regions[t].first&&i.last===s._regions[t].last&&i.isSpacer===s._regions[t].isSpacer)}_findRegion(s){for(var i=0,l=this._regions.length-1;i<=l;){var n=Math.floor((i+l)/2),f=this._regions[n];if(s>=f.first&&s<=f.last)return[f,n];s<f.first?l=n-1:s>f.last&&(i=n+1)}(0,t.default)(!1,\"A region was not found containing cellIdx \"+s)}}});","lineCount":1,"map":[[1,163,1,0],[1,167,1,0,"_objectSpread2"],[1,169,1,0,"_interopRequireDefault"],[1,171,1,0,"r"],[1,173,1,0,"d"],[1,175,1,0],[1,219,12,0,"_invariant"],[1,221,12,0,"_interopRequireDefault"],[1,223,12,0,"r"],[1,225,12,0,"d"],[1,227,12,0],[1,253,106,1,"e"],[1,255,106,1,"CellRenderMask"],[1,270,13,7],[1,276,14,2,"constructor"],[1,288,14,14,"numCells"],[1,292,15,4],[1,294,15,4,"invariant"],[1,305,15,14,"numCells"],[1,308,15,26],[1,310,15,29],[1,372,16,4,"this"],[1,377,16,9,"_numCells"],[1,387,16,21,"numCells"],[1,389,18,6,"this"],[1,394,18,11,"_regions"],[1,403,17,21],[1,407,17,8,"numCells"],[1,409,18,22],[1,412,20,22],[1,413,20,23],[1,414,21,8,"first"],[1,420,21,15],[1,422,22,8,"last"],[1,427,22,14,"numCells"],[1,429,22,25],[1,431,23,8,"isSpacer"],[1,441,23,18],[1,444,26,2],[1,445,27,2,"enumerateRegions"],[1,464,28,4],[1,471,28,11,"this"],[1,476,28,16,"_regions"],[1,484,29,2],[1,485,30,2,"addCells"],[1,494,30,11,"cells"],[1,497,35,4],[1,501,31,4],[1,503,31,4,"invariant"],[1,514,31,14,"cells"],[1,516,31,20,"first"],[1,523,31,29],[1,526,31,34,"cells"],[1,528,31,40,"first"],[1,534,31,48,"this"],[1,539,31,53,"_numCells"],[1,550,31,66,"cells"],[1,552,31,72,"last"],[1,559,31,81],[1,562,31,86,"cells"],[1,564,31,92,"last"],[1,569,31,99,"this"],[1,574,31,104,"_numCells"],[1,585,31,117,"cells"],[1,587,31,123,"last"],[1,593,31,131,"cells"],[1,595,31,137,"first"],[1,601,31,145],[1,603,31,148],[1,663,35,8,"cells"],[1,665,35,14,"last"],[1,670,35,21,"cells"],[1,672,35,27,"first"],[1,679,35,4],[1,680,38,4],[1,684,38,8,"_this$_findRegion"],[1,686,38,28,"this"],[1,691,38,33,"_findRegion"],[1,703,38,45,"cells"],[1,705,38,51,"first"],[1,712,39,6,"firstIntersect"],[1,714,39,23,"_this$_findRegion"],[1,716,39,41],[1,719,40,6,"firstIntersectIdx"],[1,721,40,26,"_this$_findRegion"],[1,723,40,44],[1,726,41,8,"_this$_findRegion2"],[1,728,41,29,"this"],[1,733,41,34,"_findRegion"],[1,745,41,46,"cells"],[1,747,41,52,"last"],[1,753,42,6,"lastIntersect"],[1,755,42,22,"_this$_findRegion2"],[1,757,42,41],[1,760,43,6,"lastIntersectIdx"],[1,762,43,25,"_this$_findRegion2"],[1,764,43,44],[1,767,47,4],[1,770,47,8,"firstIntersectIdx"],[1,774,47,30,"lastIntersectIdx"],[1,777,47,51,"firstIntersect"],[1,779,47,66,"isSpacer"],[1,788,47,4],[1,789,53,4],[1,793,53,8,"newLeadRegion"],[1,795,53,24],[1,798,54,8,"newTailRegion"],[1,800,54,24],[1,803,55,8,"newMainRegion"],[1,806,55,24],[1,808,55,24,"_objectSpread"],[1,820,55,38],[1,822,55,38,"_objectSpread"],[1,833,55,52],[1,834,55,53],[1,836,55,56,"cells"],[1,839,55,64],[1,840,55,65],[1,842,55,68],[1,843,56,6,"isSpacer"],[1,853,56,16],[1,857,58,8,"firstIntersect"],[1,859,58,23,"first"],[1,865,58,31,"newMainRegion"],[1,867,58,45,"first"],[1,875,59,10,"firstIntersect"],[1,877,59,25,"isSpacer"],[1,886,60,8,"newLeadRegion"],[1,888,60,22,"push"],[1,893,60,27],[1,894,61,10,"first"],[1,900,61,17,"firstIntersect"],[1,902,61,32,"first"],[1,908,62,10,"last"],[1,913,62,16,"newMainRegion"],[1,915,62,30,"first"],[1,921,62,38],[1,923,63,10,"isSpacer"],[1,933,63,20],[1,937,66,8,"newMainRegion"],[1,939,66,22,"first"],[1,945,66,30,"firstIntersect"],[1,947,66,45,"first"],[1,954,69,8,"lastIntersect"],[1,956,69,22,"last"],[1,961,69,29,"newMainRegion"],[1,963,69,43,"last"],[1,970,70,10,"lastIntersect"],[1,972,70,24,"isSpacer"],[1,981,71,8,"newTailRegion"],[1,983,71,22,"push"],[1,988,71,27],[1,989,72,10,"first"],[1,995,72,17,"newMainRegion"],[1,997,72,31,"last"],[1,1002,72,38],[1,1004,73,10,"last"],[1,1009,73,16,"lastIntersect"],[1,1011,73,30,"last"],[1,1016,74,10,"isSpacer"],[1,1026,74,20],[1,1030,77,8,"newMainRegion"],[1,1032,77,22,"last"],[1,1037,77,29,"lastIntersect"],[1,1039,77,43,"last"],[1,1045,80,4],[1,1049,80,8,"replacementRegions"],[1,1051,80,29],[1,1055,80,33,"newLeadRegion"],[1,1057,80,48,"newMainRegion"],[1,1062,80,66,"newTailRegion"],[1,1065,81,8,"numRegionsToDelete"],[1,1067,81,29,"lastIntersectIdx"],[1,1069,81,48,"firstIntersectIdx"],[1,1071,81,68],[1,1073,82,4,"this"],[1,1078,82,9,"_regions"],[1,1087,82,18,"splice"],[1,1094,82,25,"firstIntersectIdx"],[1,1096,82,44,"numRegionsToDelete"],[1,1101,82,67,"replacementRegions"],[1,1103,49,4],[1,1104,37,4],[1,1105,83,2],[1,1106,84,2,"numCells"],[1,1117,85,4],[1,1124,85,11,"this"],[1,1129,85,16,"_numCells"],[1,1138,86,2],[1,1139,87,2,"equals"],[1,1146,87,9,"other"],[1,1149,88,4],[1,1156,88,11,"this"],[1,1161,88,16,"_numCells"],[1,1173,88,30,"other"],[1,1175,88,36,"_numCells"],[1,1186,88,49,"this"],[1,1191,88,54,"_regions"],[1,1200,88,63,"length"],[1,1209,88,74,"other"],[1,1211,88,80,"_regions"],[1,1220,88,89,"length"],[1,1228,88,99,"this"],[1,1233,88,104,"_regions"],[1,1242,88,113,"every"],[1,1248,88,119],[1,1249,88,120,"region"],[1,1251,88,128,"i"],[1,1255,88,134,"region"],[1,1257,88,141,"first"],[1,1265,88,151,"other"],[1,1267,88,157,"_regions"],[1,1276,88,166,"i"],[1,1279,88,169,"first"],[1,1286,88,178,"region"],[1,1288,88,185,"last"],[1,1295,88,194,"other"],[1,1297,88,200,"_regions"],[1,1306,88,209,"i"],[1,1309,88,212,"last"],[1,1315,88,220,"region"],[1,1317,88,227,"isSpacer"],[1,1328,88,240,"other"],[1,1330,88,246,"_regions"],[1,1339,88,255,"i"],[1,1342,88,258,"isSpacer"],[1,1351,89,2],[1,1352,90,2,"_findRegion"],[1,1364,90,14,"cellIdx"],[1,1367,93,4],[1,1371,91,4],[1,1375,91,8,"firstIdx"],[1,1377,91,19],[1,1379,92,8,"lastIdx"],[1,1381,92,18,"this"],[1,1386,92,23,"_regions"],[1,1395,92,32,"length"],[1,1402,92,41],[1,1404,93,11,"firstIdx"],[1,1407,93,23,"lastIdx"],[1,1410,93,32],[1,1411,94,6],[1,1415,94,10,"middleIdx"],[1,1417,94,22,"Math"],[1,1422,94,27,"floor"],[1,1429,94,34,"firstIdx"],[1,1431,94,45,"lastIdx"],[1,1434,94,56],[1,1437,95,10,"middleRegion"],[1,1439,95,25,"this"],[1,1444,95,30,"_regions"],[1,1453,95,39,"middleIdx"],[1,1456,96,6],[1,1459,96,10,"cellIdx"],[1,1462,96,21,"middleRegion"],[1,1464,96,34,"first"],[1,1471,96,43,"cellIdx"],[1,1474,96,54,"middleRegion"],[1,1476,96,67,"last"],[1,1481,97,8],[1,1487,97,15],[1,1488,97,16,"middleRegion"],[1,1490,97,30,"middleIdx"],[1,1493,98,17,"cellIdx"],[1,1495,98,27,"middleRegion"],[1,1497,98,40,"first"],[1,1503,99,8,"lastIdx"],[1,1505,99,18,"middleIdx"],[1,1507,99,30],[1,1509,100,17,"cellIdx"],[1,1511,100,27,"middleRegion"],[1,1513,100,40,"last"],[1,1520,101,8,"firstIdx"],[1,1522,101,19,"middleIdx"],[1,1524,101,31],[1,1526,103,4],[1,1528,104,4],[1,1530,104,4,"invariant"],[1,1542,104,14],[1,1544,104,21],[1,1589,104,68,"cellIdx"],[1,1591,105,2],[1,1593,106,1],[1,1596]],"functionMap":{"names":["<global>","CellRenderMask","constructor","enumerateRegions","addCells","numCells","equals","_regions.every$argument_0","_findRegion"],"mappings":"AAA;OCY;ECC;GDY;EEC;GFE;EGC;GHqD;EIC;GJE;EKC;uHCC,mJD;GLC;EOC;GPe"}},"type":"js/module"}]}