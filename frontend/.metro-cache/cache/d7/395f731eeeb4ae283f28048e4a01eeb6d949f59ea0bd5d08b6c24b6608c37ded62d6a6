{"dependencies":[{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"../base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":51},"end":{"line":2,"column":33,"index":69}}],"key":"ny6ZxiTrxak3kdoRrvP2aWlkG3I=","exportNames":["*"]}},{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":30,"index":110}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var inherits = require(_dependencyMap[0], \"inherits\");\n  var Reporter = require(_dependencyMap[1], \"../base\").Reporter;\n  var Buffer = require(_dependencyMap[2], \"buffer\").Buffer;\n  function DecoderBuffer(base, options) {\n    Reporter.call(this, options);\n    if (!Buffer.isBuffer(base)) {\n      this.error('Input not Buffer');\n      return;\n    }\n    this.base = base;\n    this.offset = 0;\n    this.length = base.length;\n  }\n  inherits(DecoderBuffer, Reporter);\n  exports.DecoderBuffer = DecoderBuffer;\n  DecoderBuffer.prototype.save = function save() {\n    return {\n      offset: this.offset,\n      reporter: Reporter.prototype.save.call(this)\n    };\n  };\n  DecoderBuffer.prototype.restore = function restore(save) {\n    // Return skipped data\n    var res = new DecoderBuffer(this.base);\n    res.offset = save.offset;\n    res.length = this.offset;\n    this.offset = save.offset;\n    Reporter.prototype.restore.call(this, save.reporter);\n    return res;\n  };\n  DecoderBuffer.prototype.isEmpty = function isEmpty() {\n    return this.offset === this.length;\n  };\n  DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n    if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n  };\n  DecoderBuffer.prototype.skip = function skip(bytes, fail) {\n    if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n    var res = new DecoderBuffer(this.base);\n\n    // Share reporter state\n    res._reporterState = this._reporterState;\n    res.offset = this.offset;\n    res.length = this.offset + bytes;\n    this.offset += bytes;\n    return res;\n  };\n  DecoderBuffer.prototype.raw = function raw(save) {\n    return this.base.slice(save ? save.offset : this.offset, this.length);\n  };\n  function EncoderBuffer(value, reporter) {\n    if (Array.isArray(value)) {\n      this.length = 0;\n      this.value = value.map(function (item) {\n        if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n        this.length += item.length;\n        return item;\n      }, this);\n    } else if (typeof value === 'number') {\n      if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n      this.value = value;\n      this.length = 1;\n    } else if (typeof value === 'string') {\n      this.value = value;\n      this.length = Buffer.byteLength(value);\n    } else if (Buffer.isBuffer(value)) {\n      this.value = value;\n      this.length = value.length;\n    } else {\n      return reporter.error('Unsupported type: ' + typeof value);\n    }\n  }\n  exports.EncoderBuffer = EncoderBuffer;\n  EncoderBuffer.prototype.join = function join(out, offset) {\n    if (!out) out = new Buffer(this.length);\n    if (!offset) offset = 0;\n    if (this.length === 0) return out;\n    if (Array.isArray(this.value)) {\n      this.value.forEach(function (item) {\n        item.join(out, offset);\n        offset += item.length;\n      });\n    } else {\n      if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n      offset += this.length;\n    }\n    return out;\n  };\n});","lineCount":90,"map":[[2,2,1,0],[2,6,1,4,"inherits"],[2,14,1,12],[2,17,1,15,"require"],[2,24,1,22],[2,25,1,22,"_dependencyMap"],[2,39,1,22],[2,54,1,33],[2,55,1,34],[3,2,2,0],[3,6,2,4,"Reporter"],[3,14,2,12],[3,17,2,15,"require"],[3,24,2,22],[3,25,2,22,"_dependencyMap"],[3,39,2,22],[3,53,2,32],[3,54,2,33],[3,55,2,34,"Reporter"],[3,63,2,42],[4,2,3,0],[4,6,3,4,"Buffer"],[4,12,3,10],[4,15,3,13,"require"],[4,22,3,20],[4,23,3,20,"_dependencyMap"],[4,37,3,20],[4,50,3,29],[4,51,3,30],[4,52,3,31,"Buffer"],[4,58,3,37],[5,2,5,0],[5,11,5,9,"DecoderBuffer"],[5,24,5,22,"DecoderBuffer"],[5,25,5,23,"base"],[5,29,5,27],[5,31,5,29,"options"],[5,38,5,36],[5,40,5,38],[6,4,6,2,"Reporter"],[6,12,6,10],[6,13,6,11,"call"],[6,17,6,15],[6,18,6,16],[6,22,6,20],[6,24,6,22,"options"],[6,31,6,29],[6,32,6,30],[7,4,7,2],[7,8,7,6],[7,9,7,7,"Buffer"],[7,15,7,13],[7,16,7,14,"isBuffer"],[7,24,7,22],[7,25,7,23,"base"],[7,29,7,27],[7,30,7,28],[7,32,7,30],[8,6,8,4],[8,10,8,8],[8,11,8,9,"error"],[8,16,8,14],[8,17,8,15],[8,35,8,33],[8,36,8,34],[9,6,9,4],[10,4,10,2],[11,4,12,2],[11,8,12,6],[11,9,12,7,"base"],[11,13,12,11],[11,16,12,14,"base"],[11,20,12,18],[12,4,13,2],[12,8,13,6],[12,9,13,7,"offset"],[12,15,13,13],[12,18,13,16],[12,19,13,17],[13,4,14,2],[13,8,14,6],[13,9,14,7,"length"],[13,15,14,13],[13,18,14,16,"base"],[13,22,14,20],[13,23,14,21,"length"],[13,29,14,27],[14,2,15,0],[15,2,16,0,"inherits"],[15,10,16,8],[15,11,16,9,"DecoderBuffer"],[15,24,16,22],[15,26,16,24,"Reporter"],[15,34,16,32],[15,35,16,33],[16,2,17,0,"exports"],[16,9,17,7],[16,10,17,8,"DecoderBuffer"],[16,23,17,21],[16,26,17,24,"DecoderBuffer"],[16,39,17,37],[17,2,19,0,"DecoderBuffer"],[17,15,19,13],[17,16,19,14,"prototype"],[17,25,19,23],[17,26,19,24,"save"],[17,30,19,28],[17,33,19,31],[17,42,19,40,"save"],[17,46,19,44,"save"],[17,47,19,44],[17,49,19,47],[18,4,20,2],[18,11,20,9],[19,6,20,11,"offset"],[19,12,20,17],[19,14,20,19],[19,18,20,23],[19,19,20,24,"offset"],[19,25,20,30],[20,6,20,32,"reporter"],[20,14,20,40],[20,16,20,42,"Reporter"],[20,24,20,50],[20,25,20,51,"prototype"],[20,34,20,60],[20,35,20,61,"save"],[20,39,20,65],[20,40,20,66,"call"],[20,44,20,70],[20,45,20,71],[20,49,20,75],[21,4,20,77],[21,5,20,78],[22,2,21,0],[22,3,21,1],[23,2,23,0,"DecoderBuffer"],[23,15,23,13],[23,16,23,14,"prototype"],[23,25,23,23],[23,26,23,24,"restore"],[23,33,23,31],[23,36,23,34],[23,45,23,43,"restore"],[23,52,23,50,"restore"],[23,53,23,51,"save"],[23,57,23,55],[23,59,23,57],[24,4,24,2],[25,4,25,2],[25,8,25,6,"res"],[25,11,25,9],[25,14,25,12],[25,18,25,16,"DecoderBuffer"],[25,31,25,29],[25,32,25,30],[25,36,25,34],[25,37,25,35,"base"],[25,41,25,39],[25,42,25,40],[26,4,26,2,"res"],[26,7,26,5],[26,8,26,6,"offset"],[26,14,26,12],[26,17,26,15,"save"],[26,21,26,19],[26,22,26,20,"offset"],[26,28,26,26],[27,4,27,2,"res"],[27,7,27,5],[27,8,27,6,"length"],[27,14,27,12],[27,17,27,15],[27,21,27,19],[27,22,27,20,"offset"],[27,28,27,26],[28,4,29,2],[28,8,29,6],[28,9,29,7,"offset"],[28,15,29,13],[28,18,29,16,"save"],[28,22,29,20],[28,23,29,21,"offset"],[28,29,29,27],[29,4,30,2,"Reporter"],[29,12,30,10],[29,13,30,11,"prototype"],[29,22,30,20],[29,23,30,21,"restore"],[29,30,30,28],[29,31,30,29,"call"],[29,35,30,33],[29,36,30,34],[29,40,30,38],[29,42,30,40,"save"],[29,46,30,44],[29,47,30,45,"reporter"],[29,55,30,53],[29,56,30,54],[30,4,32,2],[30,11,32,9,"res"],[30,14,32,12],[31,2,33,0],[31,3,33,1],[32,2,35,0,"DecoderBuffer"],[32,15,35,13],[32,16,35,14,"prototype"],[32,25,35,23],[32,26,35,24,"isEmpty"],[32,33,35,31],[32,36,35,34],[32,45,35,43,"isEmpty"],[32,52,35,50,"isEmpty"],[32,53,35,50],[32,55,35,53],[33,4,36,2],[33,11,36,9],[33,15,36,13],[33,16,36,14,"offset"],[33,22,36,20],[33,27,36,25],[33,31,36,29],[33,32,36,30,"length"],[33,38,36,36],[34,2,37,0],[34,3,37,1],[35,2,39,0,"DecoderBuffer"],[35,15,39,13],[35,16,39,14,"prototype"],[35,25,39,23],[35,26,39,24,"readUInt8"],[35,35,39,33],[35,38,39,36],[35,47,39,45,"readUInt8"],[35,56,39,54,"readUInt8"],[35,57,39,55,"fail"],[35,61,39,59],[35,63,39,61],[36,4,40,2],[36,8,40,6],[36,12,40,10],[36,13,40,11,"offset"],[36,19,40,17],[36,22,40,20],[36,23,40,21],[36,27,40,25],[36,31,40,29],[36,32,40,30,"length"],[36,38,40,36],[36,40,41,4],[36,47,41,11],[36,51,41,15],[36,52,41,16,"base"],[36,56,41,20],[36,57,41,21,"readUInt8"],[36,66,41,30],[36,67,41,31],[36,71,41,35],[36,72,41,36,"offset"],[36,78,41,42],[36,80,41,44],[36,82,41,46],[36,86,41,50],[36,87,41,51],[36,88,41,52],[36,93,43,4],[36,100,43,11],[36,104,43,15],[36,105,43,16,"error"],[36,110,43,21],[36,111,43,22,"fail"],[36,115,43,26],[36,119,43,30],[36,142,43,53],[36,143,43,54],[37,2,44,0],[37,3,44,1],[38,2,46,0,"DecoderBuffer"],[38,15,46,13],[38,16,46,14,"prototype"],[38,25,46,23],[38,26,46,24,"skip"],[38,30,46,28],[38,33,46,31],[38,42,46,40,"skip"],[38,46,46,44,"skip"],[38,47,46,45,"bytes"],[38,52,46,50],[38,54,46,52,"fail"],[38,58,46,56],[38,60,46,58],[39,4,47,2],[39,8,47,6],[39,10,47,8],[39,14,47,12],[39,15,47,13,"offset"],[39,21,47,19],[39,24,47,22,"bytes"],[39,29,47,27],[39,33,47,31],[39,37,47,35],[39,38,47,36,"length"],[39,44,47,42],[39,45,47,43],[39,47,48,4],[39,54,48,11],[39,58,48,15],[39,59,48,16,"error"],[39,64,48,21],[39,65,48,22,"fail"],[39,69,48,26],[39,73,48,30],[39,96,48,53],[39,97,48,54],[40,4,50,2],[40,8,50,6,"res"],[40,11,50,9],[40,14,50,12],[40,18,50,16,"DecoderBuffer"],[40,31,50,29],[40,32,50,30],[40,36,50,34],[40,37,50,35,"base"],[40,41,50,39],[40,42,50,40],[42,4,52,2],[43,4,53,2,"res"],[43,7,53,5],[43,8,53,6,"_reporterState"],[43,22,53,20],[43,25,53,23],[43,29,53,27],[43,30,53,28,"_reporterState"],[43,44,53,42],[44,4,55,2,"res"],[44,7,55,5],[44,8,55,6,"offset"],[44,14,55,12],[44,17,55,15],[44,21,55,19],[44,22,55,20,"offset"],[44,28,55,26],[45,4,56,2,"res"],[45,7,56,5],[45,8,56,6,"length"],[45,14,56,12],[45,17,56,15],[45,21,56,19],[45,22,56,20,"offset"],[45,28,56,26],[45,31,56,29,"bytes"],[45,36,56,34],[46,4,57,2],[46,8,57,6],[46,9,57,7,"offset"],[46,15,57,13],[46,19,57,17,"bytes"],[46,24,57,22],[47,4,58,2],[47,11,58,9,"res"],[47,14,58,12],[48,2,59,0],[48,3,59,1],[49,2,61,0,"DecoderBuffer"],[49,15,61,13],[49,16,61,14,"prototype"],[49,25,61,23],[49,26,61,24,"raw"],[49,29,61,27],[49,32,61,30],[49,41,61,39,"raw"],[49,44,61,42,"raw"],[49,45,61,43,"save"],[49,49,61,47],[49,51,61,49],[50,4,62,2],[50,11,62,9],[50,15,62,13],[50,16,62,14,"base"],[50,20,62,18],[50,21,62,19,"slice"],[50,26,62,24],[50,27,62,25,"save"],[50,31,62,29],[50,34,62,32,"save"],[50,38,62,36],[50,39,62,37,"offset"],[50,45,62,43],[50,48,62,46],[50,52,62,50],[50,53,62,51,"offset"],[50,59,62,57],[50,61,62,59],[50,65,62,63],[50,66,62,64,"length"],[50,72,62,70],[50,73,62,71],[51,2,63,0],[51,3,63,1],[52,2,65,0],[52,11,65,9,"EncoderBuffer"],[52,24,65,22,"EncoderBuffer"],[52,25,65,23,"value"],[52,30,65,28],[52,32,65,30,"reporter"],[52,40,65,38],[52,42,65,40],[53,4,66,2],[53,8,66,6,"Array"],[53,13,66,11],[53,14,66,12,"isArray"],[53,21,66,19],[53,22,66,20,"value"],[53,27,66,25],[53,28,66,26],[53,30,66,28],[54,6,67,4],[54,10,67,8],[54,11,67,9,"length"],[54,17,67,15],[54,20,67,18],[54,21,67,19],[55,6,68,4],[55,10,68,8],[55,11,68,9,"value"],[55,16,68,14],[55,19,68,17,"value"],[55,24,68,22],[55,25,68,23,"map"],[55,28,68,26],[55,29,68,27],[55,39,68,36,"item"],[55,43,68,40],[55,45,68,42],[56,8,69,6],[56,12,69,10],[56,14,69,12,"item"],[56,18,69,16],[56,30,69,28,"EncoderBuffer"],[56,43,69,41],[56,44,69,42],[56,46,70,8,"item"],[56,50,70,12],[56,53,70,15],[56,57,70,19,"EncoderBuffer"],[56,70,70,32],[56,71,70,33,"item"],[56,75,70,37],[56,77,70,39,"reporter"],[56,85,70,47],[56,86,70,48],[57,8,71,6],[57,12,71,10],[57,13,71,11,"length"],[57,19,71,17],[57,23,71,21,"item"],[57,27,71,25],[57,28,71,26,"length"],[57,34,71,32],[58,8,72,6],[58,15,72,13,"item"],[58,19,72,17],[59,6,73,4],[59,7,73,5],[59,9,73,7],[59,13,73,11],[59,14,73,12],[60,4,74,2],[60,5,74,3],[60,11,74,9],[60,15,74,13],[60,22,74,20,"value"],[60,27,74,25],[60,32,74,30],[60,40,74,38],[60,42,74,40],[61,6,75,4],[61,10,75,8],[61,12,75,10],[61,13,75,11],[61,17,75,15,"value"],[61,22,75,20],[61,26,75,24,"value"],[61,31,75,29],[61,35,75,33],[61,39,75,37],[61,40,75,38],[61,42,76,6],[61,49,76,13,"reporter"],[61,57,76,21],[61,58,76,22,"error"],[61,63,76,27],[61,64,76,28],[61,94,76,58],[61,95,76,59],[62,6,77,4],[62,10,77,8],[62,11,77,9,"value"],[62,16,77,14],[62,19,77,17,"value"],[62,24,77,22],[63,6,78,4],[63,10,78,8],[63,11,78,9,"length"],[63,17,78,15],[63,20,78,18],[63,21,78,19],[64,4,79,2],[64,5,79,3],[64,11,79,9],[64,15,79,13],[64,22,79,20,"value"],[64,27,79,25],[64,32,79,30],[64,40,79,38],[64,42,79,40],[65,6,80,4],[65,10,80,8],[65,11,80,9,"value"],[65,16,80,14],[65,19,80,17,"value"],[65,24,80,22],[66,6,81,4],[66,10,81,8],[66,11,81,9,"length"],[66,17,81,15],[66,20,81,18,"Buffer"],[66,26,81,24],[66,27,81,25,"byteLength"],[66,37,81,35],[66,38,81,36,"value"],[66,43,81,41],[66,44,81,42],[67,4,82,2],[67,5,82,3],[67,11,82,9],[67,15,82,13,"Buffer"],[67,21,82,19],[67,22,82,20,"isBuffer"],[67,30,82,28],[67,31,82,29,"value"],[67,36,82,34],[67,37,82,35],[67,39,82,37],[68,6,83,4],[68,10,83,8],[68,11,83,9,"value"],[68,16,83,14],[68,19,83,17,"value"],[68,24,83,22],[69,6,84,4],[69,10,84,8],[69,11,84,9,"length"],[69,17,84,15],[69,20,84,18,"value"],[69,25,84,23],[69,26,84,24,"length"],[69,32,84,30],[70,4,85,2],[70,5,85,3],[70,11,85,9],[71,6,86,4],[71,13,86,11,"reporter"],[71,21,86,19],[71,22,86,20,"error"],[71,27,86,25],[71,28,86,26],[71,48,86,46],[71,51,86,49],[71,58,86,56,"value"],[71,63,86,61],[71,64,86,62],[72,4,87,2],[73,2,88,0],[74,2,89,0,"exports"],[74,9,89,7],[74,10,89,8,"EncoderBuffer"],[74,23,89,21],[74,26,89,24,"EncoderBuffer"],[74,39,89,37],[75,2,91,0,"EncoderBuffer"],[75,15,91,13],[75,16,91,14,"prototype"],[75,25,91,23],[75,26,91,24,"join"],[75,30,91,28],[75,33,91,31],[75,42,91,40,"join"],[75,46,91,44,"join"],[75,47,91,45,"out"],[75,50,91,48],[75,52,91,50,"offset"],[75,58,91,56],[75,60,91,58],[76,4,92,2],[76,8,92,6],[76,9,92,7,"out"],[76,12,92,10],[76,14,93,4,"out"],[76,17,93,7],[76,20,93,10],[76,24,93,14,"Buffer"],[76,30,93,20],[76,31,93,21],[76,35,93,25],[76,36,93,26,"length"],[76,42,93,32],[76,43,93,33],[77,4,94,2],[77,8,94,6],[77,9,94,7,"offset"],[77,15,94,13],[77,17,95,4,"offset"],[77,23,95,10],[77,26,95,13],[77,27,95,14],[78,4,97,2],[78,8,97,6],[78,12,97,10],[78,13,97,11,"length"],[78,19,97,17],[78,24,97,22],[78,25,97,23],[78,27,98,4],[78,34,98,11,"out"],[78,37,98,14],[79,4,100,2],[79,8,100,6,"Array"],[79,13,100,11],[79,14,100,12,"isArray"],[79,21,100,19],[79,22,100,20],[79,26,100,24],[79,27,100,25,"value"],[79,32,100,30],[79,33,100,31],[79,35,100,33],[80,6,101,4],[80,10,101,8],[80,11,101,9,"value"],[80,16,101,14],[80,17,101,15,"forEach"],[80,24,101,22],[80,25,101,23],[80,35,101,32,"item"],[80,39,101,36],[80,41,101,38],[81,8,102,6,"item"],[81,12,102,10],[81,13,102,11,"join"],[81,17,102,15],[81,18,102,16,"out"],[81,21,102,19],[81,23,102,21,"offset"],[81,29,102,27],[81,30,102,28],[82,8,103,6,"offset"],[82,14,103,12],[82,18,103,16,"item"],[82,22,103,20],[82,23,103,21,"length"],[82,29,103,27],[83,6,104,4],[83,7,104,5],[83,8,104,6],[84,4,105,2],[84,5,105,3],[84,11,105,9],[85,6,106,4],[85,10,106,8],[85,17,106,15],[85,21,106,19],[85,22,106,20,"value"],[85,27,106,25],[85,32,106,30],[85,40,106,38],[85,42,107,6,"out"],[85,45,107,9],[85,46,107,10,"offset"],[85,52,107,16],[85,53,107,17],[85,56,107,20],[85,60,107,24],[85,61,107,25,"value"],[85,66,107,30],[85,67,107,31],[85,72,108,9],[85,76,108,13],[85,83,108,20],[85,87,108,24],[85,88,108,25,"value"],[85,93,108,30],[85,98,108,35],[85,106,108,43],[85,108,109,6,"out"],[85,111,109,9],[85,112,109,10,"write"],[85,117,109,15],[85,118,109,16],[85,122,109,20],[85,123,109,21,"value"],[85,128,109,26],[85,130,109,28,"offset"],[85,136,109,34],[85,137,109,35],[85,138,109,36],[85,143,110,9],[85,147,110,13,"Buffer"],[85,153,110,19],[85,154,110,20,"isBuffer"],[85,162,110,28],[85,163,110,29],[85,167,110,33],[85,168,110,34,"value"],[85,173,110,39],[85,174,110,40],[85,176,111,6],[85,180,111,10],[85,181,111,11,"value"],[85,186,111,16],[85,187,111,17,"copy"],[85,191,111,21],[85,192,111,22,"out"],[85,195,111,25],[85,197,111,27,"offset"],[85,203,111,33],[85,204,111,34],[86,6,112,4,"offset"],[86,12,112,10],[86,16,112,14],[86,20,112,18],[86,21,112,19,"length"],[86,27,112,25],[87,4,113,2],[88,4,115,2],[88,11,115,9,"out"],[88,14,115,12],[89,2,116,0],[89,3,116,1],[90,0,116,2],[90,3]],"functionMap":{"names":["<global>","DecoderBuffer","save","restore","isEmpty","readUInt8","skip","raw","EncoderBuffer","value.map$argument_0","join","value.forEach$argument_0"],"mappings":"AAA;ACI;CDU;+BEI;CFE;kCGE;CHU;kCIE;CJE;oCKE;CLK;+BME;CNa;8BOE;CPE;AQE;2BCG;KDK;CRe;+BUG;uBCU;KDG;CVY"}},"type":"js/module"}]}