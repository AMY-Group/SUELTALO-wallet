{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":77,"index":129}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":51,"index":181}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":182},"end":{"line":4,"column":170,"index":352}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":353},"end":{"line":5,"column":46,"index":399}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createInitializeAccountInstruction = createInitializeAccountInstruction;\n  exports.decodeInitializeAccountInstruction = decodeInitializeAccountInstruction;\n  exports.decodeInitializeAccountInstructionUnchecked = decodeInitializeAccountInstructionUnchecked;\n  exports.initializeAccountInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _types = require(_dependencyMap[4], \"./types.js\");\n  /** TODO: docs */\n  const initializeAccountInstructionData = exports.initializeAccountInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction')]);\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param account   New token account\n   * @param mint      Mint account\n   * @param owner     Owner of the new account\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeAccountInstruction(account, mint, owner, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: _web.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const data = Buffer.alloc(initializeAccountInstructionData.span);\n    initializeAccountInstructionData.encode({\n      instruction: _types.TokenInstruction.InitializeAccount\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an InitializeAccount instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeInitializeAccountInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccountInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        mint,\n        owner,\n        rent\n      },\n      data\n    } = decodeInitializeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.InitializeAccount) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner || !rent) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        owner,\n        rent\n      },\n      data\n    };\n  }\n  /**\n   * Decode an InitializeAccount instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeInitializeAccountInstructionUnchecked({\n    programId,\n    keys: [account, mint, owner, rent],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        owner,\n        rent\n      },\n      data: initializeAccountInstructionData.decode(data)\n    };\n  }\n});","lineCount":111,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_types"],[13,12,5,0],[13,15,5,0,"require"],[13,22,5,0],[13,23,5,0,"_dependencyMap"],[13,37,5,0],[14,2,6,0],[15,2,7,7],[15,8,7,13,"initializeAccountInstructionData"],[15,40,7,45],[15,43,7,45,"exports"],[15,50,7,45],[15,51,7,45,"initializeAccountInstructionData"],[15,83,7,45],[15,86,7,48],[15,90,7,48,"struct"],[15,110,7,54],[15,112,7,55],[15,113,7,56],[15,117,7,56,"u8"],[15,133,7,58],[15,135,7,59],[15,148,7,72],[15,149,7,73],[15,150,7,74],[15,151,7,75],[16,2,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,2,18,7],[26,11,18,16,"createInitializeAccountInstruction"],[26,45,18,50,"createInitializeAccountInstruction"],[26,46,18,51,"account"],[26,53,18,58],[26,55,18,60,"mint"],[26,59,18,64],[26,61,18,66,"owner"],[26,66,18,71],[26,68,18,73,"programId"],[26,77,18,82],[26,80,18,85,"TOKEN_PROGRAM_ID"],[26,107,18,101],[26,109,18,103],[27,4,19,4],[27,10,19,10,"keys"],[27,14,19,14],[27,17,19,17],[27,18,20,8],[28,6,20,10,"pubkey"],[28,12,20,16],[28,14,20,18,"account"],[28,21,20,25],[29,6,20,27,"isSigner"],[29,14,20,35],[29,16,20,37],[29,21,20,42],[30,6,20,44,"isWritable"],[30,16,20,54],[30,18,20,56],[31,4,20,61],[31,5,20,62],[31,7,21,8],[32,6,21,10,"pubkey"],[32,12,21,16],[32,14,21,18,"mint"],[32,18,21,22],[33,6,21,24,"isSigner"],[33,14,21,32],[33,16,21,34],[33,21,21,39],[34,6,21,41,"isWritable"],[34,16,21,51],[34,18,21,53],[35,4,21,59],[35,5,21,60],[35,7,22,8],[36,6,22,10,"pubkey"],[36,12,22,16],[36,14,22,18,"owner"],[36,19,22,23],[37,6,22,25,"isSigner"],[37,14,22,33],[37,16,22,35],[37,21,22,40],[38,6,22,42,"isWritable"],[38,16,22,52],[38,18,22,54],[39,4,22,60],[39,5,22,61],[39,7,23,8],[40,6,23,10,"pubkey"],[40,12,23,16],[40,14,23,18,"SYSVAR_RENT_PUBKEY"],[40,37,23,36],[41,6,23,38,"isSigner"],[41,14,23,46],[41,16,23,48],[41,21,23,53],[42,6,23,55,"isWritable"],[42,16,23,65],[42,18,23,67],[43,4,23,73],[43,5,23,74],[43,6,24,5],[44,4,25,4],[44,10,25,10,"data"],[44,14,25,14],[44,17,25,17,"Buffer"],[44,23,25,23],[44,24,25,24,"alloc"],[44,29,25,29],[44,30,25,30,"initializeAccountInstructionData"],[44,62,25,62],[44,63,25,63,"span"],[44,67,25,67],[44,68,25,68],[45,4,26,4,"initializeAccountInstructionData"],[45,36,26,36],[45,37,26,37,"encode"],[45,43,26,43],[45,44,26,44],[46,6,26,46,"instruction"],[46,17,26,57],[46,19,26,59,"TokenInstruction"],[46,42,26,75],[46,43,26,76,"InitializeAccount"],[47,4,26,94],[47,5,26,95],[47,7,26,97,"data"],[47,11,26,101],[47,12,26,102],[48,4,27,4],[48,11,27,11],[48,15,27,15,"TransactionInstruction"],[48,42,27,37],[48,43,27,38],[49,6,27,40,"keys"],[49,10,27,44],[50,6,27,46,"programId"],[50,15,27,55],[51,6,27,57,"data"],[52,4,27,62],[52,5,27,63],[52,6,27,64],[53,2,28,0],[54,2,29,0],[55,0,30,0],[56,0,31,0],[57,0,32,0],[58,0,33,0],[59,0,34,0],[60,0,35,0],[61,0,36,0],[62,2,37,7],[62,11,37,16,"decodeInitializeAccountInstruction"],[62,45,37,50,"decodeInitializeAccountInstruction"],[62,46,37,51,"instruction"],[62,57,37,62],[62,59,37,64,"programId"],[62,68,37,73],[62,71,37,76,"TOKEN_PROGRAM_ID"],[62,98,37,92],[62,100,37,94],[63,4,38,4],[63,8,38,8],[63,9,38,9,"instruction"],[63,20,38,20],[63,21,38,21,"programId"],[63,30,38,30],[63,31,38,31,"equals"],[63,37,38,37],[63,38,38,38,"programId"],[63,47,38,47],[63,48,38,48],[63,50,39,8],[63,56,39,14],[63,60,39,18,"TokenInvalidInstructionProgramError"],[63,103,39,53],[63,104,39,54],[63,105,39,55],[64,4,40,4],[64,8,40,8,"instruction"],[64,19,40,19],[64,20,40,20,"data"],[64,24,40,24],[64,25,40,25,"length"],[64,31,40,31],[64,36,40,36,"initializeAccountInstructionData"],[64,68,40,68],[64,69,40,69,"span"],[64,73,40,73],[64,75,41,8],[64,81,41,14],[64,85,41,18,"TokenInvalidInstructionDataError"],[64,125,41,50],[64,126,41,51],[64,127,41,52],[65,4,42,4],[65,10,42,10],[66,6,42,12,"keys"],[66,10,42,16],[66,12,42,18],[67,8,42,20,"account"],[67,15,42,27],[68,8,42,29,"mint"],[68,12,42,33],[69,8,42,35,"owner"],[69,13,42,40],[70,8,42,42,"rent"],[71,6,42,47],[71,7,42,48],[72,6,42,50,"data"],[73,4,42,56],[73,5,42,57],[73,8,42,60,"decodeInitializeAccountInstructionUnchecked"],[73,51,42,103],[73,52,42,104,"instruction"],[73,63,42,115],[73,64,42,116],[74,4,43,4],[74,8,43,8,"data"],[74,12,43,12],[74,13,43,13,"instruction"],[74,24,43,24],[74,29,43,29,"TokenInstruction"],[74,52,43,45],[74,53,43,46,"InitializeAccount"],[74,70,43,63],[74,72,44,8],[74,78,44,14],[74,82,44,18,"TokenInvalidInstructionTypeError"],[74,122,44,50],[74,123,44,51],[74,124,44,52],[75,4,45,4],[75,8,45,8],[75,9,45,9,"account"],[75,16,45,16],[75,20,45,20],[75,21,45,21,"mint"],[75,25,45,25],[75,29,45,29],[75,30,45,30,"owner"],[75,35,45,35],[75,39,45,39],[75,40,45,40,"rent"],[75,44,45,44],[75,46,46,8],[75,52,46,14],[75,56,46,18,"TokenInvalidInstructionKeysError"],[75,96,46,50],[75,97,46,51],[75,98,46,52],[76,4,47,4],[77,4,48,4],[77,11,48,11],[78,6,49,8,"programId"],[78,15,49,17],[79,6,50,8,"keys"],[79,10,50,12],[79,12,50,14],[80,8,51,12,"account"],[80,15,51,19],[81,8,52,12,"mint"],[81,12,52,16],[82,8,53,12,"owner"],[82,13,53,17],[83,8,54,12,"rent"],[84,6,55,8],[84,7,55,9],[85,6,56,8,"data"],[86,4,57,4],[86,5,57,5],[87,2,58,0],[88,2,59,0],[89,0,60,0],[90,0,61,0],[91,0,62,0],[92,0,63,0],[93,0,64,0],[94,0,65,0],[95,2,66,7],[95,11,66,16,"decodeInitializeAccountInstructionUnchecked"],[95,54,66,59,"decodeInitializeAccountInstructionUnchecked"],[95,55,66,60],[96,4,66,62,"programId"],[96,13,66,71],[97,4,66,73,"keys"],[97,8,66,77],[97,10,66,79],[97,11,66,80,"account"],[97,18,66,87],[97,20,66,89,"mint"],[97,24,66,93],[97,26,66,95,"owner"],[97,31,66,100],[97,33,66,102,"rent"],[97,37,66,106],[97,38,66,107],[98,4,66,109,"data"],[99,2,66,115],[99,3,66,116],[99,5,66,118],[100,4,67,4],[100,11,67,11],[101,6,68,8,"programId"],[101,15,68,17],[102,6,69,8,"keys"],[102,10,69,12],[102,12,69,14],[103,8,70,12,"account"],[103,15,70,19],[104,8,71,12,"mint"],[104,12,71,16],[105,8,72,12,"owner"],[105,13,72,17],[106,8,73,12,"rent"],[107,6,74,8],[107,7,74,9],[108,6,75,8,"data"],[108,10,75,12],[108,12,75,14,"initializeAccountInstructionData"],[108,44,75,46],[108,45,75,47,"decode"],[108,51,75,53],[108,52,75,54,"data"],[108,56,75,58],[109,4,76,4],[109,5,76,5],[110,2,77,0],[111,0,77,1],[111,3]],"functionMap":{"names":["<global>","createInitializeAccountInstruction","decodeInitializeAccountInstruction","decodeInitializeAccountInstructionUnchecked"],"mappings":"AAA;OCiB;CDU;OES;CFqB;OGQ;CHW"}},"type":"js/module"}]}