{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":54},"end":{"line":4,"column":31,"index":73}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var utils = require(_dependencyMap[1], \"../utils\");\n  var assert = utils.assert;\n  function KeyPair(ec, options) {\n    this.ec = ec;\n    this.priv = null;\n    this.pub = null;\n\n    // KeyPair(ec, { priv: ..., pub: ... })\n    if (options.priv) this._importPrivate(options.priv, options.privEnc);\n    if (options.pub) this._importPublic(options.pub, options.pubEnc);\n  }\n  module.exports = KeyPair;\n  KeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n    if (pub instanceof KeyPair) return pub;\n    return new KeyPair(ec, {\n      pub: pub,\n      pubEnc: enc\n    });\n  };\n  KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n    if (priv instanceof KeyPair) return priv;\n    return new KeyPair(ec, {\n      priv: priv,\n      privEnc: enc\n    });\n  };\n  KeyPair.prototype.validate = function validate() {\n    var pub = this.getPublic();\n    if (pub.isInfinity()) return {\n      result: false,\n      reason: 'Invalid public key'\n    };\n    if (!pub.validate()) return {\n      result: false,\n      reason: 'Public key is not a point'\n    };\n    if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n      result: false,\n      reason: 'Public key * N != O'\n    };\n    return {\n      result: true,\n      reason: null\n    };\n  };\n  KeyPair.prototype.getPublic = function getPublic(compact, enc) {\n    // compact is optional argument\n    if (typeof compact === 'string') {\n      enc = compact;\n      compact = null;\n    }\n    if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n    if (!enc) return this.pub;\n    return this.pub.encode(enc, compact);\n  };\n  KeyPair.prototype.getPrivate = function getPrivate(enc) {\n    if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n  };\n  KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n    this.priv = new BN(key, enc || 16);\n\n    // Ensure that the priv won't be bigger than n, otherwise we may fail\n    // in fixed multiplication method\n    this.priv = this.priv.umod(this.ec.curve.n);\n  };\n  KeyPair.prototype._importPublic = function _importPublic(key, enc) {\n    if (key.x || key.y) {\n      // Montgomery points only have an `x` coordinate.\n      // Weierstrass/Edwards points on the other hand have both `x` and\n      // `y` coordinates.\n      if (this.ec.curve.type === 'mont') {\n        assert(key.x, 'Need x coordinate');\n      } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n        assert(key.x && key.y, 'Need both x and y coordinate');\n      }\n      this.pub = this.ec.curve.point(key.x, key.y);\n      return;\n    }\n    this.pub = this.ec.curve.decodePoint(key, enc);\n  };\n\n  // ECDH\n  KeyPair.prototype.derive = function derive(pub) {\n    if (!pub.validate()) {\n      assert(pub.validate(), 'public point not validated');\n    }\n    return pub.mul(this.priv).getX();\n  };\n\n  // ECDSA\n  KeyPair.prototype.sign = function sign(msg, enc, options) {\n    return this.ec.sign(msg, this, enc, options);\n  };\n  KeyPair.prototype.verify = function verify(msg, signature, options) {\n    return this.ec.verify(msg, signature, this, undefined, options);\n  };\n  KeyPair.prototype.inspect = function inspect() {\n    return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n  };\n});","lineCount":104,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"BN"],[4,8,3,6],[4,11,3,9,"require"],[4,18,3,16],[4,19,3,16,"_dependencyMap"],[4,33,3,16],[4,45,3,24],[4,46,3,25],[5,2,4,0],[5,6,4,4,"utils"],[5,11,4,9],[5,14,4,12,"require"],[5,21,4,19],[5,22,4,19,"_dependencyMap"],[5,36,4,19],[5,51,4,30],[5,52,4,31],[6,2,5,0],[6,6,5,4,"assert"],[6,12,5,10],[6,15,5,13,"utils"],[6,20,5,18],[6,21,5,19,"assert"],[6,27,5,25],[7,2,7,0],[7,11,7,9,"KeyPair"],[7,18,7,16,"KeyPair"],[7,19,7,17,"ec"],[7,21,7,19],[7,23,7,21,"options"],[7,30,7,28],[7,32,7,30],[8,4,8,2],[8,8,8,6],[8,9,8,7,"ec"],[8,11,8,9],[8,14,8,12,"ec"],[8,16,8,14],[9,4,9,2],[9,8,9,6],[9,9,9,7,"priv"],[9,13,9,11],[9,16,9,14],[9,20,9,18],[10,4,10,2],[10,8,10,6],[10,9,10,7,"pub"],[10,12,10,10],[10,15,10,13],[10,19,10,17],[12,4,12,2],[13,4,13,2],[13,8,13,6,"options"],[13,15,13,13],[13,16,13,14,"priv"],[13,20,13,18],[13,22,14,4],[13,26,14,8],[13,27,14,9,"_importPrivate"],[13,41,14,23],[13,42,14,24,"options"],[13,49,14,31],[13,50,14,32,"priv"],[13,54,14,36],[13,56,14,38,"options"],[13,63,14,45],[13,64,14,46,"privEnc"],[13,71,14,53],[13,72,14,54],[14,4,15,2],[14,8,15,6,"options"],[14,15,15,13],[14,16,15,14,"pub"],[14,19,15,17],[14,21,16,4],[14,25,16,8],[14,26,16,9,"_importPublic"],[14,39,16,22],[14,40,16,23,"options"],[14,47,16,30],[14,48,16,31,"pub"],[14,51,16,34],[14,53,16,36,"options"],[14,60,16,43],[14,61,16,44,"pubEnc"],[14,67,16,50],[14,68,16,51],[15,2,17,0],[16,2,18,0,"module"],[16,8,18,6],[16,9,18,7,"exports"],[16,16,18,14],[16,19,18,17,"KeyPair"],[16,26,18,24],[17,2,20,0,"KeyPair"],[17,9,20,7],[17,10,20,8,"fromPublic"],[17,20,20,18],[17,23,20,21],[17,32,20,30,"fromPublic"],[17,42,20,40,"fromPublic"],[17,43,20,41,"ec"],[17,45,20,43],[17,47,20,45,"pub"],[17,50,20,48],[17,52,20,50,"enc"],[17,55,20,53],[17,57,20,55],[18,4,21,2],[18,8,21,6,"pub"],[18,11,21,9],[18,23,21,21,"KeyPair"],[18,30,21,28],[18,32,22,4],[18,39,22,11,"pub"],[18,42,22,14],[19,4,24,2],[19,11,24,9],[19,15,24,13,"KeyPair"],[19,22,24,20],[19,23,24,21,"ec"],[19,25,24,23],[19,27,24,25],[20,6,25,4,"pub"],[20,9,25,7],[20,11,25,9,"pub"],[20,14,25,12],[21,6,26,4,"pubEnc"],[21,12,26,10],[21,14,26,12,"enc"],[22,4,27,2],[22,5,27,3],[22,6,27,4],[23,2,28,0],[23,3,28,1],[24,2,30,0,"KeyPair"],[24,9,30,7],[24,10,30,8,"fromPrivate"],[24,21,30,19],[24,24,30,22],[24,33,30,31,"fromPrivate"],[24,44,30,42,"fromPrivate"],[24,45,30,43,"ec"],[24,47,30,45],[24,49,30,47,"priv"],[24,53,30,51],[24,55,30,53,"enc"],[24,58,30,56],[24,60,30,58],[25,4,31,2],[25,8,31,6,"priv"],[25,12,31,10],[25,24,31,22,"KeyPair"],[25,31,31,29],[25,33,32,4],[25,40,32,11,"priv"],[25,44,32,15],[26,4,34,2],[26,11,34,9],[26,15,34,13,"KeyPair"],[26,22,34,20],[26,23,34,21,"ec"],[26,25,34,23],[26,27,34,25],[27,6,35,4,"priv"],[27,10,35,8],[27,12,35,10,"priv"],[27,16,35,14],[28,6,36,4,"privEnc"],[28,13,36,11],[28,15,36,13,"enc"],[29,4,37,2],[29,5,37,3],[29,6,37,4],[30,2,38,0],[30,3,38,1],[31,2,40,0,"KeyPair"],[31,9,40,7],[31,10,40,8,"prototype"],[31,19,40,17],[31,20,40,18,"validate"],[31,28,40,26],[31,31,40,29],[31,40,40,38,"validate"],[31,48,40,46,"validate"],[31,49,40,46],[31,51,40,49],[32,4,41,2],[32,8,41,6,"pub"],[32,11,41,9],[32,14,41,12],[32,18,41,16],[32,19,41,17,"getPublic"],[32,28,41,26],[32,29,41,27],[32,30,41,28],[33,4,43,2],[33,8,43,6,"pub"],[33,11,43,9],[33,12,43,10,"isInfinity"],[33,22,43,20],[33,23,43,21],[33,24,43,22],[33,26,44,4],[33,33,44,11],[34,6,44,13,"result"],[34,12,44,19],[34,14,44,21],[34,19,44,26],[35,6,44,28,"reason"],[35,12,44,34],[35,14,44,36],[36,4,44,57],[36,5,44,58],[37,4,45,2],[37,8,45,6],[37,9,45,7,"pub"],[37,12,45,10],[37,13,45,11,"validate"],[37,21,45,19],[37,22,45,20],[37,23,45,21],[37,25,46,4],[37,32,46,11],[38,6,46,13,"result"],[38,12,46,19],[38,14,46,21],[38,19,46,26],[39,6,46,28,"reason"],[39,12,46,34],[39,14,46,36],[40,4,46,64],[40,5,46,65],[41,4,47,2],[41,8,47,6],[41,9,47,7,"pub"],[41,12,47,10],[41,13,47,11,"mul"],[41,16,47,14],[41,17,47,15],[41,21,47,19],[41,22,47,20,"ec"],[41,24,47,22],[41,25,47,23,"curve"],[41,30,47,28],[41,31,47,29,"n"],[41,32,47,30],[41,33,47,31],[41,34,47,32,"isInfinity"],[41,44,47,42],[41,45,47,43],[41,46,47,44],[41,48,48,4],[41,55,48,11],[42,6,48,13,"result"],[42,12,48,19],[42,14,48,21],[42,19,48,26],[43,6,48,28,"reason"],[43,12,48,34],[43,14,48,36],[44,4,48,58],[44,5,48,59],[45,4,50,2],[45,11,50,9],[46,6,50,11,"result"],[46,12,50,17],[46,14,50,19],[46,18,50,23],[47,6,50,25,"reason"],[47,12,50,31],[47,14,50,33],[48,4,50,38],[48,5,50,39],[49,2,51,0],[49,3,51,1],[50,2,53,0,"KeyPair"],[50,9,53,7],[50,10,53,8,"prototype"],[50,19,53,17],[50,20,53,18,"getPublic"],[50,29,53,27],[50,32,53,30],[50,41,53,39,"getPublic"],[50,50,53,48,"getPublic"],[50,51,53,49,"compact"],[50,58,53,56],[50,60,53,58,"enc"],[50,63,53,61],[50,65,53,63],[51,4,54,2],[52,4,55,2],[52,8,55,6],[52,15,55,13,"compact"],[52,22,55,20],[52,27,55,25],[52,35,55,33],[52,37,55,35],[53,6,56,4,"enc"],[53,9,56,7],[53,12,56,10,"compact"],[53,19,56,17],[54,6,57,4,"compact"],[54,13,57,11],[54,16,57,14],[54,20,57,18],[55,4,58,2],[56,4,60,2],[56,8,60,6],[56,9,60,7],[56,13,60,11],[56,14,60,12,"pub"],[56,17,60,15],[56,19,61,4],[56,23,61,8],[56,24,61,9,"pub"],[56,27,61,12],[56,30,61,15],[56,34,61,19],[56,35,61,20,"ec"],[56,37,61,22],[56,38,61,23,"g"],[56,39,61,24],[56,40,61,25,"mul"],[56,43,61,28],[56,44,61,29],[56,48,61,33],[56,49,61,34,"priv"],[56,53,61,38],[56,54,61,39],[57,4,63,2],[57,8,63,6],[57,9,63,7,"enc"],[57,12,63,10],[57,14,64,4],[57,21,64,11],[57,25,64,15],[57,26,64,16,"pub"],[57,29,64,19],[58,4,66,2],[58,11,66,9],[58,15,66,13],[58,16,66,14,"pub"],[58,19,66,17],[58,20,66,18,"encode"],[58,26,66,24],[58,27,66,25,"enc"],[58,30,66,28],[58,32,66,30,"compact"],[58,39,66,37],[58,40,66,38],[59,2,67,0],[59,3,67,1],[60,2,69,0,"KeyPair"],[60,9,69,7],[60,10,69,8,"prototype"],[60,19,69,17],[60,20,69,18,"getPrivate"],[60,30,69,28],[60,33,69,31],[60,42,69,40,"getPrivate"],[60,52,69,50,"getPrivate"],[60,53,69,51,"enc"],[60,56,69,54],[60,58,69,56],[61,4,70,2],[61,8,70,6,"enc"],[61,11,70,9],[61,16,70,14],[61,21,70,19],[61,23,71,4],[61,30,71,11],[61,34,71,15],[61,35,71,16,"priv"],[61,39,71,20],[61,40,71,21,"toString"],[61,48,71,29],[61,49,71,30],[61,51,71,32],[61,53,71,34],[61,54,71,35],[61,55,71,36],[61,56,71,37],[61,61,73,4],[61,68,73,11],[61,72,73,15],[61,73,73,16,"priv"],[61,77,73,20],[62,2,74,0],[62,3,74,1],[63,2,76,0,"KeyPair"],[63,9,76,7],[63,10,76,8,"prototype"],[63,19,76,17],[63,20,76,18,"_importPrivate"],[63,34,76,32],[63,37,76,35],[63,46,76,44,"_importPrivate"],[63,60,76,58,"_importPrivate"],[63,61,76,59,"key"],[63,64,76,62],[63,66,76,64,"enc"],[63,69,76,67],[63,71,76,69],[64,4,77,2],[64,8,77,6],[64,9,77,7,"priv"],[64,13,77,11],[64,16,77,14],[64,20,77,18,"BN"],[64,22,77,20],[64,23,77,21,"key"],[64,26,77,24],[64,28,77,26,"enc"],[64,31,77,29],[64,35,77,33],[64,37,77,35],[64,38,77,36],[66,4,79,2],[67,4,80,2],[68,4,81,2],[68,8,81,6],[68,9,81,7,"priv"],[68,13,81,11],[68,16,81,14],[68,20,81,18],[68,21,81,19,"priv"],[68,25,81,23],[68,26,81,24,"umod"],[68,30,81,28],[68,31,81,29],[68,35,81,33],[68,36,81,34,"ec"],[68,38,81,36],[68,39,81,37,"curve"],[68,44,81,42],[68,45,81,43,"n"],[68,46,81,44],[68,47,81,45],[69,2,82,0],[69,3,82,1],[70,2,84,0,"KeyPair"],[70,9,84,7],[70,10,84,8,"prototype"],[70,19,84,17],[70,20,84,18,"_importPublic"],[70,33,84,31],[70,36,84,34],[70,45,84,43,"_importPublic"],[70,58,84,56,"_importPublic"],[70,59,84,57,"key"],[70,62,84,60],[70,64,84,62,"enc"],[70,67,84,65],[70,69,84,67],[71,4,85,2],[71,8,85,6,"key"],[71,11,85,9],[71,12,85,10,"x"],[71,13,85,11],[71,17,85,15,"key"],[71,20,85,18],[71,21,85,19,"y"],[71,22,85,20],[71,24,85,22],[72,6,86,4],[73,6,87,4],[74,6,88,4],[75,6,89,4],[75,10,89,8],[75,14,89,12],[75,15,89,13,"ec"],[75,17,89,15],[75,18,89,16,"curve"],[75,23,89,21],[75,24,89,22,"type"],[75,28,89,26],[75,33,89,31],[75,39,89,37],[75,41,89,39],[76,8,90,6,"assert"],[76,14,90,12],[76,15,90,13,"key"],[76,18,90,16],[76,19,90,17,"x"],[76,20,90,18],[76,22,90,20],[76,41,90,39],[76,42,90,40],[77,6,91,4],[77,7,91,5],[77,13,91,11],[77,17,91,15],[77,21,91,19],[77,22,91,20,"ec"],[77,24,91,22],[77,25,91,23,"curve"],[77,30,91,28],[77,31,91,29,"type"],[77,35,91,33],[77,40,91,38],[77,47,91,45],[77,51,92,15],[77,55,92,19],[77,56,92,20,"ec"],[77,58,92,22],[77,59,92,23,"curve"],[77,64,92,28],[77,65,92,29,"type"],[77,69,92,33],[77,74,92,38],[77,83,92,47],[77,85,92,49],[78,8,93,6,"assert"],[78,14,93,12],[78,15,93,13,"key"],[78,18,93,16],[78,19,93,17,"x"],[78,20,93,18],[78,24,93,22,"key"],[78,27,93,25],[78,28,93,26,"y"],[78,29,93,27],[78,31,93,29],[78,61,93,59],[78,62,93,60],[79,6,94,4],[80,6,95,4],[80,10,95,8],[80,11,95,9,"pub"],[80,14,95,12],[80,17,95,15],[80,21,95,19],[80,22,95,20,"ec"],[80,24,95,22],[80,25,95,23,"curve"],[80,30,95,28],[80,31,95,29,"point"],[80,36,95,34],[80,37,95,35,"key"],[80,40,95,38],[80,41,95,39,"x"],[80,42,95,40],[80,44,95,42,"key"],[80,47,95,45],[80,48,95,46,"y"],[80,49,95,47],[80,50,95,48],[81,6,96,4],[82,4,97,2],[83,4,98,2],[83,8,98,6],[83,9,98,7,"pub"],[83,12,98,10],[83,15,98,13],[83,19,98,17],[83,20,98,18,"ec"],[83,22,98,20],[83,23,98,21,"curve"],[83,28,98,26],[83,29,98,27,"decodePoint"],[83,40,98,38],[83,41,98,39,"key"],[83,44,98,42],[83,46,98,44,"enc"],[83,49,98,47],[83,50,98,48],[84,2,99,0],[84,3,99,1],[86,2,101,0],[87,2,102,0,"KeyPair"],[87,9,102,7],[87,10,102,8,"prototype"],[87,19,102,17],[87,20,102,18,"derive"],[87,26,102,24],[87,29,102,27],[87,38,102,36,"derive"],[87,44,102,42,"derive"],[87,45,102,43,"pub"],[87,48,102,46],[87,50,102,48],[88,4,103,2],[88,8,103,5],[88,9,103,6,"pub"],[88,12,103,9],[88,13,103,10,"validate"],[88,21,103,18],[88,22,103,19],[88,23,103,20],[88,25,103,22],[89,6,104,4,"assert"],[89,12,104,10],[89,13,104,11,"pub"],[89,16,104,14],[89,17,104,15,"validate"],[89,25,104,23],[89,26,104,24],[89,27,104,25],[89,29,104,27],[89,57,104,55],[89,58,104,56],[90,4,105,2],[91,4,106,2],[91,11,106,9,"pub"],[91,14,106,12],[91,15,106,13,"mul"],[91,18,106,16],[91,19,106,17],[91,23,106,21],[91,24,106,22,"priv"],[91,28,106,26],[91,29,106,27],[91,30,106,28,"getX"],[91,34,106,32],[91,35,106,33],[91,36,106,34],[92,2,107,0],[92,3,107,1],[94,2,109,0],[95,2,110,0,"KeyPair"],[95,9,110,7],[95,10,110,8,"prototype"],[95,19,110,17],[95,20,110,18,"sign"],[95,24,110,22],[95,27,110,25],[95,36,110,34,"sign"],[95,40,110,38,"sign"],[95,41,110,39,"msg"],[95,44,110,42],[95,46,110,44,"enc"],[95,49,110,47],[95,51,110,49,"options"],[95,58,110,56],[95,60,110,58],[96,4,111,2],[96,11,111,9],[96,15,111,13],[96,16,111,14,"ec"],[96,18,111,16],[96,19,111,17,"sign"],[96,23,111,21],[96,24,111,22,"msg"],[96,27,111,25],[96,29,111,27],[96,33,111,31],[96,35,111,33,"enc"],[96,38,111,36],[96,40,111,38,"options"],[96,47,111,45],[96,48,111,46],[97,2,112,0],[97,3,112,1],[98,2,114,0,"KeyPair"],[98,9,114,7],[98,10,114,8,"prototype"],[98,19,114,17],[98,20,114,18,"verify"],[98,26,114,24],[98,29,114,27],[98,38,114,36,"verify"],[98,44,114,42,"verify"],[98,45,114,43,"msg"],[98,48,114,46],[98,50,114,48,"signature"],[98,59,114,57],[98,61,114,59,"options"],[98,68,114,66],[98,70,114,68],[99,4,115,2],[99,11,115,9],[99,15,115,13],[99,16,115,14,"ec"],[99,18,115,16],[99,19,115,17,"verify"],[99,25,115,23],[99,26,115,24,"msg"],[99,29,115,27],[99,31,115,29,"signature"],[99,40,115,38],[99,42,115,40],[99,46,115,44],[99,48,115,46,"undefined"],[99,57,115,55],[99,59,115,57,"options"],[99,66,115,64],[99,67,115,65],[100,2,116,0],[100,3,116,1],[101,2,118,0,"KeyPair"],[101,9,118,7],[101,10,118,8,"prototype"],[101,19,118,17],[101,20,118,18,"inspect"],[101,27,118,25],[101,30,118,28],[101,39,118,37,"inspect"],[101,46,118,44,"inspect"],[101,47,118,44],[101,49,118,47],[102,4,119,2],[102,11,119,9],[102,24,119,22],[102,28,119,26],[102,32,119,30],[102,33,119,31,"priv"],[102,37,119,35],[102,41,119,39],[102,45,119,43],[102,46,119,44,"priv"],[102,50,119,48],[102,51,119,49,"toString"],[102,59,119,57],[102,60,119,58],[102,62,119,60],[102,64,119,62],[102,65,119,63],[102,66,119,64],[102,67,119,65],[102,70,120,9],[102,78,120,17],[102,82,120,21],[102,86,120,25],[102,87,120,26,"pub"],[102,90,120,29],[102,94,120,33],[102,98,120,37],[102,99,120,38,"pub"],[102,102,120,41],[102,103,120,42,"inspect"],[102,110,120,49],[102,111,120,50],[102,112,120,51],[102,113,120,52],[102,116,120,55],[102,120,120,59],[103,2,121,0],[103,3,121,1],[104,0,121,2],[104,3]],"functionMap":{"names":["<global>","KeyPair","fromPublic","fromPrivate","validate","getPublic","getPrivate","_importPrivate","_importPublic","derive","sign","verify","inspect"],"mappings":"AAA;ACM;CDU;qBEG;CFQ;sBGE;CHQ;6BIE;CJW;8BKE;CLc;+BME;CNK;mCOE;CPM;kCQE;CRe;2BSG;CTK;yBUG;CVE;2BWE;CXE;4BYE;CZG"}},"type":"js/module"}]}