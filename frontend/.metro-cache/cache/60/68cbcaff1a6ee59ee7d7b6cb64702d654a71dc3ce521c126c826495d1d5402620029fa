{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":69,"index":123}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":124},"end":{"line":3,"column":49,"index":173}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"]}},{"name":"react-native-bip39","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":174},"end":{"line":4,"column":44,"index":218}}],"key":"H/68wGPOUrFYtu7uAvKtsNlRXv8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WalletService = void 0;\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[2], \"@react-native-async-storage/async-storage\"));\n  var SecureStore = _interopRequireWildcard(require(_dependencyMap[3], \"expo-secure-store\"));\n  var bip39 = _interopRequireWildcard(require(_dependencyMap[4], \"react-native-bip39\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  class WalletService {\n    static WALLET_KEY = '@wallet_data';\n    static SEED_PHRASE_KEY = '@secure_seed_phrase';\n    static async generateNewWallet() {\n      try {\n        // Generate mnemonic phrase\n        const mnemonic = bip39.generateMnemonic();\n\n        // Create seed from mnemonic\n        const seed = await bip39.mnemonicToSeed(mnemonic);\n\n        // Generate keypair from seed (using first 32 bytes)\n        const keypair = _web.Keypair.fromSeed(seed.slice(0, 32));\n        const walletData = {\n          mnemonic,\n          publicKey: keypair.publicKey.toString(),\n          secretKey: Array.from(keypair.secretKey)\n        };\n\n        // Store wallet data\n        await _asyncStorage.default.setItem(this.WALLET_KEY, JSON.stringify(walletData));\n\n        // Store mnemonic securely\n        await SecureStore.setItemAsync(this.SEED_PHRASE_KEY, mnemonic);\n        return {\n          keypair,\n          mnemonic,\n          publicKey: keypair.publicKey.toString()\n        };\n      } catch (error) {\n        console.error('Wallet generation error:', error);\n        throw new Error(`Wallet generation failed: ${error}`);\n      }\n    }\n    static async restoreWalletFromMnemonic(mnemonic) {\n      try {\n        // Validate mnemonic\n        if (!bip39.validateMnemonic(mnemonic)) {\n          throw new Error('Invalid mnemonic phrase');\n        }\n\n        // Create seed from mnemonic\n        const seed = await bip39.mnemonicToSeed(mnemonic);\n\n        // Generate keypair from seed\n        const keypair = _web.Keypair.fromSeed(seed.slice(0, 32));\n        const walletData = {\n          mnemonic,\n          publicKey: keypair.publicKey.toString(),\n          secretKey: Array.from(keypair.secretKey)\n        };\n\n        // Store wallet data\n        await _asyncStorage.default.setItem(this.WALLET_KEY, JSON.stringify(walletData));\n\n        // Store mnemonic securely\n        await SecureStore.setItemAsync(this.SEED_PHRASE_KEY, mnemonic);\n        return {\n          keypair,\n          mnemonic,\n          publicKey: keypair.publicKey.toString()\n        };\n      } catch (error) {\n        console.error('Wallet restoration error:', error);\n        throw new Error(`Wallet restoration failed: ${error}`);\n      }\n    }\n    static async loadStoredWallet() {\n      try {\n        const storedData = await _asyncStorage.default.getItem(this.WALLET_KEY);\n        if (!storedData) return null;\n        const walletData = JSON.parse(storedData);\n        const secretKey = new Uint8Array(walletData.secretKey);\n        return _web.Keypair.fromSecretKey(secretKey);\n      } catch (error) {\n        console.error('Failed to load stored wallet:', error);\n        return null;\n      }\n    }\n    static async getStoredWalletData() {\n      try {\n        const storedData = await _asyncStorage.default.getItem(this.WALLET_KEY);\n        return storedData ? JSON.parse(storedData) : null;\n      } catch (error) {\n        console.error('Failed to get wallet data:', error);\n        return null;\n      }\n    }\n    static async clearWallet() {\n      try {\n        await _asyncStorage.default.removeItem(this.WALLET_KEY);\n        await SecureStore.deleteItemAsync(this.SEED_PHRASE_KEY);\n      } catch (error) {\n        console.error('Failed to clear wallet:', error);\n        throw error;\n      }\n    }\n    static validatePublicKey(publicKey) {\n      try {\n        new _web.PublicKey(publicKey);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n    static async getSeedPhrase() {\n      try {\n        return await SecureStore.getItemAsync(this.SEED_PHRASE_KEY);\n      } catch (error) {\n        console.error('Failed to get seed phrase:', error);\n        return null;\n      }\n    }\n  }\n  exports.WalletService = WalletService;\n});","lineCount":127,"map":[[7,2,1,0],[7,6,1,0,"_web"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_asyncStorage"],[8,19,2,0],[8,22,2,0,"_interopRequireDefault"],[8,44,2,0],[8,45,2,0,"require"],[8,52,2,0],[8,53,2,0,"_dependencyMap"],[8,67,2,0],[9,2,3,0],[9,6,3,0,"SecureStore"],[9,17,3,0],[9,20,3,0,"_interopRequireWildcard"],[9,43,3,0],[9,44,3,0,"require"],[9,51,3,0],[9,52,3,0,"_dependencyMap"],[9,66,3,0],[10,2,4,0],[10,6,4,0,"bip39"],[10,11,4,0],[10,14,4,0,"_interopRequireWildcard"],[10,37,4,0],[10,38,4,0,"require"],[10,45,4,0],[10,46,4,0,"_dependencyMap"],[10,60,4,0],[11,2,4,44],[11,11,4,44,"_interopRequireWildcard"],[11,35,4,44,"e"],[11,36,4,44],[11,38,4,44,"t"],[11,39,4,44],[11,68,4,44,"WeakMap"],[11,75,4,44],[11,81,4,44,"r"],[11,82,4,44],[11,89,4,44,"WeakMap"],[11,96,4,44],[11,100,4,44,"n"],[11,101,4,44],[11,108,4,44,"WeakMap"],[11,115,4,44],[11,127,4,44,"_interopRequireWildcard"],[11,150,4,44],[11,162,4,44,"_interopRequireWildcard"],[11,163,4,44,"e"],[11,164,4,44],[11,166,4,44,"t"],[11,167,4,44],[11,176,4,44,"t"],[11,177,4,44],[11,181,4,44,"e"],[11,182,4,44],[11,186,4,44,"e"],[11,187,4,44],[11,188,4,44,"__esModule"],[11,198,4,44],[11,207,4,44,"e"],[11,208,4,44],[11,214,4,44,"o"],[11,215,4,44],[11,217,4,44,"i"],[11,218,4,44],[11,220,4,44,"f"],[11,221,4,44],[11,226,4,44,"__proto__"],[11,235,4,44],[11,243,4,44,"default"],[11,250,4,44],[11,252,4,44,"e"],[11,253,4,44],[11,270,4,44,"e"],[11,271,4,44],[11,294,4,44,"e"],[11,295,4,44],[11,320,4,44,"e"],[11,321,4,44],[11,330,4,44,"f"],[11,331,4,44],[11,337,4,44,"o"],[11,338,4,44],[11,341,4,44,"t"],[11,342,4,44],[11,345,4,44,"n"],[11,346,4,44],[11,349,4,44,"r"],[11,350,4,44],[11,358,4,44,"o"],[11,359,4,44],[11,360,4,44,"has"],[11,363,4,44],[11,364,4,44,"e"],[11,365,4,44],[11,375,4,44,"o"],[11,376,4,44],[11,377,4,44,"get"],[11,380,4,44],[11,381,4,44,"e"],[11,382,4,44],[11,385,4,44,"o"],[11,386,4,44],[11,387,4,44,"set"],[11,390,4,44],[11,391,4,44,"e"],[11,392,4,44],[11,394,4,44,"f"],[11,395,4,44],[11,411,4,44,"t"],[11,412,4,44],[11,416,4,44,"e"],[11,417,4,44],[11,433,4,44,"t"],[11,434,4,44],[11,441,4,44,"hasOwnProperty"],[11,455,4,44],[11,456,4,44,"call"],[11,460,4,44],[11,461,4,44,"e"],[11,462,4,44],[11,464,4,44,"t"],[11,465,4,44],[11,472,4,44,"i"],[11,473,4,44],[11,477,4,44,"o"],[11,478,4,44],[11,481,4,44,"Object"],[11,487,4,44],[11,488,4,44,"defineProperty"],[11,502,4,44],[11,507,4,44,"Object"],[11,513,4,44],[11,514,4,44,"getOwnPropertyDescriptor"],[11,538,4,44],[11,539,4,44,"e"],[11,540,4,44],[11,542,4,44,"t"],[11,543,4,44],[11,550,4,44,"i"],[11,551,4,44],[11,552,4,44,"get"],[11,555,4,44],[11,559,4,44,"i"],[11,560,4,44],[11,561,4,44,"set"],[11,564,4,44],[11,568,4,44,"o"],[11,569,4,44],[11,570,4,44,"f"],[11,571,4,44],[11,573,4,44,"t"],[11,574,4,44],[11,576,4,44,"i"],[11,577,4,44],[11,581,4,44,"f"],[11,582,4,44],[11,583,4,44,"t"],[11,584,4,44],[11,588,4,44,"e"],[11,589,4,44],[11,590,4,44,"t"],[11,591,4,44],[11,602,4,44,"f"],[11,603,4,44],[11,608,4,44,"e"],[11,609,4,44],[11,611,4,44,"t"],[11,612,4,44],[12,2,12,7],[12,8,12,13,"WalletService"],[12,21,12,26],[12,22,12,27],[13,4,13,2],[13,11,13,26,"WALLET_KEY"],[13,21,13,36],[13,24,13,39],[13,38,13,53],[14,4,14,2],[14,11,14,26,"SEED_PHRASE_KEY"],[14,26,14,41],[14,29,14,44],[14,50,14,65],[15,4,16,2],[15,17,16,15,"generateNewWallet"],[15,34,16,32,"generateNewWallet"],[15,35,16,32],[15,37,16,56],[16,6,17,4],[16,10,17,8],[17,8,18,6],[18,8,19,6],[18,14,19,12,"mnemonic"],[18,22,19,20],[18,25,19,23,"bip39"],[18,30,19,28],[18,31,19,29,"generateMnemonic"],[18,47,19,45],[18,48,19,46],[18,49,19,47],[20,8,21,6],[21,8,22,6],[21,14,22,12,"seed"],[21,18,22,16],[21,21,22,19],[21,27,22,25,"bip39"],[21,32,22,30],[21,33,22,31,"mnemonicToSeed"],[21,47,22,45],[21,48,22,46,"mnemonic"],[21,56,22,54],[21,57,22,55],[23,8,24,6],[24,8,25,6],[24,14,25,12,"keypair"],[24,21,25,19],[24,24,25,22,"Keypair"],[24,36,25,29],[24,37,25,30,"fromSeed"],[24,45,25,38],[24,46,25,39,"seed"],[24,50,25,43],[24,51,25,44,"slice"],[24,56,25,49],[24,57,25,50],[24,58,25,51],[24,60,25,53],[24,62,25,55],[24,63,25,56],[24,64,25,57],[25,8,27,6],[25,14,27,12,"walletData"],[25,24,27,22],[25,27,27,25],[26,10,28,8,"mnemonic"],[26,18,28,16],[27,10,29,8,"publicKey"],[27,19,29,17],[27,21,29,19,"keypair"],[27,28,29,26],[27,29,29,27,"publicKey"],[27,38,29,36],[27,39,29,37,"toString"],[27,47,29,45],[27,48,29,46],[27,49,29,47],[28,10,30,8,"secretKey"],[28,19,30,17],[28,21,30,19,"Array"],[28,26,30,24],[28,27,30,25,"from"],[28,31,30,29],[28,32,30,30,"keypair"],[28,39,30,37],[28,40,30,38,"secretKey"],[28,49,30,47],[29,8,31,6],[29,9,31,7],[31,8,33,6],[32,8,34,6],[32,14,34,12,"AsyncStorage"],[32,35,34,24],[32,36,34,25,"setItem"],[32,43,34,32],[32,44,34,33],[32,48,34,37],[32,49,34,38,"WALLET_KEY"],[32,59,34,48],[32,61,34,50,"JSON"],[32,65,34,54],[32,66,34,55,"stringify"],[32,75,34,64],[32,76,34,65,"walletData"],[32,86,34,75],[32,87,34,76],[32,88,34,77],[34,8,36,6],[35,8,37,6],[35,14,37,12,"SecureStore"],[35,25,37,23],[35,26,37,24,"setItemAsync"],[35,38,37,36],[35,39,37,37],[35,43,37,41],[35,44,37,42,"SEED_PHRASE_KEY"],[35,59,37,57],[35,61,37,59,"mnemonic"],[35,69,37,67],[35,70,37,68],[36,8,39,6],[36,15,39,13],[37,10,40,8,"keypair"],[37,17,40,15],[38,10,41,8,"mnemonic"],[38,18,41,16],[39,10,42,8,"publicKey"],[39,19,42,17],[39,21,42,19,"keypair"],[39,28,42,26],[39,29,42,27,"publicKey"],[39,38,42,36],[39,39,42,37,"toString"],[39,47,42,45],[39,48,42,46],[40,8,43,6],[40,9,43,7],[41,6,44,4],[41,7,44,5],[41,8,44,6],[41,15,44,13,"error"],[41,20,44,18],[41,22,44,20],[42,8,45,6,"console"],[42,15,45,13],[42,16,45,14,"error"],[42,21,45,19],[42,22,45,20],[42,48,45,46],[42,50,45,48,"error"],[42,55,45,53],[42,56,45,54],[43,8,46,6],[43,14,46,12],[43,18,46,16,"Error"],[43,23,46,21],[43,24,46,22],[43,53,46,51,"error"],[43,58,46,56],[43,60,46,58],[43,61,46,59],[44,6,47,4],[45,4,48,2],[46,4,50,2],[46,17,50,15,"restoreWalletFromMnemonic"],[46,42,50,40,"restoreWalletFromMnemonic"],[46,43,50,41,"mnemonic"],[46,51,50,57],[46,53,50,80],[47,6,51,4],[47,10,51,8],[48,8,52,6],[49,8,53,6],[49,12,53,10],[49,13,53,11,"bip39"],[49,18,53,16],[49,19,53,17,"validateMnemonic"],[49,35,53,33],[49,36,53,34,"mnemonic"],[49,44,53,42],[49,45,53,43],[49,47,53,45],[50,10,54,8],[50,16,54,14],[50,20,54,18,"Error"],[50,25,54,23],[50,26,54,24],[50,51,54,49],[50,52,54,50],[51,8,55,6],[53,8,57,6],[54,8,58,6],[54,14,58,12,"seed"],[54,18,58,16],[54,21,58,19],[54,27,58,25,"bip39"],[54,32,58,30],[54,33,58,31,"mnemonicToSeed"],[54,47,58,45],[54,48,58,46,"mnemonic"],[54,56,58,54],[54,57,58,55],[56,8,60,6],[57,8,61,6],[57,14,61,12,"keypair"],[57,21,61,19],[57,24,61,22,"Keypair"],[57,36,61,29],[57,37,61,30,"fromSeed"],[57,45,61,38],[57,46,61,39,"seed"],[57,50,61,43],[57,51,61,44,"slice"],[57,56,61,49],[57,57,61,50],[57,58,61,51],[57,60,61,53],[57,62,61,55],[57,63,61,56],[57,64,61,57],[58,8,63,6],[58,14,63,12,"walletData"],[58,24,63,22],[58,27,63,25],[59,10,64,8,"mnemonic"],[59,18,64,16],[60,10,65,8,"publicKey"],[60,19,65,17],[60,21,65,19,"keypair"],[60,28,65,26],[60,29,65,27,"publicKey"],[60,38,65,36],[60,39,65,37,"toString"],[60,47,65,45],[60,48,65,46],[60,49,65,47],[61,10,66,8,"secretKey"],[61,19,66,17],[61,21,66,19,"Array"],[61,26,66,24],[61,27,66,25,"from"],[61,31,66,29],[61,32,66,30,"keypair"],[61,39,66,37],[61,40,66,38,"secretKey"],[61,49,66,47],[62,8,67,6],[62,9,67,7],[64,8,69,6],[65,8,70,6],[65,14,70,12,"AsyncStorage"],[65,35,70,24],[65,36,70,25,"setItem"],[65,43,70,32],[65,44,70,33],[65,48,70,37],[65,49,70,38,"WALLET_KEY"],[65,59,70,48],[65,61,70,50,"JSON"],[65,65,70,54],[65,66,70,55,"stringify"],[65,75,70,64],[65,76,70,65,"walletData"],[65,86,70,75],[65,87,70,76],[65,88,70,77],[67,8,72,6],[68,8,73,6],[68,14,73,12,"SecureStore"],[68,25,73,23],[68,26,73,24,"setItemAsync"],[68,38,73,36],[68,39,73,37],[68,43,73,41],[68,44,73,42,"SEED_PHRASE_KEY"],[68,59,73,57],[68,61,73,59,"mnemonic"],[68,69,73,67],[68,70,73,68],[69,8,75,6],[69,15,75,13],[70,10,76,8,"keypair"],[70,17,76,15],[71,10,77,8,"mnemonic"],[71,18,77,16],[72,10,78,8,"publicKey"],[72,19,78,17],[72,21,78,19,"keypair"],[72,28,78,26],[72,29,78,27,"publicKey"],[72,38,78,36],[72,39,78,37,"toString"],[72,47,78,45],[72,48,78,46],[73,8,79,6],[73,9,79,7],[74,6,80,4],[74,7,80,5],[74,8,80,6],[74,15,80,13,"error"],[74,20,80,18],[74,22,80,20],[75,8,81,6,"console"],[75,15,81,13],[75,16,81,14,"error"],[75,21,81,19],[75,22,81,20],[75,49,81,47],[75,51,81,49,"error"],[75,56,81,54],[75,57,81,55],[76,8,82,6],[76,14,82,12],[76,18,82,16,"Error"],[76,23,82,21],[76,24,82,22],[76,54,82,52,"error"],[76,59,82,57],[76,61,82,59],[76,62,82,60],[77,6,83,4],[78,4,84,2],[79,4,86,2],[79,17,86,15,"loadStoredWallet"],[79,33,86,31,"loadStoredWallet"],[79,34,86,31],[79,36,86,59],[80,6,87,4],[80,10,87,8],[81,8,88,6],[81,14,88,12,"storedData"],[81,24,88,22],[81,27,88,25],[81,33,88,31,"AsyncStorage"],[81,54,88,43],[81,55,88,44,"getItem"],[81,62,88,51],[81,63,88,52],[81,67,88,56],[81,68,88,57,"WALLET_KEY"],[81,78,88,67],[81,79,88,68],[82,8,89,6],[82,12,89,10],[82,13,89,11,"storedData"],[82,23,89,21],[82,25,89,23],[82,32,89,30],[82,36,89,34],[83,8,91,6],[83,14,91,12,"walletData"],[83,24,91,22],[83,27,91,25,"JSON"],[83,31,91,29],[83,32,91,30,"parse"],[83,37,91,35],[83,38,91,36,"storedData"],[83,48,91,46],[83,49,91,47],[84,8,92,6],[84,14,92,12,"secretKey"],[84,23,92,21],[84,26,92,24],[84,30,92,28,"Uint8Array"],[84,40,92,38],[84,41,92,39,"walletData"],[84,51,92,49],[84,52,92,50,"secretKey"],[84,61,92,59],[84,62,92,60],[85,8,94,6],[85,15,94,13,"Keypair"],[85,27,94,20],[85,28,94,21,"fromSecretKey"],[85,41,94,34],[85,42,94,35,"secretKey"],[85,51,94,44],[85,52,94,45],[86,6,95,4],[86,7,95,5],[86,8,95,6],[86,15,95,13,"error"],[86,20,95,18],[86,22,95,20],[87,8,96,6,"console"],[87,15,96,13],[87,16,96,14,"error"],[87,21,96,19],[87,22,96,20],[87,53,96,51],[87,55,96,53,"error"],[87,60,96,58],[87,61,96,59],[88,8,97,6],[88,15,97,13],[88,19,97,17],[89,6,98,4],[90,4,99,2],[91,4,101,2],[91,17,101,15,"getStoredWalletData"],[91,36,101,34,"getStoredWalletData"],[91,37,101,34],[91,39,101,58],[92,6,102,4],[92,10,102,8],[93,8,103,6],[93,14,103,12,"storedData"],[93,24,103,22],[93,27,103,25],[93,33,103,31,"AsyncStorage"],[93,54,103,43],[93,55,103,44,"getItem"],[93,62,103,51],[93,63,103,52],[93,67,103,56],[93,68,103,57,"WALLET_KEY"],[93,78,103,67],[93,79,103,68],[94,8,104,6],[94,15,104,13,"storedData"],[94,25,104,23],[94,28,104,26,"JSON"],[94,32,104,30],[94,33,104,31,"parse"],[94,38,104,36],[94,39,104,37,"storedData"],[94,49,104,47],[94,50,104,48],[94,53,104,51],[94,57,104,55],[95,6,105,4],[95,7,105,5],[95,8,105,6],[95,15,105,13,"error"],[95,20,105,18],[95,22,105,20],[96,8,106,6,"console"],[96,15,106,13],[96,16,106,14,"error"],[96,21,106,19],[96,22,106,20],[96,50,106,48],[96,52,106,50,"error"],[96,57,106,55],[96,58,106,56],[97,8,107,6],[97,15,107,13],[97,19,107,17],[98,6,108,4],[99,4,109,2],[100,4,111,2],[100,17,111,15,"clearWallet"],[100,28,111,26,"clearWallet"],[100,29,111,26],[100,31,111,44],[101,6,112,4],[101,10,112,8],[102,8,113,6],[102,14,113,12,"AsyncStorage"],[102,35,113,24],[102,36,113,25,"removeItem"],[102,46,113,35],[102,47,113,36],[102,51,113,40],[102,52,113,41,"WALLET_KEY"],[102,62,113,51],[102,63,113,52],[103,8,114,6],[103,14,114,12,"SecureStore"],[103,25,114,23],[103,26,114,24,"deleteItemAsync"],[103,41,114,39],[103,42,114,40],[103,46,114,44],[103,47,114,45,"SEED_PHRASE_KEY"],[103,62,114,60],[103,63,114,61],[104,6,115,4],[104,7,115,5],[104,8,115,6],[104,15,115,13,"error"],[104,20,115,18],[104,22,115,20],[105,8,116,6,"console"],[105,15,116,13],[105,16,116,14,"error"],[105,21,116,19],[105,22,116,20],[105,47,116,45],[105,49,116,47,"error"],[105,54,116,52],[105,55,116,53],[106,8,117,6],[106,14,117,12,"error"],[106,19,117,17],[107,6,118,4],[108,4,119,2],[109,4,121,2],[109,11,121,9,"validatePublicKey"],[109,28,121,26,"validatePublicKey"],[109,29,121,27,"publicKey"],[109,38,121,44],[109,40,121,55],[110,6,122,4],[110,10,122,8],[111,8,123,6],[111,12,123,10,"PublicKey"],[111,26,123,19],[111,27,123,20,"publicKey"],[111,36,123,29],[111,37,123,30],[112,8,124,6],[112,15,124,13],[112,19,124,17],[113,6,125,4],[113,7,125,5],[113,8,125,6],[113,14,125,12],[114,8,126,6],[114,15,126,13],[114,20,126,18],[115,6,127,4],[116,4,128,2],[117,4,130,2],[117,17,130,15,"getSeedPhrase"],[117,30,130,28,"getSeedPhrase"],[117,31,130,28],[117,33,130,55],[118,6,131,4],[118,10,131,8],[119,8,132,6],[119,15,132,13],[119,21,132,19,"SecureStore"],[119,32,132,30],[119,33,132,31,"getItemAsync"],[119,45,132,43],[119,46,132,44],[119,50,132,48],[119,51,132,49,"SEED_PHRASE_KEY"],[119,66,132,64],[119,67,132,65],[120,6,133,4],[120,7,133,5],[120,8,133,6],[120,15,133,13,"error"],[120,20,133,18],[120,22,133,20],[121,8,134,6,"console"],[121,15,134,13],[121,16,134,14,"error"],[121,21,134,19],[121,22,134,20],[121,50,134,48],[121,52,134,50,"error"],[121,57,134,55],[121,58,134,56],[122,8,135,6],[122,15,135,13],[122,19,135,17],[123,6,136,4],[124,4,137,2],[125,2,138,0],[126,2,138,1,"exports"],[126,9,138,1],[126,10,138,1,"WalletService"],[126,23,138,1],[126,26,138,1,"WalletService"],[126,39,138,1],[127,0,138,1],[127,3]],"functionMap":{"names":["<global>","WalletService","generateNewWallet","restoreWalletFromMnemonic","loadStoredWallet","getStoredWalletData","clearWallet","validatePublicKey","getSeedPhrase"],"mappings":"AAA;OCW;ECI;GDgC;EEE;GFkC;EGE;GHa;EIE;GJQ;EKE;GLQ;EME;GNO;EOE;GPO"}},"type":"js/module"}]}