{"dependencies":[{"name":"@solana/spl-token-metadata","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":59,"index":59}}],"key":"+JN1OLxIMBkq72mn/qW7e+o/k4o=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":60},"end":{"line":2,"column":59,"index":119}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"../extensionType.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":120},"end":{"line":3,"column":70,"index":190}}],"key":"9B9SsrL0iX24r6c12s5npw5ZP78=","exportNames":["*"]}},{"name":"../../state/mint.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":191},"end":{"line":4,"column":46,"index":237}}],"key":"+iOqxf1zaiiIvH80FNQCgt5rHS4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTokenMetadata = getTokenMetadata;\n  exports.updateTokenMetadata = updateTokenMetadata;\n  var _splTokenMetadata = require(_dependencyMap[0], \"@solana/spl-token-metadata\");\n  var _constants = require(_dependencyMap[1], \"../../constants.js\");\n  var _extensionType = require(_dependencyMap[2], \"../extensionType.js\");\n  var _mint = require(_dependencyMap[3], \"../../state/mint.js\");\n  const getNormalizedTokenMetadataField = field => {\n    if (field === _splTokenMetadata.Field.Name || field === 'Name' || field === 'name') {\n      return 'name';\n    }\n    if (field === _splTokenMetadata.Field.Symbol || field === 'Symbol' || field === 'symbol') {\n      return 'symbol';\n    }\n    if (field === _splTokenMetadata.Field.Uri || field === 'Uri' || field === 'uri') {\n      return 'uri';\n    }\n    return field;\n  };\n  function updateTokenMetadata(current, key, value) {\n    const field = getNormalizedTokenMetadataField(key);\n    if (field === 'mint' || field === 'updateAuthority') {\n      throw new Error(`Cannot update ${field} via this instruction`);\n    }\n    // Handle updates to default keys\n    if (['name', 'symbol', 'uri'].includes(field)) {\n      return Object.assign({}, current, {\n        [field]: value\n      });\n    }\n    // Avoid mutating input, make a shallow copy\n    const additionalMetadata = [...current.additionalMetadata];\n    const i = current.additionalMetadata.findIndex(x => x[0] === field);\n    if (i === -1) {\n      // Key was not found, add it\n      additionalMetadata.push([field, value]);\n    } else {\n      // Key was found, change value\n      additionalMetadata[i] = [field, value];\n    }\n    return Object.assign({}, current, {\n      additionalMetadata\n    });\n  }\n  /**\n   * Retrieve Token Metadata Information\n   *\n   * @param connection Connection to use\n   * @param address    Mint account\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Token Metadata information\n   */\n  async function getTokenMetadata(connection, address, commitment, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const mintInfo = await (0, _mint.getMint)(connection, address, commitment, programId);\n    const data = (0, _extensionType.getExtensionData)(_extensionType.ExtensionType.TokenMetadata, mintInfo.tlvData);\n    if (data === null) {\n      return null;\n    }\n    return (0, _splTokenMetadata.unpack)(data);\n  }\n});","lineCount":66,"map":[[7,2,1,0],[7,6,1,0,"_splTokenMetadata"],[7,23,1,0],[7,26,1,0,"require"],[7,33,1,0],[7,34,1,0,"_dependencyMap"],[7,48,1,0],[8,2,2,0],[8,6,2,0,"_constants"],[8,16,2,0],[8,19,2,0,"require"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,3,0],[9,6,3,0,"_extensionType"],[9,20,3,0],[9,23,3,0,"require"],[9,30,3,0],[9,31,3,0,"_dependencyMap"],[9,45,3,0],[10,2,4,0],[10,6,4,0,"_mint"],[10,11,4,0],[10,14,4,0,"require"],[10,21,4,0],[10,22,4,0,"_dependencyMap"],[10,36,4,0],[11,2,5,0],[11,8,5,6,"getNormalizedTokenMetadataField"],[11,39,5,37],[11,42,5,41,"field"],[11,47,5,46],[11,51,5,51],[12,4,6,4],[12,8,6,8,"field"],[12,13,6,13],[12,18,6,18,"Field"],[12,41,6,23],[12,42,6,24,"Name"],[12,46,6,28],[12,50,6,32,"field"],[12,55,6,37],[12,60,6,42],[12,66,6,48],[12,70,6,52,"field"],[12,75,6,57],[12,80,6,62],[12,86,6,68],[12,88,6,70],[13,6,7,8],[13,13,7,15],[13,19,7,21],[14,4,8,4],[15,4,9,4],[15,8,9,8,"field"],[15,13,9,13],[15,18,9,18,"Field"],[15,41,9,23],[15,42,9,24,"Symbol"],[15,48,9,30],[15,52,9,34,"field"],[15,57,9,39],[15,62,9,44],[15,70,9,52],[15,74,9,56,"field"],[15,79,9,61],[15,84,9,66],[15,92,9,74],[15,94,9,76],[16,6,10,8],[16,13,10,15],[16,21,10,23],[17,4,11,4],[18,4,12,4],[18,8,12,8,"field"],[18,13,12,13],[18,18,12,18,"Field"],[18,41,12,23],[18,42,12,24,"Uri"],[18,45,12,27],[18,49,12,31,"field"],[18,54,12,36],[18,59,12,41],[18,64,12,46],[18,68,12,50,"field"],[18,73,12,55],[18,78,12,60],[18,83,12,65],[18,85,12,67],[19,6,13,8],[19,13,13,15],[19,18,13,20],[20,4,14,4],[21,4,15,4],[21,11,15,11,"field"],[21,16,15,16],[22,2,16,0],[22,3,16,1],[23,2,17,7],[23,11,17,16,"updateTokenMetadata"],[23,30,17,35,"updateTokenMetadata"],[23,31,17,36,"current"],[23,38,17,43],[23,40,17,45,"key"],[23,43,17,48],[23,45,17,50,"value"],[23,50,17,55],[23,52,17,57],[24,4,18,4],[24,10,18,10,"field"],[24,15,18,15],[24,18,18,18,"getNormalizedTokenMetadataField"],[24,49,18,49],[24,50,18,50,"key"],[24,53,18,53],[24,54,18,54],[25,4,19,4],[25,8,19,8,"field"],[25,13,19,13],[25,18,19,18],[25,24,19,24],[25,28,19,28,"field"],[25,33,19,33],[25,38,19,38],[25,55,19,55],[25,57,19,57],[26,6,20,8],[26,12,20,14],[26,16,20,18,"Error"],[26,21,20,23],[26,22,20,24],[26,39,20,41,"field"],[26,44,20,46],[26,67,20,69],[26,68,20,70],[27,4,21,4],[28,4,22,4],[29,4,23,4],[29,8,23,8],[29,9,23,9],[29,15,23,15],[29,17,23,17],[29,25,23,25],[29,27,23,27],[29,32,23,32],[29,33,23,33],[29,34,23,34,"includes"],[29,42,23,42],[29,43,23,43,"field"],[29,48,23,48],[29,49,23,49],[29,51,23,51],[30,6,24,8],[30,13,24,8,"Object"],[30,19,24,8],[30,20,24,8,"assign"],[30,26,24,8],[30,31,25,15,"current"],[30,38,25,22],[31,8,26,12],[31,9,26,13,"field"],[31,14,26,18],[31,17,26,21,"value"],[32,6,26,26],[33,4,28,4],[34,4,29,4],[35,4,30,4],[35,10,30,10,"additionalMetadata"],[35,28,30,28],[35,31,30,31],[35,32,30,32],[35,35,30,35,"current"],[35,42,30,42],[35,43,30,43,"additionalMetadata"],[35,61,30,61],[35,62,30,62],[36,4,31,4],[36,10,31,10,"i"],[36,11,31,11],[36,14,31,14,"current"],[36,21,31,21],[36,22,31,22,"additionalMetadata"],[36,40,31,40],[36,41,31,41,"findIndex"],[36,50,31,50],[36,51,31,51,"x"],[36,52,31,52],[36,56,31,56,"x"],[36,57,31,57],[36,58,31,58],[36,59,31,59],[36,60,31,60],[36,65,31,65,"field"],[36,70,31,70],[36,71,31,71],[37,4,32,4],[37,8,32,8,"i"],[37,9,32,9],[37,14,32,14],[37,15,32,15],[37,16,32,16],[37,18,32,18],[38,6,33,8],[39,6,34,8,"additionalMetadata"],[39,24,34,26],[39,25,34,27,"push"],[39,29,34,31],[39,30,34,32],[39,31,34,33,"field"],[39,36,34,38],[39,38,34,40,"value"],[39,43,34,45],[39,44,34,46],[39,45,34,47],[40,4,35,4],[40,5,35,5],[40,11,36,9],[41,6,37,8],[42,6,38,8,"additionalMetadata"],[42,24,38,26],[42,25,38,27,"i"],[42,26,38,28],[42,27,38,29],[42,30,38,32],[42,31,38,33,"field"],[42,36,38,38],[42,38,38,40,"value"],[42,43,38,45],[42,44,38,46],[43,4,39,4],[44,4,40,4],[44,11,40,4,"Object"],[44,17,40,4],[44,18,40,4,"assign"],[44,24,40,4],[44,29,41,11,"current"],[44,36,41,18],[45,6,42,8,"additionalMetadata"],[46,4,42,26],[47,2,44,0],[48,2,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,0,49,0],[53,0,50,0],[54,0,51,0],[55,0,52,0],[56,0,53,0],[57,0,54,0],[58,2,55,7],[58,17,55,22,"getTokenMetadata"],[58,33,55,38,"getTokenMetadata"],[58,34,55,39,"connection"],[58,44,55,49],[58,46,55,51,"address"],[58,53,55,58],[58,55,55,60,"commitment"],[58,65,55,70],[58,67,55,72,"programId"],[58,76,55,81],[58,79,55,84,"TOKEN_2022_PROGRAM_ID"],[58,111,55,105],[58,113,55,107],[59,4,56,4],[59,10,56,10,"mintInfo"],[59,18,56,18],[59,21,56,21],[59,27,56,27],[59,31,56,27,"getMint"],[59,44,56,34],[59,46,56,35,"connection"],[59,56,56,45],[59,58,56,47,"address"],[59,65,56,54],[59,67,56,56,"commitment"],[59,77,56,66],[59,79,56,68,"programId"],[59,88,56,77],[59,89,56,78],[60,4,57,4],[60,10,57,10,"data"],[60,14,57,14],[60,17,57,17],[60,21,57,17,"getExtensionData"],[60,52,57,33],[60,54,57,34,"ExtensionType"],[60,82,57,47],[60,83,57,48,"TokenMetadata"],[60,96,57,61],[60,98,57,63,"mintInfo"],[60,106,57,71],[60,107,57,72,"tlvData"],[60,114,57,79],[60,115,57,80],[61,4,58,4],[61,8,58,8,"data"],[61,12,58,12],[61,17,58,17],[61,21,58,21],[61,23,58,23],[62,6,59,8],[62,13,59,15],[62,17,59,19],[63,4,60,4],[64,4,61,4],[64,11,61,11],[64,15,61,11,"unpack"],[64,39,61,17],[64,41,61,18,"data"],[64,45,61,22],[64,46,61,23],[65,2,62,0],[66,0,62,1],[66,3]],"functionMap":{"names":["<global>","getNormalizedTokenMetadataField","updateTokenMetadata","current.additionalMetadata.findIndex$argument_0","getTokenMetadata"],"mappings":"AAA;wCCI;CDW;OEC;mDCc,mBD;CFa;OIW;CJO"}},"type":"js/module"}]}