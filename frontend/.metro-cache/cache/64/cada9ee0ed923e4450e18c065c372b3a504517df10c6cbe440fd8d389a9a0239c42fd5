{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"@solana/spl-token-group","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":230,"index":319}}],"key":"BGqLUBmMUgujD6thECNY9+M5+gU=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":320},"end":{"line":3,"column":59,"index":379}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"../../actions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":380},"end":{"line":4,"column":55,"index":435}}],"key":"NZfIk1TkYePfdrID7eibfh4eb4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.tokenGroupInitializeGroup = tokenGroupInitializeGroup;\n  exports.tokenGroupInitializeGroupWithRentTransfer = tokenGroupInitializeGroupWithRentTransfer;\n  exports.tokenGroupMemberInitialize = tokenGroupMemberInitialize;\n  exports.tokenGroupMemberInitializeWithRentTransfer = tokenGroupMemberInitializeWithRentTransfer;\n  exports.tokenGroupUpdateGroupAuthority = tokenGroupUpdateGroupAuthority;\n  exports.tokenGroupUpdateGroupMaxSize = tokenGroupUpdateGroupMaxSize;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _splTokenGroup = require(_dependencyMap[1], \"@solana/spl-token-group\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _internal = require(_dependencyMap[3], \"../../actions/internal.js\");\n  /**\n   * Initialize a new `Group`\n   *\n   * Assumes one has already initialized a mint for the group.\n   *\n   * @param connection       Connection to use\n   * @param payer            Payer of the transaction fee\n   * @param mint             Group mint\n   * @param mintAuthority    Group mint authority\n   * @param updateAuthority  Group update authority\n   * @param maxSize          Maximum number of members in the group\n   * @param multiSigners     Signing accounts if `authority` is a multisig\n   * @param confirmOptions   Options for confirming the transaction\n   * @param programId        SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupInitializeGroup(connection, payer, mint, mintAuthority, updateAuthority, maxSize, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [mintAuthorityPublicKey, signers] = (0, _internal.getSigners)(mintAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _splTokenGroup.createInitializeGroupInstruction)({\n      programId,\n      group: mint,\n      mint,\n      mintAuthority: mintAuthorityPublicKey,\n      updateAuthority,\n      maxSize\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Initialize a new `Group` with rent transfer.\n   *\n   * Assumes one has already initialized a mint for the group.\n   *\n   * @param connection       Connection to use\n   * @param payer            Payer of the transaction fee\n   * @param mint             Group mint\n   * @param mintAuthority    Group mint authority\n   * @param updateAuthority  Group update authority\n   * @param maxSize          Maximum number of members in the group\n   * @param multiSigners     Signing accounts if `authority` is a multisig\n   * @param confirmOptions   Options for confirming the transaction\n   * @param programId        SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupInitializeGroupWithRentTransfer(connection, payer, mint, mintAuthority, updateAuthority, maxSize, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [mintAuthorityPublicKey, signers] = (0, _internal.getSigners)(mintAuthority, multiSigners);\n    const lamports = await connection.getMinimumBalanceForRentExemption(_splTokenGroup.TOKEN_GROUP_SIZE);\n    const transaction = new _web.Transaction().add(_web.SystemProgram.transfer({\n      fromPubkey: payer.publicKey,\n      toPubkey: mint,\n      lamports\n    }), (0, _splTokenGroup.createInitializeGroupInstruction)({\n      programId,\n      group: mint,\n      mint,\n      mintAuthority: mintAuthorityPublicKey,\n      updateAuthority,\n      maxSize\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Update the max size of a `Group`\n   *\n   * @param connection       Connection to use\n   * @param payer            Payer of the transaction fee\n   * @param mint             Group mint\n   * @param updateAuthority  Group update authority\n   * @param maxSize          Maximum number of members in the group\n   * @param multiSigners     Signing accounts if `authority` is a multisig\n   * @param confirmOptions   Options for confirming the transaction\n   * @param programId        SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupUpdateGroupMaxSize(connection, payer, mint, updateAuthority, maxSize, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [updateAuthorityPublicKey, signers] = (0, _internal.getSigners)(updateAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _splTokenGroup.createUpdateGroupMaxSizeInstruction)({\n      programId,\n      group: mint,\n      updateAuthority: updateAuthorityPublicKey,\n      maxSize\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Update the authority of a `Group`\n   *\n   * @param connection       Connection to use\n   * @param payer            Payer of the transaction fee\n   * @param mint             Group mint\n   * @param updateAuthority  Group update authority\n   * @param newAuthority     New authority for the token group, or unset\n   * @param multiSigners     Signing accounts if `authority` is a multisig\n   * @param confirmOptions   Options for confirming the transaction\n   * @param programId        SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupUpdateGroupAuthority(connection, payer, mint, updateAuthority, newAuthority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [updateAuthorityPublicKey, signers] = (0, _internal.getSigners)(updateAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _splTokenGroup.createUpdateGroupAuthorityInstruction)({\n      programId,\n      group: mint,\n      currentAuthority: updateAuthorityPublicKey,\n      newAuthority\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Initialize a new `Member` of a `Group`\n   *\n   * Assumes the `Group` has already been initialized,\n   * as well as the mint for the member.\n   *\n   * @param connection             Connection to use\n   * @param payer                  Payer of the transaction fee\n   * @param mint                   Member mint\n   * @param mintAuthority          Member mint authority\n   * @param group                  Group mint\n   * @param groupUpdateAuthority   Group update authority\n   * @param multiSigners           Signing accounts if `authority` is a multisig\n   * @param confirmOptions         Options for confirming the transaction\n   * @param programId              SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupMemberInitialize(connection, payer, mint, mintAuthority, group, groupUpdateAuthority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [mintAuthorityPublicKey, signers] = (0, _internal.getSigners)(mintAuthority, multiSigners);\n    const transaction = new _web.Transaction().add((0, _splTokenGroup.createInitializeMemberInstruction)({\n      programId,\n      member: mint,\n      memberMint: mint,\n      memberMintAuthority: mintAuthorityPublicKey,\n      group,\n      groupUpdateAuthority\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Initialize a new `Member` of a `Group` with rent transfer.\n   *\n   * Assumes the `Group` has already been initialized,\n   * as well as the mint for the member.\n   *\n   * @param connection             Connection to use\n   * @param payer                  Payer of the transaction fee\n   * @param mint                   Member mint\n   * @param mintAuthority          Member mint authority\n   * @param group                  Group mint\n   * @param groupUpdateAuthority   Group update authority\n   * @param multiSigners           Signing accounts if `authority` is a multisig\n   * @param confirmOptions         Options for confirming the transaction\n   * @param programId              SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function tokenGroupMemberInitializeWithRentTransfer(connection, payer, mint, mintAuthority, group, groupUpdateAuthority, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [mintAuthorityPublicKey, signers] = (0, _internal.getSigners)(mintAuthority, multiSigners);\n    const lamports = await connection.getMinimumBalanceForRentExemption(_splTokenGroup.TOKEN_GROUP_MEMBER_SIZE);\n    const transaction = new _web.Transaction().add(_web.SystemProgram.transfer({\n      fromPubkey: payer.publicKey,\n      toPubkey: mint,\n      lamports\n    }), (0, _splTokenGroup.createInitializeMemberInstruction)({\n      programId,\n      member: mint,\n      memberMint: mint,\n      memberMintAuthority: mintAuthorityPublicKey,\n      group,\n      groupUpdateAuthority\n    }));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":191,"map":[[11,2,1,0],[11,6,1,0,"_web"],[11,10,1,0],[11,13,1,0,"require"],[11,20,1,0],[11,21,1,0,"_dependencyMap"],[11,35,1,0],[12,2,2,0],[12,6,2,0,"_splTokenGroup"],[12,20,2,0],[12,23,2,0,"require"],[12,30,2,0],[12,31,2,0,"_dependencyMap"],[12,45,2,0],[13,2,3,0],[13,6,3,0,"_constants"],[13,16,3,0],[13,19,3,0,"require"],[13,26,3,0],[13,27,3,0,"_dependencyMap"],[13,41,3,0],[14,2,4,0],[14,6,4,0,"_internal"],[14,15,4,0],[14,18,4,0,"require"],[14,25,4,0],[14,26,4,0,"_dependencyMap"],[14,40,4,0],[15,2,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,0,10,0],[21,0,11,0],[22,0,12,0],[23,0,13,0],[24,0,14,0],[25,0,15,0],[26,0,16,0],[27,0,17,0],[28,0,18,0],[29,0,19,0],[30,0,20,0],[31,0,21,0],[32,2,22,7],[32,17,22,22,"tokenGroupInitializeGroup"],[32,42,22,47,"tokenGroupInitializeGroup"],[32,43,22,48,"connection"],[32,53,22,58],[32,55,22,60,"payer"],[32,60,22,65],[32,62,22,67,"mint"],[32,66,22,71],[32,68,22,73,"mintAuthority"],[32,81,22,86],[32,83,22,88,"updateAuthority"],[32,98,22,103],[32,100,22,105,"maxSize"],[32,107,22,112],[32,109,22,114,"multiSigners"],[32,121,22,126],[32,124,22,129],[32,126,22,131],[32,128,22,133,"confirmOptions"],[32,142,22,147],[32,144,22,149,"programId"],[32,153,22,158],[32,156,22,161,"TOKEN_2022_PROGRAM_ID"],[32,188,22,182],[32,190,22,184],[33,4,23,4],[33,10,23,10],[33,11,23,11,"mintAuthorityPublicKey"],[33,33,23,33],[33,35,23,35,"signers"],[33,42,23,42],[33,43,23,43],[33,46,23,46],[33,50,23,46,"getSigners"],[33,70,23,56],[33,72,23,57,"mintAuthority"],[33,85,23,70],[33,87,23,72,"multiSigners"],[33,99,23,84],[33,100,23,85],[34,4,24,4],[34,10,24,10,"transaction"],[34,21,24,21],[34,24,24,24],[34,28,24,28,"Transaction"],[34,44,24,39],[34,45,24,40],[34,46,24,41],[34,47,24,42,"add"],[34,50,24,45],[34,51,24,46],[34,55,24,46,"createInitializeGroupInstruction"],[34,102,24,78],[34,104,24,79],[35,6,25,8,"programId"],[35,15,25,17],[36,6,26,8,"group"],[36,11,26,13],[36,13,26,15,"mint"],[36,17,26,19],[37,6,27,8,"mint"],[37,10,27,12],[38,6,28,8,"mintAuthority"],[38,19,28,21],[38,21,28,23,"mintAuthorityPublicKey"],[38,43,28,45],[39,6,29,8,"updateAuthority"],[39,21,29,23],[40,6,30,8,"maxSize"],[41,4,31,4],[41,5,31,5],[41,6,31,6],[41,7,31,7],[42,4,32,4],[42,11,32,11],[42,17,32,17],[42,21,32,17,"sendAndConfirmTransaction"],[42,51,32,42],[42,53,32,43,"connection"],[42,63,32,53],[42,65,32,55,"transaction"],[42,76,32,66],[42,78,32,68],[42,79,32,69,"payer"],[42,84,32,74],[42,86,32,76],[42,89,32,79,"signers"],[42,96,32,86],[42,97,32,87],[42,99,32,89,"confirmOptions"],[42,113,32,103],[42,114,32,104],[43,2,33,0],[44,2,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,0,40,0],[51,0,41,0],[52,0,42,0],[53,0,43,0],[54,0,44,0],[55,0,45,0],[56,0,46,0],[57,0,47,0],[58,0,48,0],[59,0,49,0],[60,0,50,0],[61,2,51,7],[61,17,51,22,"tokenGroupInitializeGroupWithRentTransfer"],[61,58,51,63,"tokenGroupInitializeGroupWithRentTransfer"],[61,59,51,64,"connection"],[61,69,51,74],[61,71,51,76,"payer"],[61,76,51,81],[61,78,51,83,"mint"],[61,82,51,87],[61,84,51,89,"mintAuthority"],[61,97,51,102],[61,99,51,104,"updateAuthority"],[61,114,51,119],[61,116,51,121,"maxSize"],[61,123,51,128],[61,125,51,130,"multiSigners"],[61,137,51,142],[61,140,51,145],[61,142,51,147],[61,144,51,149,"confirmOptions"],[61,158,51,163],[61,160,51,165,"programId"],[61,169,51,174],[61,172,51,177,"TOKEN_2022_PROGRAM_ID"],[61,204,51,198],[61,206,51,200],[62,4,52,4],[62,10,52,10],[62,11,52,11,"mintAuthorityPublicKey"],[62,33,52,33],[62,35,52,35,"signers"],[62,42,52,42],[62,43,52,43],[62,46,52,46],[62,50,52,46,"getSigners"],[62,70,52,56],[62,72,52,57,"mintAuthority"],[62,85,52,70],[62,87,52,72,"multiSigners"],[62,99,52,84],[62,100,52,85],[63,4,53,4],[63,10,53,10,"lamports"],[63,18,53,18],[63,21,53,21],[63,27,53,27,"connection"],[63,37,53,37],[63,38,53,38,"getMinimumBalanceForRentExemption"],[63,71,53,71],[63,72,53,72,"TOKEN_GROUP_SIZE"],[63,103,53,88],[63,104,53,89],[64,4,54,4],[64,10,54,10,"transaction"],[64,21,54,21],[64,24,54,24],[64,28,54,28,"Transaction"],[64,44,54,39],[64,45,54,40],[64,46,54,41],[64,47,54,42,"add"],[64,50,54,45],[64,51,54,46,"SystemProgram"],[64,69,54,59],[64,70,54,60,"transfer"],[64,78,54,68],[64,79,54,69],[65,6,55,8,"fromPubkey"],[65,16,55,18],[65,18,55,20,"payer"],[65,23,55,25],[65,24,55,26,"publicKey"],[65,33,55,35],[66,6,56,8,"toPubkey"],[66,14,56,16],[66,16,56,18,"mint"],[66,20,56,22],[67,6,57,8,"lamports"],[68,4,58,4],[68,5,58,5],[68,6,58,6],[68,8,58,8],[68,12,58,8,"createInitializeGroupInstruction"],[68,59,58,40],[68,61,58,41],[69,6,59,8,"programId"],[69,15,59,17],[70,6,60,8,"group"],[70,11,60,13],[70,13,60,15,"mint"],[70,17,60,19],[71,6,61,8,"mint"],[71,10,61,12],[72,6,62,8,"mintAuthority"],[72,19,62,21],[72,21,62,23,"mintAuthorityPublicKey"],[72,43,62,45],[73,6,63,8,"updateAuthority"],[73,21,63,23],[74,6,64,8,"maxSize"],[75,4,65,4],[75,5,65,5],[75,6,65,6],[75,7,65,7],[76,4,66,4],[76,11,66,11],[76,17,66,17],[76,21,66,17,"sendAndConfirmTransaction"],[76,51,66,42],[76,53,66,43,"connection"],[76,63,66,53],[76,65,66,55,"transaction"],[76,76,66,66],[76,78,66,68],[76,79,66,69,"payer"],[76,84,66,74],[76,86,66,76],[76,89,66,79,"signers"],[76,96,66,86],[76,97,66,87],[76,99,66,89,"confirmOptions"],[76,113,66,103],[76,114,66,104],[77,2,67,0],[78,2,68,0],[79,0,69,0],[80,0,70,0],[81,0,71,0],[82,0,72,0],[83,0,73,0],[84,0,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,0,78,0],[89,0,79,0],[90,0,80,0],[91,0,81,0],[92,2,82,7],[92,17,82,22,"tokenGroupUpdateGroupMaxSize"],[92,45,82,50,"tokenGroupUpdateGroupMaxSize"],[92,46,82,51,"connection"],[92,56,82,61],[92,58,82,63,"payer"],[92,63,82,68],[92,65,82,70,"mint"],[92,69,82,74],[92,71,82,76,"updateAuthority"],[92,86,82,91],[92,88,82,93,"maxSize"],[92,95,82,100],[92,97,82,102,"multiSigners"],[92,109,82,114],[92,112,82,117],[92,114,82,119],[92,116,82,121,"confirmOptions"],[92,130,82,135],[92,132,82,137,"programId"],[92,141,82,146],[92,144,82,149,"TOKEN_2022_PROGRAM_ID"],[92,176,82,170],[92,178,82,172],[93,4,83,4],[93,10,83,10],[93,11,83,11,"updateAuthorityPublicKey"],[93,35,83,35],[93,37,83,37,"signers"],[93,44,83,44],[93,45,83,45],[93,48,83,48],[93,52,83,48,"getSigners"],[93,72,83,58],[93,74,83,59,"updateAuthority"],[93,89,83,74],[93,91,83,76,"multiSigners"],[93,103,83,88],[93,104,83,89],[94,4,84,4],[94,10,84,10,"transaction"],[94,21,84,21],[94,24,84,24],[94,28,84,28,"Transaction"],[94,44,84,39],[94,45,84,40],[94,46,84,41],[94,47,84,42,"add"],[94,50,84,45],[94,51,84,46],[94,55,84,46,"createUpdateGroupMaxSizeInstruction"],[94,105,84,81],[94,107,84,82],[95,6,85,8,"programId"],[95,15,85,17],[96,6,86,8,"group"],[96,11,86,13],[96,13,86,15,"mint"],[96,17,86,19],[97,6,87,8,"updateAuthority"],[97,21,87,23],[97,23,87,25,"updateAuthorityPublicKey"],[97,47,87,49],[98,6,88,8,"maxSize"],[99,4,89,4],[99,5,89,5],[99,6,89,6],[99,7,89,7],[100,4,90,4],[100,11,90,11],[100,17,90,17],[100,21,90,17,"sendAndConfirmTransaction"],[100,51,90,42],[100,53,90,43,"connection"],[100,63,90,53],[100,65,90,55,"transaction"],[100,76,90,66],[100,78,90,68],[100,79,90,69,"payer"],[100,84,90,74],[100,86,90,76],[100,89,90,79,"signers"],[100,96,90,86],[100,97,90,87],[100,99,90,89,"confirmOptions"],[100,113,90,103],[100,114,90,104],[101,2,91,0],[102,2,92,0],[103,0,93,0],[104,0,94,0],[105,0,95,0],[106,0,96,0],[107,0,97,0],[108,0,98,0],[109,0,99,0],[110,0,100,0],[111,0,101,0],[112,0,102,0],[113,0,103,0],[114,0,104,0],[115,0,105,0],[116,2,106,7],[116,17,106,22,"tokenGroupUpdateGroupAuthority"],[116,47,106,52,"tokenGroupUpdateGroupAuthority"],[116,48,106,53,"connection"],[116,58,106,63],[116,60,106,65,"payer"],[116,65,106,70],[116,67,106,72,"mint"],[116,71,106,76],[116,73,106,78,"updateAuthority"],[116,88,106,93],[116,90,106,95,"newAuthority"],[116,102,106,107],[116,104,106,109,"multiSigners"],[116,116,106,121],[116,119,106,124],[116,121,106,126],[116,123,106,128,"confirmOptions"],[116,137,106,142],[116,139,106,144,"programId"],[116,148,106,153],[116,151,106,156,"TOKEN_2022_PROGRAM_ID"],[116,183,106,177],[116,185,106,179],[117,4,107,4],[117,10,107,10],[117,11,107,11,"updateAuthorityPublicKey"],[117,35,107,35],[117,37,107,37,"signers"],[117,44,107,44],[117,45,107,45],[117,48,107,48],[117,52,107,48,"getSigners"],[117,72,107,58],[117,74,107,59,"updateAuthority"],[117,89,107,74],[117,91,107,76,"multiSigners"],[117,103,107,88],[117,104,107,89],[118,4,108,4],[118,10,108,10,"transaction"],[118,21,108,21],[118,24,108,24],[118,28,108,28,"Transaction"],[118,44,108,39],[118,45,108,40],[118,46,108,41],[118,47,108,42,"add"],[118,50,108,45],[118,51,108,46],[118,55,108,46,"createUpdateGroupAuthorityInstruction"],[118,107,108,83],[118,109,108,84],[119,6,109,8,"programId"],[119,15,109,17],[120,6,110,8,"group"],[120,11,110,13],[120,13,110,15,"mint"],[120,17,110,19],[121,6,111,8,"currentAuthority"],[121,22,111,24],[121,24,111,26,"updateAuthorityPublicKey"],[121,48,111,50],[122,6,112,8,"newAuthority"],[123,4,113,4],[123,5,113,5],[123,6,113,6],[123,7,113,7],[124,4,114,4],[124,11,114,11],[124,17,114,17],[124,21,114,17,"sendAndConfirmTransaction"],[124,51,114,42],[124,53,114,43,"connection"],[124,63,114,53],[124,65,114,55,"transaction"],[124,76,114,66],[124,78,114,68],[124,79,114,69,"payer"],[124,84,114,74],[124,86,114,76],[124,89,114,79,"signers"],[124,96,114,86],[124,97,114,87],[124,99,114,89,"confirmOptions"],[124,113,114,103],[124,114,114,104],[125,2,115,0],[126,2,116,0],[127,0,117,0],[128,0,118,0],[129,0,119,0],[130,0,120,0],[131,0,121,0],[132,0,122,0],[133,0,123,0],[134,0,124,0],[135,0,125,0],[136,0,126,0],[137,0,127,0],[138,0,128,0],[139,0,129,0],[140,0,130,0],[141,0,131,0],[142,0,132,0],[143,0,133,0],[144,2,134,7],[144,17,134,22,"tokenGroupMemberInitialize"],[144,43,134,48,"tokenGroupMemberInitialize"],[144,44,134,49,"connection"],[144,54,134,59],[144,56,134,61,"payer"],[144,61,134,66],[144,63,134,68,"mint"],[144,67,134,72],[144,69,134,74,"mintAuthority"],[144,82,134,87],[144,84,134,89,"group"],[144,89,134,94],[144,91,134,96,"groupUpdateAuthority"],[144,111,134,116],[144,113,134,118,"multiSigners"],[144,125,134,130],[144,128,134,133],[144,130,134,135],[144,132,134,137,"confirmOptions"],[144,146,134,151],[144,148,134,153,"programId"],[144,157,134,162],[144,160,134,165,"TOKEN_2022_PROGRAM_ID"],[144,192,134,186],[144,194,134,188],[145,4,135,4],[145,10,135,10],[145,11,135,11,"mintAuthorityPublicKey"],[145,33,135,33],[145,35,135,35,"signers"],[145,42,135,42],[145,43,135,43],[145,46,135,46],[145,50,135,46,"getSigners"],[145,70,135,56],[145,72,135,57,"mintAuthority"],[145,85,135,70],[145,87,135,72,"multiSigners"],[145,99,135,84],[145,100,135,85],[146,4,136,4],[146,10,136,10,"transaction"],[146,21,136,21],[146,24,136,24],[146,28,136,28,"Transaction"],[146,44,136,39],[146,45,136,40],[146,46,136,41],[146,47,136,42,"add"],[146,50,136,45],[146,51,136,46],[146,55,136,46,"createInitializeMemberInstruction"],[146,103,136,79],[146,105,136,80],[147,6,137,8,"programId"],[147,15,137,17],[148,6,138,8,"member"],[148,12,138,14],[148,14,138,16,"mint"],[148,18,138,20],[149,6,139,8,"memberMint"],[149,16,139,18],[149,18,139,20,"mint"],[149,22,139,24],[150,6,140,8,"memberMintAuthority"],[150,25,140,27],[150,27,140,29,"mintAuthorityPublicKey"],[150,49,140,51],[151,6,141,8,"group"],[151,11,141,13],[152,6,142,8,"groupUpdateAuthority"],[153,4,143,4],[153,5,143,5],[153,6,143,6],[153,7,143,7],[154,4,144,4],[154,11,144,11],[154,17,144,17],[154,21,144,17,"sendAndConfirmTransaction"],[154,51,144,42],[154,53,144,43,"connection"],[154,63,144,53],[154,65,144,55,"transaction"],[154,76,144,66],[154,78,144,68],[154,79,144,69,"payer"],[154,84,144,74],[154,86,144,76],[154,89,144,79,"signers"],[154,96,144,86],[154,97,144,87],[154,99,144,89,"confirmOptions"],[154,113,144,103],[154,114,144,104],[155,2,145,0],[156,2,146,0],[157,0,147,0],[158,0,148,0],[159,0,149,0],[160,0,150,0],[161,0,151,0],[162,0,152,0],[163,0,153,0],[164,0,154,0],[165,0,155,0],[166,0,156,0],[167,0,157,0],[168,0,158,0],[169,0,159,0],[170,0,160,0],[171,0,161,0],[172,0,162,0],[173,0,163,0],[174,2,164,7],[174,17,164,22,"tokenGroupMemberInitializeWithRentTransfer"],[174,59,164,64,"tokenGroupMemberInitializeWithRentTransfer"],[174,60,164,65,"connection"],[174,70,164,75],[174,72,164,77,"payer"],[174,77,164,82],[174,79,164,84,"mint"],[174,83,164,88],[174,85,164,90,"mintAuthority"],[174,98,164,103],[174,100,164,105,"group"],[174,105,164,110],[174,107,164,112,"groupUpdateAuthority"],[174,127,164,132],[174,129,164,134,"multiSigners"],[174,141,164,146],[174,144,164,149],[174,146,164,151],[174,148,164,153,"confirmOptions"],[174,162,164,167],[174,164,164,169,"programId"],[174,173,164,178],[174,176,164,181,"TOKEN_2022_PROGRAM_ID"],[174,208,164,202],[174,210,164,204],[175,4,165,4],[175,10,165,10],[175,11,165,11,"mintAuthorityPublicKey"],[175,33,165,33],[175,35,165,35,"signers"],[175,42,165,42],[175,43,165,43],[175,46,165,46],[175,50,165,46,"getSigners"],[175,70,165,56],[175,72,165,57,"mintAuthority"],[175,85,165,70],[175,87,165,72,"multiSigners"],[175,99,165,84],[175,100,165,85],[176,4,166,4],[176,10,166,10,"lamports"],[176,18,166,18],[176,21,166,21],[176,27,166,27,"connection"],[176,37,166,37],[176,38,166,38,"getMinimumBalanceForRentExemption"],[176,71,166,71],[176,72,166,72,"TOKEN_GROUP_MEMBER_SIZE"],[176,110,166,95],[176,111,166,96],[177,4,167,4],[177,10,167,10,"transaction"],[177,21,167,21],[177,24,167,24],[177,28,167,28,"Transaction"],[177,44,167,39],[177,45,167,40],[177,46,167,41],[177,47,167,42,"add"],[177,50,167,45],[177,51,167,46,"SystemProgram"],[177,69,167,59],[177,70,167,60,"transfer"],[177,78,167,68],[177,79,167,69],[178,6,168,8,"fromPubkey"],[178,16,168,18],[178,18,168,20,"payer"],[178,23,168,25],[178,24,168,26,"publicKey"],[178,33,168,35],[179,6,169,8,"toPubkey"],[179,14,169,16],[179,16,169,18,"mint"],[179,20,169,22],[180,6,170,8,"lamports"],[181,4,171,4],[181,5,171,5],[181,6,171,6],[181,8,171,8],[181,12,171,8,"createInitializeMemberInstruction"],[181,60,171,41],[181,62,171,42],[182,6,172,8,"programId"],[182,15,172,17],[183,6,173,8,"member"],[183,12,173,14],[183,14,173,16,"mint"],[183,18,173,20],[184,6,174,8,"memberMint"],[184,16,174,18],[184,18,174,20,"mint"],[184,22,174,24],[185,6,175,8,"memberMintAuthority"],[185,25,175,27],[185,27,175,29,"mintAuthorityPublicKey"],[185,49,175,51],[186,6,176,8,"group"],[186,11,176,13],[187,6,177,8,"groupUpdateAuthority"],[188,4,178,4],[188,5,178,5],[188,6,178,6],[188,7,178,7],[189,4,179,4],[189,11,179,11],[189,17,179,17],[189,21,179,17,"sendAndConfirmTransaction"],[189,51,179,42],[189,53,179,43,"connection"],[189,63,179,53],[189,65,179,55,"transaction"],[189,76,179,66],[189,78,179,68],[189,79,179,69,"payer"],[189,84,179,74],[189,86,179,76],[189,89,179,79,"signers"],[189,96,179,86],[189,97,179,87],[189,99,179,89,"confirmOptions"],[189,113,179,103],[189,114,179,104],[190,2,180,0],[191,0,180,1],[191,3]],"functionMap":{"names":["<global>","tokenGroupInitializeGroup","tokenGroupInitializeGroupWithRentTransfer","tokenGroupUpdateGroupMaxSize","tokenGroupUpdateGroupAuthority","tokenGroupMemberInitialize","tokenGroupMemberInitializeWithRentTransfer"],"mappings":"AAA;OCqB;CDW;OEkB;CFgB;OGe;CHS;OIe;CJS;OKmB;CLW;OMmB;CNgB"}},"type":"js/module"}]}