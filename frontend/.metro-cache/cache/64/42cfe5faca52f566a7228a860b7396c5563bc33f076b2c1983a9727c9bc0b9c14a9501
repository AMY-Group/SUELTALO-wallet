{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./validate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"4q4sLtjLw/OKlBGplWkTHFBWdWQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _validate = _interopRequireDefault(require(_dependencyMap[1], \"./validate.js\"));\n  /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */\n\n  var byteToHex = [];\n  for (var i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).substr(1));\n  }\n  function stringify(arr) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n\n    if (!(0, _validate.default)(uuid)) {\n      throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n  }\n  var _default = exports.default = stringify;\n});","lineCount":33,"map":[[7,2,1,0],[7,6,1,0,"_validate"],[7,15,1,0],[7,18,1,0,"_interopRequireDefault"],[7,40,1,0],[7,41,1,0,"require"],[7,48,1,0],[7,49,1,0,"_dependencyMap"],[7,63,1,0],[8,2,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[13,2,7,0],[13,6,7,4,"byteToHex"],[13,15,7,13],[13,18,7,16],[13,20,7,18],[14,2,9,0],[14,7,9,5],[14,11,9,9,"i"],[14,12,9,10],[14,15,9,13],[14,16,9,14],[14,18,9,16,"i"],[14,19,9,17],[14,22,9,20],[14,25,9,23],[14,27,9,25],[14,29,9,27,"i"],[14,30,9,28],[14,32,9,30],[15,4,10,2,"byteToHex"],[15,13,10,11],[15,14,10,12,"push"],[15,18,10,16],[15,19,10,17],[15,20,10,18,"i"],[15,21,10,19],[15,24,10,22],[15,29,10,27],[15,31,10,29,"toString"],[15,39,10,37],[15,40,10,38],[15,42,10,40],[15,43,10,41],[15,44,10,42,"substr"],[15,50,10,48],[15,51,10,49],[15,52,10,50],[15,53,10,51],[15,54,10,52],[16,2,11,0],[17,2,13,0],[17,11,13,9,"stringify"],[17,20,13,18,"stringify"],[17,21,13,19,"arr"],[17,24,13,22],[17,26,13,24],[18,4,14,2],[18,8,14,6,"offset"],[18,14,14,12],[18,17,14,15,"arguments"],[18,26,14,24],[18,27,14,25,"length"],[18,33,14,31],[18,36,14,34],[18,37,14,35],[18,41,14,39,"arguments"],[18,50,14,48],[18,51,14,49],[18,52,14,50],[18,53,14,51],[18,58,14,56,"undefined"],[18,67,14,65],[18,70,14,68,"arguments"],[18,79,14,77],[18,80,14,78],[18,81,14,79],[18,82,14,80],[18,85,14,83],[18,86,14,84],[19,4,15,2],[20,4,16,2],[21,4,17,2],[21,8,17,6,"uuid"],[21,12,17,10],[21,15,17,13],[21,16,17,14,"byteToHex"],[21,25,17,23],[21,26,17,24,"arr"],[21,29,17,27],[21,30,17,28,"offset"],[21,36,17,34],[21,39,17,37],[21,40,17,38],[21,41,17,39],[21,42,17,40],[21,45,17,43,"byteToHex"],[21,54,17,52],[21,55,17,53,"arr"],[21,58,17,56],[21,59,17,57,"offset"],[21,65,17,63],[21,68,17,66],[21,69,17,67],[21,70,17,68],[21,71,17,69],[21,74,17,72,"byteToHex"],[21,83,17,81],[21,84,17,82,"arr"],[21,87,17,85],[21,88,17,86,"offset"],[21,94,17,92],[21,97,17,95],[21,98,17,96],[21,99,17,97],[21,100,17,98],[21,103,17,101,"byteToHex"],[21,112,17,110],[21,113,17,111,"arr"],[21,116,17,114],[21,117,17,115,"offset"],[21,123,17,121],[21,126,17,124],[21,127,17,125],[21,128,17,126],[21,129,17,127],[21,132,17,130],[21,135,17,133],[21,138,17,136,"byteToHex"],[21,147,17,145],[21,148,17,146,"arr"],[21,151,17,149],[21,152,17,150,"offset"],[21,158,17,156],[21,161,17,159],[21,162,17,160],[21,163,17,161],[21,164,17,162],[21,167,17,165,"byteToHex"],[21,176,17,174],[21,177,17,175,"arr"],[21,180,17,178],[21,181,17,179,"offset"],[21,187,17,185],[21,190,17,188],[21,191,17,189],[21,192,17,190],[21,193,17,191],[21,196,17,194],[21,199,17,197],[21,202,17,200,"byteToHex"],[21,211,17,209],[21,212,17,210,"arr"],[21,215,17,213],[21,216,17,214,"offset"],[21,222,17,220],[21,225,17,223],[21,226,17,224],[21,227,17,225],[21,228,17,226],[21,231,17,229,"byteToHex"],[21,240,17,238],[21,241,17,239,"arr"],[21,244,17,242],[21,245,17,243,"offset"],[21,251,17,249],[21,254,17,252],[21,255,17,253],[21,256,17,254],[21,257,17,255],[21,260,17,258],[21,263,17,261],[21,266,17,264,"byteToHex"],[21,275,17,273],[21,276,17,274,"arr"],[21,279,17,277],[21,280,17,278,"offset"],[21,286,17,284],[21,289,17,287],[21,290,17,288],[21,291,17,289],[21,292,17,290],[21,295,17,293,"byteToHex"],[21,304,17,302],[21,305,17,303,"arr"],[21,308,17,306],[21,309,17,307,"offset"],[21,315,17,313],[21,318,17,316],[21,319,17,317],[21,320,17,318],[21,321,17,319],[21,324,17,322],[21,327,17,325],[21,330,17,328,"byteToHex"],[21,339,17,337],[21,340,17,338,"arr"],[21,343,17,341],[21,344,17,342,"offset"],[21,350,17,348],[21,353,17,351],[21,355,17,353],[21,356,17,354],[21,357,17,355],[21,360,17,358,"byteToHex"],[21,369,17,367],[21,370,17,368,"arr"],[21,373,17,371],[21,374,17,372,"offset"],[21,380,17,378],[21,383,17,381],[21,385,17,383],[21,386,17,384],[21,387,17,385],[21,390,17,388,"byteToHex"],[21,399,17,397],[21,400,17,398,"arr"],[21,403,17,401],[21,404,17,402,"offset"],[21,410,17,408],[21,413,17,411],[21,415,17,413],[21,416,17,414],[21,417,17,415],[21,420,17,418,"byteToHex"],[21,429,17,427],[21,430,17,428,"arr"],[21,433,17,431],[21,434,17,432,"offset"],[21,440,17,438],[21,443,17,441],[21,445,17,443],[21,446,17,444],[21,447,17,445],[21,450,17,448,"byteToHex"],[21,459,17,457],[21,460,17,458,"arr"],[21,463,17,461],[21,464,17,462,"offset"],[21,470,17,468],[21,473,17,471],[21,475,17,473],[21,476,17,474],[21,477,17,475],[21,480,17,478,"byteToHex"],[21,489,17,487],[21,490,17,488,"arr"],[21,493,17,491],[21,494,17,492,"offset"],[21,500,17,498],[21,503,17,501],[21,505,17,503],[21,506,17,504],[21,507,17,505],[21,509,17,507,"toLowerCase"],[21,520,17,518],[21,521,17,519],[21,522,17,520],[21,523,17,521],[21,524,17,522],[22,4,18,2],[23,4,19,2],[24,4,20,2],[25,4,21,2],[27,4,23,2],[27,8,23,6],[27,9,23,7],[27,13,23,7,"validate"],[27,30,23,15],[27,32,23,16,"uuid"],[27,36,23,20],[27,37,23,21],[27,39,23,23],[28,6,24,4],[28,12,24,10,"TypeError"],[28,21,24,19],[28,22,24,20],[28,51,24,49],[28,52,24,50],[29,4,25,2],[30,4,27,2],[30,11,27,9,"uuid"],[30,15,27,13],[31,2,28,0],[32,2,28,1],[32,6,28,1,"_default"],[32,14,28,1],[32,17,28,1,"exports"],[32,24,28,1],[32,25,28,1,"default"],[32,32,28,1],[32,35,30,15,"stringify"],[32,44,30,24],[33,0,30,24],[33,3]],"functionMap":{"names":["<global>","stringify"],"mappings":"AAA;ACY;CDe"}},"type":"js/module"}]}