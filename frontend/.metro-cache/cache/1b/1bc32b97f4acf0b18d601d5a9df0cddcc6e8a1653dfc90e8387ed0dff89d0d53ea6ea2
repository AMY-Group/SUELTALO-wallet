{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":75,"index":75}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"../extensionType.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":76},"end":{"line":2,"column":70,"index":146}}],"key":"9B9SsrL0iX24r6c12s5npw5ZP78=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":147},"end":{"line":3,"column":44,"index":191}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":192},"end":{"line":4,"column":67,"index":259}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":260},"end":{"line":5,"column":67,"index":327}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}},{"name":"./seeds.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":328},"end":{"line":6,"column":41,"index":369}}],"key":"absOW2VDd0QkWYfFrKBlR7xPrrU=","exportNames":["*"]}},{"name":"./pubkeyData.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":370},"end":{"line":7,"column":51,"index":421}}],"key":"K2s2xsTr9qWlPy22JJZyLqKSZuc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TransferHookLayout = exports.TransferHookAccountLayout = exports.TRANSFER_HOOK_SIZE = exports.TRANSFER_HOOK_ACCOUNT_SIZE = exports.ExtraAccountMetaListLayout = exports.ExtraAccountMetaLayout = exports.ExtraAccountMetaAccountDataLayout = void 0;\n  exports.getExtraAccountMetaAddress = getExtraAccountMetaAddress;\n  exports.getExtraAccountMetas = getExtraAccountMetas;\n  exports.getTransferHook = getTransferHook;\n  exports.getTransferHookAccount = getTransferHookAccount;\n  exports.resolveExtraAccountMeta = resolveExtraAccountMeta;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _extensionType = require(_dependencyMap[1], \"../extensionType.js\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _bufferLayoutUtils = require(_dependencyMap[3], \"@solana/buffer-layout-utils\");\n  var _errors = require(_dependencyMap[4], \"../../errors.js\");\n  var _seeds = require(_dependencyMap[5], \"./seeds.js\");\n  var _pubkeyData = require(_dependencyMap[6], \"./pubkeyData.js\");\n  /** Buffer layout for de/serializing a transfer hook extension */\n  const TransferHookLayout = exports.TransferHookLayout = (0, _bufferLayout.struct)([(0, _bufferLayoutUtils.publicKey)('authority'), (0, _bufferLayoutUtils.publicKey)('programId')]);\n  const TRANSFER_HOOK_SIZE = exports.TRANSFER_HOOK_SIZE = TransferHookLayout.span;\n  function getTransferHook(mint) {\n    const extensionData = (0, _extensionType.getExtensionData)(_extensionType.ExtensionType.TransferHook, mint.tlvData);\n    if (extensionData !== null) {\n      return TransferHookLayout.decode(extensionData);\n    } else {\n      return null;\n    }\n  }\n  /** Buffer layout for de/serializing a transfer hook account extension */\n  const TransferHookAccountLayout = exports.TransferHookAccountLayout = (0, _bufferLayout.struct)([(0, _bufferLayoutUtils.bool)('transferring')]);\n  const TRANSFER_HOOK_ACCOUNT_SIZE = exports.TRANSFER_HOOK_ACCOUNT_SIZE = TransferHookAccountLayout.span;\n  function getTransferHookAccount(account) {\n    const extensionData = (0, _extensionType.getExtensionData)(_extensionType.ExtensionType.TransferHookAccount, account.tlvData);\n    if (extensionData !== null) {\n      return TransferHookAccountLayout.decode(extensionData);\n    } else {\n      return null;\n    }\n  }\n  function getExtraAccountMetaAddress(mint, programId) {\n    const seeds = [Buffer.from('extra-account-metas'), mint.toBuffer()];\n    return _web.PublicKey.findProgramAddressSync(seeds, programId)[0];\n  }\n  /** Buffer layout for de/serializing an ExtraAccountMeta */\n  const ExtraAccountMetaLayout = exports.ExtraAccountMetaLayout = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('discriminator'), (0, _bufferLayout.blob)(32, 'addressConfig'), (0, _bufferLayoutUtils.bool)('isSigner'), (0, _bufferLayoutUtils.bool)('isWritable')]);\n  /** Buffer layout for de/serializing a list of ExtraAccountMeta prefixed by a u32 length */\n  const ExtraAccountMetaListLayout = exports.ExtraAccountMetaListLayout = (0, _bufferLayout.struct)([(0, _bufferLayout.u32)('count'), (0, _bufferLayout.seq)(ExtraAccountMetaLayout, (0, _bufferLayout.greedy)(ExtraAccountMetaLayout.span), 'extraAccounts')]);\n  /** Buffer layout for de/serializing an ExtraAccountMetaAccountData */\n  const ExtraAccountMetaAccountDataLayout = exports.ExtraAccountMetaAccountDataLayout = (0, _bufferLayout.struct)([(0, _bufferLayoutUtils.u64)('instructionDiscriminator'), (0, _bufferLayout.u32)('length'), ExtraAccountMetaListLayout.replicate('extraAccountsList')]);\n  /** Unpack an extra account metas account and parse the data into a list of ExtraAccountMetas */\n  function getExtraAccountMetas(account) {\n    const extraAccountsList = ExtraAccountMetaAccountDataLayout.decode(account.data).extraAccountsList;\n    return extraAccountsList.extraAccounts.slice(0, extraAccountsList.count);\n  }\n  /** Take an ExtraAccountMeta and construct that into an actual AccountMeta */\n  async function resolveExtraAccountMeta(connection, extraMeta, previousMetas, instructionData, transferHookProgramId) {\n    if (extraMeta.discriminator === 0) {\n      return {\n        pubkey: new _web.PublicKey(extraMeta.addressConfig),\n        isSigner: extraMeta.isSigner,\n        isWritable: extraMeta.isWritable\n      };\n    } else if (extraMeta.discriminator === 2) {\n      const pubkey = await (0, _pubkeyData.unpackPubkeyData)(extraMeta.addressConfig, previousMetas, instructionData, connection);\n      return {\n        pubkey,\n        isSigner: extraMeta.isSigner,\n        isWritable: extraMeta.isWritable\n      };\n    }\n    let programId = _web.PublicKey.default;\n    if (extraMeta.discriminator === 1) {\n      programId = transferHookProgramId;\n    } else {\n      const accountIndex = extraMeta.discriminator - (1 << 7);\n      if (previousMetas.length <= accountIndex) {\n        throw new _errors.TokenTransferHookAccountNotFound();\n      }\n      programId = previousMetas[accountIndex].pubkey;\n    }\n    const seeds = await (0, _seeds.unpackSeeds)(extraMeta.addressConfig, previousMetas, instructionData, connection);\n    const pubkey = _web.PublicKey.findProgramAddressSync(seeds, programId)[0];\n    return {\n      pubkey,\n      isSigner: extraMeta.isSigner,\n      isWritable: extraMeta.isWritable\n    };\n  }\n});","lineCount":89,"map":[[11,2,1,0],[11,6,1,0,"_bufferLayout"],[11,19,1,0],[11,22,1,0,"require"],[11,29,1,0],[11,30,1,0,"_dependencyMap"],[11,44,1,0],[12,2,2,0],[12,6,2,0,"_extensionType"],[12,20,2,0],[12,23,2,0,"require"],[12,30,2,0],[12,31,2,0,"_dependencyMap"],[12,45,2,0],[13,2,3,0],[13,6,3,0,"_web"],[13,10,3,0],[13,13,3,0,"require"],[13,20,3,0],[13,21,3,0,"_dependencyMap"],[13,35,3,0],[14,2,4,0],[14,6,4,0,"_bufferLayoutUtils"],[14,24,4,0],[14,27,4,0,"require"],[14,34,4,0],[14,35,4,0,"_dependencyMap"],[14,49,4,0],[15,2,5,0],[15,6,5,0,"_errors"],[15,13,5,0],[15,16,5,0,"require"],[15,23,5,0],[15,24,5,0,"_dependencyMap"],[15,38,5,0],[16,2,6,0],[16,6,6,0,"_seeds"],[16,12,6,0],[16,15,6,0,"require"],[16,22,6,0],[16,23,6,0,"_dependencyMap"],[16,37,6,0],[17,2,7,0],[17,6,7,0,"_pubkeyData"],[17,17,7,0],[17,20,7,0,"require"],[17,27,7,0],[17,28,7,0,"_dependencyMap"],[17,42,7,0],[18,2,8,0],[19,2,9,7],[19,8,9,13,"TransferHookLayout"],[19,26,9,31],[19,29,9,31,"exports"],[19,36,9,31],[19,37,9,31,"TransferHookLayout"],[19,55,9,31],[19,58,9,34],[19,62,9,34,"struct"],[19,82,9,40],[19,84,9,41],[19,85,9,42],[19,89,9,42,"publicKey"],[19,117,9,51],[19,119,9,52],[19,130,9,63],[19,131,9,64],[19,133,9,66],[19,137,9,66,"publicKey"],[19,165,9,75],[19,167,9,76],[19,178,9,87],[19,179,9,88],[19,180,9,89],[19,181,9,90],[20,2,10,7],[20,8,10,13,"TRANSFER_HOOK_SIZE"],[20,26,10,31],[20,29,10,31,"exports"],[20,36,10,31],[20,37,10,31,"TRANSFER_HOOK_SIZE"],[20,55,10,31],[20,58,10,34,"TransferHookLayout"],[20,76,10,52],[20,77,10,53,"span"],[20,81,10,57],[21,2,11,7],[21,11,11,16,"getTransferHook"],[21,26,11,31,"getTransferHook"],[21,27,11,32,"mint"],[21,31,11,36],[21,33,11,38],[22,4,12,4],[22,10,12,10,"extensionData"],[22,23,12,23],[22,26,12,26],[22,30,12,26,"getExtensionData"],[22,61,12,42],[22,63,12,43,"ExtensionType"],[22,91,12,56],[22,92,12,57,"TransferHook"],[22,104,12,69],[22,106,12,71,"mint"],[22,110,12,75],[22,111,12,76,"tlvData"],[22,118,12,83],[22,119,12,84],[23,4,13,4],[23,8,13,8,"extensionData"],[23,21,13,21],[23,26,13,26],[23,30,13,30],[23,32,13,32],[24,6,14,8],[24,13,14,15,"TransferHookLayout"],[24,31,14,33],[24,32,14,34,"decode"],[24,38,14,40],[24,39,14,41,"extensionData"],[24,52,14,54],[24,53,14,55],[25,4,15,4],[25,5,15,5],[25,11,16,9],[26,6,17,8],[26,13,17,15],[26,17,17,19],[27,4,18,4],[28,2,19,0],[29,2,20,0],[30,2,21,7],[30,8,21,13,"TransferHookAccountLayout"],[30,33,21,38],[30,36,21,38,"exports"],[30,43,21,38],[30,44,21,38,"TransferHookAccountLayout"],[30,69,21,38],[30,72,21,41],[30,76,21,41,"struct"],[30,96,21,47],[30,98,21,48],[30,99,21,49],[30,103,21,49,"bool"],[30,126,21,53],[30,128,21,54],[30,142,21,68],[30,143,21,69],[30,144,21,70],[30,145,21,71],[31,2,22,7],[31,8,22,13,"TRANSFER_HOOK_ACCOUNT_SIZE"],[31,34,22,39],[31,37,22,39,"exports"],[31,44,22,39],[31,45,22,39,"TRANSFER_HOOK_ACCOUNT_SIZE"],[31,71,22,39],[31,74,22,42,"TransferHookAccountLayout"],[31,99,22,67],[31,100,22,68,"span"],[31,104,22,72],[32,2,23,7],[32,11,23,16,"getTransferHookAccount"],[32,33,23,38,"getTransferHookAccount"],[32,34,23,39,"account"],[32,41,23,46],[32,43,23,48],[33,4,24,4],[33,10,24,10,"extensionData"],[33,23,24,23],[33,26,24,26],[33,30,24,26,"getExtensionData"],[33,61,24,42],[33,63,24,43,"ExtensionType"],[33,91,24,56],[33,92,24,57,"TransferHookAccount"],[33,111,24,76],[33,113,24,78,"account"],[33,120,24,85],[33,121,24,86,"tlvData"],[33,128,24,93],[33,129,24,94],[34,4,25,4],[34,8,25,8,"extensionData"],[34,21,25,21],[34,26,25,26],[34,30,25,30],[34,32,25,32],[35,6,26,8],[35,13,26,15,"TransferHookAccountLayout"],[35,38,26,40],[35,39,26,41,"decode"],[35,45,26,47],[35,46,26,48,"extensionData"],[35,59,26,61],[35,60,26,62],[36,4,27,4],[36,5,27,5],[36,11,28,9],[37,6,29,8],[37,13,29,15],[37,17,29,19],[38,4,30,4],[39,2,31,0],[40,2,32,7],[40,11,32,16,"getExtraAccountMetaAddress"],[40,37,32,42,"getExtraAccountMetaAddress"],[40,38,32,43,"mint"],[40,42,32,47],[40,44,32,49,"programId"],[40,53,32,58],[40,55,32,60],[41,4,33,4],[41,10,33,10,"seeds"],[41,15,33,15],[41,18,33,18],[41,19,33,19,"Buffer"],[41,25,33,25],[41,26,33,26,"from"],[41,30,33,30],[41,31,33,31],[41,52,33,52],[41,53,33,53],[41,55,33,55,"mint"],[41,59,33,59],[41,60,33,60,"toBuffer"],[41,68,33,68],[41,69,33,69],[41,70,33,70],[41,71,33,71],[42,4,34,4],[42,11,34,11,"PublicKey"],[42,25,34,20],[42,26,34,21,"findProgramAddressSync"],[42,48,34,43],[42,49,34,44,"seeds"],[42,54,34,49],[42,56,34,51,"programId"],[42,65,34,60],[42,66,34,61],[42,67,34,62],[42,68,34,63],[42,69,34,64],[43,2,35,0],[44,2,36,0],[45,2,37,7],[45,8,37,13,"ExtraAccountMetaLayout"],[45,30,37,35],[45,33,37,35,"exports"],[45,40,37,35],[45,41,37,35,"ExtraAccountMetaLayout"],[45,63,37,35],[45,66,37,38],[45,70,37,38,"struct"],[45,90,37,44],[45,92,37,45],[45,93,38,4],[45,97,38,4,"u8"],[45,113,38,6],[45,115,38,7],[45,130,38,22],[45,131,38,23],[45,133,39,4],[45,137,39,4,"blob"],[45,155,39,8],[45,157,39,9],[45,159,39,11],[45,161,39,13],[45,176,39,28],[45,177,39,29],[45,179,40,4],[45,183,40,4,"bool"],[45,206,40,8],[45,208,40,9],[45,218,40,19],[45,219,40,20],[45,221,41,4],[45,225,41,4,"bool"],[45,248,41,8],[45,250,41,9],[45,262,41,21],[45,263,41,22],[45,264,42,1],[45,265,42,2],[46,2,43,0],[47,2,44,7],[47,8,44,13,"ExtraAccountMetaListLayout"],[47,34,44,39],[47,37,44,39,"exports"],[47,44,44,39],[47,45,44,39,"ExtraAccountMetaListLayout"],[47,71,44,39],[47,74,44,42],[47,78,44,42,"struct"],[47,98,44,48],[47,100,44,49],[47,101,45,4],[47,105,45,4,"u32"],[47,122,45,7],[47,124,45,8],[47,131,45,15],[47,132,45,16],[47,134,46,4],[47,138,46,4,"seq"],[47,155,46,7],[47,157,46,8,"ExtraAccountMetaLayout"],[47,179,46,30],[47,181,46,32],[47,185,46,32,"greedy"],[47,205,46,38],[47,207,46,39,"ExtraAccountMetaLayout"],[47,229,46,61],[47,230,46,62,"span"],[47,234,46,66],[47,235,46,67],[47,237,46,69],[47,252,46,84],[47,253,46,85],[47,254,47,1],[47,255,47,2],[48,2,48,0],[49,2,49,7],[49,8,49,13,"ExtraAccountMetaAccountDataLayout"],[49,41,49,46],[49,44,49,46,"exports"],[49,51,49,46],[49,52,49,46,"ExtraAccountMetaAccountDataLayout"],[49,85,49,46],[49,88,49,49],[49,92,49,49,"struct"],[49,112,49,55],[49,114,49,56],[49,115,50,4],[49,119,50,4,"u64"],[49,141,50,7],[49,143,50,8],[49,169,50,34],[49,170,50,35],[49,172,51,4],[49,176,51,4,"u32"],[49,193,51,7],[49,195,51,8],[49,203,51,16],[49,204,51,17],[49,206,52,4,"ExtraAccountMetaListLayout"],[49,232,52,30],[49,233,52,31,"replicate"],[49,242,52,40],[49,243,52,41],[49,262,52,60],[49,263,52,61],[49,264,53,1],[49,265,53,2],[50,2,54,0],[51,2,55,7],[51,11,55,16,"getExtraAccountMetas"],[51,31,55,36,"getExtraAccountMetas"],[51,32,55,37,"account"],[51,39,55,44],[51,41,55,46],[52,4,56,4],[52,10,56,10,"extraAccountsList"],[52,27,56,27],[52,30,56,30,"ExtraAccountMetaAccountDataLayout"],[52,63,56,63],[52,64,56,64,"decode"],[52,70,56,70],[52,71,56,71,"account"],[52,78,56,78],[52,79,56,79,"data"],[52,83,56,83],[52,84,56,84],[52,85,56,85,"extraAccountsList"],[52,102,56,102],[53,4,57,4],[53,11,57,11,"extraAccountsList"],[53,28,57,28],[53,29,57,29,"extraAccounts"],[53,42,57,42],[53,43,57,43,"slice"],[53,48,57,48],[53,49,57,49],[53,50,57,50],[53,52,57,52,"extraAccountsList"],[53,69,57,69],[53,70,57,70,"count"],[53,75,57,75],[53,76,57,76],[54,2,58,0],[55,2,59,0],[56,2,60,7],[56,17,60,22,"resolveExtraAccountMeta"],[56,40,60,45,"resolveExtraAccountMeta"],[56,41,60,46,"connection"],[56,51,60,56],[56,53,60,58,"extraMeta"],[56,62,60,67],[56,64,60,69,"previousMetas"],[56,77,60,82],[56,79,60,84,"instructionData"],[56,94,60,99],[56,96,60,101,"transferHookProgramId"],[56,117,60,122],[56,119,60,124],[57,4,61,4],[57,8,61,8,"extraMeta"],[57,17,61,17],[57,18,61,18,"discriminator"],[57,31,61,31],[57,36,61,36],[57,37,61,37],[57,39,61,39],[58,6,62,8],[58,13,62,15],[59,8,63,12,"pubkey"],[59,14,63,18],[59,16,63,20],[59,20,63,24,"PublicKey"],[59,34,63,33],[59,35,63,34,"extraMeta"],[59,44,63,43],[59,45,63,44,"addressConfig"],[59,58,63,57],[59,59,63,58],[60,8,64,12,"isSigner"],[60,16,64,20],[60,18,64,22,"extraMeta"],[60,27,64,31],[60,28,64,32,"isSigner"],[60,36,64,40],[61,8,65,12,"isWritable"],[61,18,65,22],[61,20,65,24,"extraMeta"],[61,29,65,33],[61,30,65,34,"isWritable"],[62,6,66,8],[62,7,66,9],[63,4,67,4],[63,5,67,5],[63,11,68,9],[63,15,68,13,"extraMeta"],[63,24,68,22],[63,25,68,23,"discriminator"],[63,38,68,36],[63,43,68,41],[63,44,68,42],[63,46,68,44],[64,6,69,8],[64,12,69,14,"pubkey"],[64,18,69,20],[64,21,69,23],[64,27,69,29],[64,31,69,29,"unpackPubkeyData"],[64,59,69,45],[64,61,69,46,"extraMeta"],[64,70,69,55],[64,71,69,56,"addressConfig"],[64,84,69,69],[64,86,69,71,"previousMetas"],[64,99,69,84],[64,101,69,86,"instructionData"],[64,116,69,101],[64,118,69,103,"connection"],[64,128,69,113],[64,129,69,114],[65,6,70,8],[65,13,70,15],[66,8,71,12,"pubkey"],[66,14,71,18],[67,8,72,12,"isSigner"],[67,16,72,20],[67,18,72,22,"extraMeta"],[67,27,72,31],[67,28,72,32,"isSigner"],[67,36,72,40],[68,8,73,12,"isWritable"],[68,18,73,22],[68,20,73,24,"extraMeta"],[68,29,73,33],[68,30,73,34,"isWritable"],[69,6,74,8],[69,7,74,9],[70,4,75,4],[71,4,76,4],[71,8,76,8,"programId"],[71,17,76,17],[71,20,76,20,"PublicKey"],[71,34,76,29],[71,35,76,30,"default"],[71,42,76,37],[72,4,77,4],[72,8,77,8,"extraMeta"],[72,17,77,17],[72,18,77,18,"discriminator"],[72,31,77,31],[72,36,77,36],[72,37,77,37],[72,39,77,39],[73,6,78,8,"programId"],[73,15,78,17],[73,18,78,20,"transferHookProgramId"],[73,39,78,41],[74,4,79,4],[74,5,79,5],[74,11,80,9],[75,6,81,8],[75,12,81,14,"accountIndex"],[75,24,81,26],[75,27,81,29,"extraMeta"],[75,36,81,38],[75,37,81,39,"discriminator"],[75,50,81,52],[75,54,81,56],[75,55,81,57],[75,59,81,61],[75,60,81,62],[75,61,81,63],[76,6,82,8],[76,10,82,12,"previousMetas"],[76,23,82,25],[76,24,82,26,"length"],[76,30,82,32],[76,34,82,36,"accountIndex"],[76,46,82,48],[76,48,82,50],[77,8,83,12],[77,14,83,18],[77,18,83,22,"TokenTransferHookAccountNotFound"],[77,58,83,54],[77,59,83,55],[77,60,83,56],[78,6,84,8],[79,6,85,8,"programId"],[79,15,85,17],[79,18,85,20,"previousMetas"],[79,31,85,33],[79,32,85,34,"accountIndex"],[79,44,85,46],[79,45,85,47],[79,46,85,48,"pubkey"],[79,52,85,54],[80,4,86,4],[81,4,87,4],[81,10,87,10,"seeds"],[81,15,87,15],[81,18,87,18],[81,24,87,24],[81,28,87,24,"unpackSeeds"],[81,46,87,35],[81,48,87,36,"extraMeta"],[81,57,87,45],[81,58,87,46,"addressConfig"],[81,71,87,59],[81,73,87,61,"previousMetas"],[81,86,87,74],[81,88,87,76,"instructionData"],[81,103,87,91],[81,105,87,93,"connection"],[81,115,87,103],[81,116,87,104],[82,4,88,4],[82,10,88,10,"pubkey"],[82,16,88,16],[82,19,88,19,"PublicKey"],[82,33,88,28],[82,34,88,29,"findProgramAddressSync"],[82,56,88,51],[82,57,88,52,"seeds"],[82,62,88,57],[82,64,88,59,"programId"],[82,73,88,68],[82,74,88,69],[82,75,88,70],[82,76,88,71],[82,77,88,72],[83,4,89,4],[83,11,89,11],[84,6,89,13,"pubkey"],[84,12,89,19],[85,6,89,21,"isSigner"],[85,14,89,29],[85,16,89,31,"extraMeta"],[85,25,89,40],[85,26,89,41,"isSigner"],[85,34,89,49],[86,6,89,51,"isWritable"],[86,16,89,61],[86,18,89,63,"extraMeta"],[86,27,89,72],[86,28,89,73,"isWritable"],[87,4,89,84],[87,5,89,85],[88,2,90,0],[89,0,90,1],[89,3]],"functionMap":{"names":["<global>","getTransferHook","getTransferHookAccount","getExtraAccountMetaAddress","getExtraAccountMetas","resolveExtraAccountMeta"],"mappings":"AAA;OCU;CDQ;OEI;CFQ;OGC;CHG;OIoB;CJG;OKE;CL8B"}},"type":"js/module"}]}