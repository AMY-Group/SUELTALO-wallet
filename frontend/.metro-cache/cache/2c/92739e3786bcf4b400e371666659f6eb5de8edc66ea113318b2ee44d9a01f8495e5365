{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../actions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":55,"index":129}}],"key":"NZfIk1TkYePfdrID7eibfh4eb4I=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":59,"index":189}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"./instructions.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":84,"index":274}}],"key":"Fxi0HOb3XwlWafScFYPpLit1DEQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.pause = pause;\n  exports.resume = resume;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _internal = require(_dependencyMap[1], \"../../actions/internal.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _instructions = require(_dependencyMap[3], \"./instructions.js\");\n  /**\n   * Pause a pausable mint\n   *\n   * @param connection      Connection to use\n   * @param payer           Payer of the transaction fees\n   * @param mint            Public key of the mint\n   * @param owner           The pausable config authority\n   * @param multiSigners    Signing accounts if `owner` is a multisig\n   * @param confirmOptions  Options for confirming the transaction\n   * @param programId       SPL Token program account\n   *\n   * @return Public key of the mint\n   */\n  async function pause(connection, payer, mint, owner, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createPauseInstruction)(mint, ownerPublicKey, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n  /**\n   * Resume a pausable mint\n   *\n   * @param connection      Connection to use\n   * @param payer           Payer of the transaction fees\n   * @param mint            Public key of the mint\n   * @param owner           The pausable config authority\n   * @param multiSigners    Signing accounts if `owner` is a multisig\n   * @param confirmOptions  Options for confirming the transaction\n   * @param programId       SPL Token program account\n   *\n   * @return Public key of the mint\n   */\n  async function resume(connection, payer, mint, owner, multiSigners = [], confirmOptions, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _instructions.createResumeInstruction)(mint, ownerPublicKey, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":47,"map":[[7,2,1,0],[7,6,1,0,"_web"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_internal"],[8,15,2,0],[8,18,2,0,"require"],[8,25,2,0],[8,26,2,0,"_dependencyMap"],[8,40,2,0],[9,2,3,0],[9,6,3,0,"_constants"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,4,0],[10,6,4,0,"_instructions"],[10,19,4,0],[10,22,4,0,"require"],[10,29,4,0],[10,30,4,0,"_dependencyMap"],[10,44,4,0],[11,2,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,2,18,7],[24,17,18,22,"pause"],[24,22,18,27,"pause"],[24,23,18,28,"connection"],[24,33,18,38],[24,35,18,40,"payer"],[24,40,18,45],[24,42,18,47,"mint"],[24,46,18,51],[24,48,18,53,"owner"],[24,53,18,58],[24,55,18,60,"multiSigners"],[24,67,18,72],[24,70,18,75],[24,72,18,77],[24,74,18,79,"confirmOptions"],[24,88,18,93],[24,90,18,95,"programId"],[24,99,18,104],[24,102,18,107,"TOKEN_2022_PROGRAM_ID"],[24,134,18,128],[24,136,18,130],[25,4,19,4],[25,10,19,10],[25,11,19,11,"ownerPublicKey"],[25,25,19,25],[25,27,19,27,"signers"],[25,34,19,34],[25,35,19,35],[25,38,19,38],[25,42,19,38,"getSigners"],[25,62,19,48],[25,64,19,49,"owner"],[25,69,19,54],[25,71,19,56,"multiSigners"],[25,83,19,68],[25,84,19,69],[26,4,20,4],[26,10,20,10,"transaction"],[26,21,20,21],[26,24,20,24],[26,28,20,28,"Transaction"],[26,44,20,39],[26,45,20,40],[26,46,20,41],[26,47,20,42,"add"],[26,50,20,45],[26,51,20,46],[26,55,20,46,"createPauseInstruction"],[26,91,20,68],[26,93,20,69,"mint"],[26,97,20,73],[26,99,20,75,"ownerPublicKey"],[26,113,20,89],[26,115,20,91,"multiSigners"],[26,127,20,103],[26,129,20,105,"programId"],[26,138,20,114],[26,139,20,115],[26,140,20,116],[27,4,21,4],[27,11,21,11],[27,17,21,17],[27,21,21,17,"sendAndConfirmTransaction"],[27,51,21,42],[27,53,21,43,"connection"],[27,63,21,53],[27,65,21,55,"transaction"],[27,76,21,66],[27,78,21,68],[27,79,21,69,"payer"],[27,84,21,74],[27,86,21,76],[27,89,21,79,"signers"],[27,96,21,86],[27,97,21,87],[27,99,21,89,"confirmOptions"],[27,113,21,103],[27,114,21,104],[28,2,22,0],[29,2,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,2,36,7],[42,17,36,22,"resume"],[42,23,36,28,"resume"],[42,24,36,29,"connection"],[42,34,36,39],[42,36,36,41,"payer"],[42,41,36,46],[42,43,36,48,"mint"],[42,47,36,52],[42,49,36,54,"owner"],[42,54,36,59],[42,56,36,61,"multiSigners"],[42,68,36,73],[42,71,36,76],[42,73,36,78],[42,75,36,80,"confirmOptions"],[42,89,36,94],[42,91,36,96,"programId"],[42,100,36,105],[42,103,36,108,"TOKEN_2022_PROGRAM_ID"],[42,135,36,129],[42,137,36,131],[43,4,37,4],[43,10,37,10],[43,11,37,11,"ownerPublicKey"],[43,25,37,25],[43,27,37,27,"signers"],[43,34,37,34],[43,35,37,35],[43,38,37,38],[43,42,37,38,"getSigners"],[43,62,37,48],[43,64,37,49,"owner"],[43,69,37,54],[43,71,37,56,"multiSigners"],[43,83,37,68],[43,84,37,69],[44,4,38,4],[44,10,38,10,"transaction"],[44,21,38,21],[44,24,38,24],[44,28,38,28,"Transaction"],[44,44,38,39],[44,45,38,40],[44,46,38,41],[44,47,38,42,"add"],[44,50,38,45],[44,51,38,46],[44,55,38,46,"createResumeInstruction"],[44,92,38,69],[44,94,38,70,"mint"],[44,98,38,74],[44,100,38,76,"ownerPublicKey"],[44,114,38,90],[44,116,38,92,"multiSigners"],[44,128,38,104],[44,130,38,106,"programId"],[44,139,38,115],[44,140,38,116],[44,141,38,117],[45,4,39,4],[45,11,39,11],[45,17,39,17],[45,21,39,17,"sendAndConfirmTransaction"],[45,51,39,42],[45,53,39,43,"connection"],[45,63,39,53],[45,65,39,55,"transaction"],[45,76,39,66],[45,78,39,68],[45,79,39,69,"payer"],[45,84,39,74],[45,86,39,76],[45,89,39,79,"signers"],[45,96,39,86],[45,97,39,87],[45,99,39,89,"confirmOptions"],[45,113,39,103],[45,114,39,104],[46,2,40,0],[47,0,40,1],[47,3]],"functionMap":{"names":["<global>","pause","resume"],"mappings":"AAA;OCiB;CDI;OEc;CFI"}},"type":"js/module"}]}