{"dependencies":[{"name":"react-native-randombytes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":14},"end":{"line":3,"column":54,"index":68}}],"key":"zLR+gv+6NcenIuKwnKr3rVWWnro=","exportNames":["*"]}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":36,"index":768},"end":{"line":26,"column":58,"index":790}}],"key":"7Wxhpesb6O8KtkMXbqnF6GdF3fo=","exportNames":["*"]}},{"name":"create-hmac","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":36,"index":827},"end":{"line":27,"column":58,"index":849}}],"key":"Hb4O2fQ/eTYGCsl146rR3M0LxJk=","exportNames":["*"]}},{"name":"browserify-sign/algos","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":98,"index":949},"end":{"line":29,"column":130,"index":981}}],"key":"NDj22/aFRkxzKDIZ0uV/h8ik138=","exportNames":["*"]}},{"name":"pbkdf2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":34,"column":8,"index":1045},"end":{"line":34,"column":25,"index":1062}}],"key":"1/dbhwRh6o3OR9626P/2VdN0D7E=","exportNames":["*"]}},{"name":"browserify-cipher","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":38,"column":10,"index":1134},"end":{"line":38,"column":38,"index":1162}}],"key":"lm3DN2qqXAlPXt4LbnZ4XlPivcA=","exportNames":["*"]}},{"name":"diffie-hellman","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":9,"index":1400},"end":{"line":54,"column":34,"index":1425}}],"key":"he3OnHYxMiUllxW9yvzh7ixbzok=","exportNames":["*"]}},{"name":"browserify-sign","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":65,"column":11,"index":1615},"end":{"line":65,"column":37,"index":1641}}],"key":"vKfPgfuBKkzzRxYzEjZ/mt5I+T8=","exportNames":["*"]}},{"name":"create-ecdh","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":75,"column":21,"index":1779},"end":{"line":75,"column":43,"index":1801}}],"key":"fzG3R0yrmZz/sxKcsbE1cId9ua8=","exportNames":["*"]}},{"name":"public-encrypt","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":77,"column":20,"index":1823},"end":{"line":77,"column":45,"index":1848}}],"key":"ObDc1zC42Dgo9VREZ2HCbiajMVs=","exportNames":["*"]}},{"name":"randomfill","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":88,"column":9,"index":2006},"end":{"line":88,"column":30,"index":2027}}],"key":"7gyKLP16FpesyFP0HPLfhcd+xJU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _reactNativeRandombytes = require(_dependencyMap[0], \"react-native-randombytes\");\n  exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = _reactNativeRandombytes.randomBytes;\n\n  // implement window.getRandomValues(), for packages that rely on it\n  if (false) {\n    if (!window.crypto) window.crypto = {};\n    if (!window.crypto.getRandomValues) {\n      window.crypto.getRandomValues = function getRandomValues(arr) {\n        let orig = arr;\n        if (arr.byteLength != arr.length) {\n          // Get access to the underlying raw bytes\n          arr = new Uint8Array(arr.buffer);\n        }\n        const bytes = (0, _reactNativeRandombytes.randomBytes)(arr.length);\n        for (var i = 0; i < bytes.length; i++) {\n          arr[i] = bytes[i];\n        }\n        return orig;\n      };\n    }\n  }\n  exports.createHash = exports.Hash = require(_dependencyMap[1], \"create-hash\");\n  exports.createHmac = exports.Hmac = require(_dependencyMap[2], \"create-hmac\");\n  var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require(_dependencyMap[3], \"browserify-sign/algos\")));\n  exports.getHashes = function () {\n    return hashes;\n  };\n  var p = require(_dependencyMap[4], \"pbkdf2\");\n  exports.pbkdf2 = p.pbkdf2;\n  exports.pbkdf2Sync = p.pbkdf2Sync;\n  var aes = require(_dependencyMap[5], \"browserify-cipher\");\n  ['Cipher', 'createCipher', 'Cipheriv', 'createCipheriv', 'Decipher', 'createDecipher', 'Decipheriv', 'createDecipheriv', 'getCiphers', 'listCiphers'].forEach(function (key) {\n    exports[key] = aes[key];\n  });\n  var dh = require(_dependencyMap[6], \"diffie-hellman\");\n  ['DiffieHellmanGroup', 'createDiffieHellmanGroup', 'getDiffieHellman', 'createDiffieHellman', 'DiffieHellman'].forEach(function (key) {\n    exports[key] = dh[key];\n  });\n  var sign = require(_dependencyMap[7], \"browserify-sign\");\n  ['createSign', 'Sign', 'createVerify', 'Verify'].forEach(function (key) {\n    exports[key] = sign[key];\n  });\n  exports.createECDH = require(_dependencyMap[8], \"create-ecdh\");\n  var publicEncrypt = require(_dependencyMap[9], \"public-encrypt\");\n  ['publicEncrypt', 'privateEncrypt', 'publicDecrypt', 'privateDecrypt'].forEach(function (key) {\n    exports[key] = publicEncrypt[key];\n  });\n  var rf = require(_dependencyMap[10], \"randomfill\");\n  exports.randomFill = rf.randomFill;\n  exports.randomFillSync = rf.randomFillSync\n\n  // the least I can do is make error messages for the rest of the node.js/crypto api.\n  ;\n  ['createCredentials'].forEach(function (name) {\n    exports[name] = function () {\n      throw new Error(['sorry, ' + name + ' is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\\n'));\n    };\n  });\n});","lineCount":62,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,0,"_reactNativeRandombytes"],[4,29,3,0],[4,32,3,0,"require"],[4,39,3,0],[4,40,3,0,"_dependencyMap"],[4,54,3,0],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"randomBytes"],[5,21,4,19],[5,24,4,22,"exports"],[5,31,4,29],[5,32,4,30,"rng"],[5,35,4,33],[5,38,4,36,"exports"],[5,45,4,43],[5,46,4,44,"pseudoRandomBytes"],[5,63,4,61],[5,66,4,64,"exports"],[5,73,4,71],[5,74,4,72,"prng"],[5,78,4,76],[5,81,4,79,"randomBytes"],[5,116,4,90],[7,2,6,0],[8,2,7,0],[8,13,7,32],[9,4,8,2],[9,8,8,6],[9,9,8,7,"window"],[9,15,8,13],[9,16,8,14,"crypto"],[9,22,8,20],[9,24,8,22,"window"],[9,30,8,28],[9,31,8,29,"crypto"],[9,37,8,35],[9,40,8,38],[9,41,8,39],[9,42,8,40],[10,4,9,2],[10,8,9,6],[10,9,9,7,"window"],[10,15,9,13],[10,16,9,14,"crypto"],[10,22,9,20],[10,23,9,21,"getRandomValues"],[10,38,9,36],[10,40,9,38],[11,6,10,4,"window"],[11,12,10,10],[11,13,10,11,"crypto"],[11,19,10,17],[11,20,10,18,"getRandomValues"],[11,35,10,33],[11,38,10,36],[11,47,10,45,"getRandomValues"],[11,62,10,60,"getRandomValues"],[11,63,10,62,"arr"],[11,66,10,65],[11,68,10,67],[12,8,11,6],[12,12,11,10,"orig"],[12,16,11,14],[12,19,11,17,"arr"],[12,22,11,20],[13,8,12,6],[13,12,12,10,"arr"],[13,15,12,13],[13,16,12,14,"byteLength"],[13,26,12,24],[13,30,12,28,"arr"],[13,33,12,31],[13,34,12,32,"length"],[13,40,12,38],[13,42,12,40],[14,10,13,8],[15,10,14,8,"arr"],[15,13,14,11],[15,16,14,14],[15,20,14,18,"Uint8Array"],[15,30,14,28],[15,31,14,29,"arr"],[15,34,14,32],[15,35,14,33,"buffer"],[15,41,14,39],[15,42,14,40],[16,8,15,6],[17,8,16,6],[17,14,16,12,"bytes"],[17,19,16,17],[17,22,16,20],[17,26,16,20,"randomBytes"],[17,61,16,31],[17,63,16,32,"arr"],[17,66,16,35],[17,67,16,36,"length"],[17,73,16,42],[17,74,16,43],[18,8,17,6],[18,13,17,11],[18,17,17,15,"i"],[18,18,17,16],[18,21,17,19],[18,22,17,20],[18,24,17,22,"i"],[18,25,17,23],[18,28,17,26,"bytes"],[18,33,17,31],[18,34,17,32,"length"],[18,40,17,38],[18,42,17,40,"i"],[18,43,17,41],[18,45,17,43],[18,47,17,45],[19,10,18,8,"arr"],[19,13,18,11],[19,14,18,12,"i"],[19,15,18,13],[19,16,18,14],[19,19,18,17,"bytes"],[19,24,18,22],[19,25,18,23,"i"],[19,26,18,24],[19,27,18,25],[20,8,19,6],[21,8,21,6],[21,15,21,13,"orig"],[21,19,21,17],[22,6,22,4],[22,7,22,5],[23,4,23,2],[24,2,24,0],[25,2,26,0,"exports"],[25,9,26,7],[25,10,26,8,"createHash"],[25,20,26,18],[25,23,26,21,"exports"],[25,30,26,28],[25,31,26,29,"Hash"],[25,35,26,33],[25,38,26,36,"require"],[25,45,26,43],[25,46,26,43,"_dependencyMap"],[25,60,26,43],[25,78,26,57],[25,79,26,58],[26,2,27,0,"exports"],[26,9,27,7],[26,10,27,8,"createHmac"],[26,20,27,18],[26,23,27,21,"exports"],[26,30,27,28],[26,31,27,29,"Hmac"],[26,35,27,33],[26,38,27,36,"require"],[26,45,27,43],[26,46,27,43,"_dependencyMap"],[26,60,27,43],[26,78,27,57],[26,79,27,58],[27,2,29,0],[27,6,29,4,"hashes"],[27,12,29,10],[27,15,29,13],[27,16,29,14],[27,22,29,20],[27,24,29,22],[27,32,29,30],[27,34,29,32],[27,42,29,40],[27,44,29,42],[27,52,29,50],[27,54,29,52],[27,62,29,60],[27,64,29,62],[27,69,29,67],[27,71,29,69],[27,79,29,77],[27,80,29,78],[27,81,29,79,"concat"],[27,87,29,85],[27,88,29,86,"Object"],[27,94,29,92],[27,95,29,93,"keys"],[27,99,29,97],[27,100,29,98,"require"],[27,107,29,105],[27,108,29,105,"_dependencyMap"],[27,122,29,105],[27,150,29,129],[27,151,29,130],[27,152,29,131],[27,153,29,132],[28,2,30,0,"exports"],[28,9,30,7],[28,10,30,8,"getHashes"],[28,19,30,17],[28,22,30,20],[28,34,30,32],[29,4,31,2],[29,11,31,9,"hashes"],[29,17,31,15],[30,2,32,0],[30,3,32,1],[31,2,34,0],[31,6,34,4,"p"],[31,7,34,5],[31,10,34,8,"require"],[31,17,34,15],[31,18,34,15,"_dependencyMap"],[31,32,34,15],[31,45,34,24],[31,46,34,25],[32,2,35,0,"exports"],[32,9,35,7],[32,10,35,8,"pbkdf2"],[32,16,35,14],[32,19,35,17,"p"],[32,20,35,18],[32,21,35,19,"pbkdf2"],[32,27,35,25],[33,2,36,0,"exports"],[33,9,36,7],[33,10,36,8,"pbkdf2Sync"],[33,20,36,18],[33,23,36,21,"p"],[33,24,36,22],[33,25,36,23,"pbkdf2Sync"],[33,35,36,33],[34,2,38,0],[34,6,38,4,"aes"],[34,9,38,7],[34,12,38,10,"require"],[34,19,38,17],[34,20,38,17,"_dependencyMap"],[34,34,38,17],[34,58,38,37],[34,59,38,38],[35,2,39,1],[35,3,40,2],[35,11,40,10],[35,13,41,2],[35,27,41,16],[35,29,42,2],[35,39,42,12],[35,41,43,2],[35,57,43,18],[35,59,44,2],[35,69,44,12],[35,71,45,2],[35,87,45,18],[35,89,46,2],[35,101,46,14],[35,103,47,2],[35,121,47,20],[35,123,48,2],[35,135,48,14],[35,137,49,2],[35,150,49,15],[35,151,50,1],[35,152,50,2,"forEach"],[35,159,50,9],[35,160,50,10],[35,170,50,20,"key"],[35,173,50,23],[35,175,50,25],[36,4,51,2,"exports"],[36,11,51,9],[36,12,51,10,"key"],[36,15,51,13],[36,16,51,14],[36,19,51,17,"aes"],[36,22,51,20],[36,23,51,21,"key"],[36,26,51,24],[36,27,51,25],[37,2,52,0],[37,3,52,1],[37,4,52,2],[38,2,54,0],[38,6,54,4,"dh"],[38,8,54,6],[38,11,54,9,"require"],[38,18,54,16],[38,19,54,16,"_dependencyMap"],[38,33,54,16],[38,54,54,33],[38,55,54,34],[39,2,55,1],[39,3,56,2],[39,23,56,22],[39,25,57,2],[39,51,57,28],[39,53,58,2],[39,71,58,20],[39,73,59,2],[39,94,59,23],[39,96,60,2],[39,111,60,17],[39,112,61,1],[39,113,61,2,"forEach"],[39,120,61,9],[39,121,61,10],[39,131,61,20,"key"],[39,134,61,23],[39,136,61,25],[40,4,62,2,"exports"],[40,11,62,9],[40,12,62,10,"key"],[40,15,62,13],[40,16,62,14],[40,19,62,17,"dh"],[40,21,62,19],[40,22,62,20,"key"],[40,25,62,23],[40,26,62,24],[41,2,63,0],[41,3,63,1],[41,4,63,2],[42,2,65,0],[42,6,65,4,"sign"],[42,10,65,8],[42,13,65,11,"require"],[42,20,65,18],[42,21,65,18,"_dependencyMap"],[42,35,65,18],[42,57,65,36],[42,58,65,37],[43,2,66,1],[43,3,67,2],[43,15,67,14],[43,17,68,2],[43,23,68,8],[43,25,69,2],[43,39,69,16],[43,41,70,2],[43,49,70,10],[43,50,71,1],[43,51,71,2,"forEach"],[43,58,71,9],[43,59,71,10],[43,69,71,20,"key"],[43,72,71,23],[43,74,71,25],[44,4,72,2,"exports"],[44,11,72,9],[44,12,72,10,"key"],[44,15,72,13],[44,16,72,14],[44,19,72,17,"sign"],[44,23,72,21],[44,24,72,22,"key"],[44,27,72,25],[44,28,72,26],[45,2,73,0],[45,3,73,1],[45,4,73,2],[46,2,75,0,"exports"],[46,9,75,7],[46,10,75,8,"createECDH"],[46,20,75,18],[46,23,75,21,"require"],[46,30,75,28],[46,31,75,28,"_dependencyMap"],[46,45,75,28],[46,63,75,42],[46,64,75,43],[47,2,77,0],[47,6,77,4,"publicEncrypt"],[47,19,77,17],[47,22,77,20,"require"],[47,29,77,27],[47,30,77,27,"_dependencyMap"],[47,44,77,27],[47,65,77,44],[47,66,77,45],[48,2,79,1],[48,3,80,2],[48,18,80,17],[48,20,81,2],[48,36,81,18],[48,38,82,2],[48,53,82,17],[48,55,83,2],[48,71,83,18],[48,72,84,1],[48,73,84,2,"forEach"],[48,80,84,9],[48,81,84,10],[48,91,84,20,"key"],[48,94,84,23],[48,96,84,25],[49,4,85,2,"exports"],[49,11,85,9],[49,12,85,10,"key"],[49,15,85,13],[49,16,85,14],[49,19,85,17,"publicEncrypt"],[49,32,85,30],[49,33,85,31,"key"],[49,36,85,34],[49,37,85,35],[50,2,86,0],[50,3,86,1],[50,4,86,2],[51,2,88,0],[51,6,88,4,"rf"],[51,8,88,6],[51,11,88,9,"require"],[51,18,88,16],[51,19,88,16,"_dependencyMap"],[51,33,88,16],[51,51,88,29],[51,52,88,30],[52,2,90,0,"exports"],[52,9,90,7],[52,10,90,8,"randomFill"],[52,20,90,18],[52,23,90,21,"rf"],[52,25,90,23],[52,26,90,24,"randomFill"],[52,36,90,34],[53,2,91,0,"exports"],[53,9,91,7],[53,10,91,8,"randomFillSync"],[53,24,91,22],[53,27,91,25,"rf"],[53,29,91,27],[53,30,91,28,"randomFillSync"],[55,2,93,0],[56,2,93,0],[57,2,94,1],[57,3,95,2],[57,22,95,21],[57,23,96,1],[57,24,96,2,"forEach"],[57,31,96,9],[57,32,96,10],[57,42,96,20,"name"],[57,46,96,24],[57,48,96,26],[58,4,97,2,"exports"],[58,11,97,9],[58,12,97,10,"name"],[58,16,97,14],[58,17,97,15],[58,20,97,18],[58,32,97,30],[59,6,98,4],[59,12,98,10],[59,16,98,14,"Error"],[59,21,98,19],[59,22,98,20],[59,23,99,6],[59,32,99,15],[59,35,99,18,"name"],[59,39,99,22],[59,42,99,25],[59,67,99,50],[59,69,100,6],[59,94,100,31],[59,96,101,6],[59,152,101,62],[59,153,102,5],[59,154,102,6,"join"],[59,158,102,10],[59,159,102,11],[59,163,102,15],[59,164,102,16],[59,165,102,17],[60,4,103,2],[60,5,103,3],[61,2,104,0],[61,3,104,1],[61,4,104,2],[62,0,104,2],[62,3]],"functionMap":{"names":["<global>","getRandomValues","exports.getHashes","forEach$argument_0","exports.name"],"mappings":"AAA;oCCS;KDY;oBEQ;CFE;UGkB;CHE;UGS;CHE;UGQ;CHE;UGW;CHE;UGU;kBCC;GDM;CHC"}},"type":"js/module"}]}