{"dependencies":[{"name":"create-hmac","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":17,"index":359},"end":{"line":26,"column":39,"index":381}}],"key":"Hb4O2fQ/eTYGCsl146rR3M0LxJk=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":13,"index":396},"end":{"line":27,"column":35,"index":418}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"./precondition","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":22,"index":450},"end":{"line":29,"column":47,"index":475}}],"key":"3hHef+Vxail+ofP4apUhxWin99Y=","exportNames":["*"]}},{"name":"./default-encoding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":22,"index":499},"end":{"line":30,"column":51,"index":528}}],"key":"a2IPQ5AzBZHFiGKT3f2/0+RXQxw=","exportNames":["*"]}},{"name":"./to-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":15,"index":545},"end":{"line":31,"column":37,"index":567}}],"key":"A0agEiXN4wdre1ynp9QlfUviZI4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var sizes = {\n    __proto__: null,\n    md5: 16,\n    sha1: 20,\n    sha224: 28,\n    sha256: 32,\n    sha384: 48,\n    sha512: 64,\n    'sha512-256': 32,\n    rmd160: 20,\n    ripemd160: 20\n  };\n  var mapping = {\n    __proto__: null,\n    'sha-1': 'sha1',\n    'sha-224': 'sha224',\n    'sha-256': 'sha256',\n    'sha-384': 'sha384',\n    'sha-512': 'sha512',\n    'ripemd-160': 'ripemd160'\n  };\n  var createHmac = require(_dependencyMap[0], \"create-hmac\");\n  var Buffer = require(_dependencyMap[1], \"safe-buffer\").Buffer;\n  var checkParameters = require(_dependencyMap[2], \"./precondition\");\n  var defaultEncoding = require(_dependencyMap[3], \"./default-encoding\");\n  var toBuffer = require(_dependencyMap[4], \"./to-buffer\");\n  function pbkdf2(password, salt, iterations, keylen, digest) {\n    checkParameters(iterations, keylen);\n    password = toBuffer(password, defaultEncoding, 'Password');\n    salt = toBuffer(salt, defaultEncoding, 'Salt');\n    var lowerDigest = (digest || 'sha1').toLowerCase();\n    var mappedDigest = mapping[lowerDigest] || lowerDigest;\n    var size = sizes[mappedDigest];\n    if (typeof size !== 'number' || !size) {\n      throw new TypeError('Digest algorithm not supported: ' + digest);\n    }\n    var DK = Buffer.allocUnsafe(keylen);\n    var block1 = Buffer.allocUnsafe(salt.length + 4);\n    salt.copy(block1, 0, 0, salt.length);\n    var destPos = 0;\n    var hLen = size;\n    var l = Math.ceil(keylen / hLen);\n    for (var i = 1; i <= l; i++) {\n      block1.writeUInt32BE(i, salt.length);\n      var T = createHmac(mappedDigest, password).update(block1).digest();\n      var U = T;\n      for (var j = 1; j < iterations; j++) {\n        U = createHmac(mappedDigest, password).update(U).digest();\n        for (var k = 0; k < hLen; k++) {\n          T[k] ^= U[k];\n        }\n      }\n      T.copy(DK, destPos);\n      destPos += hLen;\n    }\n    return DK;\n  }\n  module.exports = pbkdf2;\n});","lineCount":62,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"sizes"],[4,11,3,9],[4,14,3,12],[5,4,4,1,"__proto__"],[5,13,4,10],[5,15,4,12],[5,19,4,16],[6,4,5,1,"md5"],[6,7,5,4],[6,9,5,6],[6,11,5,8],[7,4,6,1,"sha1"],[7,8,6,5],[7,10,6,7],[7,12,6,9],[8,4,7,1,"sha224"],[8,10,7,7],[8,12,7,9],[8,14,7,11],[9,4,8,1,"sha256"],[9,10,8,7],[9,12,8,9],[9,14,8,11],[10,4,9,1,"sha384"],[10,10,9,7],[10,12,9,9],[10,14,9,11],[11,4,10,1,"sha512"],[11,10,10,7],[11,12,10,9],[11,14,10,11],[12,4,11,1],[12,16,11,13],[12,18,11,15],[12,20,11,17],[13,4,12,1,"rmd160"],[13,10,12,7],[13,12,12,9],[13,14,12,11],[14,4,13,1,"ripemd160"],[14,13,13,10],[14,15,13,12],[15,2,14,0],[15,3,14,1],[16,2,16,0],[16,6,16,4,"mapping"],[16,13,16,11],[16,16,16,14],[17,4,17,1,"__proto__"],[17,13,17,10],[17,15,17,12],[17,19,17,16],[18,4,18,1],[18,11,18,8],[18,13,18,10],[18,19,18,16],[19,4,19,1],[19,13,19,10],[19,15,19,12],[19,23,19,20],[20,4,20,1],[20,13,20,10],[20,15,20,12],[20,23,20,20],[21,4,21,1],[21,13,21,10],[21,15,21,12],[21,23,21,20],[22,4,22,1],[22,13,22,10],[22,15,22,12],[22,23,22,20],[23,4,23,1],[23,16,23,13],[23,18,23,15],[24,2,24,0],[24,3,24,1],[25,2,26,0],[25,6,26,4,"createHmac"],[25,16,26,14],[25,19,26,17,"require"],[25,26,26,24],[25,27,26,24,"_dependencyMap"],[25,41,26,24],[25,59,26,38],[25,60,26,39],[26,2,27,0],[26,6,27,4,"Buffer"],[26,12,27,10],[26,15,27,13,"require"],[26,22,27,20],[26,23,27,20,"_dependencyMap"],[26,37,27,20],[26,55,27,34],[26,56,27,35],[26,57,27,36,"Buffer"],[26,63,27,42],[27,2,29,0],[27,6,29,4,"checkParameters"],[27,21,29,19],[27,24,29,22,"require"],[27,31,29,29],[27,32,29,29,"_dependencyMap"],[27,46,29,29],[27,67,29,46],[27,68,29,47],[28,2,30,0],[28,6,30,4,"defaultEncoding"],[28,21,30,19],[28,24,30,22,"require"],[28,31,30,29],[28,32,30,29,"_dependencyMap"],[28,46,30,29],[28,71,30,50],[28,72,30,51],[29,2,31,0],[29,6,31,4,"toBuffer"],[29,14,31,12],[29,17,31,15,"require"],[29,24,31,22],[29,25,31,22,"_dependencyMap"],[29,39,31,22],[29,57,31,36],[29,58,31,37],[30,2,33,0],[30,11,33,9,"pbkdf2"],[30,17,33,15,"pbkdf2"],[30,18,33,16,"password"],[30,26,33,24],[30,28,33,26,"salt"],[30,32,33,30],[30,34,33,32,"iterations"],[30,44,33,42],[30,46,33,44,"keylen"],[30,52,33,50],[30,54,33,52,"digest"],[30,60,33,58],[30,62,33,60],[31,4,34,1,"checkParameters"],[31,19,34,16],[31,20,34,17,"iterations"],[31,30,34,27],[31,32,34,29,"keylen"],[31,38,34,35],[31,39,34,36],[32,4,35,1,"password"],[32,12,35,9],[32,15,35,12,"toBuffer"],[32,23,35,20],[32,24,35,21,"password"],[32,32,35,29],[32,34,35,31,"defaultEncoding"],[32,49,35,46],[32,51,35,48],[32,61,35,58],[32,62,35,59],[33,4,36,1,"salt"],[33,8,36,5],[33,11,36,8,"toBuffer"],[33,19,36,16],[33,20,36,17,"salt"],[33,24,36,21],[33,26,36,23,"defaultEncoding"],[33,41,36,38],[33,43,36,40],[33,49,36,46],[33,50,36,47],[34,4,38,1],[34,8,38,5,"lowerDigest"],[34,19,38,16],[34,22,38,19],[34,23,38,20,"digest"],[34,29,38,26],[34,33,38,30],[34,39,38,36],[34,41,38,38,"toLowerCase"],[34,52,38,49],[34,53,38,50],[34,54,38,51],[35,4,39,1],[35,8,39,5,"mappedDigest"],[35,20,39,17],[35,23,39,20,"mapping"],[35,30,39,27],[35,31,39,28,"lowerDigest"],[35,42,39,39],[35,43,39,40],[35,47,39,44,"lowerDigest"],[35,58,39,55],[36,4,40,1],[36,8,40,5,"size"],[36,12,40,9],[36,15,40,12,"sizes"],[36,20,40,17],[36,21,40,18,"mappedDigest"],[36,33,40,30],[36,34,40,31],[37,4,41,1],[37,8,41,5],[37,15,41,12,"size"],[37,19,41,16],[37,24,41,21],[37,32,41,29],[37,36,41,33],[37,37,41,34,"size"],[37,41,41,38],[37,43,41,40],[38,6,42,2],[38,12,42,8],[38,16,42,12,"TypeError"],[38,25,42,21],[38,26,42,22],[38,60,42,56],[38,63,42,59,"digest"],[38,69,42,65],[38,70,42,66],[39,4,43,1],[40,4,45,1],[40,8,45,5,"DK"],[40,10,45,7],[40,13,45,10,"Buffer"],[40,19,45,16],[40,20,45,17,"allocUnsafe"],[40,31,45,28],[40,32,45,29,"keylen"],[40,38,45,35],[40,39,45,36],[41,4,46,1],[41,8,46,5,"block1"],[41,14,46,11],[41,17,46,14,"Buffer"],[41,23,46,20],[41,24,46,21,"allocUnsafe"],[41,35,46,32],[41,36,46,33,"salt"],[41,40,46,37],[41,41,46,38,"length"],[41,47,46,44],[41,50,46,47],[41,51,46,48],[41,52,46,49],[42,4,47,1,"salt"],[42,8,47,5],[42,9,47,6,"copy"],[42,13,47,10],[42,14,47,11,"block1"],[42,20,47,17],[42,22,47,19],[42,23,47,20],[42,25,47,22],[42,26,47,23],[42,28,47,25,"salt"],[42,32,47,29],[42,33,47,30,"length"],[42,39,47,36],[42,40,47,37],[43,4,49,1],[43,8,49,5,"destPos"],[43,15,49,12],[43,18,49,15],[43,19,49,16],[44,4,50,1],[44,8,50,5,"hLen"],[44,12,50,9],[44,15,50,12,"size"],[44,19,50,16],[45,4,51,1],[45,8,51,5,"l"],[45,9,51,6],[45,12,51,9,"Math"],[45,16,51,13],[45,17,51,14,"ceil"],[45,21,51,18],[45,22,51,19,"keylen"],[45,28,51,25],[45,31,51,28,"hLen"],[45,35,51,32],[45,36,51,33],[46,4,53,1],[46,9,53,6],[46,13,53,10,"i"],[46,14,53,11],[46,17,53,14],[46,18,53,15],[46,20,53,17,"i"],[46,21,53,18],[46,25,53,22,"l"],[46,26,53,23],[46,28,53,25,"i"],[46,29,53,26],[46,31,53,28],[46,33,53,30],[47,6,54,2,"block1"],[47,12,54,8],[47,13,54,9,"writeUInt32BE"],[47,26,54,22],[47,27,54,23,"i"],[47,28,54,24],[47,30,54,26,"salt"],[47,34,54,30],[47,35,54,31,"length"],[47,41,54,37],[47,42,54,38],[48,6,56,2],[48,10,56,6,"T"],[48,11,56,7],[48,14,56,10,"createHmac"],[48,24,56,20],[48,25,56,21,"mappedDigest"],[48,37,56,33],[48,39,56,35,"password"],[48,47,56,43],[48,48,56,44],[48,49,56,45,"update"],[48,55,56,51],[48,56,56,52,"block1"],[48,62,56,58],[48,63,56,59],[48,64,56,60,"digest"],[48,70,56,66],[48,71,56,67],[48,72,56,68],[49,6,57,2],[49,10,57,6,"U"],[49,11,57,7],[49,14,57,10,"T"],[49,15,57,11],[50,6,59,2],[50,11,59,7],[50,15,59,11,"j"],[50,16,59,12],[50,19,59,15],[50,20,59,16],[50,22,59,18,"j"],[50,23,59,19],[50,26,59,22,"iterations"],[50,36,59,32],[50,38,59,34,"j"],[50,39,59,35],[50,41,59,37],[50,43,59,39],[51,8,60,3,"U"],[51,9,60,4],[51,12,60,7,"createHmac"],[51,22,60,17],[51,23,60,18,"mappedDigest"],[51,35,60,30],[51,37,60,32,"password"],[51,45,60,40],[51,46,60,41],[51,47,60,42,"update"],[51,53,60,48],[51,54,60,49,"U"],[51,55,60,50],[51,56,60,51],[51,57,60,52,"digest"],[51,63,60,58],[51,64,60,59],[51,65,60,60],[52,8,61,3],[52,13,61,8],[52,17,61,12,"k"],[52,18,61,13],[52,21,61,16],[52,22,61,17],[52,24,61,19,"k"],[52,25,61,20],[52,28,61,23,"hLen"],[52,32,61,27],[52,34,61,29,"k"],[52,35,61,30],[52,37,61,32],[52,39,61,34],[53,10,62,4,"T"],[53,11,62,5],[53,12,62,6,"k"],[53,13,62,7],[53,14,62,8],[53,18,62,12,"U"],[53,19,62,13],[53,20,62,14,"k"],[53,21,62,15],[53,22,62,16],[54,8,63,3],[55,6,64,2],[56,6,66,2,"T"],[56,7,66,3],[56,8,66,4,"copy"],[56,12,66,8],[56,13,66,9,"DK"],[56,15,66,11],[56,17,66,13,"destPos"],[56,24,66,20],[56,25,66,21],[57,6,67,2,"destPos"],[57,13,67,9],[57,17,67,13,"hLen"],[57,21,67,17],[58,4,68,1],[59,4,70,1],[59,11,70,8,"DK"],[59,13,70,10],[60,2,71,0],[61,2,73,0,"module"],[61,8,73,6],[61,9,73,7,"exports"],[61,16,73,14],[61,19,73,17,"pbkdf2"],[61,25,73,23],[62,0,73,24],[62,3]],"functionMap":{"names":["<global>","pbkdf2"],"mappings":"AAA;ACgC;CDsC"}},"type":"js/module"}]}