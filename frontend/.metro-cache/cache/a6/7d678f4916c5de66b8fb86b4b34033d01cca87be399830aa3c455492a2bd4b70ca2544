{"dependencies":[{"name":"./aes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":26,"index":26}}],"key":"G/82SQzdqJhdLM5k25Jdi3kHjCY=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":35,"index":62}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"cipher-base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":86},"end":{"line":3,"column":38,"index":108}}],"key":"7cV2V6tRDydrl9neigZg5XnvIlM=","exportNames":["*"]}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":124},"end":{"line":4,"column":34,"index":143}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"./ghash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":156},"end":{"line":5,"column":30,"index":174}}],"key":"rh1V2JJ9rZmhj6/loXu96hxOCP4=","exportNames":["*"]}},{"name":"buffer-xor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":10,"index":185},"end":{"line":6,"column":31,"index":206}}],"key":"loeSrW6/3vzsFLRxgE5dDkO1O/w=","exportNames":["*"]}},{"name":"./incr32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":220},"end":{"line":7,"column":32,"index":239}}],"key":"zcr56OJUqEpUr4ZWm9KyNM2j9i0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var aes = require(_dependencyMap[0], \"./aes\");\n  var Buffer = require(_dependencyMap[1], \"safe-buffer\").Buffer;\n  var Transform = require(_dependencyMap[2], \"cipher-base\");\n  var inherits = require(_dependencyMap[3], \"inherits\");\n  var GHASH = require(_dependencyMap[4], \"./ghash\");\n  var xor = require(_dependencyMap[5], \"buffer-xor\");\n  var incr32 = require(_dependencyMap[6], \"./incr32\");\n  function xorTest(a, b) {\n    var out = 0;\n    if (a.length !== b.length) out++;\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; ++i) {\n      out += a[i] ^ b[i];\n    }\n    return out;\n  }\n  function calcIv(self, iv, ck) {\n    if (iv.length === 12) {\n      self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])]);\n      return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])]);\n    }\n    var ghash = new GHASH(ck);\n    var len = iv.length;\n    var toPad = len % 16;\n    ghash.update(iv);\n    if (toPad) {\n      toPad = 16 - toPad;\n      ghash.update(Buffer.alloc(toPad, 0));\n    }\n    ghash.update(Buffer.alloc(8, 0));\n    var ivBits = len * 8;\n    var tail = Buffer.alloc(8);\n    tail.writeUIntBE(ivBits, 0, 8);\n    ghash.update(tail);\n    self._finID = ghash.state;\n    var out = Buffer.from(self._finID);\n    incr32(out);\n    return out;\n  }\n  function StreamCipher(mode, key, iv, decrypt) {\n    Transform.call(this);\n    var h = Buffer.alloc(4, 0);\n    this._cipher = new aes.AES(key);\n    var ck = this._cipher.encryptBlock(h);\n    this._ghash = new GHASH(ck);\n    iv = calcIv(this, iv, ck);\n    this._prev = Buffer.from(iv);\n    this._cache = Buffer.allocUnsafe(0);\n    this._secCache = Buffer.allocUnsafe(0);\n    this._decrypt = decrypt;\n    this._alen = 0;\n    this._len = 0;\n    this._mode = mode;\n    this._authTag = null;\n    this._called = false;\n  }\n  inherits(StreamCipher, Transform);\n  StreamCipher.prototype._update = function (chunk) {\n    if (!this._called && this._alen) {\n      var rump = 16 - this._alen % 16;\n      if (rump < 16) {\n        rump = Buffer.alloc(rump, 0);\n        this._ghash.update(rump);\n      }\n    }\n    this._called = true;\n    var out = this._mode.encrypt(this, chunk);\n    if (this._decrypt) {\n      this._ghash.update(chunk);\n    } else {\n      this._ghash.update(out);\n    }\n    this._len += chunk.length;\n    return out;\n  };\n  StreamCipher.prototype._final = function () {\n    if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data');\n    var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));\n    if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data');\n    this._authTag = tag;\n    this._cipher.scrub();\n  };\n  StreamCipher.prototype.getAuthTag = function getAuthTag() {\n    if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state');\n    return this._authTag;\n  };\n  StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {\n    if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state');\n    this._authTag = tag;\n  };\n  StreamCipher.prototype.setAAD = function setAAD(buf) {\n    if (this._called) throw new Error('Attempting to set AAD in unsupported state');\n    this._ghash.update(buf);\n    this._alen += buf.length;\n  };\n  module.exports = StreamCipher;\n});","lineCount":98,"map":[[2,2,1,0],[2,6,1,4,"aes"],[2,9,1,7],[2,12,1,10,"require"],[2,19,1,17],[2,20,1,17,"_dependencyMap"],[2,34,1,17],[2,46,1,25],[2,47,1,26],[3,2,2,0],[3,6,2,4,"Buffer"],[3,12,2,10],[3,15,2,13,"require"],[3,22,2,20],[3,23,2,20,"_dependencyMap"],[3,37,2,20],[3,55,2,34],[3,56,2,35],[3,57,2,36,"Buffer"],[3,63,2,42],[4,2,3,0],[4,6,3,4,"Transform"],[4,15,3,13],[4,18,3,16,"require"],[4,25,3,23],[4,26,3,23,"_dependencyMap"],[4,40,3,23],[4,58,3,37],[4,59,3,38],[5,2,4,0],[5,6,4,4,"inherits"],[5,14,4,12],[5,17,4,15,"require"],[5,24,4,22],[5,25,4,22,"_dependencyMap"],[5,39,4,22],[5,54,4,33],[5,55,4,34],[6,2,5,0],[6,6,5,4,"GHASH"],[6,11,5,9],[6,14,5,12,"require"],[6,21,5,19],[6,22,5,19,"_dependencyMap"],[6,36,5,19],[6,50,5,29],[6,51,5,30],[7,2,6,0],[7,6,6,4,"xor"],[7,9,6,7],[7,12,6,10,"require"],[7,19,6,17],[7,20,6,17,"_dependencyMap"],[7,34,6,17],[7,51,6,30],[7,52,6,31],[8,2,7,0],[8,6,7,4,"incr32"],[8,12,7,10],[8,15,7,13,"require"],[8,22,7,20],[8,23,7,20,"_dependencyMap"],[8,37,7,20],[8,52,7,31],[8,53,7,32],[9,2,9,0],[9,11,9,9,"xorTest"],[9,18,9,16,"xorTest"],[9,19,9,18,"a"],[9,20,9,19],[9,22,9,21,"b"],[9,23,9,22],[9,25,9,24],[10,4,10,2],[10,8,10,6,"out"],[10,11,10,9],[10,14,10,12],[10,15,10,13],[11,4,11,2],[11,8,11,6,"a"],[11,9,11,7],[11,10,11,8,"length"],[11,16,11,14],[11,21,11,19,"b"],[11,22,11,20],[11,23,11,21,"length"],[11,29,11,27],[11,31,11,29,"out"],[11,34,11,32],[11,36,11,34],[12,4,13,2],[12,8,13,6,"len"],[12,11,13,9],[12,14,13,12,"Math"],[12,18,13,16],[12,19,13,17,"min"],[12,22,13,20],[12,23,13,21,"a"],[12,24,13,22],[12,25,13,23,"length"],[12,31,13,29],[12,33,13,31,"b"],[12,34,13,32],[12,35,13,33,"length"],[12,41,13,39],[12,42,13,40],[13,4,14,2],[13,9,14,7],[13,13,14,11,"i"],[13,14,14,12],[13,17,14,15],[13,18,14,16],[13,20,14,18,"i"],[13,21,14,19],[13,24,14,22,"len"],[13,27,14,25],[13,29,14,27],[13,31,14,29,"i"],[13,32,14,30],[13,34,14,32],[14,6,15,4,"out"],[14,9,15,7],[14,13,15,12,"a"],[14,14,15,13],[14,15,15,14,"i"],[14,16,15,15],[14,17,15,16],[14,20,15,19,"b"],[14,21,15,20],[14,22,15,21,"i"],[14,23,15,22],[14,24,15,24],[15,4,16,2],[16,4,18,2],[16,11,18,9,"out"],[16,14,18,12],[17,2,19,0],[18,2,21,0],[18,11,21,9,"calcIv"],[18,17,21,15,"calcIv"],[18,18,21,17,"self"],[18,22,21,21],[18,24,21,23,"iv"],[18,26,21,25],[18,28,21,27,"ck"],[18,30,21,29],[18,32,21,31],[19,4,22,2],[19,8,22,6,"iv"],[19,10,22,8],[19,11,22,9,"length"],[19,17,22,15],[19,22,22,20],[19,24,22,22],[19,26,22,24],[20,6,23,4,"self"],[20,10,23,8],[20,11,23,9,"_finID"],[20,17,23,15],[20,20,23,18,"Buffer"],[20,26,23,24],[20,27,23,25,"concat"],[20,33,23,31],[20,34,23,32],[20,35,23,33,"iv"],[20,37,23,35],[20,39,23,37,"Buffer"],[20,45,23,43],[20,46,23,44,"from"],[20,50,23,48],[20,51,23,49],[20,52,23,50],[20,53,23,51],[20,55,23,53],[20,56,23,54],[20,58,23,56],[20,59,23,57],[20,61,23,59],[20,62,23,60],[20,63,23,61],[20,64,23,62],[20,65,23,63],[20,66,23,64],[21,6,24,4],[21,13,24,11,"Buffer"],[21,19,24,17],[21,20,24,18,"concat"],[21,26,24,24],[21,27,24,25],[21,28,24,26,"iv"],[21,30,24,28],[21,32,24,30,"Buffer"],[21,38,24,36],[21,39,24,37,"from"],[21,43,24,41],[21,44,24,42],[21,45,24,43],[21,46,24,44],[21,48,24,46],[21,49,24,47],[21,51,24,49],[21,52,24,50],[21,54,24,52],[21,55,24,53],[21,56,24,54],[21,57,24,55],[21,58,24,56],[21,59,24,57],[22,4,25,2],[23,4,26,2],[23,8,26,6,"ghash"],[23,13,26,11],[23,16,26,14],[23,20,26,18,"GHASH"],[23,25,26,23],[23,26,26,24,"ck"],[23,28,26,26],[23,29,26,27],[24,4,27,2],[24,8,27,6,"len"],[24,11,27,9],[24,14,27,12,"iv"],[24,16,27,14],[24,17,27,15,"length"],[24,23,27,21],[25,4,28,2],[25,8,28,6,"toPad"],[25,13,28,11],[25,16,28,14,"len"],[25,19,28,17],[25,22,28,20],[25,24,28,22],[26,4,29,2,"ghash"],[26,9,29,7],[26,10,29,8,"update"],[26,16,29,14],[26,17,29,15,"iv"],[26,19,29,17],[26,20,29,18],[27,4,30,2],[27,8,30,6,"toPad"],[27,13,30,11],[27,15,30,13],[28,6,31,4,"toPad"],[28,11,31,9],[28,14,31,12],[28,16,31,14],[28,19,31,17,"toPad"],[28,24,31,22],[29,6,32,4,"ghash"],[29,11,32,9],[29,12,32,10,"update"],[29,18,32,16],[29,19,32,17,"Buffer"],[29,25,32,23],[29,26,32,24,"alloc"],[29,31,32,29],[29,32,32,30,"toPad"],[29,37,32,35],[29,39,32,37],[29,40,32,38],[29,41,32,39],[29,42,32,40],[30,4,33,2],[31,4,34,2,"ghash"],[31,9,34,7],[31,10,34,8,"update"],[31,16,34,14],[31,17,34,15,"Buffer"],[31,23,34,21],[31,24,34,22,"alloc"],[31,29,34,27],[31,30,34,28],[31,31,34,29],[31,33,34,31],[31,34,34,32],[31,35,34,33],[31,36,34,34],[32,4,35,2],[32,8,35,6,"ivBits"],[32,14,35,12],[32,17,35,15,"len"],[32,20,35,18],[32,23,35,21],[32,24,35,22],[33,4,36,2],[33,8,36,6,"tail"],[33,12,36,10],[33,15,36,13,"Buffer"],[33,21,36,19],[33,22,36,20,"alloc"],[33,27,36,25],[33,28,36,26],[33,29,36,27],[33,30,36,28],[34,4,37,2,"tail"],[34,8,37,6],[34,9,37,7,"writeUIntBE"],[34,20,37,18],[34,21,37,19,"ivBits"],[34,27,37,25],[34,29,37,27],[34,30,37,28],[34,32,37,30],[34,33,37,31],[34,34,37,32],[35,4,38,2,"ghash"],[35,9,38,7],[35,10,38,8,"update"],[35,16,38,14],[35,17,38,15,"tail"],[35,21,38,19],[35,22,38,20],[36,4,39,2,"self"],[36,8,39,6],[36,9,39,7,"_finID"],[36,15,39,13],[36,18,39,16,"ghash"],[36,23,39,21],[36,24,39,22,"state"],[36,29,39,27],[37,4,40,2],[37,8,40,6,"out"],[37,11,40,9],[37,14,40,12,"Buffer"],[37,20,40,18],[37,21,40,19,"from"],[37,25,40,23],[37,26,40,24,"self"],[37,30,40,28],[37,31,40,29,"_finID"],[37,37,40,35],[37,38,40,36],[38,4,41,2,"incr32"],[38,10,41,8],[38,11,41,9,"out"],[38,14,41,12],[38,15,41,13],[39,4,42,2],[39,11,42,9,"out"],[39,14,42,12],[40,2,43,0],[41,2,44,0],[41,11,44,9,"StreamCipher"],[41,23,44,21,"StreamCipher"],[41,24,44,23,"mode"],[41,28,44,27],[41,30,44,29,"key"],[41,33,44,32],[41,35,44,34,"iv"],[41,37,44,36],[41,39,44,38,"decrypt"],[41,46,44,45],[41,48,44,47],[42,4,45,2,"Transform"],[42,13,45,11],[42,14,45,12,"call"],[42,18,45,16],[42,19,45,17],[42,23,45,21],[42,24,45,22],[43,4,47,2],[43,8,47,6,"h"],[43,9,47,7],[43,12,47,10,"Buffer"],[43,18,47,16],[43,19,47,17,"alloc"],[43,24,47,22],[43,25,47,23],[43,26,47,24],[43,28,47,26],[43,29,47,27],[43,30,47,28],[44,4,49,2],[44,8,49,6],[44,9,49,7,"_cipher"],[44,16,49,14],[44,19,49,17],[44,23,49,21,"aes"],[44,26,49,24],[44,27,49,25,"AES"],[44,30,49,28],[44,31,49,29,"key"],[44,34,49,32],[44,35,49,33],[45,4,50,2],[45,8,50,6,"ck"],[45,10,50,8],[45,13,50,11],[45,17,50,15],[45,18,50,16,"_cipher"],[45,25,50,23],[45,26,50,24,"encryptBlock"],[45,38,50,36],[45,39,50,37,"h"],[45,40,50,38],[45,41,50,39],[46,4,51,2],[46,8,51,6],[46,9,51,7,"_ghash"],[46,15,51,13],[46,18,51,16],[46,22,51,20,"GHASH"],[46,27,51,25],[46,28,51,26,"ck"],[46,30,51,28],[46,31,51,29],[47,4,52,2,"iv"],[47,6,52,4],[47,9,52,7,"calcIv"],[47,15,52,13],[47,16,52,14],[47,20,52,18],[47,22,52,20,"iv"],[47,24,52,22],[47,26,52,24,"ck"],[47,28,52,26],[47,29,52,27],[48,4,54,2],[48,8,54,6],[48,9,54,7,"_prev"],[48,14,54,12],[48,17,54,15,"Buffer"],[48,23,54,21],[48,24,54,22,"from"],[48,28,54,26],[48,29,54,27,"iv"],[48,31,54,29],[48,32,54,30],[49,4,55,2],[49,8,55,6],[49,9,55,7,"_cache"],[49,15,55,13],[49,18,55,16,"Buffer"],[49,24,55,22],[49,25,55,23,"allocUnsafe"],[49,36,55,34],[49,37,55,35],[49,38,55,36],[49,39,55,37],[50,4,56,2],[50,8,56,6],[50,9,56,7,"_secCache"],[50,18,56,16],[50,21,56,19,"Buffer"],[50,27,56,25],[50,28,56,26,"allocUnsafe"],[50,39,56,37],[50,40,56,38],[50,41,56,39],[50,42,56,40],[51,4,57,2],[51,8,57,6],[51,9,57,7,"_decrypt"],[51,17,57,15],[51,20,57,18,"decrypt"],[51,27,57,25],[52,4,58,2],[52,8,58,6],[52,9,58,7,"_alen"],[52,14,58,12],[52,17,58,15],[52,18,58,16],[53,4,59,2],[53,8,59,6],[53,9,59,7,"_len"],[53,13,59,11],[53,16,59,14],[53,17,59,15],[54,4,60,2],[54,8,60,6],[54,9,60,7,"_mode"],[54,14,60,12],[54,17,60,15,"mode"],[54,21,60,19],[55,4,62,2],[55,8,62,6],[55,9,62,7,"_authTag"],[55,17,62,15],[55,20,62,18],[55,24,62,22],[56,4,63,2],[56,8,63,6],[56,9,63,7,"_called"],[56,16,63,14],[56,19,63,17],[56,24,63,22],[57,2,64,0],[58,2,66,0,"inherits"],[58,10,66,8],[58,11,66,9,"StreamCipher"],[58,23,66,21],[58,25,66,23,"Transform"],[58,34,66,32],[58,35,66,33],[59,2,68,0,"StreamCipher"],[59,14,68,12],[59,15,68,13,"prototype"],[59,24,68,22],[59,25,68,23,"_update"],[59,32,68,30],[59,35,68,33],[59,45,68,43,"chunk"],[59,50,68,48],[59,52,68,50],[60,4,69,2],[60,8,69,6],[60,9,69,7],[60,13,69,11],[60,14,69,12,"_called"],[60,21,69,19],[60,25,69,23],[60,29,69,27],[60,30,69,28,"_alen"],[60,35,69,33],[60,37,69,35],[61,6,70,4],[61,10,70,8,"rump"],[61,14,70,12],[61,17,70,15],[61,19,70,17],[61,22,70,21],[61,26,70,25],[61,27,70,26,"_alen"],[61,32,70,31],[61,35,70,34],[61,37,70,37],[62,6,71,4],[62,10,71,8,"rump"],[62,14,71,12],[62,17,71,15],[62,19,71,17],[62,21,71,19],[63,8,72,6,"rump"],[63,12,72,10],[63,15,72,13,"Buffer"],[63,21,72,19],[63,22,72,20,"alloc"],[63,27,72,25],[63,28,72,26,"rump"],[63,32,72,30],[63,34,72,32],[63,35,72,33],[63,36,72,34],[64,8,73,6],[64,12,73,10],[64,13,73,11,"_ghash"],[64,19,73,17],[64,20,73,18,"update"],[64,26,73,24],[64,27,73,25,"rump"],[64,31,73,29],[64,32,73,30],[65,6,74,4],[66,4,75,2],[67,4,77,2],[67,8,77,6],[67,9,77,7,"_called"],[67,16,77,14],[67,19,77,17],[67,23,77,21],[68,4,78,2],[68,8,78,6,"out"],[68,11,78,9],[68,14,78,12],[68,18,78,16],[68,19,78,17,"_mode"],[68,24,78,22],[68,25,78,23,"encrypt"],[68,32,78,30],[68,33,78,31],[68,37,78,35],[68,39,78,37,"chunk"],[68,44,78,42],[68,45,78,43],[69,4,79,2],[69,8,79,6],[69,12,79,10],[69,13,79,11,"_decrypt"],[69,21,79,19],[69,23,79,21],[70,6,80,4],[70,10,80,8],[70,11,80,9,"_ghash"],[70,17,80,15],[70,18,80,16,"update"],[70,24,80,22],[70,25,80,23,"chunk"],[70,30,80,28],[70,31,80,29],[71,4,81,2],[71,5,81,3],[71,11,81,9],[72,6,82,4],[72,10,82,8],[72,11,82,9,"_ghash"],[72,17,82,15],[72,18,82,16,"update"],[72,24,82,22],[72,25,82,23,"out"],[72,28,82,26],[72,29,82,27],[73,4,83,2],[74,4,84,2],[74,8,84,6],[74,9,84,7,"_len"],[74,13,84,11],[74,17,84,15,"chunk"],[74,22,84,20],[74,23,84,21,"length"],[74,29,84,27],[75,4,85,2],[75,11,85,9,"out"],[75,14,85,12],[76,2,86,0],[76,3,86,1],[77,2,88,0,"StreamCipher"],[77,14,88,12],[77,15,88,13,"prototype"],[77,24,88,22],[77,25,88,23,"_final"],[77,31,88,29],[77,34,88,32],[77,46,88,44],[78,4,89,2],[78,8,89,6],[78,12,89,10],[78,13,89,11,"_decrypt"],[78,21,89,19],[78,25,89,23],[78,26,89,24],[78,30,89,28],[78,31,89,29,"_authTag"],[78,39,89,37],[78,41,89,39],[78,47,89,45],[78,51,89,49,"Error"],[78,56,89,54],[78,57,89,55],[78,107,89,105],[78,108,89,106],[79,4,91,2],[79,8,91,6,"tag"],[79,11,91,9],[79,14,91,12,"xor"],[79,17,91,15],[79,18,91,16],[79,22,91,20],[79,23,91,21,"_ghash"],[79,29,91,27],[79,30,91,28,"final"],[79,35,91,33],[79,36,91,34],[79,40,91,38],[79,41,91,39,"_alen"],[79,46,91,44],[79,49,91,47],[79,50,91,48],[79,52,91,50],[79,56,91,54],[79,57,91,55,"_len"],[79,61,91,59],[79,64,91,62],[79,65,91,63],[79,66,91,64],[79,68,91,66],[79,72,91,70],[79,73,91,71,"_cipher"],[79,80,91,78],[79,81,91,79,"encryptBlock"],[79,93,91,91],[79,94,91,92],[79,98,91,96],[79,99,91,97,"_finID"],[79,105,91,103],[79,106,91,104],[79,107,91,105],[80,4,92,2],[80,8,92,6],[80,12,92,10],[80,13,92,11,"_decrypt"],[80,21,92,19],[80,25,92,23,"xorTest"],[80,32,92,30],[80,33,92,31,"tag"],[80,36,92,34],[80,38,92,36],[80,42,92,40],[80,43,92,41,"_authTag"],[80,51,92,49],[80,52,92,50],[80,54,92,52],[80,60,92,58],[80,64,92,62,"Error"],[80,69,92,67],[80,70,92,68],[80,120,92,118],[80,121,92,119],[81,4,94,2],[81,8,94,6],[81,9,94,7,"_authTag"],[81,17,94,15],[81,20,94,18,"tag"],[81,23,94,21],[82,4,95,2],[82,8,95,6],[82,9,95,7,"_cipher"],[82,16,95,14],[82,17,95,15,"scrub"],[82,22,95,20],[82,23,95,21],[82,24,95,22],[83,2,96,0],[83,3,96,1],[84,2,98,0,"StreamCipher"],[84,14,98,12],[84,15,98,13,"prototype"],[84,24,98,22],[84,25,98,23,"getAuthTag"],[84,35,98,33],[84,38,98,36],[84,47,98,45,"getAuthTag"],[84,57,98,55,"getAuthTag"],[84,58,98,55],[84,60,98,59],[85,4,99,2],[85,8,99,6],[85,12,99,10],[85,13,99,11,"_decrypt"],[85,21,99,19],[85,25,99,23],[85,26,99,24,"Buffer"],[85,32,99,30],[85,33,99,31,"isBuffer"],[85,41,99,39],[85,42,99,40],[85,46,99,44],[85,47,99,45,"_authTag"],[85,55,99,53],[85,56,99,54],[85,58,99,56],[85,64,99,62],[85,68,99,66,"Error"],[85,73,99,71],[85,74,99,72],[85,123,99,121],[85,124,99,122],[86,4,101,2],[86,11,101,9],[86,15,101,13],[86,16,101,14,"_authTag"],[86,24,101,22],[87,2,102,0],[87,3,102,1],[88,2,104,0,"StreamCipher"],[88,14,104,12],[88,15,104,13,"prototype"],[88,24,104,22],[88,25,104,23,"setAuthTag"],[88,35,104,33],[88,38,104,36],[88,47,104,45,"setAuthTag"],[88,57,104,55,"setAuthTag"],[88,58,104,57,"tag"],[88,61,104,60],[88,63,104,62],[89,4,105,2],[89,8,105,6],[89,9,105,7],[89,13,105,11],[89,14,105,12,"_decrypt"],[89,22,105,20],[89,24,105,22],[89,30,105,28],[89,34,105,32,"Error"],[89,39,105,37],[89,40,105,38],[89,89,105,87],[89,90,105,88],[90,4,107,2],[90,8,107,6],[90,9,107,7,"_authTag"],[90,17,107,15],[90,20,107,18,"tag"],[90,23,107,21],[91,2,108,0],[91,3,108,1],[92,2,110,0,"StreamCipher"],[92,14,110,12],[92,15,110,13,"prototype"],[92,24,110,22],[92,25,110,23,"setAAD"],[92,31,110,29],[92,34,110,32],[92,43,110,41,"setAAD"],[92,49,110,47,"setAAD"],[92,50,110,49,"buf"],[92,53,110,52],[92,55,110,54],[93,4,111,2],[93,8,111,6],[93,12,111,10],[93,13,111,11,"_called"],[93,20,111,18],[93,22,111,20],[93,28,111,26],[93,32,111,30,"Error"],[93,37,111,35],[93,38,111,36],[93,82,111,80],[93,83,111,81],[94,4,113,2],[94,8,113,6],[94,9,113,7,"_ghash"],[94,15,113,13],[94,16,113,14,"update"],[94,22,113,20],[94,23,113,21,"buf"],[94,26,113,24],[94,27,113,25],[95,4,114,2],[95,8,114,6],[95,9,114,7,"_alen"],[95,14,114,12],[95,18,114,16,"buf"],[95,21,114,19],[95,22,114,20,"length"],[95,28,114,26],[96,2,115,0],[96,3,115,1],[97,2,117,0,"module"],[97,8,117,6],[97,9,117,7,"exports"],[97,16,117,14],[97,19,117,17,"StreamCipher"],[97,31,117,29],[98,0,117,29],[98,3]],"functionMap":{"names":["<global>","xorTest","calcIv","StreamCipher","StreamCipher.prototype._update","StreamCipher.prototype._final","getAuthTag","setAuthTag","setAAD"],"mappings":"AAA;ACQ;CDU;AEE;CFsB;AGC;CHoB;iCII;CJkB;gCKE;CLQ;oCME;CNI;oCOE;CPI;gCQE;CRK"}},"type":"js/module"}]}