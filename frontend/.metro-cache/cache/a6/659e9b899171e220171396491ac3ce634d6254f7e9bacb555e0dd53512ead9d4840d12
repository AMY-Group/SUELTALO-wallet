{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":80,"index":154}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/associatedTokenAccount.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":155},"end":{"line":3,"column":100,"index":255}}],"key":"0KInrlWvwWYIf/F6QtBqaQdI9AA=","exportNames":["*"]}},{"name":"../state/mint.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":256},"end":{"line":4,"column":65,"index":321}}],"key":"v3pX84XwBjgEzA16Wj3LfwCi9fI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAssociatedTokenAccount = createAssociatedTokenAccount;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _associatedTokenAccount = require(_dependencyMap[2], \"../instructions/associatedTokenAccount.js\");\n  var _mint = require(_dependencyMap[3], \"../state/mint.js\");\n  /**\n   * Create and initialize a new associated token account\n   *\n   * @param connection               Connection to use\n   * @param payer                    Payer of the transaction and initialization fees\n   * @param mint                     Mint for the account\n   * @param owner                    Owner of the new account\n   * @param confirmOptions           Options for confirming the transaction\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n   *\n   * @return Address of the new associated token account\n   */\n  async function createAssociatedTokenAccount(connection, payer, mint, owner, confirmOptions, programId = _constants.TOKEN_PROGRAM_ID, associatedTokenProgramId = _constants.ASSOCIATED_TOKEN_PROGRAM_ID, allowOwnerOffCurve = false) {\n    const associatedToken = (0, _mint.getAssociatedTokenAddressSync)(mint, owner, allowOwnerOffCurve, programId, associatedTokenProgramId);\n    const transaction = new _web.Transaction().add((0, _associatedTokenAccount.createAssociatedTokenAccountInstruction)(payer.publicKey, associatedToken, owner, mint, programId, associatedTokenProgramId));\n    await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n    return associatedToken;\n  }\n});","lineCount":30,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_associatedTokenAccount"],[8,29,3,0],[8,32,3,0,"require"],[8,39,3,0],[8,40,3,0,"_dependencyMap"],[8,54,3,0],[9,2,4,0],[9,6,4,0,"_mint"],[9,11,4,0],[9,14,4,0,"require"],[9,21,4,0],[9,22,4,0,"_dependencyMap"],[9,36,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,2,19,7],[24,17,19,22,"createAssociatedTokenAccount"],[24,45,19,50,"createAssociatedTokenAccount"],[24,46,19,51,"connection"],[24,56,19,61],[24,58,19,63,"payer"],[24,63,19,68],[24,65,19,70,"mint"],[24,69,19,74],[24,71,19,76,"owner"],[24,76,19,81],[24,78,19,83,"confirmOptions"],[24,92,19,97],[24,94,19,99,"programId"],[24,103,19,108],[24,106,19,111,"TOKEN_PROGRAM_ID"],[24,133,19,127],[24,135,19,129,"associatedTokenProgramId"],[24,159,19,153],[24,162,19,156,"ASSOCIATED_TOKEN_PROGRAM_ID"],[24,200,19,183],[24,202,19,185,"allowOwnerOffCurve"],[24,220,19,203],[24,223,19,206],[24,228,19,211],[24,230,19,213],[25,4,20,4],[25,10,20,10,"associatedToken"],[25,25,20,25],[25,28,20,28],[25,32,20,28,"getAssociatedTokenAddressSync"],[25,67,20,57],[25,69,20,58,"mint"],[25,73,20,62],[25,75,20,64,"owner"],[25,80,20,69],[25,82,20,71,"allowOwnerOffCurve"],[25,100,20,89],[25,102,20,91,"programId"],[25,111,20,100],[25,113,20,102,"associatedTokenProgramId"],[25,137,20,126],[25,138,20,127],[26,4,21,4],[26,10,21,10,"transaction"],[26,21,21,21],[26,24,21,24],[26,28,21,28,"Transaction"],[26,44,21,39],[26,45,21,40],[26,46,21,41],[26,47,21,42,"add"],[26,50,21,45],[26,51,21,46],[26,55,21,46,"createAssociatedTokenAccountInstruction"],[26,118,21,85],[26,120,21,86,"payer"],[26,125,21,91],[26,126,21,92,"publicKey"],[26,135,21,101],[26,137,21,103,"associatedToken"],[26,152,21,118],[26,154,21,120,"owner"],[26,159,21,125],[26,161,21,127,"mint"],[26,165,21,131],[26,167,21,133,"programId"],[26,176,21,142],[26,178,21,144,"associatedTokenProgramId"],[26,202,21,168],[26,203,21,169],[26,204,21,170],[27,4,22,4],[27,10,22,10],[27,14,22,10,"sendAndConfirmTransaction"],[27,44,22,35],[27,46,22,36,"connection"],[27,56,22,46],[27,58,22,48,"transaction"],[27,69,22,59],[27,71,22,61],[27,72,22,62,"payer"],[27,77,22,67],[27,78,22,68],[27,80,22,70,"confirmOptions"],[27,94,22,84],[27,95,22,85],[28,4,23,4],[28,11,23,11,"associatedToken"],[28,26,23,26],[29,2,24,0],[30,0,24,1],[30,3]],"functionMap":{"names":["<global>","createAssociatedTokenAccount"],"mappings":"AAA;OCkB;CDK"}},"type":"js/module"}]}