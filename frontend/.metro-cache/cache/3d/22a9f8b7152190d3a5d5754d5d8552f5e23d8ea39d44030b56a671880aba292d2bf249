{"dependencies":[{"name":"create-hash/md5","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":10,"index":25},"end":{"line":3,"column":36,"index":51}}],"key":"jYZa6aqNIW0aNZiJwte4jp0w2Sw=","exportNames":["*"]}},{"name":"ripemd160","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":69},"end":{"line":4,"column":36,"index":89}}],"key":"tIPjioARNqaZD2mQ7SV6iEyg6WA=","exportNames":["*"]}},{"name":"sha.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":10,"index":101},"end":{"line":5,"column":27,"index":118}}],"key":"VT8g97hvtDqAKV1FwSt0QYmWZ3s=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":13,"index":133},"end":{"line":6,"column":35,"index":155}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"./precondition","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":22,"index":187},"end":{"line":8,"column":47,"index":212}}],"key":"3hHef+Vxail+ofP4apUhxWin99Y=","exportNames":["*"]}},{"name":"./default-encoding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":22,"index":236},"end":{"line":9,"column":51,"index":265}}],"key":"a2IPQ5AzBZHFiGKT3f2/0+RXQxw=","exportNames":["*"]}},{"name":"./to-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":15,"index":282},"end":{"line":10,"column":37,"index":304}}],"key":"A0agEiXN4wdre1ynp9QlfUviZI4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var md5 = require(_dependencyMap[0], \"create-hash/md5\");\n  var RIPEMD160 = require(_dependencyMap[1], \"ripemd160\");\n  var sha = require(_dependencyMap[2], \"sha.js\");\n  var Buffer = require(_dependencyMap[3], \"safe-buffer\").Buffer;\n  var checkParameters = require(_dependencyMap[4], \"./precondition\");\n  var defaultEncoding = require(_dependencyMap[5], \"./default-encoding\");\n  var toBuffer = require(_dependencyMap[6], \"./to-buffer\");\n  var ZEROS = Buffer.alloc(128);\n  var sizes = {\n    __proto__: null,\n    md5: 16,\n    sha1: 20,\n    sha224: 28,\n    sha256: 32,\n    sha384: 48,\n    sha512: 64,\n    'sha512-256': 32,\n    ripemd160: 20,\n    rmd160: 20\n  };\n  var mapping = {\n    __proto__: null,\n    'sha-1': 'sha1',\n    'sha-224': 'sha224',\n    'sha-256': 'sha256',\n    'sha-384': 'sha384',\n    'sha-512': 'sha512',\n    'ripemd-160': 'ripemd160'\n  };\n  function rmd160Func(data) {\n    return new RIPEMD160().update(data).digest();\n  }\n  function getDigest(alg) {\n    function shaFunc(data) {\n      return sha(alg).update(data).digest();\n    }\n    if (alg === 'rmd160' || alg === 'ripemd160') {\n      return rmd160Func;\n    }\n    if (alg === 'md5') {\n      return md5;\n    }\n    return shaFunc;\n  }\n  function Hmac(alg, key, saltLen) {\n    var hash = getDigest(alg);\n    var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n    if (key.length > blocksize) {\n      key = hash(key);\n    } else if (key.length < blocksize) {\n      key = Buffer.concat([key, ZEROS], blocksize);\n    }\n    var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n    var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n    for (var i = 0; i < blocksize; i++) {\n      ipad[i] = key[i] ^ 0x36;\n      opad[i] = key[i] ^ 0x5C;\n    }\n    var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n    ipad.copy(ipad1, 0, 0, blocksize);\n    this.ipad1 = ipad1;\n    this.ipad2 = ipad;\n    this.opad = opad;\n    this.alg = alg;\n    this.blocksize = blocksize;\n    this.hash = hash;\n    this.size = sizes[alg];\n  }\n  Hmac.prototype.run = function (data, ipad) {\n    data.copy(ipad, this.blocksize);\n    var h = this.hash(ipad);\n    h.copy(this.opad, this.blocksize);\n    return this.hash(this.opad);\n  };\n  function pbkdf2(password, salt, iterations, keylen, digest) {\n    checkParameters(iterations, keylen);\n    password = toBuffer(password, defaultEncoding, 'Password');\n    salt = toBuffer(salt, defaultEncoding, 'Salt');\n    var lowerDigest = (digest || 'sha1').toLowerCase();\n    var mappedDigest = mapping[lowerDigest] || lowerDigest;\n    var size = sizes[mappedDigest];\n    if (typeof size !== 'number' || !size) {\n      throw new TypeError('Digest algorithm not supported: ' + digest);\n    }\n    var hmac = new Hmac(mappedDigest, password, salt.length);\n    var DK = Buffer.allocUnsafe(keylen);\n    var block1 = Buffer.allocUnsafe(salt.length + 4);\n    salt.copy(block1, 0, 0, salt.length);\n    var destPos = 0;\n    var hLen = size;\n    var l = Math.ceil(keylen / hLen);\n    for (var i = 1; i <= l; i++) {\n      block1.writeUInt32BE(i, salt.length);\n      var T = hmac.run(block1, hmac.ipad1);\n      var U = T;\n      for (var j = 1; j < iterations; j++) {\n        U = hmac.run(U, hmac.ipad2);\n        for (var k = 0; k < hLen; k++) {\n          T[k] ^= U[k];\n        }\n      }\n      T.copy(DK, destPos);\n      destPos += hLen;\n    }\n    return DK;\n  }\n  module.exports = pbkdf2;\n});","lineCount":111,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"md5"],[4,9,3,7],[4,12,3,10,"require"],[4,19,3,17],[4,20,3,17,"_dependencyMap"],[4,34,3,17],[4,56,3,35],[4,57,3,36],[5,2,4,0],[5,6,4,4,"RIPEMD160"],[5,15,4,13],[5,18,4,16,"require"],[5,25,4,23],[5,26,4,23,"_dependencyMap"],[5,40,4,23],[5,56,4,35],[5,57,4,36],[6,2,5,0],[6,6,5,4,"sha"],[6,9,5,7],[6,12,5,10,"require"],[6,19,5,17],[6,20,5,17,"_dependencyMap"],[6,34,5,17],[6,47,5,26],[6,48,5,27],[7,2,6,0],[7,6,6,4,"Buffer"],[7,12,6,10],[7,15,6,13,"require"],[7,22,6,20],[7,23,6,20,"_dependencyMap"],[7,37,6,20],[7,55,6,34],[7,56,6,35],[7,57,6,36,"Buffer"],[7,63,6,42],[8,2,8,0],[8,6,8,4,"checkParameters"],[8,21,8,19],[8,24,8,22,"require"],[8,31,8,29],[8,32,8,29,"_dependencyMap"],[8,46,8,29],[8,67,8,46],[8,68,8,47],[9,2,9,0],[9,6,9,4,"defaultEncoding"],[9,21,9,19],[9,24,9,22,"require"],[9,31,9,29],[9,32,9,29,"_dependencyMap"],[9,46,9,29],[9,71,9,50],[9,72,9,51],[10,2,10,0],[10,6,10,4,"toBuffer"],[10,14,10,12],[10,17,10,15,"require"],[10,24,10,22],[10,25,10,22,"_dependencyMap"],[10,39,10,22],[10,57,10,36],[10,58,10,37],[11,2,12,0],[11,6,12,4,"ZEROS"],[11,11,12,9],[11,14,12,12,"Buffer"],[11,20,12,18],[11,21,12,19,"alloc"],[11,26,12,24],[11,27,12,25],[11,30,12,28],[11,31,12,29],[12,2,13,0],[12,6,13,4,"sizes"],[12,11,13,9],[12,14,13,12],[13,4,14,1,"__proto__"],[13,13,14,10],[13,15,14,12],[13,19,14,16],[14,4,15,1,"md5"],[14,7,15,4],[14,9,15,6],[14,11,15,8],[15,4,16,1,"sha1"],[15,8,16,5],[15,10,16,7],[15,12,16,9],[16,4,17,1,"sha224"],[16,10,17,7],[16,12,17,9],[16,14,17,11],[17,4,18,1,"sha256"],[17,10,18,7],[17,12,18,9],[17,14,18,11],[18,4,19,1,"sha384"],[18,10,19,7],[18,12,19,9],[18,14,19,11],[19,4,20,1,"sha512"],[19,10,20,7],[19,12,20,9],[19,14,20,11],[20,4,21,1],[20,16,21,13],[20,18,21,15],[20,20,21,17],[21,4,22,1,"ripemd160"],[21,13,22,10],[21,15,22,12],[21,17,22,14],[22,4,23,1,"rmd160"],[22,10,23,7],[22,12,23,9],[23,2,24,0],[23,3,24,1],[24,2,26,0],[24,6,26,4,"mapping"],[24,13,26,11],[24,16,26,14],[25,4,27,1,"__proto__"],[25,13,27,10],[25,15,27,12],[25,19,27,16],[26,4,28,1],[26,11,28,8],[26,13,28,10],[26,19,28,16],[27,4,29,1],[27,13,29,10],[27,15,29,12],[27,23,29,20],[28,4,30,1],[28,13,30,10],[28,15,30,12],[28,23,30,20],[29,4,31,1],[29,13,31,10],[29,15,31,12],[29,23,31,20],[30,4,32,1],[30,13,32,10],[30,15,32,12],[30,23,32,20],[31,4,33,1],[31,16,33,13],[31,18,33,15],[32,2,34,0],[32,3,34,1],[33,2,36,0],[33,11,36,9,"rmd160Func"],[33,21,36,19,"rmd160Func"],[33,22,36,20,"data"],[33,26,36,24],[33,28,36,26],[34,4,37,1],[34,11,37,8],[34,15,37,12,"RIPEMD160"],[34,24,37,21],[34,25,37,22],[34,26,37,23],[34,27,37,24,"update"],[34,33,37,30],[34,34,37,31,"data"],[34,38,37,35],[34,39,37,36],[34,40,37,37,"digest"],[34,46,37,43],[34,47,37,44],[34,48,37,45],[35,2,38,0],[36,2,40,0],[36,11,40,9,"getDigest"],[36,20,40,18,"getDigest"],[36,21,40,19,"alg"],[36,24,40,22],[36,26,40,24],[37,4,41,1],[37,13,41,10,"shaFunc"],[37,20,41,17,"shaFunc"],[37,21,41,18,"data"],[37,25,41,22],[37,27,41,24],[38,6,42,2],[38,13,42,9,"sha"],[38,16,42,12],[38,17,42,13,"alg"],[38,20,42,16],[38,21,42,17],[38,22,42,18,"update"],[38,28,42,24],[38,29,42,25,"data"],[38,33,42,29],[38,34,42,30],[38,35,42,31,"digest"],[38,41,42,37],[38,42,42,38],[38,43,42,39],[39,4,43,1],[40,4,45,1],[40,8,45,5,"alg"],[40,11,45,8],[40,16,45,13],[40,24,45,21],[40,28,45,25,"alg"],[40,31,45,28],[40,36,45,33],[40,47,45,44],[40,49,45,46],[41,6,46,2],[41,13,46,9,"rmd160Func"],[41,23,46,19],[42,4,47,1],[43,4,48,1],[43,8,48,5,"alg"],[43,11,48,8],[43,16,48,13],[43,21,48,18],[43,23,48,20],[44,6,49,2],[44,13,49,9,"md5"],[44,16,49,12],[45,4,50,1],[46,4,51,1],[46,11,51,8,"shaFunc"],[46,18,51,15],[47,2,52,0],[48,2,54,0],[48,11,54,9,"Hmac"],[48,15,54,13,"Hmac"],[48,16,54,14,"alg"],[48,19,54,17],[48,21,54,19,"key"],[48,24,54,22],[48,26,54,24,"saltLen"],[48,33,54,31],[48,35,54,33],[49,4,55,1],[49,8,55,5,"hash"],[49,12,55,9],[49,15,55,12,"getDigest"],[49,24,55,21],[49,25,55,22,"alg"],[49,28,55,25],[49,29,55,26],[50,4,56,1],[50,8,56,5,"blocksize"],[50,17,56,14],[50,20,56,17,"alg"],[50,23,56,20],[50,28,56,25],[50,36,56,33],[50,40,56,37,"alg"],[50,43,56,40],[50,48,56,45],[50,56,56,53],[50,59,56,56],[50,62,56,59],[50,65,56,62],[50,67,56,64],[51,4,58,1],[51,8,58,5,"key"],[51,11,58,8],[51,12,58,9,"length"],[51,18,58,15],[51,21,58,18,"blocksize"],[51,30,58,27],[51,32,58,29],[52,6,59,2,"key"],[52,9,59,5],[52,12,59,8,"hash"],[52,16,59,12],[52,17,59,13,"key"],[52,20,59,16],[52,21,59,17],[53,4,60,1],[53,5,60,2],[53,11,60,8],[53,15,60,12,"key"],[53,18,60,15],[53,19,60,16,"length"],[53,25,60,22],[53,28,60,25,"blocksize"],[53,37,60,34],[53,39,60,36],[54,6,61,2,"key"],[54,9,61,5],[54,12,61,8,"Buffer"],[54,18,61,14],[54,19,61,15,"concat"],[54,25,61,21],[54,26,61,22],[54,27,61,23,"key"],[54,30,61,26],[54,32,61,28,"ZEROS"],[54,37,61,33],[54,38,61,34],[54,40,61,36,"blocksize"],[54,49,61,45],[54,50,61,46],[55,4,62,1],[56,4,64,1],[56,8,64,5,"ipad"],[56,12,64,9],[56,15,64,12,"Buffer"],[56,21,64,18],[56,22,64,19,"allocUnsafe"],[56,33,64,30],[56,34,64,31,"blocksize"],[56,43,64,40],[56,46,64,43,"sizes"],[56,51,64,48],[56,52,64,49,"alg"],[56,55,64,52],[56,56,64,53],[56,57,64,54],[57,4,65,1],[57,8,65,5,"opad"],[57,12,65,9],[57,15,65,12,"Buffer"],[57,21,65,18],[57,22,65,19,"allocUnsafe"],[57,33,65,30],[57,34,65,31,"blocksize"],[57,43,65,40],[57,46,65,43,"sizes"],[57,51,65,48],[57,52,65,49,"alg"],[57,55,65,52],[57,56,65,53],[57,57,65,54],[58,4,66,1],[58,9,66,6],[58,13,66,10,"i"],[58,14,66,11],[58,17,66,14],[58,18,66,15],[58,20,66,17,"i"],[58,21,66,18],[58,24,66,21,"blocksize"],[58,33,66,30],[58,35,66,32,"i"],[58,36,66,33],[58,38,66,35],[58,40,66,37],[59,6,67,2,"ipad"],[59,10,67,6],[59,11,67,7,"i"],[59,12,67,8],[59,13,67,9],[59,16,67,12,"key"],[59,19,67,15],[59,20,67,16,"i"],[59,21,67,17],[59,22,67,18],[59,25,67,21],[59,29,67,25],[60,6,68,2,"opad"],[60,10,68,6],[60,11,68,7,"i"],[60,12,68,8],[60,13,68,9],[60,16,68,12,"key"],[60,19,68,15],[60,20,68,16,"i"],[60,21,68,17],[60,22,68,18],[60,25,68,21],[60,29,68,25],[61,4,69,1],[62,4,71,1],[62,8,71,5,"ipad1"],[62,13,71,10],[62,16,71,13,"Buffer"],[62,22,71,19],[62,23,71,20,"allocUnsafe"],[62,34,71,31],[62,35,71,32,"blocksize"],[62,44,71,41],[62,47,71,44,"saltLen"],[62,54,71,51],[62,57,71,54],[62,58,71,55],[62,59,71,56],[63,4,72,1,"ipad"],[63,8,72,5],[63,9,72,6,"copy"],[63,13,72,10],[63,14,72,11,"ipad1"],[63,19,72,16],[63,21,72,18],[63,22,72,19],[63,24,72,21],[63,25,72,22],[63,27,72,24,"blocksize"],[63,36,72,33],[63,37,72,34],[64,4,73,1],[64,8,73,5],[64,9,73,6,"ipad1"],[64,14,73,11],[64,17,73,14,"ipad1"],[64,22,73,19],[65,4,74,1],[65,8,74,5],[65,9,74,6,"ipad2"],[65,14,74,11],[65,17,74,14,"ipad"],[65,21,74,18],[66,4,75,1],[66,8,75,5],[66,9,75,6,"opad"],[66,13,75,10],[66,16,75,13,"opad"],[66,20,75,17],[67,4,76,1],[67,8,76,5],[67,9,76,6,"alg"],[67,12,76,9],[67,15,76,12,"alg"],[67,18,76,15],[68,4,77,1],[68,8,77,5],[68,9,77,6,"blocksize"],[68,18,77,15],[68,21,77,18,"blocksize"],[68,30,77,27],[69,4,78,1],[69,8,78,5],[69,9,78,6,"hash"],[69,13,78,10],[69,16,78,13,"hash"],[69,20,78,17],[70,4,79,1],[70,8,79,5],[70,9,79,6,"size"],[70,13,79,10],[70,16,79,13,"sizes"],[70,21,79,18],[70,22,79,19,"alg"],[70,25,79,22],[70,26,79,23],[71,2,80,0],[72,2,82,0,"Hmac"],[72,6,82,4],[72,7,82,5,"prototype"],[72,16,82,14],[72,17,82,15,"run"],[72,20,82,18],[72,23,82,21],[72,33,82,31,"data"],[72,37,82,35],[72,39,82,37,"ipad"],[72,43,82,41],[72,45,82,43],[73,4,83,1,"data"],[73,8,83,5],[73,9,83,6,"copy"],[73,13,83,10],[73,14,83,11,"ipad"],[73,18,83,15],[73,20,83,17],[73,24,83,21],[73,25,83,22,"blocksize"],[73,34,83,31],[73,35,83,32],[74,4,84,1],[74,8,84,5,"h"],[74,9,84,6],[74,12,84,9],[74,16,84,13],[74,17,84,14,"hash"],[74,21,84,18],[74,22,84,19,"ipad"],[74,26,84,23],[74,27,84,24],[75,4,85,1,"h"],[75,5,85,2],[75,6,85,3,"copy"],[75,10,85,7],[75,11,85,8],[75,15,85,12],[75,16,85,13,"opad"],[75,20,85,17],[75,22,85,19],[75,26,85,23],[75,27,85,24,"blocksize"],[75,36,85,33],[75,37,85,34],[76,4,86,1],[76,11,86,8],[76,15,86,12],[76,16,86,13,"hash"],[76,20,86,17],[76,21,86,18],[76,25,86,22],[76,26,86,23,"opad"],[76,30,86,27],[76,31,86,28],[77,2,87,0],[77,3,87,1],[78,2,89,0],[78,11,89,9,"pbkdf2"],[78,17,89,15,"pbkdf2"],[78,18,89,16,"password"],[78,26,89,24],[78,28,89,26,"salt"],[78,32,89,30],[78,34,89,32,"iterations"],[78,44,89,42],[78,46,89,44,"keylen"],[78,52,89,50],[78,54,89,52,"digest"],[78,60,89,58],[78,62,89,60],[79,4,90,1,"checkParameters"],[79,19,90,16],[79,20,90,17,"iterations"],[79,30,90,27],[79,32,90,29,"keylen"],[79,38,90,35],[79,39,90,36],[80,4,91,1,"password"],[80,12,91,9],[80,15,91,12,"toBuffer"],[80,23,91,20],[80,24,91,21,"password"],[80,32,91,29],[80,34,91,31,"defaultEncoding"],[80,49,91,46],[80,51,91,48],[80,61,91,58],[80,62,91,59],[81,4,92,1,"salt"],[81,8,92,5],[81,11,92,8,"toBuffer"],[81,19,92,16],[81,20,92,17,"salt"],[81,24,92,21],[81,26,92,23,"defaultEncoding"],[81,41,92,38],[81,43,92,40],[81,49,92,46],[81,50,92,47],[82,4,94,1],[82,8,94,5,"lowerDigest"],[82,19,94,16],[82,22,94,19],[82,23,94,20,"digest"],[82,29,94,26],[82,33,94,30],[82,39,94,36],[82,41,94,38,"toLowerCase"],[82,52,94,49],[82,53,94,50],[82,54,94,51],[83,4,95,1],[83,8,95,5,"mappedDigest"],[83,20,95,17],[83,23,95,20,"mapping"],[83,30,95,27],[83,31,95,28,"lowerDigest"],[83,42,95,39],[83,43,95,40],[83,47,95,44,"lowerDigest"],[83,58,95,55],[84,4,96,1],[84,8,96,5,"size"],[84,12,96,9],[84,15,96,12,"sizes"],[84,20,96,17],[84,21,96,18,"mappedDigest"],[84,33,96,30],[84,34,96,31],[85,4,97,1],[85,8,97,5],[85,15,97,12,"size"],[85,19,97,16],[85,24,97,21],[85,32,97,29],[85,36,97,33],[85,37,97,34,"size"],[85,41,97,38],[85,43,97,40],[86,6,98,2],[86,12,98,8],[86,16,98,12,"TypeError"],[86,25,98,21],[86,26,98,22],[86,60,98,56],[86,63,98,59,"digest"],[86,69,98,65],[86,70,98,66],[87,4,99,1],[88,4,101,1],[88,8,101,5,"hmac"],[88,12,101,9],[88,15,101,12],[88,19,101,16,"Hmac"],[88,23,101,20],[88,24,101,21,"mappedDigest"],[88,36,101,33],[88,38,101,35,"password"],[88,46,101,43],[88,48,101,45,"salt"],[88,52,101,49],[88,53,101,50,"length"],[88,59,101,56],[88,60,101,57],[89,4,103,1],[89,8,103,5,"DK"],[89,10,103,7],[89,13,103,10,"Buffer"],[89,19,103,16],[89,20,103,17,"allocUnsafe"],[89,31,103,28],[89,32,103,29,"keylen"],[89,38,103,35],[89,39,103,36],[90,4,104,1],[90,8,104,5,"block1"],[90,14,104,11],[90,17,104,14,"Buffer"],[90,23,104,20],[90,24,104,21,"allocUnsafe"],[90,35,104,32],[90,36,104,33,"salt"],[90,40,104,37],[90,41,104,38,"length"],[90,47,104,44],[90,50,104,47],[90,51,104,48],[90,52,104,49],[91,4,105,1,"salt"],[91,8,105,5],[91,9,105,6,"copy"],[91,13,105,10],[91,14,105,11,"block1"],[91,20,105,17],[91,22,105,19],[91,23,105,20],[91,25,105,22],[91,26,105,23],[91,28,105,25,"salt"],[91,32,105,29],[91,33,105,30,"length"],[91,39,105,36],[91,40,105,37],[92,4,107,1],[92,8,107,5,"destPos"],[92,15,107,12],[92,18,107,15],[92,19,107,16],[93,4,108,1],[93,8,108,5,"hLen"],[93,12,108,9],[93,15,108,12,"size"],[93,19,108,16],[94,4,109,1],[94,8,109,5,"l"],[94,9,109,6],[94,12,109,9,"Math"],[94,16,109,13],[94,17,109,14,"ceil"],[94,21,109,18],[94,22,109,19,"keylen"],[94,28,109,25],[94,31,109,28,"hLen"],[94,35,109,32],[94,36,109,33],[95,4,111,1],[95,9,111,6],[95,13,111,10,"i"],[95,14,111,11],[95,17,111,14],[95,18,111,15],[95,20,111,17,"i"],[95,21,111,18],[95,25,111,22,"l"],[95,26,111,23],[95,28,111,25,"i"],[95,29,111,26],[95,31,111,28],[95,33,111,30],[96,6,112,2,"block1"],[96,12,112,8],[96,13,112,9,"writeUInt32BE"],[96,26,112,22],[96,27,112,23,"i"],[96,28,112,24],[96,30,112,26,"salt"],[96,34,112,30],[96,35,112,31,"length"],[96,41,112,37],[96,42,112,38],[97,6,114,2],[97,10,114,6,"T"],[97,11,114,7],[97,14,114,10,"hmac"],[97,18,114,14],[97,19,114,15,"run"],[97,22,114,18],[97,23,114,19,"block1"],[97,29,114,25],[97,31,114,27,"hmac"],[97,35,114,31],[97,36,114,32,"ipad1"],[97,41,114,37],[97,42,114,38],[98,6,115,2],[98,10,115,6,"U"],[98,11,115,7],[98,14,115,10,"T"],[98,15,115,11],[99,6,117,2],[99,11,117,7],[99,15,117,11,"j"],[99,16,117,12],[99,19,117,15],[99,20,117,16],[99,22,117,18,"j"],[99,23,117,19],[99,26,117,22,"iterations"],[99,36,117,32],[99,38,117,34,"j"],[99,39,117,35],[99,41,117,37],[99,43,117,39],[100,8,118,3,"U"],[100,9,118,4],[100,12,118,7,"hmac"],[100,16,118,11],[100,17,118,12,"run"],[100,20,118,15],[100,21,118,16,"U"],[100,22,118,17],[100,24,118,19,"hmac"],[100,28,118,23],[100,29,118,24,"ipad2"],[100,34,118,29],[100,35,118,30],[101,8,119,3],[101,13,119,8],[101,17,119,12,"k"],[101,18,119,13],[101,21,119,16],[101,22,119,17],[101,24,119,19,"k"],[101,25,119,20],[101,28,119,23,"hLen"],[101,32,119,27],[101,34,119,29,"k"],[101,35,119,30],[101,37,119,32],[101,39,119,34],[102,10,120,4,"T"],[102,11,120,5],[102,12,120,6,"k"],[102,13,120,7],[102,14,120,8],[102,18,120,12,"U"],[102,19,120,13],[102,20,120,14,"k"],[102,21,120,15],[102,22,120,16],[103,8,121,3],[104,6,122,2],[105,6,124,2,"T"],[105,7,124,3],[105,8,124,4,"copy"],[105,12,124,8],[105,13,124,9,"DK"],[105,15,124,11],[105,17,124,13,"destPos"],[105,24,124,20],[105,25,124,21],[106,6,125,2,"destPos"],[106,13,125,9],[106,17,125,13,"hLen"],[106,21,125,17],[107,4,126,1],[108,4,128,1],[108,11,128,8,"DK"],[108,13,128,10],[109,2,129,0],[110,2,131,0,"module"],[110,8,131,6],[110,9,131,7,"exports"],[110,16,131,14],[110,19,131,17,"pbkdf2"],[110,25,131,23],[111,0,131,24],[111,3]],"functionMap":{"names":["<global>","rmd160Func","getDigest","shaFunc","Hmac","Hmac.prototype.run","pbkdf2"],"mappings":"AAA;ACmC;CDE;AEE;CCC;EDE;CFS;AIE;CJ0B;qBKE;CLK;AME;CNwC"}},"type":"js/module"}]}