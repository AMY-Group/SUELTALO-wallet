{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":97,"index":97}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":98},"end":{"line":2,"column":51,"index":149}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/initializeMultisig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":150},"end":{"line":3,"column":92,"index":242}}],"key":"9Lg2mJZr6EyMtQK8HUBCFQUeXgQ=","exportNames":["*"]}},{"name":"../state/multisig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":243},"end":{"line":4,"column":93,"index":336}}],"key":"KNdGU/qvgO77giLO3S3RUVpU2TI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMultisig = createMultisig;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _initializeMultisig = require(_dependencyMap[2], \"../instructions/initializeMultisig.js\");\n  var _multisig = require(_dependencyMap[3], \"../state/multisig.js\");\n  /**\n   * Create and initialize a new multisig\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction and initialization fees\n   * @param signers        Full set of signers\n   * @param m              Number of required signatures\n   * @param keypair        Optional keypair, defaulting to a new random one\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Address of the new multisig\n   */\n  async function createMultisig(connection, payer, signers, m, keypair = _web.Keypair.generate(), confirmOptions, programId = _constants.TOKEN_PROGRAM_ID) {\n    const lamports = await (0, _multisig.getMinimumBalanceForRentExemptMultisig)(connection);\n    const transaction = new _web.Transaction().add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: keypair.publicKey,\n      space: _multisig.MULTISIG_SIZE,\n      lamports,\n      programId\n    }), (0, _initializeMultisig.createInitializeMultisigInstruction)(keypair.publicKey, signers, m, programId));\n    await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n  }\n});","lineCount":35,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_initializeMultisig"],[8,25,3,0],[8,28,3,0,"require"],[8,35,3,0],[8,36,3,0,"_dependencyMap"],[8,50,3,0],[9,2,4,0],[9,6,4,0,"_multisig"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,2,18,7],[23,17,18,22,"createMultisig"],[23,31,18,36,"createMultisig"],[23,32,18,37,"connection"],[23,42,18,47],[23,44,18,49,"payer"],[23,49,18,54],[23,51,18,56,"signers"],[23,58,18,63],[23,60,18,65,"m"],[23,61,18,66],[23,63,18,68,"keypair"],[23,70,18,75],[23,73,18,78,"Keypair"],[23,85,18,85],[23,86,18,86,"generate"],[23,94,18,94],[23,95,18,95],[23,96,18,96],[23,98,18,98,"confirmOptions"],[23,112,18,112],[23,114,18,114,"programId"],[23,123,18,123],[23,126,18,126,"TOKEN_PROGRAM_ID"],[23,153,18,142],[23,155,18,144],[24,4,19,4],[24,10,19,10,"lamports"],[24,18,19,18],[24,21,19,21],[24,27,19,27],[24,31,19,27,"getMinimumBalanceForRentExemptMultisig"],[24,79,19,65],[24,81,19,66,"connection"],[24,91,19,76],[24,92,19,77],[25,4,20,4],[25,10,20,10,"transaction"],[25,21,20,21],[25,24,20,24],[25,28,20,28,"Transaction"],[25,44,20,39],[25,45,20,40],[25,46,20,41],[25,47,20,42,"add"],[25,50,20,45],[25,51,20,46,"SystemProgram"],[25,69,20,59],[25,70,20,60,"createAccount"],[25,83,20,73],[25,84,20,74],[26,6,21,8,"fromPubkey"],[26,16,21,18],[26,18,21,20,"payer"],[26,23,21,25],[26,24,21,26,"publicKey"],[26,33,21,35],[27,6,22,8,"newAccountPubkey"],[27,22,22,24],[27,24,22,26,"keypair"],[27,31,22,33],[27,32,22,34,"publicKey"],[27,41,22,43],[28,6,23,8,"space"],[28,11,23,13],[28,13,23,15,"MULTISIG_SIZE"],[28,36,23,28],[29,6,24,8,"lamports"],[29,14,24,16],[30,6,25,8,"programId"],[31,4,26,4],[31,5,26,5],[31,6,26,6],[31,8,26,8],[31,12,26,8,"createInitializeMultisigInstruction"],[31,67,26,43],[31,69,26,44,"keypair"],[31,76,26,51],[31,77,26,52,"publicKey"],[31,86,26,61],[31,88,26,63,"signers"],[31,95,26,70],[31,97,26,72,"m"],[31,98,26,73],[31,100,26,75,"programId"],[31,109,26,84],[31,110,26,85],[31,111,26,86],[32,4,27,4],[32,10,27,10],[32,14,27,10,"sendAndConfirmTransaction"],[32,44,27,35],[32,46,27,36,"connection"],[32,56,27,46],[32,58,27,48,"transaction"],[32,69,27,59],[32,71,27,61],[32,72,27,62,"payer"],[32,77,27,67],[32,79,27,69,"keypair"],[32,86,27,76],[32,87,27,77],[32,89,27,79,"confirmOptions"],[32,103,27,93],[32,104,27,94],[33,4,28,4],[33,11,28,11,"keypair"],[33,18,28,18],[33,19,28,19,"publicKey"],[33,28,28,28],[34,2,29,0],[35,0,29,1],[35,3]],"functionMap":{"names":["<global>","createMultisig"],"mappings":"AAA;OCiB;CDW"}},"type":"js/module"}]}