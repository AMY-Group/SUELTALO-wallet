{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":88,"index":88}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":89},"end":{"line":2,"column":93,"index":182}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/associatedTokenAccount.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":183},"end":{"line":3,"column":100,"index":283}}],"key":"0KInrlWvwWYIf/F6QtBqaQdI9AA=","exportNames":["*"]}},{"name":"../instructions/initializeAccount.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":284},"end":{"line":4,"column":90,"index":374}}],"key":"dE4fJwAVNG2oH+zvJ+krAhoxQLo=","exportNames":["*"]}},{"name":"../instructions/syncNative.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":375},"end":{"line":5,"column":76,"index":451}}],"key":"zCjAo1YP/co8K8ZbljrkRiiK53A=","exportNames":["*"]}},{"name":"../state/account.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":452},"end":{"line":6,"column":90,"index":542}}],"key":"q9NSgqd/wd0qBGy7V2cKVlmP46E=","exportNames":["*"]}},{"name":"../state/mint.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":543},"end":{"line":7,"column":65,"index":608}}],"key":"v3pX84XwBjgEzA16Wj3LfwCi9fI=","exportNames":["*"]}},{"name":"./createAccount.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":609},"end":{"line":8,"column":51,"index":660}}],"key":"DIcQ93Soppb9xVkhwA7lppsIinY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createWrappedNativeAccount = createWrappedNativeAccount;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _associatedTokenAccount = require(_dependencyMap[2], \"../instructions/associatedTokenAccount.js\");\n  var _initializeAccount = require(_dependencyMap[3], \"../instructions/initializeAccount.js\");\n  var _syncNative = require(_dependencyMap[4], \"../instructions/syncNative.js\");\n  var _account = require(_dependencyMap[5], \"../state/account.js\");\n  var _mint = require(_dependencyMap[6], \"../state/mint.js\");\n  var _createAccount = require(_dependencyMap[7], \"./createAccount.js\");\n  /**\n   * Create, initialize, and fund a new wrapped native SOL account\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction and initialization fees\n   * @param owner          Owner of the new token account\n   * @param amount         Number of lamports to wrap\n   * @param keypair        Optional keypair, defaulting to the associated token account for the native mint and `owner`\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Address of the new wrapped native SOL account\n   */\n  async function createWrappedNativeAccount(connection, payer, owner, amount, keypair, confirmOptions, programId = _constants.TOKEN_PROGRAM_ID, nativeMint = _constants.NATIVE_MINT) {\n    // If the amount provided is explicitly 0 or NaN, just create the account without funding it\n    if (!amount) return await (0, _createAccount.createAccount)(connection, payer, nativeMint, owner, keypair, confirmOptions, programId);\n    // If a keypair isn't provided, create the account at the owner's ATA for the native mint and return its address\n    if (!keypair) {\n      const associatedToken = (0, _mint.getAssociatedTokenAddressSync)(nativeMint, owner, false, programId, _constants.ASSOCIATED_TOKEN_PROGRAM_ID);\n      const transaction = new _web.Transaction().add((0, _associatedTokenAccount.createAssociatedTokenAccountInstruction)(payer.publicKey, associatedToken, owner, nativeMint, programId, _constants.ASSOCIATED_TOKEN_PROGRAM_ID), _web.SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: associatedToken,\n        lamports: amount\n      }), (0, _syncNative.createSyncNativeInstruction)(associatedToken, programId));\n      await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer], confirmOptions);\n      return associatedToken;\n    }\n    // Otherwise, create the account with the provided keypair and return its public key\n    const lamports = await (0, _account.getMinimumBalanceForRentExemptAccount)(connection);\n    const transaction = new _web.Transaction().add(_web.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: keypair.publicKey,\n      space: _account.ACCOUNT_SIZE,\n      lamports,\n      programId\n    }), _web.SystemProgram.transfer({\n      fromPubkey: payer.publicKey,\n      toPubkey: keypair.publicKey,\n      lamports: amount\n    }), (0, _initializeAccount.createInitializeAccountInstruction)(keypair.publicKey, nativeMint, owner, programId));\n    await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n  }\n});","lineCount":57,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_associatedTokenAccount"],[8,29,3,0],[8,32,3,0,"require"],[8,39,3,0],[8,40,3,0,"_dependencyMap"],[8,54,3,0],[9,2,4,0],[9,6,4,0,"_initializeAccount"],[9,24,4,0],[9,27,4,0,"require"],[9,34,4,0],[9,35,4,0,"_dependencyMap"],[9,49,4,0],[10,2,5,0],[10,6,5,0,"_syncNative"],[10,17,5,0],[10,20,5,0,"require"],[10,27,5,0],[10,28,5,0,"_dependencyMap"],[10,42,5,0],[11,2,6,0],[11,6,6,0,"_account"],[11,14,6,0],[11,17,6,0,"require"],[11,24,6,0],[11,25,6,0,"_dependencyMap"],[11,39,6,0],[12,2,7,0],[12,6,7,0,"_mint"],[12,11,7,0],[12,14,7,0,"require"],[12,21,7,0],[12,22,7,0,"_dependencyMap"],[12,36,7,0],[13,2,8,0],[13,6,8,0,"_createAccount"],[13,20,8,0],[13,23,8,0,"require"],[13,30,8,0],[13,31,8,0,"_dependencyMap"],[13,45,8,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,7],[27,17,22,22,"createWrappedNativeAccount"],[27,43,22,48,"createWrappedNativeAccount"],[27,44,22,49,"connection"],[27,54,22,59],[27,56,22,61,"payer"],[27,61,22,66],[27,63,22,68,"owner"],[27,68,22,73],[27,70,22,75,"amount"],[27,76,22,81],[27,78,22,83,"keypair"],[27,85,22,90],[27,87,22,92,"confirmOptions"],[27,101,22,106],[27,103,22,108,"programId"],[27,112,22,117],[27,115,22,120,"TOKEN_PROGRAM_ID"],[27,142,22,136],[27,144,22,138,"nativeMint"],[27,154,22,148],[27,157,22,151,"NATIVE_MINT"],[27,179,22,162],[27,181,22,164],[28,4,23,4],[29,4,24,4],[29,8,24,8],[29,9,24,9,"amount"],[29,15,24,15],[29,17,25,8],[29,24,25,15],[29,30,25,21],[29,34,25,21,"createAccount"],[29,62,25,34],[29,64,25,35,"connection"],[29,74,25,45],[29,76,25,47,"payer"],[29,81,25,52],[29,83,25,54,"nativeMint"],[29,93,25,64],[29,95,25,66,"owner"],[29,100,25,71],[29,102,25,73,"keypair"],[29,109,25,80],[29,111,25,82,"confirmOptions"],[29,125,25,96],[29,127,25,98,"programId"],[29,136,25,107],[29,137,25,108],[30,4,26,4],[31,4,27,4],[31,8,27,8],[31,9,27,9,"keypair"],[31,16,27,16],[31,18,27,18],[32,6,28,8],[32,12,28,14,"associatedToken"],[32,27,28,29],[32,30,28,32],[32,34,28,32,"getAssociatedTokenAddressSync"],[32,69,28,61],[32,71,28,62,"nativeMint"],[32,81,28,72],[32,83,28,74,"owner"],[32,88,28,79],[32,90,28,81],[32,95,28,86],[32,97,28,88,"programId"],[32,106,28,97],[32,108,28,99,"ASSOCIATED_TOKEN_PROGRAM_ID"],[32,146,28,126],[32,147,28,127],[33,6,29,8],[33,12,29,14,"transaction"],[33,23,29,25],[33,26,29,28],[33,30,29,32,"Transaction"],[33,46,29,43],[33,47,29,44],[33,48,29,45],[33,49,29,46,"add"],[33,52,29,49],[33,53,29,50],[33,57,29,50,"createAssociatedTokenAccountInstruction"],[33,120,29,89],[33,122,29,90,"payer"],[33,127,29,95],[33,128,29,96,"publicKey"],[33,137,29,105],[33,139,29,107,"associatedToken"],[33,154,29,122],[33,156,29,124,"owner"],[33,161,29,129],[33,163,29,131,"nativeMint"],[33,173,29,141],[33,175,29,143,"programId"],[33,184,29,152],[33,186,29,154,"ASSOCIATED_TOKEN_PROGRAM_ID"],[33,224,29,181],[33,225,29,182],[33,227,29,184,"SystemProgram"],[33,245,29,197],[33,246,29,198,"transfer"],[33,254,29,206],[33,255,29,207],[34,8,30,12,"fromPubkey"],[34,18,30,22],[34,20,30,24,"payer"],[34,25,30,29],[34,26,30,30,"publicKey"],[34,35,30,39],[35,8,31,12,"toPubkey"],[35,16,31,20],[35,18,31,22,"associatedToken"],[35,33,31,37],[36,8,32,12,"lamports"],[36,16,32,20],[36,18,32,22,"amount"],[37,6,33,8],[37,7,33,9],[37,8,33,10],[37,10,33,12],[37,14,33,12,"createSyncNativeInstruction"],[37,53,33,39],[37,55,33,40,"associatedToken"],[37,70,33,55],[37,72,33,57,"programId"],[37,81,33,66],[37,82,33,67],[37,83,33,68],[38,6,34,8],[38,12,34,14],[38,16,34,14,"sendAndConfirmTransaction"],[38,46,34,39],[38,48,34,40,"connection"],[38,58,34,50],[38,60,34,52,"transaction"],[38,71,34,63],[38,73,34,65],[38,74,34,66,"payer"],[38,79,34,71],[38,80,34,72],[38,82,34,74,"confirmOptions"],[38,96,34,88],[38,97,34,89],[39,6,35,8],[39,13,35,15,"associatedToken"],[39,28,35,30],[40,4,36,4],[41,4,37,4],[42,4,38,4],[42,10,38,10,"lamports"],[42,18,38,18],[42,21,38,21],[42,27,38,27],[42,31,38,27,"getMinimumBalanceForRentExemptAccount"],[42,77,38,64],[42,79,38,65,"connection"],[42,89,38,75],[42,90,38,76],[43,4,39,4],[43,10,39,10,"transaction"],[43,21,39,21],[43,24,39,24],[43,28,39,28,"Transaction"],[43,44,39,39],[43,45,39,40],[43,46,39,41],[43,47,39,42,"add"],[43,50,39,45],[43,51,39,46,"SystemProgram"],[43,69,39,59],[43,70,39,60,"createAccount"],[43,83,39,73],[43,84,39,74],[44,6,40,8,"fromPubkey"],[44,16,40,18],[44,18,40,20,"payer"],[44,23,40,25],[44,24,40,26,"publicKey"],[44,33,40,35],[45,6,41,8,"newAccountPubkey"],[45,22,41,24],[45,24,41,26,"keypair"],[45,31,41,33],[45,32,41,34,"publicKey"],[45,41,41,43],[46,6,42,8,"space"],[46,11,42,13],[46,13,42,15,"ACCOUNT_SIZE"],[46,34,42,27],[47,6,43,8,"lamports"],[47,14,43,16],[48,6,44,8,"programId"],[49,4,45,4],[49,5,45,5],[49,6,45,6],[49,8,45,8,"SystemProgram"],[49,26,45,21],[49,27,45,22,"transfer"],[49,35,45,30],[49,36,45,31],[50,6,46,8,"fromPubkey"],[50,16,46,18],[50,18,46,20,"payer"],[50,23,46,25],[50,24,46,26,"publicKey"],[50,33,46,35],[51,6,47,8,"toPubkey"],[51,14,47,16],[51,16,47,18,"keypair"],[51,23,47,25],[51,24,47,26,"publicKey"],[51,33,47,35],[52,6,48,8,"lamports"],[52,14,48,16],[52,16,48,18,"amount"],[53,4,49,4],[53,5,49,5],[53,6,49,6],[53,8,49,8],[53,12,49,8,"createInitializeAccountInstruction"],[53,65,49,42],[53,67,49,43,"keypair"],[53,74,49,50],[53,75,49,51,"publicKey"],[53,84,49,60],[53,86,49,62,"nativeMint"],[53,96,49,72],[53,98,49,74,"owner"],[53,103,49,79],[53,105,49,81,"programId"],[53,114,49,90],[53,115,49,91],[53,116,49,92],[54,4,50,4],[54,10,50,10],[54,14,50,10,"sendAndConfirmTransaction"],[54,44,50,35],[54,46,50,36,"connection"],[54,56,50,46],[54,58,50,48,"transaction"],[54,69,50,59],[54,71,50,61],[54,72,50,62,"payer"],[54,77,50,67],[54,79,50,69,"keypair"],[54,86,50,76],[54,87,50,77],[54,89,50,79,"confirmOptions"],[54,103,50,93],[54,104,50,94],[55,4,51,4],[55,11,51,11,"keypair"],[55,18,51,18],[55,19,51,19,"publicKey"],[55,28,51,28],[56,2,52,0],[57,0,52,1],[57,3]],"functionMap":{"names":["<global>","createWrappedNativeAccount"],"mappings":"AAA;OCqB;CD8B"}},"type":"js/module"}]}