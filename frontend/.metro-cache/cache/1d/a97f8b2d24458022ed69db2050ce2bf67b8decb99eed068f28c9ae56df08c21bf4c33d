{"dependencies":[{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":57},"end":{"line":2,"column":30,"index":74}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable node/no-deprecated-api */\n  var buffer = require(_dependencyMap[0], \"buffer\");\n  var Buffer = buffer.Buffer;\n\n  // alternative to using Object.keys for old browsers\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer);\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n    return Buffer(arg, encodingOrOffset, length);\n  };\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    var buf = Buffer(size);\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n    return buf;\n  };\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return Buffer(size);\n  };\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return buffer.SlowBuffer(size);\n  };\n});","lineCount":59,"map":[[2,2,1,0],[3,2,2,0],[3,6,2,4,"buffer"],[3,12,2,10],[3,15,2,13,"require"],[3,22,2,20],[3,23,2,20,"_dependencyMap"],[3,37,2,20],[3,50,2,29],[3,51,2,30],[4,2,3,0],[4,6,3,4,"Buffer"],[4,12,3,10],[4,15,3,13,"buffer"],[4,21,3,19],[4,22,3,20,"Buffer"],[4,28,3,26],[6,2,5,0],[7,2,6,0],[7,11,6,9,"copyProps"],[7,20,6,18,"copyProps"],[7,21,6,20,"src"],[7,24,6,23],[7,26,6,25,"dst"],[7,29,6,28],[7,31,6,30],[8,4,7,2],[8,9,7,7],[8,13,7,11,"key"],[8,16,7,14],[8,20,7,18,"src"],[8,23,7,21],[8,25,7,23],[9,6,8,4,"dst"],[9,9,8,7],[9,10,8,8,"key"],[9,13,8,11],[9,14,8,12],[9,17,8,15,"src"],[9,20,8,18],[9,21,8,19,"key"],[9,24,8,22],[9,25,8,23],[10,4,9,2],[11,2,10,0],[12,2,11,0],[12,6,11,4,"Buffer"],[12,12,11,10],[12,13,11,11,"from"],[12,17,11,15],[12,21,11,19,"Buffer"],[12,27,11,25],[12,28,11,26,"alloc"],[12,33,11,31],[12,37,11,35,"Buffer"],[12,43,11,41],[12,44,11,42,"allocUnsafe"],[12,55,11,53],[12,59,11,57,"Buffer"],[12,65,11,63],[12,66,11,64,"allocUnsafeSlow"],[12,81,11,79],[12,83,11,81],[13,4,12,2,"module"],[13,10,12,8],[13,11,12,9,"exports"],[13,18,12,16],[13,21,12,19,"buffer"],[13,27,12,25],[14,2,13,0],[14,3,13,1],[14,9,13,7],[15,4,14,2],[16,4,15,2,"copyProps"],[16,13,15,11],[16,14,15,12,"buffer"],[16,20,15,18],[16,22,15,20,"exports"],[16,29,15,27],[16,30,15,28],[17,4,16,2,"exports"],[17,11,16,9],[17,12,16,10,"Buffer"],[17,18,16,16],[17,21,16,19,"SafeBuffer"],[17,31,16,29],[18,2,17,0],[19,2,19,0],[19,11,19,9,"SafeBuffer"],[19,21,19,19,"SafeBuffer"],[19,22,19,21,"arg"],[19,25,19,24],[19,27,19,26,"encodingOrOffset"],[19,43,19,42],[19,45,19,44,"length"],[19,51,19,50],[19,53,19,52],[20,4,20,2],[20,11,20,9,"Buffer"],[20,17,20,15],[20,18,20,16,"arg"],[20,21,20,19],[20,23,20,21,"encodingOrOffset"],[20,39,20,37],[20,41,20,39,"length"],[20,47,20,45],[20,48,20,46],[21,2,21,0],[23,2,23,0],[24,2,24,0,"copyProps"],[24,11,24,9],[24,12,24,10,"Buffer"],[24,18,24,16],[24,20,24,18,"SafeBuffer"],[24,30,24,28],[24,31,24,29],[25,2,26,0,"SafeBuffer"],[25,12,26,10],[25,13,26,11,"from"],[25,17,26,15],[25,20,26,18],[25,30,26,28,"arg"],[25,33,26,31],[25,35,26,33,"encodingOrOffset"],[25,51,26,49],[25,53,26,51,"length"],[25,59,26,57],[25,61,26,59],[26,4,27,2],[26,8,27,6],[26,15,27,13,"arg"],[26,18,27,16],[26,23,27,21],[26,31,27,29],[26,33,27,31],[27,6,28,4],[27,12,28,10],[27,16,28,14,"TypeError"],[27,25,28,23],[27,26,28,24],[27,57,28,55],[27,58,28,56],[28,4,29,2],[29,4,30,2],[29,11,30,9,"Buffer"],[29,17,30,15],[29,18,30,16,"arg"],[29,21,30,19],[29,23,30,21,"encodingOrOffset"],[29,39,30,37],[29,41,30,39,"length"],[29,47,30,45],[29,48,30,46],[30,2,31,0],[30,3,31,1],[31,2,33,0,"SafeBuffer"],[31,12,33,10],[31,13,33,11,"alloc"],[31,18,33,16],[31,21,33,19],[31,31,33,29,"size"],[31,35,33,33],[31,37,33,35,"fill"],[31,41,33,39],[31,43,33,41,"encoding"],[31,51,33,49],[31,53,33,51],[32,4,34,2],[32,8,34,6],[32,15,34,13,"size"],[32,19,34,17],[32,24,34,22],[32,32,34,30],[32,34,34,32],[33,6,35,4],[33,12,35,10],[33,16,35,14,"TypeError"],[33,25,35,23],[33,26,35,24],[33,53,35,51],[33,54,35,52],[34,4,36,2],[35,4,37,2],[35,8,37,6,"buf"],[35,11,37,9],[35,14,37,12,"Buffer"],[35,20,37,18],[35,21,37,19,"size"],[35,25,37,23],[35,26,37,24],[36,4,38,2],[36,8,38,6,"fill"],[36,12,38,10],[36,17,38,15,"undefined"],[36,26,38,24],[36,28,38,26],[37,6,39,4],[37,10,39,8],[37,17,39,15,"encoding"],[37,25,39,23],[37,30,39,28],[37,38,39,36],[37,40,39,38],[38,8,40,6,"buf"],[38,11,40,9],[38,12,40,10,"fill"],[38,16,40,14],[38,17,40,15,"fill"],[38,21,40,19],[38,23,40,21,"encoding"],[38,31,40,29],[38,32,40,30],[39,6,41,4],[39,7,41,5],[39,13,41,11],[40,8,42,6,"buf"],[40,11,42,9],[40,12,42,10,"fill"],[40,16,42,14],[40,17,42,15,"fill"],[40,21,42,19],[40,22,42,20],[41,6,43,4],[42,4,44,2],[42,5,44,3],[42,11,44,9],[43,6,45,4,"buf"],[43,9,45,7],[43,10,45,8,"fill"],[43,14,45,12],[43,15,45,13],[43,16,45,14],[43,17,45,15],[44,4,46,2],[45,4,47,2],[45,11,47,9,"buf"],[45,14,47,12],[46,2,48,0],[46,3,48,1],[47,2,50,0,"SafeBuffer"],[47,12,50,10],[47,13,50,11,"allocUnsafe"],[47,24,50,22],[47,27,50,25],[47,37,50,35,"size"],[47,41,50,39],[47,43,50,41],[48,4,51,2],[48,8,51,6],[48,15,51,13,"size"],[48,19,51,17],[48,24,51,22],[48,32,51,30],[48,34,51,32],[49,6,52,4],[49,12,52,10],[49,16,52,14,"TypeError"],[49,25,52,23],[49,26,52,24],[49,53,52,51],[49,54,52,52],[50,4,53,2],[51,4,54,2],[51,11,54,9,"Buffer"],[51,17,54,15],[51,18,54,16,"size"],[51,22,54,20],[51,23,54,21],[52,2,55,0],[52,3,55,1],[53,2,57,0,"SafeBuffer"],[53,12,57,10],[53,13,57,11,"allocUnsafeSlow"],[53,28,57,26],[53,31,57,29],[53,41,57,39,"size"],[53,45,57,43],[53,47,57,45],[54,4,58,2],[54,8,58,6],[54,15,58,13,"size"],[54,19,58,17],[54,24,58,22],[54,32,58,30],[54,34,58,32],[55,6,59,4],[55,12,59,10],[55,16,59,14,"TypeError"],[55,25,59,23],[55,26,59,24],[55,53,59,51],[55,54,59,52],[56,4,60,2],[57,4,61,2],[57,11,61,9,"buffer"],[57,17,61,15],[57,18,61,16,"SlowBuffer"],[57,28,61,26],[57,29,61,27,"size"],[57,33,61,31],[57,34,61,32],[58,2,62,0],[58,3,62,1],[59,0,62,1],[59,3]],"functionMap":{"names":["<global>","copyProps","SafeBuffer","SafeBuffer.from","SafeBuffer.alloc","SafeBuffer.allocUnsafe","SafeBuffer.allocUnsafeSlow"],"mappings":"AAA;ACK;CDI;AES;CFE;kBGK;CHK;mBIE;CJe;yBKE;CLK;6BME;CNK"}},"type":"js/module"}]}