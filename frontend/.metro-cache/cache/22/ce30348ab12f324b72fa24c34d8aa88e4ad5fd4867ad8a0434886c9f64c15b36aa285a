{"dependencies":[{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":28},"end":{"line":2,"column":34,"index":47}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"md5.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":10,"index":58},"end":{"line":3,"column":27,"index":75}}],"key":"hjDWeTyOSDzf2TqUwFSFEe7yqYg=","exportNames":["*"]}},{"name":"ripemd160","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":92},"end":{"line":4,"column":36,"index":112}}],"key":"tIPjioARNqaZD2mQ7SV6iEyg6WA=","exportNames":["*"]}},{"name":"sha.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":10,"index":123},"end":{"line":5,"column":27,"index":140}}],"key":"VT8g97hvtDqAKV1FwSt0QYmWZ3s=","exportNames":["*"]}},{"name":"cipher-base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":11,"index":152},"end":{"line":6,"column":33,"index":174}}],"key":"7cV2V6tRDydrl9neigZg5XnvIlM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var inherits = require(_dependencyMap[0], \"inherits\");\n  var MD5 = require(_dependencyMap[1], \"md5.js\");\n  var RIPEMD160 = require(_dependencyMap[2], \"ripemd160\");\n  var sha = require(_dependencyMap[3], \"sha.js\");\n  var Base = require(_dependencyMap[4], \"cipher-base\");\n  function Hash(hash) {\n    Base.call(this, 'digest');\n    this._hash = hash;\n  }\n  inherits(Hash, Base);\n  Hash.prototype._update = function (data) {\n    this._hash.update(data);\n  };\n  Hash.prototype._final = function () {\n    return this._hash.digest();\n  };\n  module.exports = function createHash(alg) {\n    alg = alg.toLowerCase();\n    if (alg === 'md5') return new MD5();\n    if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160();\n    return new Hash(sha(alg));\n  };\n});","lineCount":26,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"inherits"],[4,14,2,12],[4,17,2,15,"require"],[4,24,2,22],[4,25,2,22,"_dependencyMap"],[4,39,2,22],[4,54,2,33],[4,55,2,34],[5,2,3,0],[5,6,3,4,"MD5"],[5,9,3,7],[5,12,3,10,"require"],[5,19,3,17],[5,20,3,17,"_dependencyMap"],[5,34,3,17],[5,47,3,26],[5,48,3,27],[6,2,4,0],[6,6,4,4,"RIPEMD160"],[6,15,4,13],[6,18,4,16,"require"],[6,25,4,23],[6,26,4,23,"_dependencyMap"],[6,40,4,23],[6,56,4,35],[6,57,4,36],[7,2,5,0],[7,6,5,4,"sha"],[7,9,5,7],[7,12,5,10,"require"],[7,19,5,17],[7,20,5,17,"_dependencyMap"],[7,34,5,17],[7,47,5,26],[7,48,5,27],[8,2,6,0],[8,6,6,4,"Base"],[8,10,6,8],[8,13,6,11,"require"],[8,20,6,18],[8,21,6,18,"_dependencyMap"],[8,35,6,18],[8,53,6,32],[8,54,6,33],[9,2,8,0],[9,11,8,9,"Hash"],[9,15,8,13,"Hash"],[9,16,8,15,"hash"],[9,20,8,19],[9,22,8,21],[10,4,9,2,"Base"],[10,8,9,6],[10,9,9,7,"call"],[10,13,9,11],[10,14,9,12],[10,18,9,16],[10,20,9,18],[10,28,9,26],[10,29,9,27],[11,4,11,2],[11,8,11,6],[11,9,11,7,"_hash"],[11,14,11,12],[11,17,11,15,"hash"],[11,21,11,19],[12,2,12,0],[13,2,14,0,"inherits"],[13,10,14,8],[13,11,14,9,"Hash"],[13,15,14,13],[13,17,14,15,"Base"],[13,21,14,19],[13,22,14,20],[14,2,16,0,"Hash"],[14,6,16,4],[14,7,16,5,"prototype"],[14,16,16,14],[14,17,16,15,"_update"],[14,24,16,22],[14,27,16,25],[14,37,16,35,"data"],[14,41,16,39],[14,43,16,41],[15,4,17,2],[15,8,17,6],[15,9,17,7,"_hash"],[15,14,17,12],[15,15,17,13,"update"],[15,21,17,19],[15,22,17,20,"data"],[15,26,17,24],[15,27,17,25],[16,2,18,0],[16,3,18,1],[17,2,20,0,"Hash"],[17,6,20,4],[17,7,20,5,"prototype"],[17,16,20,14],[17,17,20,15,"_final"],[17,23,20,21],[17,26,20,24],[17,38,20,36],[18,4,21,2],[18,11,21,9],[18,15,21,13],[18,16,21,14,"_hash"],[18,21,21,19],[18,22,21,20,"digest"],[18,28,21,26],[18,29,21,27],[18,30,21,28],[19,2,22,0],[19,3,22,1],[20,2,24,0,"module"],[20,8,24,6],[20,9,24,7,"exports"],[20,16,24,14],[20,19,24,17],[20,28,24,26,"createHash"],[20,38,24,36,"createHash"],[20,39,24,38,"alg"],[20,42,24,41],[20,44,24,43],[21,4,25,2,"alg"],[21,7,25,5],[21,10,25,8,"alg"],[21,13,25,11],[21,14,25,12,"toLowerCase"],[21,25,25,23],[21,26,25,24],[21,27,25,25],[22,4,26,2],[22,8,26,6,"alg"],[22,11,26,9],[22,16,26,14],[22,21,26,19],[22,23,26,21],[22,30,26,28],[22,34,26,32,"MD5"],[22,37,26,35],[22,38,26,36],[22,39,26,37],[23,4,27,2],[23,8,27,6,"alg"],[23,11,27,9],[23,16,27,14],[23,24,27,22],[23,28,27,26,"alg"],[23,31,27,29],[23,36,27,34],[23,47,27,45],[23,49,27,47],[23,56,27,54],[23,60,27,58,"RIPEMD160"],[23,69,27,67],[23,70,27,68],[23,71,27,69],[24,4,29,2],[24,11,29,9],[24,15,29,13,"Hash"],[24,19,29,17],[24,20,29,18,"sha"],[24,23,29,21],[24,24,29,22,"alg"],[24,27,29,25],[24,28,29,26],[24,29,29,27],[25,2,30,0],[25,3,30,1],[26,0,30,1],[26,3]],"functionMap":{"names":["<global>","Hash","Hash.prototype._update","Hash.prototype._final","createHash"],"mappings":"AAA;ACO;CDI;yBEI;CFE;wBGE;CHE;iBIE;CJM"}},"type":"js/module"}]}