{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":54},"end":{"line":4,"column":31,"index":73}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var utils = require(_dependencyMap[1], \"../utils\");\n  var assert = utils.assert;\n  var cachedProperty = utils.cachedProperty;\n  var parseBytes = utils.parseBytes;\n\n  /**\n  * @param {EDDSA} eddsa - eddsa instance\n  * @param {Array<Bytes>|Object} sig -\n  * @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n  * @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n  * @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n  * @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n  */\n  function Signature(eddsa, sig) {\n    this.eddsa = eddsa;\n    if (typeof sig !== 'object') sig = parseBytes(sig);\n    if (Array.isArray(sig)) {\n      assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n      sig = {\n        R: sig.slice(0, eddsa.encodingLength),\n        S: sig.slice(eddsa.encodingLength)\n      };\n    }\n    assert(sig.R && sig.S, 'Signature without R or S');\n    if (eddsa.isPoint(sig.R)) this._R = sig.R;\n    if (sig.S instanceof BN) this._S = sig.S;\n    this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n    this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n  }\n  cachedProperty(Signature, 'S', function S() {\n    return this.eddsa.decodeInt(this.Sencoded());\n  });\n  cachedProperty(Signature, 'R', function R() {\n    return this.eddsa.decodePoint(this.Rencoded());\n  });\n  cachedProperty(Signature, 'Rencoded', function Rencoded() {\n    return this.eddsa.encodePoint(this.R());\n  });\n  cachedProperty(Signature, 'Sencoded', function Sencoded() {\n    return this.eddsa.encodeInt(this.S());\n  });\n  Signature.prototype.toBytes = function toBytes() {\n    return this.Rencoded().concat(this.Sencoded());\n  };\n  Signature.prototype.toHex = function toHex() {\n    return utils.encode(this.toBytes(), 'hex').toUpperCase();\n  };\n  module.exports = Signature;\n});","lineCount":53,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"BN"],[4,8,3,6],[4,11,3,9,"require"],[4,18,3,16],[4,19,3,16,"_dependencyMap"],[4,33,3,16],[4,45,3,24],[4,46,3,25],[5,2,4,0],[5,6,4,4,"utils"],[5,11,4,9],[5,14,4,12,"require"],[5,21,4,19],[5,22,4,19,"_dependencyMap"],[5,36,4,19],[5,51,4,30],[5,52,4,31],[6,2,5,0],[6,6,5,4,"assert"],[6,12,5,10],[6,15,5,13,"utils"],[6,20,5,18],[6,21,5,19,"assert"],[6,27,5,25],[7,2,6,0],[7,6,6,4,"cachedProperty"],[7,20,6,18],[7,23,6,21,"utils"],[7,28,6,26],[7,29,6,27,"cachedProperty"],[7,43,6,41],[8,2,7,0],[8,6,7,4,"parseBytes"],[8,16,7,14],[8,19,7,17,"utils"],[8,24,7,22],[8,25,7,23,"parseBytes"],[8,35,7,33],[10,2,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,2,17,0],[18,11,17,9,"Signature"],[18,20,17,18,"Signature"],[18,21,17,19,"eddsa"],[18,26,17,24],[18,28,17,26,"sig"],[18,31,17,29],[18,33,17,31],[19,4,18,2],[19,8,18,6],[19,9,18,7,"eddsa"],[19,14,18,12],[19,17,18,15,"eddsa"],[19,22,18,20],[20,4,20,2],[20,8,20,6],[20,15,20,13,"sig"],[20,18,20,16],[20,23,20,21],[20,31,20,29],[20,33,21,4,"sig"],[20,36,21,7],[20,39,21,10,"parseBytes"],[20,49,21,20],[20,50,21,21,"sig"],[20,53,21,24],[20,54,21,25],[21,4,23,2],[21,8,23,6,"Array"],[21,13,23,11],[21,14,23,12,"isArray"],[21,21,23,19],[21,22,23,20,"sig"],[21,25,23,23],[21,26,23,24],[21,28,23,26],[22,6,24,4,"assert"],[22,12,24,10],[22,13,24,11,"sig"],[22,16,24,14],[22,17,24,15,"length"],[22,23,24,21],[22,28,24,26,"eddsa"],[22,33,24,31],[22,34,24,32,"encodingLength"],[22,48,24,46],[22,51,24,49],[22,52,24,50],[22,54,24,52],[22,82,24,80],[22,83,24,81],[23,6,25,4,"sig"],[23,9,25,7],[23,12,25,10],[24,8,26,6,"R"],[24,9,26,7],[24,11,26,9,"sig"],[24,14,26,12],[24,15,26,13,"slice"],[24,20,26,18],[24,21,26,19],[24,22,26,20],[24,24,26,22,"eddsa"],[24,29,26,27],[24,30,26,28,"encodingLength"],[24,44,26,42],[24,45,26,43],[25,8,27,6,"S"],[25,9,27,7],[25,11,27,9,"sig"],[25,14,27,12],[25,15,27,13,"slice"],[25,20,27,18],[25,21,27,19,"eddsa"],[25,26,27,24],[25,27,27,25,"encodingLength"],[25,41,27,39],[26,6,28,4],[26,7,28,5],[27,4,29,2],[28,4,31,2,"assert"],[28,10,31,8],[28,11,31,9,"sig"],[28,14,31,12],[28,15,31,13,"R"],[28,16,31,14],[28,20,31,18,"sig"],[28,23,31,21],[28,24,31,22,"S"],[28,25,31,23],[28,27,31,25],[28,53,31,51],[28,54,31,52],[29,4,33,2],[29,8,33,6,"eddsa"],[29,13,33,11],[29,14,33,12,"isPoint"],[29,21,33,19],[29,22,33,20,"sig"],[29,25,33,23],[29,26,33,24,"R"],[29,27,33,25],[29,28,33,26],[29,30,34,4],[29,34,34,8],[29,35,34,9,"_R"],[29,37,34,11],[29,40,34,14,"sig"],[29,43,34,17],[29,44,34,18,"R"],[29,45,34,19],[30,4,35,2],[30,8,35,6,"sig"],[30,11,35,9],[30,12,35,10,"S"],[30,13,35,11],[30,25,35,23,"BN"],[30,27,35,25],[30,29,36,4],[30,33,36,8],[30,34,36,9,"_S"],[30,36,36,11],[30,39,36,14,"sig"],[30,42,36,17],[30,43,36,18,"S"],[30,44,36,19],[31,4,38,2],[31,8,38,6],[31,9,38,7,"_Rencoded"],[31,18,38,16],[31,21,38,19,"Array"],[31,26,38,24],[31,27,38,25,"isArray"],[31,34,38,32],[31,35,38,33,"sig"],[31,38,38,36],[31,39,38,37,"R"],[31,40,38,38],[31,41,38,39],[31,44,38,42,"sig"],[31,47,38,45],[31,48,38,46,"R"],[31,49,38,47],[31,52,38,50,"sig"],[31,55,38,53],[31,56,38,54,"Rencoded"],[31,64,38,62],[32,4,39,2],[32,8,39,6],[32,9,39,7,"_Sencoded"],[32,18,39,16],[32,21,39,19,"Array"],[32,26,39,24],[32,27,39,25,"isArray"],[32,34,39,32],[32,35,39,33,"sig"],[32,38,39,36],[32,39,39,37,"S"],[32,40,39,38],[32,41,39,39],[32,44,39,42,"sig"],[32,47,39,45],[32,48,39,46,"S"],[32,49,39,47],[32,52,39,50,"sig"],[32,55,39,53],[32,56,39,54,"Sencoded"],[32,64,39,62],[33,2,40,0],[34,2,42,0,"cachedProperty"],[34,16,42,14],[34,17,42,15,"Signature"],[34,26,42,24],[34,28,42,26],[34,31,42,29],[34,33,42,31],[34,42,42,40,"S"],[34,43,42,41,"S"],[34,44,42,41],[34,46,42,44],[35,4,43,2],[35,11,43,9],[35,15,43,13],[35,16,43,14,"eddsa"],[35,21,43,19],[35,22,43,20,"decodeInt"],[35,31,43,29],[35,32,43,30],[35,36,43,34],[35,37,43,35,"Sencoded"],[35,45,43,43],[35,46,43,44],[35,47,43,45],[35,48,43,46],[36,2,44,0],[36,3,44,1],[36,4,44,2],[37,2,46,0,"cachedProperty"],[37,16,46,14],[37,17,46,15,"Signature"],[37,26,46,24],[37,28,46,26],[37,31,46,29],[37,33,46,31],[37,42,46,40,"R"],[37,43,46,41,"R"],[37,44,46,41],[37,46,46,44],[38,4,47,2],[38,11,47,9],[38,15,47,13],[38,16,47,14,"eddsa"],[38,21,47,19],[38,22,47,20,"decodePoint"],[38,33,47,31],[38,34,47,32],[38,38,47,36],[38,39,47,37,"Rencoded"],[38,47,47,45],[38,48,47,46],[38,49,47,47],[38,50,47,48],[39,2,48,0],[39,3,48,1],[39,4,48,2],[40,2,50,0,"cachedProperty"],[40,16,50,14],[40,17,50,15,"Signature"],[40,26,50,24],[40,28,50,26],[40,38,50,36],[40,40,50,38],[40,49,50,47,"Rencoded"],[40,57,50,55,"Rencoded"],[40,58,50,55],[40,60,50,58],[41,4,51,2],[41,11,51,9],[41,15,51,13],[41,16,51,14,"eddsa"],[41,21,51,19],[41,22,51,20,"encodePoint"],[41,33,51,31],[41,34,51,32],[41,38,51,36],[41,39,51,37,"R"],[41,40,51,38],[41,41,51,39],[41,42,51,40],[41,43,51,41],[42,2,52,0],[42,3,52,1],[42,4,52,2],[43,2,54,0,"cachedProperty"],[43,16,54,14],[43,17,54,15,"Signature"],[43,26,54,24],[43,28,54,26],[43,38,54,36],[43,40,54,38],[43,49,54,47,"Sencoded"],[43,57,54,55,"Sencoded"],[43,58,54,55],[43,60,54,58],[44,4,55,2],[44,11,55,9],[44,15,55,13],[44,16,55,14,"eddsa"],[44,21,55,19],[44,22,55,20,"encodeInt"],[44,31,55,29],[44,32,55,30],[44,36,55,34],[44,37,55,35,"S"],[44,38,55,36],[44,39,55,37],[44,40,55,38],[44,41,55,39],[45,2,56,0],[45,3,56,1],[45,4,56,2],[46,2,58,0,"Signature"],[46,11,58,9],[46,12,58,10,"prototype"],[46,21,58,19],[46,22,58,20,"toBytes"],[46,29,58,27],[46,32,58,30],[46,41,58,39,"toBytes"],[46,48,58,46,"toBytes"],[46,49,58,46],[46,51,58,49],[47,4,59,2],[47,11,59,9],[47,15,59,13],[47,16,59,14,"Rencoded"],[47,24,59,22],[47,25,59,23],[47,26,59,24],[47,27,59,25,"concat"],[47,33,59,31],[47,34,59,32],[47,38,59,36],[47,39,59,37,"Sencoded"],[47,47,59,45],[47,48,59,46],[47,49,59,47],[47,50,59,48],[48,2,60,0],[48,3,60,1],[49,2,62,0,"Signature"],[49,11,62,9],[49,12,62,10,"prototype"],[49,21,62,19],[49,22,62,20,"toHex"],[49,27,62,25],[49,30,62,28],[49,39,62,37,"toHex"],[49,44,62,42,"toHex"],[49,45,62,42],[49,47,62,45],[50,4,63,2],[50,11,63,9,"utils"],[50,16,63,14],[50,17,63,15,"encode"],[50,23,63,21],[50,24,63,22],[50,28,63,26],[50,29,63,27,"toBytes"],[50,36,63,34],[50,37,63,35],[50,38,63,36],[50,40,63,38],[50,45,63,43],[50,46,63,44],[50,47,63,45,"toUpperCase"],[50,58,63,56],[50,59,63,57],[50,60,63,58],[51,2,64,0],[51,3,64,1],[52,2,66,0,"module"],[52,8,66,6],[52,9,66,7,"exports"],[52,16,66,14],[52,19,66,17,"Signature"],[52,28,66,26],[53,0,66,27],[53,3]],"functionMap":{"names":["<global>","Signature","S","R","Rencoded","Sencoded","toBytes","toHex"],"mappings":"AAA;ACgB;CDuB;+BEE;CFE;+BGE;CHE;sCIE;CJE;sCKE;CLE;8BME;CNE;4BOE;CPE"}},"type":"js/module"}]}