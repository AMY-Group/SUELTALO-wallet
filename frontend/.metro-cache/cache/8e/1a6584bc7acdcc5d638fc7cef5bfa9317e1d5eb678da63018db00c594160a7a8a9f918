{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":50,"index":102}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":103},"end":{"line":3,"column":57,"index":160}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":51,"index":212}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":213},"end":{"line":5,"column":170,"index":383}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":384},"end":{"line":6,"column":43,"index":427}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":428},"end":{"line":7,"column":46,"index":474}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.approveInstructionData = void 0;\n  exports.createApproveInstruction = createApproveInstruction;\n  exports.decodeApproveInstruction = decodeApproveInstruction;\n  exports.decodeApproveInstructionUnchecked = decodeApproveInstructionUnchecked;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _internal = require(_dependencyMap[5], \"./internal.js\");\n  var _types = require(_dependencyMap[6], \"./types.js\");\n  /** TODO: docs */\n  const approveInstructionData = exports.approveInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayoutUtils.u64)('amount')]);\n  /**\n   * Construct an Approve instruction\n   *\n   * @param account      Account to set the delegate for\n   * @param delegate     Account authorized to transfer tokens from the account\n   * @param owner        Owner of the account\n   * @param amount       Maximum number of tokens the delegate may transfer\n   * @param multiSigners Signing accounts if `owner` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = (0, _internal.addSigners)([{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n      instruction: _types.TokenInstruction.Approve,\n      amount: BigInt(amount)\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode an Approve instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeApproveInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        delegate,\n        owner,\n        multiSigners\n      },\n      data\n    } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.Approve) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        delegate,\n        owner,\n        multiSigners\n      },\n      data\n    };\n  }\n  /**\n   * Decode an Approve instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeApproveInstructionUnchecked({\n    programId,\n    keys: [account, delegate, owner, ...multiSigners],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        delegate,\n        owner,\n        multiSigners\n      },\n      data: approveInstructionData.decode(data)\n    };\n  }\n});","lineCount":108,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_internal"],[14,15,6,0],[14,18,6,0,"require"],[14,25,6,0],[14,26,6,0,"_dependencyMap"],[14,40,6,0],[15,2,7,0],[15,6,7,0,"_types"],[15,12,7,0],[15,15,7,0,"require"],[15,22,7,0],[15,23,7,0,"_dependencyMap"],[15,37,7,0],[16,2,8,0],[17,2,9,7],[17,8,9,13,"approveInstructionData"],[17,30,9,35],[17,33,9,35,"exports"],[17,40,9,35],[17,41,9,35,"approveInstructionData"],[17,63,9,35],[17,66,9,38],[17,70,9,38,"struct"],[17,90,9,44],[17,92,9,45],[17,93,9,46],[17,97,9,46,"u8"],[17,113,9,48],[17,115,9,49],[17,128,9,62],[17,129,9,63],[17,131,9,65],[17,135,9,65,"u64"],[17,157,9,68],[17,159,9,69],[17,167,9,77],[17,168,9,78],[17,169,9,79],[17,170,9,80],[18,2,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,2,22,7],[30,11,22,16,"createApproveInstruction"],[30,35,22,40,"createApproveInstruction"],[30,36,22,41,"account"],[30,43,22,48],[30,45,22,50,"delegate"],[30,53,22,58],[30,55,22,60,"owner"],[30,60,22,65],[30,62,22,67,"amount"],[30,68,22,73],[30,70,22,75,"multiSigners"],[30,82,22,87],[30,85,22,90],[30,87,22,92],[30,89,22,94,"programId"],[30,98,22,103],[30,101,22,106,"TOKEN_PROGRAM_ID"],[30,128,22,122],[30,130,22,124],[31,4,23,4],[31,10,23,10,"keys"],[31,14,23,14],[31,17,23,17],[31,21,23,17,"addSigners"],[31,41,23,27],[31,43,23,28],[31,44,24,8],[32,6,24,10,"pubkey"],[32,12,24,16],[32,14,24,18,"account"],[32,21,24,25],[33,6,24,27,"isSigner"],[33,14,24,35],[33,16,24,37],[33,21,24,42],[34,6,24,44,"isWritable"],[34,16,24,54],[34,18,24,56],[35,4,24,61],[35,5,24,62],[35,7,25,8],[36,6,25,10,"pubkey"],[36,12,25,16],[36,14,25,18,"delegate"],[36,22,25,26],[37,6,25,28,"isSigner"],[37,14,25,36],[37,16,25,38],[37,21,25,43],[38,6,25,45,"isWritable"],[38,16,25,55],[38,18,25,57],[39,4,25,63],[39,5,25,64],[39,6,26,5],[39,8,26,7,"owner"],[39,13,26,12],[39,15,26,14,"multiSigners"],[39,27,26,26],[39,28,26,27],[40,4,27,4],[40,10,27,10,"data"],[40,14,27,14],[40,17,27,17,"Buffer"],[40,23,27,23],[40,24,27,24,"alloc"],[40,29,27,29],[40,30,27,30,"approveInstructionData"],[40,52,27,52],[40,53,27,53,"span"],[40,57,27,57],[40,58,27,58],[41,4,28,4,"approveInstructionData"],[41,26,28,26],[41,27,28,27,"encode"],[41,33,28,33],[41,34,28,34],[42,6,29,8,"instruction"],[42,17,29,19],[42,19,29,21,"TokenInstruction"],[42,42,29,37],[42,43,29,38,"Approve"],[42,50,29,45],[43,6,30,8,"amount"],[43,12,30,14],[43,14,30,16,"BigInt"],[43,20,30,22],[43,21,30,23,"amount"],[43,27,30,29],[44,4,31,4],[44,5,31,5],[44,7,31,7,"data"],[44,11,31,11],[44,12,31,12],[45,4,32,4],[45,11,32,11],[45,15,32,15,"TransactionInstruction"],[45,42,32,37],[45,43,32,38],[46,6,32,40,"keys"],[46,10,32,44],[47,6,32,46,"programId"],[47,15,32,55],[48,6,32,57,"data"],[49,4,32,62],[49,5,32,63],[49,6,32,64],[50,2,33,0],[51,2,34,0],[52,0,35,0],[53,0,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,2,42,7],[59,11,42,16,"decodeApproveInstruction"],[59,35,42,40,"decodeApproveInstruction"],[59,36,42,41,"instruction"],[59,47,42,52],[59,49,42,54,"programId"],[59,58,42,63],[59,61,42,66,"TOKEN_PROGRAM_ID"],[59,88,42,82],[59,90,42,84],[60,4,43,4],[60,8,43,8],[60,9,43,9,"instruction"],[60,20,43,20],[60,21,43,21,"programId"],[60,30,43,30],[60,31,43,31,"equals"],[60,37,43,37],[60,38,43,38,"programId"],[60,47,43,47],[60,48,43,48],[60,50,44,8],[60,56,44,14],[60,60,44,18,"TokenInvalidInstructionProgramError"],[60,103,44,53],[60,104,44,54],[60,105,44,55],[61,4,45,4],[61,8,45,8,"instruction"],[61,19,45,19],[61,20,45,20,"data"],[61,24,45,24],[61,25,45,25,"length"],[61,31,45,31],[61,36,45,36,"approveInstructionData"],[61,58,45,58],[61,59,45,59,"span"],[61,63,45,63],[61,65,46,8],[61,71,46,14],[61,75,46,18,"TokenInvalidInstructionDataError"],[61,115,46,50],[61,116,46,51],[61,117,46,52],[62,4,47,4],[62,10,47,10],[63,6,47,12,"keys"],[63,10,47,16],[63,12,47,18],[64,8,47,20,"account"],[64,15,47,27],[65,8,47,29,"delegate"],[65,16,47,37],[66,8,47,39,"owner"],[66,13,47,44],[67,8,47,46,"multiSigners"],[68,6,47,59],[68,7,47,60],[69,6,47,62,"data"],[70,4,47,68],[70,5,47,69],[70,8,47,72,"decodeApproveInstructionUnchecked"],[70,41,47,105],[70,42,47,106,"instruction"],[70,53,47,117],[70,54,47,118],[71,4,48,4],[71,8,48,8,"data"],[71,12,48,12],[71,13,48,13,"instruction"],[71,24,48,24],[71,29,48,29,"TokenInstruction"],[71,52,48,45],[71,53,48,46,"Approve"],[71,60,48,53],[71,62,49,8],[71,68,49,14],[71,72,49,18,"TokenInvalidInstructionTypeError"],[71,112,49,50],[71,113,49,51],[71,114,49,52],[72,4,50,4],[72,8,50,8],[72,9,50,9,"account"],[72,16,50,16],[72,20,50,20],[72,21,50,21,"delegate"],[72,29,50,29],[72,33,50,33],[72,34,50,34,"owner"],[72,39,50,39],[72,41,51,8],[72,47,51,14],[72,51,51,18,"TokenInvalidInstructionKeysError"],[72,91,51,50],[72,92,51,51],[72,93,51,52],[73,4,52,4],[74,4,53,4],[74,11,53,11],[75,6,54,8,"programId"],[75,15,54,17],[76,6,55,8,"keys"],[76,10,55,12],[76,12,55,14],[77,8,56,12,"account"],[77,15,56,19],[78,8,57,12,"delegate"],[78,16,57,20],[79,8,58,12,"owner"],[79,13,58,17],[80,8,59,12,"multiSigners"],[81,6,60,8],[81,7,60,9],[82,6,61,8,"data"],[83,4,62,4],[83,5,62,5],[84,2,63,0],[85,2,64,0],[86,0,65,0],[87,0,66,0],[88,0,67,0],[89,0,68,0],[90,0,69,0],[91,0,70,0],[92,2,71,7],[92,11,71,16,"decodeApproveInstructionUnchecked"],[92,44,71,49,"decodeApproveInstructionUnchecked"],[92,45,71,50],[93,4,71,52,"programId"],[93,13,71,61],[94,4,71,63,"keys"],[94,8,71,67],[94,10,71,69],[94,11,71,70,"account"],[94,18,71,77],[94,20,71,79,"delegate"],[94,28,71,87],[94,30,71,89,"owner"],[94,35,71,94],[94,37,71,96],[94,40,71,99,"multiSigners"],[94,52,71,111],[94,53,71,112],[95,4,71,114,"data"],[96,2,71,120],[96,3,71,121],[96,5,71,123],[97,4,72,4],[97,11,72,11],[98,6,73,8,"programId"],[98,15,73,17],[99,6,74,8,"keys"],[99,10,74,12],[99,12,74,14],[100,8,75,12,"account"],[100,15,75,19],[101,8,76,12,"delegate"],[101,16,76,20],[102,8,77,12,"owner"],[102,13,77,17],[103,8,78,12,"multiSigners"],[104,6,79,8],[104,7,79,9],[105,6,80,8,"data"],[105,10,80,12],[105,12,80,14,"approveInstructionData"],[105,34,80,36],[105,35,80,37,"decode"],[105,41,80,43],[105,42,80,44,"data"],[105,46,80,48],[106,4,81,4],[106,5,81,5],[107,2,82,0],[108,0,82,1],[108,3]],"functionMap":{"names":["<global>","createApproveInstruction","decodeApproveInstruction","decodeApproveInstructionUnchecked"],"mappings":"AAA;OCqB;CDW;OES;CFqB;OGQ;CHW"}},"type":"js/module"}]}