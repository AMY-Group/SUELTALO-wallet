{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":56,"index":108}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":68,"index":177}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":178},"end":{"line":4,"column":86,"index":264}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":265},"end":{"line":5,"column":67,"index":332}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}},{"name":"../../instructions/types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":333},"end":{"line":6,"column":63,"index":396}}],"key":"wArSmpIPPWx7emCppvmPBLNSdfs=","exportNames":["*"]}},{"name":"../../instructions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":397},"end":{"line":7,"column":60,"index":457}}],"key":"QpUR88Ww2osC9HHudq73tq+tOtM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MetadataPointerInstruction = void 0;\n  exports.createInitializeMetadataPointerInstruction = createInitializeMetadataPointerInstruction;\n  exports.createUpdateMetadataPointerInstruction = createUpdateMetadataPointerInstruction;\n  exports.updateMetadataPointerData = exports.initializeMetadataPointerData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../../errors.js\");\n  var _types = require(_dependencyMap[5], \"../../instructions/types.js\");\n  var _internal = require(_dependencyMap[6], \"../../instructions/internal.js\");\n  var MetadataPointerInstruction;\n  (function (MetadataPointerInstruction) {\n    MetadataPointerInstruction[MetadataPointerInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    MetadataPointerInstruction[MetadataPointerInstruction[\"Update\"] = 1] = \"Update\";\n  })(MetadataPointerInstruction || (exports.MetadataPointerInstruction = MetadataPointerInstruction = {}));\n  const initializeMetadataPointerData = exports.initializeMetadataPointerData = (0, _bufferLayout.struct)([\n  // prettier-ignore\n  (0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('metadataPointerInstruction'), (0, _bufferLayoutUtils.publicKey)('authority'), (0, _bufferLayoutUtils.publicKey)('metadataAddress')]);\n  /**\n   * Construct an Initialize MetadataPointer instruction\n   *\n   * @param mint            Token mint account\n   * @param authority       Optional Authority that can set the metadata address\n   * @param metadataAddress Optional Account address that holds the metadata\n   * @param programId       SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeMetadataPointerInstruction(mint, authority, metadataAddress, programId) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(initializeMetadataPointerData.span);\n    initializeMetadataPointerData.encode({\n      instruction: _types.TokenInstruction.MetadataPointerExtension,\n      metadataPointerInstruction: MetadataPointerInstruction.Initialize,\n      authority: authority ?? _web.PublicKey.default,\n      metadataAddress: metadataAddress ?? _web.PublicKey.default\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data: data\n    });\n  }\n  const updateMetadataPointerData = exports.updateMetadataPointerData = (0, _bufferLayout.struct)([\n  // prettier-ignore\n  (0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('metadataPointerInstruction'), (0, _bufferLayoutUtils.publicKey)('metadataAddress')]);\n  function createUpdateMetadataPointerInstruction(mint, authority, metadataAddress, multiSigners = [], programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = (0, _internal.addSigners)([{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }], authority, multiSigners);\n    const data = Buffer.alloc(updateMetadataPointerData.span);\n    updateMetadataPointerData.encode({\n      instruction: _types.TokenInstruction.MetadataPointerExtension,\n      metadataPointerInstruction: MetadataPointerInstruction.Update,\n      metadataAddress: metadataAddress ?? _web.PublicKey.default\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data: data\n    });\n  }\n});","lineCount":80,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,0],[15,6,7,0,"_internal"],[15,15,7,0],[15,18,7,0,"require"],[15,25,7,0],[15,26,7,0,"_dependencyMap"],[15,40,7,0],[16,2,8,7],[16,6,8,11,"MetadataPointerInstruction"],[16,32,8,37],[17,2,9,0],[17,3,9,1],[17,13,9,11,"MetadataPointerInstruction"],[17,39,9,37],[17,41,9,39],[18,4,10,4,"MetadataPointerInstruction"],[18,30,10,30],[18,31,10,31,"MetadataPointerInstruction"],[18,57,10,57],[18,58,10,58],[18,70,10,70],[18,71,10,71],[18,74,10,74],[18,75,10,75],[18,76,10,76],[18,79,10,79],[18,91,10,91],[19,4,11,4,"MetadataPointerInstruction"],[19,30,11,30],[19,31,11,31,"MetadataPointerInstruction"],[19,57,11,57],[19,58,11,58],[19,66,11,66],[19,67,11,67],[19,70,11,70],[19,71,11,71],[19,72,11,72],[19,75,11,75],[19,83,11,83],[20,2,12,0],[20,3,12,1],[20,5,12,3,"MetadataPointerInstruction"],[20,31,12,29],[20,36,12,29,"exports"],[20,43,12,29],[20,44,12,29,"MetadataPointerInstruction"],[20,70,12,29],[20,73,12,34,"MetadataPointerInstruction"],[20,99,12,60],[20,102,12,63],[20,103,12,64],[20,104,12,65],[20,105,12,66],[20,106,12,67],[21,2,13,7],[21,8,13,13,"initializeMetadataPointerData"],[21,37,13,42],[21,40,13,42,"exports"],[21,47,13,42],[21,48,13,42,"initializeMetadataPointerData"],[21,77,13,42],[21,80,13,45],[21,84,13,45,"struct"],[21,104,13,51],[21,106,13,52],[22,2,14,4],[23,2,15,4],[23,6,15,4,"u8"],[23,22,15,6],[23,24,15,7],[23,37,15,20],[23,38,15,21],[23,40,16,4],[23,44,16,4,"u8"],[23,60,16,6],[23,62,16,7],[23,90,16,35],[23,91,16,36],[23,93,17,4],[23,97,17,4,"publicKey"],[23,125,17,13],[23,127,17,14],[23,138,17,25],[23,139,17,26],[23,141,18,4],[23,145,18,4,"publicKey"],[23,173,18,13],[23,175,18,14],[23,192,18,31],[23,193,18,32],[23,194,19,1],[23,195,19,2],[24,2,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,2,30,7],[34,11,30,16,"createInitializeMetadataPointerInstruction"],[34,53,30,58,"createInitializeMetadataPointerInstruction"],[34,54,30,59,"mint"],[34,58,30,63],[34,60,30,65,"authority"],[34,69,30,74],[34,71,30,76,"metadataAddress"],[34,86,30,91],[34,88,30,93,"programId"],[34,97,30,102],[34,99,30,104],[35,4,31,4],[35,8,31,8],[35,9,31,9],[35,13,31,9,"programSupportsExtensions"],[35,49,31,34],[35,51,31,35,"programId"],[35,60,31,44],[35,61,31,45],[35,63,31,47],[36,6,32,8],[36,12,32,14],[36,16,32,18,"TokenUnsupportedInstructionError"],[36,56,32,50],[36,57,32,51],[36,58,32,52],[37,4,33,4],[38,4,34,4],[38,10,34,10,"keys"],[38,14,34,14],[38,17,34,17],[38,18,34,18],[39,6,34,20,"pubkey"],[39,12,34,26],[39,14,34,28,"mint"],[39,18,34,32],[40,6,34,34,"isSigner"],[40,14,34,42],[40,16,34,44],[40,21,34,49],[41,6,34,51,"isWritable"],[41,16,34,61],[41,18,34,63],[42,4,34,68],[42,5,34,69],[42,6,34,70],[43,4,35,4],[43,10,35,10,"data"],[43,14,35,14],[43,17,35,17,"Buffer"],[43,23,35,23],[43,24,35,24,"alloc"],[43,29,35,29],[43,30,35,30,"initializeMetadataPointerData"],[43,59,35,59],[43,60,35,60,"span"],[43,64,35,64],[43,65,35,65],[44,4,36,4,"initializeMetadataPointerData"],[44,33,36,33],[44,34,36,34,"encode"],[44,40,36,40],[44,41,36,41],[45,6,37,8,"instruction"],[45,17,37,19],[45,19,37,21,"TokenInstruction"],[45,42,37,37],[45,43,37,38,"MetadataPointerExtension"],[45,67,37,62],[46,6,38,8,"metadataPointerInstruction"],[46,32,38,34],[46,34,38,36,"MetadataPointerInstruction"],[46,60,38,62],[46,61,38,63,"Initialize"],[46,71,38,73],[47,6,39,8,"authority"],[47,15,39,17],[47,17,39,19,"authority"],[47,26,39,28],[47,30,39,32,"PublicKey"],[47,44,39,41],[47,45,39,42,"default"],[47,52,39,49],[48,6,40,8,"metadataAddress"],[48,21,40,23],[48,23,40,25,"metadataAddress"],[48,38,40,40],[48,42,40,44,"PublicKey"],[48,56,40,53],[48,57,40,54,"default"],[49,4,41,4],[49,5,41,5],[49,7,41,7,"data"],[49,11,41,11],[49,12,41,12],[50,4,42,4],[50,11,42,11],[50,15,42,15,"TransactionInstruction"],[50,42,42,37],[50,43,42,38],[51,6,42,40,"keys"],[51,10,42,44],[52,6,42,46,"programId"],[52,15,42,55],[53,6,42,57,"data"],[53,10,42,61],[53,12,42,63,"data"],[54,4,42,68],[54,5,42,69],[54,6,42,70],[55,2,43,0],[56,2,44,7],[56,8,44,13,"updateMetadataPointerData"],[56,33,44,38],[56,36,44,38,"exports"],[56,43,44,38],[56,44,44,38,"updateMetadataPointerData"],[56,69,44,38],[56,72,44,41],[56,76,44,41,"struct"],[56,96,44,47],[56,98,44,48],[57,2,45,4],[58,2,46,4],[58,6,46,4,"u8"],[58,22,46,6],[58,24,46,7],[58,37,46,20],[58,38,46,21],[58,40,47,4],[58,44,47,4,"u8"],[58,60,47,6],[58,62,47,7],[58,90,47,35],[58,91,47,36],[58,93,48,4],[58,97,48,4,"publicKey"],[58,125,48,13],[58,127,48,14],[58,144,48,31],[58,145,48,32],[58,146,49,1],[58,147,49,2],[59,2,50,7],[59,11,50,16,"createUpdateMetadataPointerInstruction"],[59,49,50,54,"createUpdateMetadataPointerInstruction"],[59,50,50,55,"mint"],[59,54,50,59],[59,56,50,61,"authority"],[59,65,50,70],[59,67,50,72,"metadataAddress"],[59,82,50,87],[59,84,50,89,"multiSigners"],[59,96,50,101],[59,99,50,104],[59,101,50,106],[59,103,50,108,"programId"],[59,112,50,117],[59,115,50,120,"TOKEN_2022_PROGRAM_ID"],[59,147,50,141],[59,149,50,143],[60,4,51,4],[60,8,51,8],[60,9,51,9],[60,13,51,9,"programSupportsExtensions"],[60,49,51,34],[60,51,51,35,"programId"],[60,60,51,44],[60,61,51,45],[60,63,51,47],[61,6,52,8],[61,12,52,14],[61,16,52,18,"TokenUnsupportedInstructionError"],[61,56,52,50],[61,57,52,51],[61,58,52,52],[62,4,53,4],[63,4,54,4],[63,10,54,10,"keys"],[63,14,54,14],[63,17,54,17],[63,21,54,17,"addSigners"],[63,41,54,27],[63,43,54,28],[63,44,54,29],[64,6,54,31,"pubkey"],[64,12,54,37],[64,14,54,39,"mint"],[64,18,54,43],[65,6,54,45,"isSigner"],[65,14,54,53],[65,16,54,55],[65,21,54,60],[66,6,54,62,"isWritable"],[66,16,54,72],[66,18,54,74],[67,4,54,79],[67,5,54,80],[67,6,54,81],[67,8,54,83,"authority"],[67,17,54,92],[67,19,54,94,"multiSigners"],[67,31,54,106],[67,32,54,107],[68,4,55,4],[68,10,55,10,"data"],[68,14,55,14],[68,17,55,17,"Buffer"],[68,23,55,23],[68,24,55,24,"alloc"],[68,29,55,29],[68,30,55,30,"updateMetadataPointerData"],[68,55,55,55],[68,56,55,56,"span"],[68,60,55,60],[68,61,55,61],[69,4,56,4,"updateMetadataPointerData"],[69,29,56,29],[69,30,56,30,"encode"],[69,36,56,36],[69,37,56,37],[70,6,57,8,"instruction"],[70,17,57,19],[70,19,57,21,"TokenInstruction"],[70,42,57,37],[70,43,57,38,"MetadataPointerExtension"],[70,67,57,62],[71,6,58,8,"metadataPointerInstruction"],[71,32,58,34],[71,34,58,36,"MetadataPointerInstruction"],[71,60,58,62],[71,61,58,63,"Update"],[71,67,58,69],[72,6,59,8,"metadataAddress"],[72,21,59,23],[72,23,59,25,"metadataAddress"],[72,38,59,40],[72,42,59,44,"PublicKey"],[72,56,59,53],[72,57,59,54,"default"],[73,4,60,4],[73,5,60,5],[73,7,60,7,"data"],[73,11,60,11],[73,12,60,12],[74,4,61,4],[74,11,61,11],[74,15,61,15,"TransactionInstruction"],[74,42,61,37],[74,43,61,38],[75,6,61,40,"keys"],[75,10,61,44],[76,6,61,46,"programId"],[76,15,61,55],[77,6,61,57,"data"],[77,10,61,61],[77,12,61,63,"data"],[78,4,61,68],[78,5,61,69],[78,6,61,70],[79,2,62,0],[80,0,62,1],[80,3]],"functionMap":{"names":["<global>","<anonymous>","createInitializeMetadataPointerInstruction","createUpdateMetadataPointerInstruction"],"mappings":"AAA;CCQ;CDG;OEkB;CFa;OGO;CHY"}},"type":"js/module"}]}