{"dependencies":[{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":101,"index":101}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.unpackSeeds = unpackSeeds;\n  var _errors = require(_dependencyMap[0], \"../../errors.js\");\n  const DISCRIMINATOR_SPAN = 1;\n  const LITERAL_LENGTH_SPAN = 1;\n  const INSTRUCTION_ARG_OFFSET_SPAN = 1;\n  const INSTRUCTION_ARG_LENGTH_SPAN = 1;\n  const ACCOUNT_KEY_INDEX_SPAN = 1;\n  const ACCOUNT_DATA_ACCOUNT_INDEX_SPAN = 1;\n  const ACCOUNT_DATA_OFFSET_SPAN = 1;\n  const ACCOUNT_DATA_LENGTH_SPAN = 1;\n  function unpackSeedLiteral(seeds) {\n    if (seeds.length < 1) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    const [length, ...rest] = seeds;\n    if (rest.length < length) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    return {\n      data: Buffer.from(rest.slice(0, length)),\n      packedLength: DISCRIMINATOR_SPAN + LITERAL_LENGTH_SPAN + length\n    };\n  }\n  function unpackSeedInstructionArg(seeds, instructionData) {\n    if (seeds.length < 2) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    const [index, length] = seeds;\n    if (instructionData.length < length + index) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    return {\n      data: instructionData.subarray(index, index + length),\n      packedLength: DISCRIMINATOR_SPAN + INSTRUCTION_ARG_OFFSET_SPAN + INSTRUCTION_ARG_LENGTH_SPAN\n    };\n  }\n  function unpackSeedAccountKey(seeds, previousMetas) {\n    if (seeds.length < 1) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    const [index] = seeds;\n    if (previousMetas.length <= index) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    return {\n      data: previousMetas[index].pubkey.toBuffer(),\n      packedLength: DISCRIMINATOR_SPAN + ACCOUNT_KEY_INDEX_SPAN\n    };\n  }\n  async function unpackSeedAccountData(seeds, previousMetas, connection) {\n    if (seeds.length < 3) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    const [accountIndex, dataIndex, length] = seeds;\n    if (previousMetas.length <= accountIndex) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    const accountInfo = await connection.getAccountInfo(previousMetas[accountIndex].pubkey);\n    if (accountInfo == null) {\n      throw new _errors.TokenTransferHookAccountDataNotFound();\n    }\n    if (accountInfo.data.length < dataIndex + length) {\n      throw new _errors.TokenTransferHookInvalidSeed();\n    }\n    return {\n      data: accountInfo.data.subarray(dataIndex, dataIndex + length),\n      packedLength: DISCRIMINATOR_SPAN + ACCOUNT_DATA_ACCOUNT_INDEX_SPAN + ACCOUNT_DATA_OFFSET_SPAN + ACCOUNT_DATA_LENGTH_SPAN\n    };\n  }\n  async function unpackFirstSeed(seeds, previousMetas, instructionData, connection) {\n    const [discriminator, ...rest] = seeds;\n    const remaining = new Uint8Array(rest);\n    switch (discriminator) {\n      case 0:\n        return null;\n      case 1:\n        return unpackSeedLiteral(remaining);\n      case 2:\n        return unpackSeedInstructionArg(remaining, instructionData);\n      case 3:\n        return unpackSeedAccountKey(remaining, previousMetas);\n      case 4:\n        return unpackSeedAccountData(remaining, previousMetas, connection);\n      default:\n        throw new _errors.TokenTransferHookInvalidSeed();\n    }\n  }\n  async function unpackSeeds(seeds, previousMetas, instructionData, connection) {\n    const unpackedSeeds = [];\n    let i = 0;\n    while (i < 32) {\n      const seed = await unpackFirstSeed(seeds.slice(i), previousMetas, instructionData, connection);\n      if (seed == null) {\n        break;\n      }\n      unpackedSeeds.push(seed.data);\n      i += seed.packedLength;\n    }\n    return unpackedSeeds;\n  }\n});","lineCount":105,"map":[[6,2,1,0],[6,6,1,0,"_errors"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,2,0],[7,8,2,6,"DISCRIMINATOR_SPAN"],[7,26,2,24],[7,29,2,27],[7,30,2,28],[8,2,3,0],[8,8,3,6,"LITERAL_LENGTH_SPAN"],[8,27,3,25],[8,30,3,28],[8,31,3,29],[9,2,4,0],[9,8,4,6,"INSTRUCTION_ARG_OFFSET_SPAN"],[9,35,4,33],[9,38,4,36],[9,39,4,37],[10,2,5,0],[10,8,5,6,"INSTRUCTION_ARG_LENGTH_SPAN"],[10,35,5,33],[10,38,5,36],[10,39,5,37],[11,2,6,0],[11,8,6,6,"ACCOUNT_KEY_INDEX_SPAN"],[11,30,6,28],[11,33,6,31],[11,34,6,32],[12,2,7,0],[12,8,7,6,"ACCOUNT_DATA_ACCOUNT_INDEX_SPAN"],[12,39,7,37],[12,42,7,40],[12,43,7,41],[13,2,8,0],[13,8,8,6,"ACCOUNT_DATA_OFFSET_SPAN"],[13,32,8,30],[13,35,8,33],[13,36,8,34],[14,2,9,0],[14,8,9,6,"ACCOUNT_DATA_LENGTH_SPAN"],[14,32,9,30],[14,35,9,33],[14,36,9,34],[15,2,10,0],[15,11,10,9,"unpackSeedLiteral"],[15,28,10,26,"unpackSeedLiteral"],[15,29,10,27,"seeds"],[15,34,10,32],[15,36,10,34],[16,4,11,4],[16,8,11,8,"seeds"],[16,13,11,13],[16,14,11,14,"length"],[16,20,11,20],[16,23,11,23],[16,24,11,24],[16,26,11,26],[17,6,12,8],[17,12,12,14],[17,16,12,18,"TokenTransferHookInvalidSeed"],[17,52,12,46],[17,53,12,47],[17,54,12,48],[18,4,13,4],[19,4,14,4],[19,10,14,10],[19,11,14,11,"length"],[19,17,14,17],[19,19,14,19],[19,22,14,22,"rest"],[19,26,14,26],[19,27,14,27],[19,30,14,30,"seeds"],[19,35,14,35],[20,4,15,4],[20,8,15,8,"rest"],[20,12,15,12],[20,13,15,13,"length"],[20,19,15,19],[20,22,15,22,"length"],[20,28,15,28],[20,30,15,30],[21,6,16,8],[21,12,16,14],[21,16,16,18,"TokenTransferHookInvalidSeed"],[21,52,16,46],[21,53,16,47],[21,54,16,48],[22,4,17,4],[23,4,18,4],[23,11,18,11],[24,6,19,8,"data"],[24,10,19,12],[24,12,19,14,"Buffer"],[24,18,19,20],[24,19,19,21,"from"],[24,23,19,25],[24,24,19,26,"rest"],[24,28,19,30],[24,29,19,31,"slice"],[24,34,19,36],[24,35,19,37],[24,36,19,38],[24,38,19,40,"length"],[24,44,19,46],[24,45,19,47],[24,46,19,48],[25,6,20,8,"packedLength"],[25,18,20,20],[25,20,20,22,"DISCRIMINATOR_SPAN"],[25,38,20,40],[25,41,20,43,"LITERAL_LENGTH_SPAN"],[25,60,20,62],[25,63,20,65,"length"],[26,4,21,4],[26,5,21,5],[27,2,22,0],[28,2,23,0],[28,11,23,9,"unpackSeedInstructionArg"],[28,35,23,33,"unpackSeedInstructionArg"],[28,36,23,34,"seeds"],[28,41,23,39],[28,43,23,41,"instructionData"],[28,58,23,56],[28,60,23,58],[29,4,24,4],[29,8,24,8,"seeds"],[29,13,24,13],[29,14,24,14,"length"],[29,20,24,20],[29,23,24,23],[29,24,24,24],[29,26,24,26],[30,6,25,8],[30,12,25,14],[30,16,25,18,"TokenTransferHookInvalidSeed"],[30,52,25,46],[30,53,25,47],[30,54,25,48],[31,4,26,4],[32,4,27,4],[32,10,27,10],[32,11,27,11,"index"],[32,16,27,16],[32,18,27,18,"length"],[32,24,27,24],[32,25,27,25],[32,28,27,28,"seeds"],[32,33,27,33],[33,4,28,4],[33,8,28,8,"instructionData"],[33,23,28,23],[33,24,28,24,"length"],[33,30,28,30],[33,33,28,33,"length"],[33,39,28,39],[33,42,28,42,"index"],[33,47,28,47],[33,49,28,49],[34,6,29,8],[34,12,29,14],[34,16,29,18,"TokenTransferHookInvalidSeed"],[34,52,29,46],[34,53,29,47],[34,54,29,48],[35,4,30,4],[36,4,31,4],[36,11,31,11],[37,6,32,8,"data"],[37,10,32,12],[37,12,32,14,"instructionData"],[37,27,32,29],[37,28,32,30,"subarray"],[37,36,32,38],[37,37,32,39,"index"],[37,42,32,44],[37,44,32,46,"index"],[37,49,32,51],[37,52,32,54,"length"],[37,58,32,60],[37,59,32,61],[38,6,33,8,"packedLength"],[38,18,33,20],[38,20,33,22,"DISCRIMINATOR_SPAN"],[38,38,33,40],[38,41,33,43,"INSTRUCTION_ARG_OFFSET_SPAN"],[38,68,33,70],[38,71,33,73,"INSTRUCTION_ARG_LENGTH_SPAN"],[39,4,34,4],[39,5,34,5],[40,2,35,0],[41,2,36,0],[41,11,36,9,"unpackSeedAccountKey"],[41,31,36,29,"unpackSeedAccountKey"],[41,32,36,30,"seeds"],[41,37,36,35],[41,39,36,37,"previousMetas"],[41,52,36,50],[41,54,36,52],[42,4,37,4],[42,8,37,8,"seeds"],[42,13,37,13],[42,14,37,14,"length"],[42,20,37,20],[42,23,37,23],[42,24,37,24],[42,26,37,26],[43,6,38,8],[43,12,38,14],[43,16,38,18,"TokenTransferHookInvalidSeed"],[43,52,38,46],[43,53,38,47],[43,54,38,48],[44,4,39,4],[45,4,40,4],[45,10,40,10],[45,11,40,11,"index"],[45,16,40,16],[45,17,40,17],[45,20,40,20,"seeds"],[45,25,40,25],[46,4,41,4],[46,8,41,8,"previousMetas"],[46,21,41,21],[46,22,41,22,"length"],[46,28,41,28],[46,32,41,32,"index"],[46,37,41,37],[46,39,41,39],[47,6,42,8],[47,12,42,14],[47,16,42,18,"TokenTransferHookInvalidSeed"],[47,52,42,46],[47,53,42,47],[47,54,42,48],[48,4,43,4],[49,4,44,4],[49,11,44,11],[50,6,45,8,"data"],[50,10,45,12],[50,12,45,14,"previousMetas"],[50,25,45,27],[50,26,45,28,"index"],[50,31,45,33],[50,32,45,34],[50,33,45,35,"pubkey"],[50,39,45,41],[50,40,45,42,"toBuffer"],[50,48,45,50],[50,49,45,51],[50,50,45,52],[51,6,46,8,"packedLength"],[51,18,46,20],[51,20,46,22,"DISCRIMINATOR_SPAN"],[51,38,46,40],[51,41,46,43,"ACCOUNT_KEY_INDEX_SPAN"],[52,4,47,4],[52,5,47,5],[53,2,48,0],[54,2,49,0],[54,17,49,15,"unpackSeedAccountData"],[54,38,49,36,"unpackSeedAccountData"],[54,39,49,37,"seeds"],[54,44,49,42],[54,46,49,44,"previousMetas"],[54,59,49,57],[54,61,49,59,"connection"],[54,71,49,69],[54,73,49,71],[55,4,50,4],[55,8,50,8,"seeds"],[55,13,50,13],[55,14,50,14,"length"],[55,20,50,20],[55,23,50,23],[55,24,50,24],[55,26,50,26],[56,6,51,8],[56,12,51,14],[56,16,51,18,"TokenTransferHookInvalidSeed"],[56,52,51,46],[56,53,51,47],[56,54,51,48],[57,4,52,4],[58,4,53,4],[58,10,53,10],[58,11,53,11,"accountIndex"],[58,23,53,23],[58,25,53,25,"dataIndex"],[58,34,53,34],[58,36,53,36,"length"],[58,42,53,42],[58,43,53,43],[58,46,53,46,"seeds"],[58,51,53,51],[59,4,54,4],[59,8,54,8,"previousMetas"],[59,21,54,21],[59,22,54,22,"length"],[59,28,54,28],[59,32,54,32,"accountIndex"],[59,44,54,44],[59,46,54,46],[60,6,55,8],[60,12,55,14],[60,16,55,18,"TokenTransferHookInvalidSeed"],[60,52,55,46],[60,53,55,47],[60,54,55,48],[61,4,56,4],[62,4,57,4],[62,10,57,10,"accountInfo"],[62,21,57,21],[62,24,57,24],[62,30,57,30,"connection"],[62,40,57,40],[62,41,57,41,"getAccountInfo"],[62,55,57,55],[62,56,57,56,"previousMetas"],[62,69,57,69],[62,70,57,70,"accountIndex"],[62,82,57,82],[62,83,57,83],[62,84,57,84,"pubkey"],[62,90,57,90],[62,91,57,91],[63,4,58,4],[63,8,58,8,"accountInfo"],[63,19,58,19],[63,23,58,23],[63,27,58,27],[63,29,58,29],[64,6,59,8],[64,12,59,14],[64,16,59,18,"TokenTransferHookAccountDataNotFound"],[64,60,59,54],[64,61,59,55],[64,62,59,56],[65,4,60,4],[66,4,61,4],[66,8,61,8,"accountInfo"],[66,19,61,19],[66,20,61,20,"data"],[66,24,61,24],[66,25,61,25,"length"],[66,31,61,31],[66,34,61,34,"dataIndex"],[66,43,61,43],[66,46,61,46,"length"],[66,52,61,52],[66,54,61,54],[67,6,62,8],[67,12,62,14],[67,16,62,18,"TokenTransferHookInvalidSeed"],[67,52,62,46],[67,53,62,47],[67,54,62,48],[68,4,63,4],[69,4,64,4],[69,11,64,11],[70,6,65,8,"data"],[70,10,65,12],[70,12,65,14,"accountInfo"],[70,23,65,25],[70,24,65,26,"data"],[70,28,65,30],[70,29,65,31,"subarray"],[70,37,65,39],[70,38,65,40,"dataIndex"],[70,47,65,49],[70,49,65,51,"dataIndex"],[70,58,65,60],[70,61,65,63,"length"],[70,67,65,69],[70,68,65,70],[71,6,66,8,"packedLength"],[71,18,66,20],[71,20,66,22,"DISCRIMINATOR_SPAN"],[71,38,66,40],[71,41,66,43,"ACCOUNT_DATA_ACCOUNT_INDEX_SPAN"],[71,72,66,74],[71,75,66,77,"ACCOUNT_DATA_OFFSET_SPAN"],[71,99,66,101],[71,102,66,104,"ACCOUNT_DATA_LENGTH_SPAN"],[72,4,67,4],[72,5,67,5],[73,2,68,0],[74,2,69,0],[74,17,69,15,"unpackFirstSeed"],[74,32,69,30,"unpackFirstSeed"],[74,33,69,31,"seeds"],[74,38,69,36],[74,40,69,38,"previousMetas"],[74,53,69,51],[74,55,69,53,"instructionData"],[74,70,69,68],[74,72,69,70,"connection"],[74,82,69,80],[74,84,69,82],[75,4,70,4],[75,10,70,10],[75,11,70,11,"discriminator"],[75,24,70,24],[75,26,70,26],[75,29,70,29,"rest"],[75,33,70,33],[75,34,70,34],[75,37,70,37,"seeds"],[75,42,70,42],[76,4,71,4],[76,10,71,10,"remaining"],[76,19,71,19],[76,22,71,22],[76,26,71,26,"Uint8Array"],[76,36,71,36],[76,37,71,37,"rest"],[76,41,71,41],[76,42,71,42],[77,4,72,4],[77,12,72,12,"discriminator"],[77,25,72,25],[78,6,73,8],[78,11,73,13],[78,12,73,14],[79,8,74,12],[79,15,74,19],[79,19,74,23],[80,6,75,8],[80,11,75,13],[80,12,75,14],[81,8,76,12],[81,15,76,19,"unpackSeedLiteral"],[81,32,76,36],[81,33,76,37,"remaining"],[81,42,76,46],[81,43,76,47],[82,6,77,8],[82,11,77,13],[82,12,77,14],[83,8,78,12],[83,15,78,19,"unpackSeedInstructionArg"],[83,39,78,43],[83,40,78,44,"remaining"],[83,49,78,53],[83,51,78,55,"instructionData"],[83,66,78,70],[83,67,78,71],[84,6,79,8],[84,11,79,13],[84,12,79,14],[85,8,80,12],[85,15,80,19,"unpackSeedAccountKey"],[85,35,80,39],[85,36,80,40,"remaining"],[85,45,80,49],[85,47,80,51,"previousMetas"],[85,60,80,64],[85,61,80,65],[86,6,81,8],[86,11,81,13],[86,12,81,14],[87,8,82,12],[87,15,82,19,"unpackSeedAccountData"],[87,36,82,40],[87,37,82,41,"remaining"],[87,46,82,50],[87,48,82,52,"previousMetas"],[87,61,82,65],[87,63,82,67,"connection"],[87,73,82,77],[87,74,82,78],[88,6,83,8],[89,8,84,12],[89,14,84,18],[89,18,84,22,"TokenTransferHookInvalidSeed"],[89,54,84,50],[89,55,84,51],[89,56,84,52],[90,4,85,4],[91,2,86,0],[92,2,87,7],[92,17,87,22,"unpackSeeds"],[92,28,87,33,"unpackSeeds"],[92,29,87,34,"seeds"],[92,34,87,39],[92,36,87,41,"previousMetas"],[92,49,87,54],[92,51,87,56,"instructionData"],[92,66,87,71],[92,68,87,73,"connection"],[92,78,87,83],[92,80,87,85],[93,4,88,4],[93,10,88,10,"unpackedSeeds"],[93,23,88,23],[93,26,88,26],[93,28,88,28],[94,4,89,4],[94,8,89,8,"i"],[94,9,89,9],[94,12,89,12],[94,13,89,13],[95,4,90,4],[95,11,90,11,"i"],[95,12,90,12],[95,15,90,15],[95,17,90,17],[95,19,90,19],[96,6,91,8],[96,12,91,14,"seed"],[96,16,91,18],[96,19,91,21],[96,25,91,27,"unpackFirstSeed"],[96,40,91,42],[96,41,91,43,"seeds"],[96,46,91,48],[96,47,91,49,"slice"],[96,52,91,54],[96,53,91,55,"i"],[96,54,91,56],[96,55,91,57],[96,57,91,59,"previousMetas"],[96,70,91,72],[96,72,91,74,"instructionData"],[96,87,91,89],[96,89,91,91,"connection"],[96,99,91,101],[96,100,91,102],[97,6,92,8],[97,10,92,12,"seed"],[97,14,92,16],[97,18,92,20],[97,22,92,24],[97,24,92,26],[98,8,93,12],[99,6,94,8],[100,6,95,8,"unpackedSeeds"],[100,19,95,21],[100,20,95,22,"push"],[100,24,95,26],[100,25,95,27,"seed"],[100,29,95,31],[100,30,95,32,"data"],[100,34,95,36],[100,35,95,37],[101,6,96,8,"i"],[101,7,96,9],[101,11,96,13,"seed"],[101,15,96,17],[101,16,96,18,"packedLength"],[101,28,96,30],[102,4,97,4],[103,4,98,4],[103,11,98,11,"unpackedSeeds"],[103,24,98,24],[104,2,99,0],[105,0,99,1],[105,3]],"functionMap":{"names":["<global>","unpackSeedLiteral","unpackSeedInstructionArg","unpackSeedAccountKey","unpackSeedAccountData","unpackFirstSeed","unpackSeeds"],"mappings":"AAA;ACS;CDY;AEC;CFY;AGC;CHY;AIC;CJmB;AKC;CLiB;OMC;CNY"}},"type":"js/module"}]}