{"dependencies":[{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":28},"end":{"line":2,"column":34,"index":47}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":61},"end":{"line":3,"column":35,"index":83}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}},{"name":"cipher-base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":11,"index":103},"end":{"line":5,"column":33,"index":125}}],"key":"7cV2V6tRDydrl9neigZg5XnvIlM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var inherits = require(_dependencyMap[0], \"inherits\");\n  var Buffer = require(_dependencyMap[1], \"safe-buffer\").Buffer;\n  var Base = require(_dependencyMap[2], \"cipher-base\");\n  var ZEROS = Buffer.alloc(128);\n  var blocksize = 64;\n  function Hmac(alg, key) {\n    Base.call(this, 'digest');\n    if (typeof key === 'string') {\n      key = Buffer.from(key);\n    }\n    this._alg = alg;\n    this._key = key;\n    if (key.length > blocksize) {\n      key = alg(key);\n    } else if (key.length < blocksize) {\n      key = Buffer.concat([key, ZEROS], blocksize);\n    }\n    var ipad = this._ipad = Buffer.allocUnsafe(blocksize);\n    var opad = this._opad = Buffer.allocUnsafe(blocksize);\n    for (var i = 0; i < blocksize; i++) {\n      ipad[i] = key[i] ^ 0x36;\n      opad[i] = key[i] ^ 0x5C;\n    }\n    this._hash = [ipad];\n  }\n  inherits(Hmac, Base);\n  Hmac.prototype._update = function (data) {\n    this._hash.push(data);\n  };\n  Hmac.prototype._final = function () {\n    var h = this._alg(Buffer.concat(this._hash));\n    return this._alg(Buffer.concat([this._opad, h]));\n  };\n  module.exports = Hmac;\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"inherits"],[4,14,2,12],[4,17,2,15,"require"],[4,24,2,22],[4,25,2,22,"_dependencyMap"],[4,39,2,22],[4,54,2,33],[4,55,2,34],[5,2,3,0],[5,6,3,4,"Buffer"],[5,12,3,10],[5,15,3,13,"require"],[5,22,3,20],[5,23,3,20,"_dependencyMap"],[5,37,3,20],[5,55,3,34],[5,56,3,35],[5,57,3,36,"Buffer"],[5,63,3,42],[6,2,5,0],[6,6,5,4,"Base"],[6,10,5,8],[6,13,5,11,"require"],[6,20,5,18],[6,21,5,18,"_dependencyMap"],[6,35,5,18],[6,53,5,32],[6,54,5,33],[7,2,7,0],[7,6,7,4,"ZEROS"],[7,11,7,9],[7,14,7,12,"Buffer"],[7,20,7,18],[7,21,7,19,"alloc"],[7,26,7,24],[7,27,7,25],[7,30,7,28],[7,31,7,29],[8,2,8,0],[8,6,8,4,"blocksize"],[8,15,8,13],[8,18,8,16],[8,20,8,18],[9,2,10,0],[9,11,10,9,"Hmac"],[9,15,10,13,"Hmac"],[9,16,10,15,"alg"],[9,19,10,18],[9,21,10,20,"key"],[9,24,10,23],[9,26,10,25],[10,4,11,2,"Base"],[10,8,11,6],[10,9,11,7,"call"],[10,13,11,11],[10,14,11,12],[10,18,11,16],[10,20,11,18],[10,28,11,26],[10,29,11,27],[11,4,12,2],[11,8,12,6],[11,15,12,13,"key"],[11,18,12,16],[11,23,12,21],[11,31,12,29],[11,33,12,31],[12,6,13,4,"key"],[12,9,13,7],[12,12,13,10,"Buffer"],[12,18,13,16],[12,19,13,17,"from"],[12,23,13,21],[12,24,13,22,"key"],[12,27,13,25],[12,28,13,26],[13,4,14,2],[14,4,16,2],[14,8,16,6],[14,9,16,7,"_alg"],[14,13,16,11],[14,16,16,14,"alg"],[14,19,16,17],[15,4,17,2],[15,8,17,6],[15,9,17,7,"_key"],[15,13,17,11],[15,16,17,14,"key"],[15,19,17,17],[16,4,19,2],[16,8,19,6,"key"],[16,11,19,9],[16,12,19,10,"length"],[16,18,19,16],[16,21,19,19,"blocksize"],[16,30,19,28],[16,32,19,30],[17,6,20,4,"key"],[17,9,20,7],[17,12,20,10,"alg"],[17,15,20,13],[17,16,20,14,"key"],[17,19,20,17],[17,20,20,18],[18,4,21,2],[18,5,21,3],[18,11,21,9],[18,15,21,13,"key"],[18,18,21,16],[18,19,21,17,"length"],[18,25,21,23],[18,28,21,26,"blocksize"],[18,37,21,35],[18,39,21,37],[19,6,22,4,"key"],[19,9,22,7],[19,12,22,10,"Buffer"],[19,18,22,16],[19,19,22,17,"concat"],[19,25,22,23],[19,26,22,24],[19,27,22,25,"key"],[19,30,22,28],[19,32,22,30,"ZEROS"],[19,37,22,35],[19,38,22,36],[19,40,22,38,"blocksize"],[19,49,22,47],[19,50,22,48],[20,4,23,2],[21,4,25,2],[21,8,25,6,"ipad"],[21,12,25,10],[21,15,25,13],[21,19,25,17],[21,20,25,18,"_ipad"],[21,25,25,23],[21,28,25,26,"Buffer"],[21,34,25,32],[21,35,25,33,"allocUnsafe"],[21,46,25,44],[21,47,25,45,"blocksize"],[21,56,25,54],[21,57,25,55],[22,4,26,2],[22,8,26,6,"opad"],[22,12,26,10],[22,15,26,13],[22,19,26,17],[22,20,26,18,"_opad"],[22,25,26,23],[22,28,26,26,"Buffer"],[22,34,26,32],[22,35,26,33,"allocUnsafe"],[22,46,26,44],[22,47,26,45,"blocksize"],[22,56,26,54],[22,57,26,55],[23,4,28,2],[23,9,28,7],[23,13,28,11,"i"],[23,14,28,12],[23,17,28,15],[23,18,28,16],[23,20,28,18,"i"],[23,21,28,19],[23,24,28,22,"blocksize"],[23,33,28,31],[23,35,28,33,"i"],[23,36,28,34],[23,38,28,36],[23,40,28,38],[24,6,29,4,"ipad"],[24,10,29,8],[24,11,29,9,"i"],[24,12,29,10],[24,13,29,11],[24,16,29,14,"key"],[24,19,29,17],[24,20,29,18,"i"],[24,21,29,19],[24,22,29,20],[24,25,29,23],[24,29,29,27],[25,6,30,4,"opad"],[25,10,30,8],[25,11,30,9,"i"],[25,12,30,10],[25,13,30,11],[25,16,30,14,"key"],[25,19,30,17],[25,20,30,18,"i"],[25,21,30,19],[25,22,30,20],[25,25,30,23],[25,29,30,27],[26,4,31,2],[27,4,33,2],[27,8,33,6],[27,9,33,7,"_hash"],[27,14,33,12],[27,17,33,15],[27,18,33,16,"ipad"],[27,22,33,20],[27,23,33,21],[28,2,34,0],[29,2,36,0,"inherits"],[29,10,36,8],[29,11,36,9,"Hmac"],[29,15,36,13],[29,17,36,15,"Base"],[29,21,36,19],[29,22,36,20],[30,2,38,0,"Hmac"],[30,6,38,4],[30,7,38,5,"prototype"],[30,16,38,14],[30,17,38,15,"_update"],[30,24,38,22],[30,27,38,25],[30,37,38,35,"data"],[30,41,38,39],[30,43,38,41],[31,4,39,2],[31,8,39,6],[31,9,39,7,"_hash"],[31,14,39,12],[31,15,39,13,"push"],[31,19,39,17],[31,20,39,18,"data"],[31,24,39,22],[31,25,39,23],[32,2,40,0],[32,3,40,1],[33,2,42,0,"Hmac"],[33,6,42,4],[33,7,42,5,"prototype"],[33,16,42,14],[33,17,42,15,"_final"],[33,23,42,21],[33,26,42,24],[33,38,42,36],[34,4,43,2],[34,8,43,6,"h"],[34,9,43,7],[34,12,43,10],[34,16,43,14],[34,17,43,15,"_alg"],[34,21,43,19],[34,22,43,20,"Buffer"],[34,28,43,26],[34,29,43,27,"concat"],[34,35,43,33],[34,36,43,34],[34,40,43,38],[34,41,43,39,"_hash"],[34,46,43,44],[34,47,43,45],[34,48,43,46],[35,4,44,2],[35,11,44,9],[35,15,44,13],[35,16,44,14,"_alg"],[35,20,44,18],[35,21,44,19,"Buffer"],[35,27,44,25],[35,28,44,26,"concat"],[35,34,44,32],[35,35,44,33],[35,36,44,34],[35,40,44,38],[35,41,44,39,"_opad"],[35,46,44,44],[35,48,44,46,"h"],[35,49,44,47],[35,50,44,48],[35,51,44,49],[35,52,44,50],[36,2,45,0],[36,3,45,1],[37,2,46,0,"module"],[37,8,46,6],[37,9,46,7,"exports"],[37,16,46,14],[37,19,46,17,"Hmac"],[37,23,46,21],[38,0,46,21],[38,3]],"functionMap":{"names":["<global>","Hmac","Hmac.prototype._update","Hmac.prototype._final"],"mappings":"AAA;ACS;CDwB;yBEI;CFE;wBGE;CHG"}},"type":"js/module"}]}