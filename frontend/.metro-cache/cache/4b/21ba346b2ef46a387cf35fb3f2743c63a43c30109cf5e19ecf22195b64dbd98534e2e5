{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":86,"index":196}}],"key":"0LIA5DrINmAZiA+WxylNrkCajGU=","exportNames":["*"]}},{"name":"../../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":197},"end":{"line":4,"column":67,"index":264}}],"key":"Jq1DcLPs1AjY3ygtzPUe4D8IdoQ=","exportNames":["*"]}},{"name":"../../instructions/internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":265},"end":{"line":5,"column":60,"index":325}}],"key":"QpUR88Ww2osC9HHudq73tq+tOtM=","exportNames":["*"]}},{"name":"../../instructions/types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":326},"end":{"line":6,"column":63,"index":389}}],"key":"wArSmpIPPWx7emCppvmPBLNSdfs=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DefaultAccountStateInstruction = void 0;\n  exports.createInitializeDefaultAccountStateInstruction = createInitializeDefaultAccountStateInstruction;\n  exports.createUpdateDefaultAccountStateInstruction = createUpdateDefaultAccountStateInstruction;\n  exports.defaultAccountStateInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../../errors.js\");\n  var _internal = require(_dependencyMap[4], \"../../instructions/internal.js\");\n  var _types = require(_dependencyMap[5], \"../../instructions/types.js\");\n  var DefaultAccountStateInstruction;\n  (function (DefaultAccountStateInstruction) {\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Update\"] = 1] = \"Update\";\n  })(DefaultAccountStateInstruction || (exports.DefaultAccountStateInstruction = DefaultAccountStateInstruction = {}));\n  /** TODO: docs */\n  const defaultAccountStateInstructionData = exports.defaultAccountStateInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.u8)('defaultAccountStateInstruction'), (0, _bufferLayout.u8)('accountState')]);\n  /**\n   * Construct an InitializeDefaultAccountState instruction\n   *\n   * @param mint         Mint to initialize\n   * @param accountState Default account state to set on all new accounts\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createInitializeDefaultAccountStateInstruction(mint, accountState, programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n      instruction: _types.TokenInstruction.DefaultAccountStateExtension,\n      defaultAccountStateInstruction: DefaultAccountStateInstruction.Initialize,\n      accountState\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Construct an UpdateDefaultAccountState instruction\n   *\n   * @param mint         Mint to update\n   * @param accountState    Default account state to set on all accounts\n   * @param freezeAuthority       The mint's freeze authority\n   * @param signers         The signer account(s) for a multisig\n   * @param programId       SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createUpdateDefaultAccountStateInstruction(mint, accountState, freezeAuthority, multiSigners = [], programId = _constants.TOKEN_2022_PROGRAM_ID) {\n    if (!(0, _constants.programSupportsExtensions)(programId)) {\n      throw new _errors.TokenUnsupportedInstructionError();\n    }\n    const keys = (0, _internal.addSigners)([{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }], freezeAuthority, multiSigners);\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n      instruction: _types.TokenInstruction.DefaultAccountStateExtension,\n      defaultAccountStateInstruction: DefaultAccountStateInstruction.Update,\n      accountState\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n});","lineCount":84,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_internal"],[13,15,5,0],[13,18,5,0,"require"],[13,25,5,0],[13,26,5,0,"_dependencyMap"],[13,40,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,7],[15,6,7,11,"DefaultAccountStateInstruction"],[15,36,7,41],[16,2,8,0],[16,3,8,1],[16,13,8,11,"DefaultAccountStateInstruction"],[16,43,8,41],[16,45,8,43],[17,4,9,4,"DefaultAccountStateInstruction"],[17,34,9,34],[17,35,9,35,"DefaultAccountStateInstruction"],[17,65,9,65],[17,66,9,66],[17,78,9,78],[17,79,9,79],[17,82,9,82],[17,83,9,83],[17,84,9,84],[17,87,9,87],[17,99,9,99],[18,4,10,4,"DefaultAccountStateInstruction"],[18,34,10,34],[18,35,10,35,"DefaultAccountStateInstruction"],[18,65,10,65],[18,66,10,66],[18,74,10,74],[18,75,10,75],[18,78,10,78],[18,79,10,79],[18,80,10,80],[18,83,10,83],[18,91,10,91],[19,2,11,0],[19,3,11,1],[19,5,11,3,"DefaultAccountStateInstruction"],[19,35,11,33],[19,40,11,33,"exports"],[19,47,11,33],[19,48,11,33,"DefaultAccountStateInstruction"],[19,78,11,33],[19,81,11,38,"DefaultAccountStateInstruction"],[19,111,11,68],[19,114,11,71],[19,115,11,72],[19,116,11,73],[19,117,11,74],[19,118,11,75],[20,2,12,0],[21,2,13,7],[21,8,13,13,"defaultAccountStateInstructionData"],[21,42,13,47],[21,45,13,47,"exports"],[21,52,13,47],[21,53,13,47,"defaultAccountStateInstructionData"],[21,87,13,47],[21,90,13,50],[21,94,13,50,"struct"],[21,114,13,56],[21,116,13,57],[21,117,14,4],[21,121,14,4,"u8"],[21,137,14,6],[21,139,14,7],[21,152,14,20],[21,153,14,21],[21,155,15,4],[21,159,15,4,"u8"],[21,175,15,6],[21,177,15,7],[21,209,15,39],[21,210,15,40],[21,212,16,4],[21,216,16,4,"u8"],[21,232,16,6],[21,234,16,7],[21,248,16,21],[21,249,16,22],[21,250,17,1],[21,251,17,2],[22,2,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,2,27,7],[31,11,27,16,"createInitializeDefaultAccountStateInstruction"],[31,57,27,62,"createInitializeDefaultAccountStateInstruction"],[31,58,27,63,"mint"],[31,62,27,67],[31,64,27,69,"accountState"],[31,76,27,81],[31,78,27,83,"programId"],[31,87,27,92],[31,90,27,95,"TOKEN_2022_PROGRAM_ID"],[31,122,27,116],[31,124,27,118],[32,4,28,4],[32,8,28,8],[32,9,28,9],[32,13,28,9,"programSupportsExtensions"],[32,49,28,34],[32,51,28,35,"programId"],[32,60,28,44],[32,61,28,45],[32,63,28,47],[33,6,29,8],[33,12,29,14],[33,16,29,18,"TokenUnsupportedInstructionError"],[33,56,29,50],[33,57,29,51],[33,58,29,52],[34,4,30,4],[35,4,31,4],[35,10,31,10,"keys"],[35,14,31,14],[35,17,31,17],[35,18,31,18],[36,6,31,20,"pubkey"],[36,12,31,26],[36,14,31,28,"mint"],[36,18,31,32],[37,6,31,34,"isSigner"],[37,14,31,42],[37,16,31,44],[37,21,31,49],[38,6,31,51,"isWritable"],[38,16,31,61],[38,18,31,63],[39,4,31,68],[39,5,31,69],[39,6,31,70],[40,4,32,4],[40,10,32,10,"data"],[40,14,32,14],[40,17,32,17,"Buffer"],[40,23,32,23],[40,24,32,24,"alloc"],[40,29,32,29],[40,30,32,30,"defaultAccountStateInstructionData"],[40,64,32,64],[40,65,32,65,"span"],[40,69,32,69],[40,70,32,70],[41,4,33,4,"defaultAccountStateInstructionData"],[41,38,33,38],[41,39,33,39,"encode"],[41,45,33,45],[41,46,33,46],[42,6,34,8,"instruction"],[42,17,34,19],[42,19,34,21,"TokenInstruction"],[42,42,34,37],[42,43,34,38,"DefaultAccountStateExtension"],[42,71,34,66],[43,6,35,8,"defaultAccountStateInstruction"],[43,36,35,38],[43,38,35,40,"DefaultAccountStateInstruction"],[43,68,35,70],[43,69,35,71,"Initialize"],[43,79,35,81],[44,6,36,8,"accountState"],[45,4,37,4],[45,5,37,5],[45,7,37,7,"data"],[45,11,37,11],[45,12,37,12],[46,4,38,4],[46,11,38,11],[46,15,38,15,"TransactionInstruction"],[46,42,38,37],[46,43,38,38],[47,6,38,40,"keys"],[47,10,38,44],[48,6,38,46,"programId"],[48,15,38,55],[49,6,38,57,"data"],[50,4,38,62],[50,5,38,63],[50,6,38,64],[51,2,39,0],[52,2,40,0],[53,0,41,0],[54,0,42,0],[55,0,43,0],[56,0,44,0],[57,0,45,0],[58,0,46,0],[59,0,47,0],[60,0,48,0],[61,0,49,0],[62,0,50,0],[63,2,51,7],[63,11,51,16,"createUpdateDefaultAccountStateInstruction"],[63,53,51,58,"createUpdateDefaultAccountStateInstruction"],[63,54,51,59,"mint"],[63,58,51,63],[63,60,51,65,"accountState"],[63,72,51,77],[63,74,51,79,"freezeAuthority"],[63,89,51,94],[63,91,51,96,"multiSigners"],[63,103,51,108],[63,106,51,111],[63,108,51,113],[63,110,51,115,"programId"],[63,119,51,124],[63,122,51,127,"TOKEN_2022_PROGRAM_ID"],[63,154,51,148],[63,156,51,150],[64,4,52,4],[64,8,52,8],[64,9,52,9],[64,13,52,9,"programSupportsExtensions"],[64,49,52,34],[64,51,52,35,"programId"],[64,60,52,44],[64,61,52,45],[64,63,52,47],[65,6,53,8],[65,12,53,14],[65,16,53,18,"TokenUnsupportedInstructionError"],[65,56,53,50],[65,57,53,51],[65,58,53,52],[66,4,54,4],[67,4,55,4],[67,10,55,10,"keys"],[67,14,55,14],[67,17,55,17],[67,21,55,17,"addSigners"],[67,41,55,27],[67,43,55,28],[67,44,55,29],[68,6,55,31,"pubkey"],[68,12,55,37],[68,14,55,39,"mint"],[68,18,55,43],[69,6,55,45,"isSigner"],[69,14,55,53],[69,16,55,55],[69,21,55,60],[70,6,55,62,"isWritable"],[70,16,55,72],[70,18,55,74],[71,4,55,79],[71,5,55,80],[71,6,55,81],[71,8,55,83,"freezeAuthority"],[71,23,55,98],[71,25,55,100,"multiSigners"],[71,37,55,112],[71,38,55,113],[72,4,56,4],[72,10,56,10,"data"],[72,14,56,14],[72,17,56,17,"Buffer"],[72,23,56,23],[72,24,56,24,"alloc"],[72,29,56,29],[72,30,56,30,"defaultAccountStateInstructionData"],[72,64,56,64],[72,65,56,65,"span"],[72,69,56,69],[72,70,56,70],[73,4,57,4,"defaultAccountStateInstructionData"],[73,38,57,38],[73,39,57,39,"encode"],[73,45,57,45],[73,46,57,46],[74,6,58,8,"instruction"],[74,17,58,19],[74,19,58,21,"TokenInstruction"],[74,42,58,37],[74,43,58,38,"DefaultAccountStateExtension"],[74,71,58,66],[75,6,59,8,"defaultAccountStateInstruction"],[75,36,59,38],[75,38,59,40,"DefaultAccountStateInstruction"],[75,68,59,70],[75,69,59,71,"Update"],[75,75,59,77],[76,6,60,8,"accountState"],[77,4,61,4],[77,5,61,5],[77,7,61,7,"data"],[77,11,61,11],[77,12,61,12],[78,4,62,4],[78,11,62,11],[78,15,62,15,"TransactionInstruction"],[78,42,62,37],[78,43,62,38],[79,6,62,40,"keys"],[79,10,62,44],[80,6,62,46,"programId"],[80,15,62,55],[81,6,62,57,"data"],[82,4,62,62],[82,5,62,63],[82,6,62,64],[83,2,63,0],[84,0,63,1],[84,3]],"functionMap":{"names":["<global>","<anonymous>","createInitializeDefaultAccountStateInstruction","createUpdateDefaultAccountStateInstruction"],"mappings":"AAA;CCO;CDG;OEgB;CFY;OGY;CHY"}},"type":"js/module"}]}