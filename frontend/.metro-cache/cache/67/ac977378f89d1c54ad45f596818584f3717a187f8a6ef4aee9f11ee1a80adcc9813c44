{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":30,"index":45}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"]}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":60},"end":{"line":4,"column":43,"index":90}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = require(_dependencyMap[0], \"./utils\");\n  var assert = require(_dependencyMap[1], \"minimalistic-assert\");\n  function BlockHash() {\n    this.pending = null;\n    this.pendingTotal = 0;\n    this.blockSize = this.constructor.blockSize;\n    this.outSize = this.constructor.outSize;\n    this.hmacStrength = this.constructor.hmacStrength;\n    this.padLength = this.constructor.padLength / 8;\n    this.endian = 'big';\n    this._delta8 = this.blockSize / 8;\n    this._delta32 = this.blockSize / 32;\n  }\n  exports.BlockHash = BlockHash;\n  BlockHash.prototype.update = function update(msg, enc) {\n    // Convert message to array, pad it, and join into 32bit blocks\n    msg = utils.toArray(msg, enc);\n    if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n    this.pendingTotal += msg.length;\n\n    // Enough data, try updating\n    if (this.pending.length >= this._delta8) {\n      msg = this.pending;\n\n      // Process pending data in blocks\n      var r = msg.length % this._delta8;\n      this.pending = msg.slice(msg.length - r, msg.length);\n      if (this.pending.length === 0) this.pending = null;\n      msg = utils.join32(msg, 0, msg.length - r, this.endian);\n      for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n    }\n    return this;\n  };\n  BlockHash.prototype.digest = function digest(enc) {\n    this.update(this._pad());\n    assert(this.pending === null);\n    return this._digest(enc);\n  };\n  BlockHash.prototype._pad = function pad() {\n    var len = this.pendingTotal;\n    var bytes = this._delta8;\n    var k = bytes - (len + this.padLength) % bytes;\n    var res = new Array(k + this.padLength);\n    res[0] = 0x80;\n    for (var i = 1; i < k; i++) res[i] = 0;\n\n    // Append length\n    len <<= 3;\n    if (this.endian === 'big') {\n      for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len & 0xff;\n    } else {\n      res[i++] = len & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      for (t = 8; t < this.padLength; t++) res[i++] = 0;\n    }\n    return res;\n  };\n});","lineCount":75,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,21,3,19],[4,22,3,19,"_dependencyMap"],[4,36,3,19],[4,50,3,29],[4,51,3,30],[5,2,4,0],[5,6,4,4,"assert"],[5,12,4,10],[5,15,4,13,"require"],[5,22,4,20],[5,23,4,20,"_dependencyMap"],[5,37,4,20],[5,63,4,42],[5,64,4,43],[6,2,6,0],[6,11,6,9,"BlockHash"],[6,20,6,18,"BlockHash"],[6,21,6,18],[6,23,6,21],[7,4,7,2],[7,8,7,6],[7,9,7,7,"pending"],[7,16,7,14],[7,19,7,17],[7,23,7,21],[8,4,8,2],[8,8,8,6],[8,9,8,7,"pendingTotal"],[8,21,8,19],[8,24,8,22],[8,25,8,23],[9,4,9,2],[9,8,9,6],[9,9,9,7,"blockSize"],[9,18,9,16],[9,21,9,19],[9,25,9,23],[9,26,9,24,"constructor"],[9,37,9,35],[9,38,9,36,"blockSize"],[9,47,9,45],[10,4,10,2],[10,8,10,6],[10,9,10,7,"outSize"],[10,16,10,14],[10,19,10,17],[10,23,10,21],[10,24,10,22,"constructor"],[10,35,10,33],[10,36,10,34,"outSize"],[10,43,10,41],[11,4,11,2],[11,8,11,6],[11,9,11,7,"hmacStrength"],[11,21,11,19],[11,24,11,22],[11,28,11,26],[11,29,11,27,"constructor"],[11,40,11,38],[11,41,11,39,"hmacStrength"],[11,53,11,51],[12,4,12,2],[12,8,12,6],[12,9,12,7,"padLength"],[12,18,12,16],[12,21,12,19],[12,25,12,23],[12,26,12,24,"constructor"],[12,37,12,35],[12,38,12,36,"padLength"],[12,47,12,45],[12,50,12,48],[12,51,12,49],[13,4,13,2],[13,8,13,6],[13,9,13,7,"endian"],[13,15,13,13],[13,18,13,16],[13,23,13,21],[14,4,15,2],[14,8,15,6],[14,9,15,7,"_delta8"],[14,16,15,14],[14,19,15,17],[14,23,15,21],[14,24,15,22,"blockSize"],[14,33,15,31],[14,36,15,34],[14,37,15,35],[15,4,16,2],[15,8,16,6],[15,9,16,7,"_delta32"],[15,17,16,15],[15,20,16,18],[15,24,16,22],[15,25,16,23,"blockSize"],[15,34,16,32],[15,37,16,35],[15,39,16,37],[16,2,17,0],[17,2,18,0,"exports"],[17,9,18,7],[17,10,18,8,"BlockHash"],[17,19,18,17],[17,22,18,20,"BlockHash"],[17,31,18,29],[18,2,20,0,"BlockHash"],[18,11,20,9],[18,12,20,10,"prototype"],[18,21,20,19],[18,22,20,20,"update"],[18,28,20,26],[18,31,20,29],[18,40,20,38,"update"],[18,46,20,44,"update"],[18,47,20,45,"msg"],[18,50,20,48],[18,52,20,50,"enc"],[18,55,20,53],[18,57,20,55],[19,4,21,2],[20,4,22,2,"msg"],[20,7,22,5],[20,10,22,8,"utils"],[20,15,22,13],[20,16,22,14,"toArray"],[20,23,22,21],[20,24,22,22,"msg"],[20,27,22,25],[20,29,22,27,"enc"],[20,32,22,30],[20,33,22,31],[21,4,23,2],[21,8,23,6],[21,9,23,7],[21,13,23,11],[21,14,23,12,"pending"],[21,21,23,19],[21,23,24,4],[21,27,24,8],[21,28,24,9,"pending"],[21,35,24,16],[21,38,24,19,"msg"],[21,41,24,22],[21,42,24,23],[21,47,26,4],[21,51,26,8],[21,52,26,9,"pending"],[21,59,26,16],[21,62,26,19],[21,66,26,23],[21,67,26,24,"pending"],[21,74,26,31],[21,75,26,32,"concat"],[21,81,26,38],[21,82,26,39,"msg"],[21,85,26,42],[21,86,26,43],[22,4,27,2],[22,8,27,6],[22,9,27,7,"pendingTotal"],[22,21,27,19],[22,25,27,23,"msg"],[22,28,27,26],[22,29,27,27,"length"],[22,35,27,33],[24,4,29,2],[25,4,30,2],[25,8,30,6],[25,12,30,10],[25,13,30,11,"pending"],[25,20,30,18],[25,21,30,19,"length"],[25,27,30,25],[25,31,30,29],[25,35,30,33],[25,36,30,34,"_delta8"],[25,43,30,41],[25,45,30,43],[26,6,31,4,"msg"],[26,9,31,7],[26,12,31,10],[26,16,31,14],[26,17,31,15,"pending"],[26,24,31,22],[28,6,33,4],[29,6,34,4],[29,10,34,8,"r"],[29,11,34,9],[29,14,34,12,"msg"],[29,17,34,15],[29,18,34,16,"length"],[29,24,34,22],[29,27,34,25],[29,31,34,29],[29,32,34,30,"_delta8"],[29,39,34,37],[30,6,35,4],[30,10,35,8],[30,11,35,9,"pending"],[30,18,35,16],[30,21,35,19,"msg"],[30,24,35,22],[30,25,35,23,"slice"],[30,30,35,28],[30,31,35,29,"msg"],[30,34,35,32],[30,35,35,33,"length"],[30,41,35,39],[30,44,35,42,"r"],[30,45,35,43],[30,47,35,45,"msg"],[30,50,35,48],[30,51,35,49,"length"],[30,57,35,55],[30,58,35,56],[31,6,36,4],[31,10,36,8],[31,14,36,12],[31,15,36,13,"pending"],[31,22,36,20],[31,23,36,21,"length"],[31,29,36,27],[31,34,36,32],[31,35,36,33],[31,37,37,6],[31,41,37,10],[31,42,37,11,"pending"],[31,49,37,18],[31,52,37,21],[31,56,37,25],[32,6,39,4,"msg"],[32,9,39,7],[32,12,39,10,"utils"],[32,17,39,15],[32,18,39,16,"join32"],[32,24,39,22],[32,25,39,23,"msg"],[32,28,39,26],[32,30,39,28],[32,31,39,29],[32,33,39,31,"msg"],[32,36,39,34],[32,37,39,35,"length"],[32,43,39,41],[32,46,39,44,"r"],[32,47,39,45],[32,49,39,47],[32,53,39,51],[32,54,39,52,"endian"],[32,60,39,58],[32,61,39,59],[33,6,40,4],[33,11,40,9],[33,15,40,13,"i"],[33,16,40,14],[33,19,40,17],[33,20,40,18],[33,22,40,20,"i"],[33,23,40,21],[33,26,40,24,"msg"],[33,29,40,27],[33,30,40,28,"length"],[33,36,40,34],[33,38,40,36,"i"],[33,39,40,37],[33,43,40,41],[33,47,40,45],[33,48,40,46,"_delta32"],[33,56,40,54],[33,58,41,6],[33,62,41,10],[33,63,41,11,"_update"],[33,70,41,18],[33,71,41,19,"msg"],[33,74,41,22],[33,76,41,24,"i"],[33,77,41,25],[33,79,41,27,"i"],[33,80,41,28],[33,83,41,31],[33,87,41,35],[33,88,41,36,"_delta32"],[33,96,41,44],[33,97,41,45],[34,4,42,2],[35,4,44,2],[35,11,44,9],[35,15,44,13],[36,2,45,0],[36,3,45,1],[37,2,47,0,"BlockHash"],[37,11,47,9],[37,12,47,10,"prototype"],[37,21,47,19],[37,22,47,20,"digest"],[37,28,47,26],[37,31,47,29],[37,40,47,38,"digest"],[37,46,47,44,"digest"],[37,47,47,45,"enc"],[37,50,47,48],[37,52,47,50],[38,4,48,2],[38,8,48,6],[38,9,48,7,"update"],[38,15,48,13],[38,16,48,14],[38,20,48,18],[38,21,48,19,"_pad"],[38,25,48,23],[38,26,48,24],[38,27,48,25],[38,28,48,26],[39,4,49,2,"assert"],[39,10,49,8],[39,11,49,9],[39,15,49,13],[39,16,49,14,"pending"],[39,23,49,21],[39,28,49,26],[39,32,49,30],[39,33,49,31],[40,4,51,2],[40,11,51,9],[40,15,51,13],[40,16,51,14,"_digest"],[40,23,51,21],[40,24,51,22,"enc"],[40,27,51,25],[40,28,51,26],[41,2,52,0],[41,3,52,1],[42,2,54,0,"BlockHash"],[42,11,54,9],[42,12,54,10,"prototype"],[42,21,54,19],[42,22,54,20,"_pad"],[42,26,54,24],[42,29,54,27],[42,38,54,36,"pad"],[42,41,54,39,"pad"],[42,42,54,39],[42,44,54,42],[43,4,55,2],[43,8,55,6,"len"],[43,11,55,9],[43,14,55,12],[43,18,55,16],[43,19,55,17,"pendingTotal"],[43,31,55,29],[44,4,56,2],[44,8,56,6,"bytes"],[44,13,56,11],[44,16,56,14],[44,20,56,18],[44,21,56,19,"_delta8"],[44,28,56,26],[45,4,57,2],[45,8,57,6,"k"],[45,9,57,7],[45,12,57,10,"bytes"],[45,17,57,15],[45,20,57,19],[45,21,57,20,"len"],[45,24,57,23],[45,27,57,26],[45,31,57,30],[45,32,57,31,"padLength"],[45,41,57,40],[45,45,57,44,"bytes"],[45,50,57,50],[46,4,58,2],[46,8,58,6,"res"],[46,11,58,9],[46,14,58,12],[46,18,58,16,"Array"],[46,23,58,21],[46,24,58,22,"k"],[46,25,58,23],[46,28,58,26],[46,32,58,30],[46,33,58,31,"padLength"],[46,42,58,40],[46,43,58,41],[47,4,59,2,"res"],[47,7,59,5],[47,8,59,6],[47,9,59,7],[47,10,59,8],[47,13,59,11],[47,17,59,15],[48,4,60,2],[48,9,60,7],[48,13,60,11,"i"],[48,14,60,12],[48,17,60,15],[48,18,60,16],[48,20,60,18,"i"],[48,21,60,19],[48,24,60,22,"k"],[48,25,60,23],[48,27,60,25,"i"],[48,28,60,26],[48,30,60,28],[48,32,61,4,"res"],[48,35,61,7],[48,36,61,8,"i"],[48,37,61,9],[48,38,61,10],[48,41,61,13],[48,42,61,14],[50,4,63,2],[51,4,64,2,"len"],[51,7,64,5],[51,12,64,10],[51,13,64,11],[52,4,65,2],[52,8,65,6],[52,12,65,10],[52,13,65,11,"endian"],[52,19,65,17],[52,24,65,22],[52,29,65,27],[52,31,65,29],[53,6,66,4],[53,11,66,9],[53,15,66,13,"t"],[53,16,66,14],[53,19,66,17],[53,20,66,18],[53,22,66,20,"t"],[53,23,66,21],[53,26,66,24],[53,30,66,28],[53,31,66,29,"padLength"],[53,40,66,38],[53,42,66,40,"t"],[53,43,66,41],[53,45,66,43],[53,47,67,6,"res"],[53,50,67,9],[53,51,67,10,"i"],[53,52,67,11],[53,54,67,13],[53,55,67,14],[53,58,67,17],[53,59,67,18],[54,6,69,4,"res"],[54,9,69,7],[54,10,69,8,"i"],[54,11,69,9],[54,13,69,11],[54,14,69,12],[54,17,69,15],[54,18,69,16],[55,6,70,4,"res"],[55,9,70,7],[55,10,70,8,"i"],[55,11,70,9],[55,13,70,11],[55,14,70,12],[55,17,70,15],[55,18,70,16],[56,6,71,4,"res"],[56,9,71,7],[56,10,71,8,"i"],[56,11,71,9],[56,13,71,11],[56,14,71,12],[56,17,71,15],[56,18,71,16],[57,6,72,4,"res"],[57,9,72,7],[57,10,72,8,"i"],[57,11,72,9],[57,13,72,11],[57,14,72,12],[57,17,72,15],[57,18,72,16],[58,6,73,4,"res"],[58,9,73,7],[58,10,73,8,"i"],[58,11,73,9],[58,13,73,11],[58,14,73,12],[58,17,73,16,"len"],[58,20,73,19],[58,25,73,24],[58,27,73,26],[58,30,73,30],[58,34,73,34],[59,6,74,4,"res"],[59,9,74,7],[59,10,74,8,"i"],[59,11,74,9],[59,13,74,11],[59,14,74,12],[59,17,74,16,"len"],[59,20,74,19],[59,25,74,24],[59,27,74,26],[59,30,74,30],[59,34,74,34],[60,6,75,4,"res"],[60,9,75,7],[60,10,75,8,"i"],[60,11,75,9],[60,13,75,11],[60,14,75,12],[60,17,75,16,"len"],[60,20,75,19],[60,25,75,24],[60,26,75,25],[60,29,75,29],[60,33,75,33],[61,6,76,4,"res"],[61,9,76,7],[61,10,76,8,"i"],[61,11,76,9],[61,13,76,11],[61,14,76,12],[61,17,76,15,"len"],[61,20,76,18],[61,23,76,21],[61,27,76,25],[62,4,77,2],[62,5,77,3],[62,11,77,9],[63,6,78,4,"res"],[63,9,78,7],[63,10,78,8,"i"],[63,11,78,9],[63,13,78,11],[63,14,78,12],[63,17,78,15,"len"],[63,20,78,18],[63,23,78,21],[63,27,78,25],[64,6,79,4,"res"],[64,9,79,7],[64,10,79,8,"i"],[64,11,79,9],[64,13,79,11],[64,14,79,12],[64,17,79,16,"len"],[64,20,79,19],[64,25,79,24],[64,26,79,25],[64,29,79,29],[64,33,79,33],[65,6,80,4,"res"],[65,9,80,7],[65,10,80,8,"i"],[65,11,80,9],[65,13,80,11],[65,14,80,12],[65,17,80,16,"len"],[65,20,80,19],[65,25,80,24],[65,27,80,26],[65,30,80,30],[65,34,80,34],[66,6,81,4,"res"],[66,9,81,7],[66,10,81,8,"i"],[66,11,81,9],[66,13,81,11],[66,14,81,12],[66,17,81,16,"len"],[66,20,81,19],[66,25,81,24],[66,27,81,26],[66,30,81,30],[66,34,81,34],[67,6,82,4,"res"],[67,9,82,7],[67,10,82,8,"i"],[67,11,82,9],[67,13,82,11],[67,14,82,12],[67,17,82,15],[67,18,82,16],[68,6,83,4,"res"],[68,9,83,7],[68,10,83,8,"i"],[68,11,83,9],[68,13,83,11],[68,14,83,12],[68,17,83,15],[68,18,83,16],[69,6,84,4,"res"],[69,9,84,7],[69,10,84,8,"i"],[69,11,84,9],[69,13,84,11],[69,14,84,12],[69,17,84,15],[69,18,84,16],[70,6,85,4,"res"],[70,9,85,7],[70,10,85,8,"i"],[70,11,85,9],[70,13,85,11],[70,14,85,12],[70,17,85,15],[70,18,85,16],[71,6,87,4],[71,11,87,9,"t"],[71,12,87,10],[71,15,87,13],[71,16,87,14],[71,18,87,16,"t"],[71,19,87,17],[71,22,87,20],[71,26,87,24],[71,27,87,25,"padLength"],[71,36,87,34],[71,38,87,36,"t"],[71,39,87,37],[71,41,87,39],[71,43,88,6,"res"],[71,46,88,9],[71,47,88,10,"i"],[71,48,88,11],[71,50,88,13],[71,51,88,14],[71,54,88,17],[71,55,88,18],[72,4,89,2],[73,4,91,2],[73,11,91,9,"res"],[73,14,91,12],[74,2,92,0],[74,3,92,1],[75,0,92,2],[75,3]],"functionMap":{"names":["<global>","BlockHash","update","digest","pad"],"mappings":"AAA;ACK;CDW;6BEG;CFyB;6BGE;CHK;2BIE;CJsC"}},"type":"js/module"}]}