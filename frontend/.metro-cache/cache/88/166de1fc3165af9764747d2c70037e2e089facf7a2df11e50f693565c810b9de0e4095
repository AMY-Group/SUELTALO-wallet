{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n   * Masks a buffer using the given mask.\n   *\n   * @param {Buffer} source The buffer to mask\n   * @param {Buffer} mask The mask to use\n   * @param {Buffer} output The buffer where to store the result\n   * @param {Number} offset The offset at which to start writing\n   * @param {Number} length The number of bytes to mask.\n   * @public\n   */\n  const mask = (source, mask, output, offset, length) => {\n    for (var i = 0; i < length; i++) {\n      output[offset + i] = source[i] ^ mask[i & 3];\n    }\n  };\n\n  /**\n   * Unmasks a buffer using the given mask.\n   *\n   * @param {Buffer} buffer The buffer to unmask\n   * @param {Buffer} mask The mask to use\n   * @public\n   */\n  const unmask = (buffer, mask) => {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    const length = buffer.length;\n    for (var i = 0; i < length; i++) {\n      buffer[i] ^= mask[i & 3];\n    }\n  };\n  module.exports = {\n    mask,\n    unmask\n  };\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,2,13,0],[14,8,13,6,"mask"],[14,12,13,10],[14,15,13,13,"mask"],[14,16,13,14,"source"],[14,22,13,20],[14,24,13,22,"mask"],[14,28,13,26],[14,30,13,28,"output"],[14,36,13,34],[14,38,13,36,"offset"],[14,44,13,42],[14,46,13,44,"length"],[14,52,13,50],[14,57,13,55],[15,4,14,2],[15,9,14,7],[15,13,14,11,"i"],[15,14,14,12],[15,17,14,15],[15,18,14,16],[15,20,14,18,"i"],[15,21,14,19],[15,24,14,22,"length"],[15,30,14,28],[15,32,14,30,"i"],[15,33,14,31],[15,35,14,33],[15,37,14,35],[16,6,15,4,"output"],[16,12,15,10],[16,13,15,11,"offset"],[16,19,15,17],[16,22,15,20,"i"],[16,23,15,21],[16,24,15,22],[16,27,15,25,"source"],[16,33,15,31],[16,34,15,32,"i"],[16,35,15,33],[16,36,15,34],[16,39,15,37,"mask"],[16,43,15,41],[16,44,15,42,"i"],[16,45,15,43],[16,48,15,46],[16,49,15,47],[16,50,15,48],[17,4,16,2],[18,2,17,0],[18,3,17,1],[20,2,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,2,26,0],[27,8,26,6,"unmask"],[27,14,26,12],[27,17,26,15,"unmask"],[27,18,26,16,"buffer"],[27,24,26,22],[27,26,26,24,"mask"],[27,30,26,28],[27,35,26,33],[28,4,27,2],[29,4,28,2],[29,10,28,8,"length"],[29,16,28,14],[29,19,28,17,"buffer"],[29,25,28,23],[29,26,28,24,"length"],[29,32,28,30],[30,4,29,2],[30,9,29,7],[30,13,29,11,"i"],[30,14,29,12],[30,17,29,15],[30,18,29,16],[30,20,29,18,"i"],[30,21,29,19],[30,24,29,22,"length"],[30,30,29,28],[30,32,29,30,"i"],[30,33,29,31],[30,35,29,33],[30,37,29,35],[31,6,30,4,"buffer"],[31,12,30,10],[31,13,30,11,"i"],[31,14,30,12],[31,15,30,13],[31,19,30,17,"mask"],[31,23,30,21],[31,24,30,22,"i"],[31,25,30,23],[31,28,30,26],[31,29,30,27],[31,30,30,28],[32,4,31,2],[33,2,32,0],[33,3,32,1],[34,2,34,0,"module"],[34,8,34,6],[34,9,34,7,"exports"],[34,16,34,14],[34,19,34,17],[35,4,34,19,"mask"],[35,8,34,23],[36,4,34,25,"unmask"],[37,2,34,32],[37,3,34,33],[38,0,34,34],[38,3]],"functionMap":{"names":["<global>","mask","unmask"],"mappings":"AAA;aCY;CDI;eES;CFM"}},"type":"js/module"}]}