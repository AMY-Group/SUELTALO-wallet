{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./rng.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":27,"index":27}}],"key":"GJimBYuDDd6EeueloFHQJIiIo5Y=","exportNames":["*"]}},{"name":"./stringify.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":28},"end":{"line":2,"column":39,"index":67}}],"key":"X1ch7bs3UUIXmGFY4ypSSY/7qNo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _rng = _interopRequireDefault(require(_dependencyMap[1], \"./rng.js\"));\n  var _stringify = _interopRequireDefault(require(_dependencyMap[2], \"./stringify.js\"));\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  var _nodeId;\n  var _clockseq; // Previous uuid creation time\n\n  var _lastMSecs = 0;\n  var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || new Array(16);\n    options = options || {};\n    var node = options.node || _nodeId;\n    var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n    // specified.  We do this lazily to minimize issues related to insufficient\n    // system entropy.  See #189\n\n    if (node == null || clockseq == null) {\n      var seedBytes = options.random || (options.rng || _rng.default)();\n      if (node == null) {\n        // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n        node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n      }\n      if (clockseq == null) {\n        // Per 4.2.2, randomize (14 bit) clockseq\n        clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      }\n    } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n    var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n    if (nsecs >= 10000) {\n      throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n    msecs += 12219292800000; // `time_low`\n\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff; // `time_mid`\n\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff; // `time_high_and_version`\n\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n    b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n    b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n    b[i++] = clockseq & 0xff; // `node`\n\n    for (var n = 0; n < 6; ++n) {\n      b[i + n] = node[n];\n    }\n    return buf || (0, _stringify.default)(b);\n  }\n  var _default = exports.default = v1;\n});","lineCount":93,"map":[[7,2,1,0],[7,6,1,0,"_rng"],[7,10,1,0],[7,13,1,0,"_interopRequireDefault"],[7,35,1,0],[7,36,1,0,"require"],[7,43,1,0],[7,44,1,0,"_dependencyMap"],[7,58,1,0],[8,2,2,0],[8,6,2,0,"_stringify"],[8,16,2,0],[8,19,2,0,"_interopRequireDefault"],[8,41,2,0],[8,42,2,0,"require"],[8,49,2,0],[8,50,2,0,"_dependencyMap"],[8,64,2,0],[9,2,2,40],[10,2,3,0],[11,2,4,0],[12,2,5,0],[14,2,7,0],[14,6,7,4,"_nodeId"],[14,13,7,11],[15,2,9,0],[15,6,9,4,"_clockseq"],[15,15,9,13],[15,16,9,14],[15,17,9,15],[17,2,12,0],[17,6,12,4,"_lastMSecs"],[17,16,12,14],[17,19,12,17],[17,20,12,18],[18,2,13,0],[18,6,13,4,"_lastNSecs"],[18,16,13,14],[18,19,13,17],[18,20,13,18],[18,21,13,19],[18,22,13,20],[20,2,15,0],[20,11,15,9,"v1"],[20,13,15,11,"v1"],[20,14,15,12,"options"],[20,21,15,19],[20,23,15,21,"buf"],[20,26,15,24],[20,28,15,26,"offset"],[20,34,15,32],[20,36,15,34],[21,4,16,2],[21,8,16,6,"i"],[21,9,16,7],[21,12,16,10,"buf"],[21,15,16,13],[21,19,16,17,"offset"],[21,25,16,23],[21,29,16,27],[21,30,16,28],[22,4,17,2],[22,8,17,6,"b"],[22,9,17,7],[22,12,17,10,"buf"],[22,15,17,13],[22,19,17,17],[22,23,17,21,"Array"],[22,28,17,26],[22,29,17,27],[22,31,17,29],[22,32,17,30],[23,4,18,2,"options"],[23,11,18,9],[23,14,18,12,"options"],[23,21,18,19],[23,25,18,23],[23,26,18,24],[23,27,18,25],[24,4,19,2],[24,8,19,6,"node"],[24,12,19,10],[24,15,19,13,"options"],[24,22,19,20],[24,23,19,21,"node"],[24,27,19,25],[24,31,19,29,"_nodeId"],[24,38,19,36],[25,4,20,2],[25,8,20,6,"clockseq"],[25,16,20,14],[25,19,20,17,"options"],[25,26,20,24],[25,27,20,25,"clockseq"],[25,35,20,33],[25,40,20,38,"undefined"],[25,49,20,47],[25,52,20,50,"options"],[25,59,20,57],[25,60,20,58,"clockseq"],[25,68,20,66],[25,71,20,69,"_clockseq"],[25,80,20,78],[25,81,20,79],[25,82,20,80],[26,4,21,2],[27,4,22,2],[29,4,24,2],[29,8,24,6,"node"],[29,12,24,10],[29,16,24,14],[29,20,24,18],[29,24,24,22,"clockseq"],[29,32,24,30],[29,36,24,34],[29,40,24,38],[29,42,24,40],[30,6,25,4],[30,10,25,8,"seedBytes"],[30,19,25,17],[30,22,25,20,"options"],[30,29,25,27],[30,30,25,28,"random"],[30,36,25,34],[30,40,25,38],[30,41,25,39,"options"],[30,48,25,46],[30,49,25,47,"rng"],[30,52,25,50],[30,56,25,54,"rng"],[30,68,25,57],[30,70,25,59],[30,71,25,60],[31,6,27,4],[31,10,27,8,"node"],[31,14,27,12],[31,18,27,16],[31,22,27,20],[31,24,27,22],[32,8,28,6],[33,8,29,6,"node"],[33,12,29,10],[33,15,29,13,"_nodeId"],[33,22,29,20],[33,25,29,23],[33,26,29,24,"seedBytes"],[33,35,29,33],[33,36,29,34],[33,37,29,35],[33,38,29,36],[33,41,29,39],[33,45,29,43],[33,47,29,45,"seedBytes"],[33,56,29,54],[33,57,29,55],[33,58,29,56],[33,59,29,57],[33,61,29,59,"seedBytes"],[33,70,29,68],[33,71,29,69],[33,72,29,70],[33,73,29,71],[33,75,29,73,"seedBytes"],[33,84,29,82],[33,85,29,83],[33,86,29,84],[33,87,29,85],[33,89,29,87,"seedBytes"],[33,98,29,96],[33,99,29,97],[33,100,29,98],[33,101,29,99],[33,103,29,101,"seedBytes"],[33,112,29,110],[33,113,29,111],[33,114,29,112],[33,115,29,113],[33,116,29,114],[34,6,30,4],[35,6,32,4],[35,10,32,8,"clockseq"],[35,18,32,16],[35,22,32,20],[35,26,32,24],[35,28,32,26],[36,8,33,6],[37,8,34,6,"clockseq"],[37,16,34,14],[37,19,34,17,"_clockseq"],[37,28,34,26],[37,31,34,29],[37,32,34,30,"seedBytes"],[37,41,34,39],[37,42,34,40],[37,43,34,41],[37,44,34,42],[37,48,34,46],[37,49,34,47],[37,52,34,50,"seedBytes"],[37,61,34,59],[37,62,34,60],[37,63,34,61],[37,64,34,62],[37,68,34,66],[37,74,34,72],[38,6,35,4],[39,4,36,2],[39,5,36,3],[39,6,36,4],[40,4,37,2],[41,4,38,2],[42,4,39,2],[44,4,42,2],[44,8,42,6,"msecs"],[44,13,42,11],[44,16,42,14,"options"],[44,23,42,21],[44,24,42,22,"msecs"],[44,29,42,27],[44,34,42,32,"undefined"],[44,43,42,41],[44,46,42,44,"options"],[44,53,42,51],[44,54,42,52,"msecs"],[44,59,42,57],[44,62,42,60,"Date"],[44,66,42,64],[44,67,42,65,"now"],[44,70,42,68],[44,71,42,69],[44,72,42,70],[44,73,42,71],[44,74,42,72],[45,4,43,2],[47,4,45,2],[47,8,45,6,"nsecs"],[47,13,45,11],[47,16,45,14,"options"],[47,23,45,21],[47,24,45,22,"nsecs"],[47,29,45,27],[47,34,45,32,"undefined"],[47,43,45,41],[47,46,45,44,"options"],[47,53,45,51],[47,54,45,52,"nsecs"],[47,59,45,57],[47,62,45,60,"_lastNSecs"],[47,72,45,70],[47,75,45,73],[47,76,45,74],[47,77,45,75],[47,78,45,76],[49,4,47,2],[49,8,47,6,"dt"],[49,10,47,8],[49,13,47,11,"msecs"],[49,18,47,16],[49,21,47,19,"_lastMSecs"],[49,31,47,29],[49,34,47,32],[49,35,47,33,"nsecs"],[49,40,47,38],[49,43,47,41,"_lastNSecs"],[49,53,47,51],[49,57,47,55],[49,62,47,60],[49,63,47,61],[49,64,47,62],[51,4,49,2],[51,8,49,6,"dt"],[51,10,49,8],[51,13,49,11],[51,14,49,12],[51,18,49,16,"options"],[51,25,49,23],[51,26,49,24,"clockseq"],[51,34,49,32],[51,39,49,37,"undefined"],[51,48,49,46],[51,50,49,48],[52,6,50,4,"clockseq"],[52,14,50,12],[52,17,50,15,"clockseq"],[52,25,50,23],[52,28,50,26],[52,29,50,27],[52,32,50,30],[52,38,50,36],[53,4,51,2],[53,5,51,3],[53,6,51,4],[54,4,52,2],[56,4,55,2],[56,8,55,6],[56,9,55,7,"dt"],[56,11,55,9],[56,14,55,12],[56,15,55,13],[56,19,55,17,"msecs"],[56,24,55,22],[56,27,55,25,"_lastMSecs"],[56,37,55,35],[56,42,55,40,"options"],[56,49,55,47],[56,50,55,48,"nsecs"],[56,55,55,53],[56,60,55,58,"undefined"],[56,69,55,67],[56,71,55,69],[57,6,56,4,"nsecs"],[57,11,56,9],[57,14,56,12],[57,15,56,13],[58,4,57,2],[58,5,57,3],[58,6,57,4],[60,4,60,2],[60,8,60,6,"nsecs"],[60,13,60,11],[60,17,60,15],[60,22,60,20],[60,24,60,22],[61,6,61,4],[61,12,61,10],[61,16,61,14,"Error"],[61,21,61,19],[61,22,61,20],[61,71,61,69],[61,72,61,70],[62,4,62,2],[63,4,64,2,"_lastMSecs"],[63,14,64,12],[63,17,64,15,"msecs"],[63,22,64,20],[64,4,65,2,"_lastNSecs"],[64,14,65,12],[64,17,65,15,"nsecs"],[64,22,65,20],[65,4,66,2,"_clockseq"],[65,13,66,11],[65,16,66,14,"clockseq"],[65,24,66,22],[65,25,66,23],[65,26,66,24],[67,4,68,2,"msecs"],[67,9,68,7],[67,13,68,11],[67,27,68,25],[67,28,68,26],[67,29,68,27],[69,4,70,2],[69,8,70,6,"tl"],[69,10,70,8],[69,13,70,11],[69,14,70,12],[69,15,70,13,"msecs"],[69,20,70,18],[69,23,70,21],[69,32,70,30],[69,36,70,34],[69,41,70,39],[69,44,70,42,"nsecs"],[69,49,70,47],[69,53,70,51],[69,64,70,62],[70,4,71,2,"b"],[70,5,71,3],[70,6,71,4,"i"],[70,7,71,5],[70,9,71,7],[70,10,71,8],[70,13,71,11,"tl"],[70,15,71,13],[70,20,71,18],[70,22,71,20],[70,25,71,23],[70,29,71,27],[71,4,72,2,"b"],[71,5,72,3],[71,6,72,4,"i"],[71,7,72,5],[71,9,72,7],[71,10,72,8],[71,13,72,11,"tl"],[71,15,72,13],[71,20,72,18],[71,22,72,20],[71,25,72,23],[71,29,72,27],[72,4,73,2,"b"],[72,5,73,3],[72,6,73,4,"i"],[72,7,73,5],[72,9,73,7],[72,10,73,8],[72,13,73,11,"tl"],[72,15,73,13],[72,20,73,18],[72,21,73,19],[72,24,73,22],[72,28,73,26],[73,4,74,2,"b"],[73,5,74,3],[73,6,74,4,"i"],[73,7,74,5],[73,9,74,7],[73,10,74,8],[73,13,74,11,"tl"],[73,15,74,13],[73,18,74,16],[73,22,74,20],[73,23,74,21],[73,24,74,22],[75,4,76,2],[75,8,76,6,"tmh"],[75,11,76,9],[75,14,76,12,"msecs"],[75,19,76,17],[75,22,76,20],[75,33,76,31],[75,36,76,34],[75,41,76,39],[75,44,76,42],[75,53,76,51],[76,4,77,2,"b"],[76,5,77,3],[76,6,77,4,"i"],[76,7,77,5],[76,9,77,7],[76,10,77,8],[76,13,77,11,"tmh"],[76,16,77,14],[76,21,77,19],[76,22,77,20],[76,25,77,23],[76,29,77,27],[77,4,78,2,"b"],[77,5,78,3],[77,6,78,4,"i"],[77,7,78,5],[77,9,78,7],[77,10,78,8],[77,13,78,11,"tmh"],[77,16,78,14],[77,19,78,17],[77,23,78,21],[77,24,78,22],[77,25,78,23],[79,4,80,2,"b"],[79,5,80,3],[79,6,80,4,"i"],[79,7,80,5],[79,9,80,7],[79,10,80,8],[79,13,80,11,"tmh"],[79,16,80,14],[79,21,80,19],[79,23,80,21],[79,26,80,24],[79,29,80,27],[79,32,80,30],[79,36,80,34],[79,37,80,35],[79,38,80,36],[81,4,82,2,"b"],[81,5,82,3],[81,6,82,4,"i"],[81,7,82,5],[81,9,82,7],[81,10,82,8],[81,13,82,11,"tmh"],[81,16,82,14],[81,21,82,19],[81,23,82,21],[81,26,82,24],[81,30,82,28],[81,31,82,29],[81,32,82,30],[83,4,84,2,"b"],[83,5,84,3],[83,6,84,4,"i"],[83,7,84,5],[83,9,84,7],[83,10,84,8],[83,13,84,11,"clockseq"],[83,21,84,19],[83,26,84,24],[83,27,84,25],[83,30,84,28],[83,34,84,32],[83,35,84,33],[83,36,84,34],[85,4,86,2,"b"],[85,5,86,3],[85,6,86,4,"i"],[85,7,86,5],[85,9,86,7],[85,10,86,8],[85,13,86,11,"clockseq"],[85,21,86,19],[85,24,86,22],[85,28,86,26],[85,29,86,27],[85,30,86,28],[87,4,88,2],[87,9,88,7],[87,13,88,11,"n"],[87,14,88,12],[87,17,88,15],[87,18,88,16],[87,20,88,18,"n"],[87,21,88,19],[87,24,88,22],[87,25,88,23],[87,27,88,25],[87,29,88,27,"n"],[87,30,88,28],[87,32,88,30],[88,6,89,4,"b"],[88,7,89,5],[88,8,89,6,"i"],[88,9,89,7],[88,12,89,10,"n"],[88,13,89,11],[88,14,89,12],[88,17,89,15,"node"],[88,21,89,19],[88,22,89,20,"n"],[88,23,89,21],[88,24,89,22],[89,4,90,2],[90,4,92,2],[90,11,92,9,"buf"],[90,14,92,12],[90,18,92,16],[90,22,92,16,"stringify"],[90,40,92,25],[90,42,92,26,"b"],[90,43,92,27],[90,44,92,28],[91,2,93,0],[92,2,93,1],[92,6,93,1,"_default"],[92,14,93,1],[92,17,93,1,"exports"],[92,24,93,1],[92,25,93,1,"default"],[92,32,93,1],[92,35,95,15,"v1"],[92,37,95,17],[93,0,95,17],[93,3]],"functionMap":{"names":["<global>","v1"],"mappings":"AAA;ACc;CD8E"}},"type":"js/module"}]}