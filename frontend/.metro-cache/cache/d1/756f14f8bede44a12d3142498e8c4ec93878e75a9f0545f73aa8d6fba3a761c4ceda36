{"dependencies":[{"name":"fs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":9,"index":42},"end":{"line":5,"column":22,"index":55}}],"key":"/446D+0IZVMo9Qz4Ixqnyf8fty0=","exportNames":["*"]}},{"name":"path","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":9,"index":66},"end":{"line":6,"column":24,"index":81}}],"key":"sC7uOmzp0ncn/Io61vx77lEWh8A=","exportNames":["*"]}},{"name":"file-uri-to-path","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":101},"end":{"line":7,"column":45,"index":128}}],"key":"jnkYGm4QW+ceHj/fQ4potx+d5mM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Module dependencies.\n   */\n\n  var fs = require(_dependencyMap[0], \"fs\"),\n    path = require(_dependencyMap[1], \"path\"),\n    fileURLToPath = require(_dependencyMap[2], \"file-uri-to-path\"),\n    join = path.join,\n    dirname = path.dirname,\n    exists = fs.accessSync && function (path) {\n      try {\n        fs.accessSync(path);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    } || fs.existsSync || path.existsSync,\n    defaults = {\n      arrow: process.env.NODE_BINDINGS_ARROW || ' â†’ ',\n      compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n      platform: process.platform,\n      arch: process.arch,\n      nodePreGyp: 'node-v' + process.versions.modules + '-' + process.platform + '-' + process.arch,\n      version: process.versions.node,\n      bindings: 'bindings.node',\n      try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'], ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'], ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'], ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'], ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'], ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']]\n    };\n\n  /**\n   * The main `bindings()` function loads the compiled bindings for a given module.\n   * It uses V8's Error API to determine the parent filename that this function is\n   * being invoked from, which is then used to find the root directory.\n   */\n\n  function bindings(opts) {\n    // Argument surgery\n    if (typeof opts == 'string') {\n      opts = {\n        bindings: opts\n      };\n    } else if (!opts) {\n      opts = {};\n    }\n\n    // maps `defaults` onto `opts` object\n    Object.keys(defaults).map(function (i) {\n      if (!(i in opts)) opts[i] = defaults[i];\n    });\n\n    // Get the module root\n    if (!opts.module_root) {\n      opts.module_root = exports.getRoot(exports.getFileName());\n    }\n\n    // Ensure the given bindings name ends with .node\n    if (path.extname(opts.bindings) != '.node') {\n      opts.bindings += '.node';\n    }\n\n    // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n    var requireFunc = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require;\n    var tries = [],\n      i = 0,\n      l = opts.try.length,\n      n,\n      b,\n      err;\n    for (; i < l; i++) {\n      n = join.apply(null, opts.try[i].map(function (p) {\n        return opts[p] || p;\n      }));\n      tries.push(n);\n      try {\n        b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n        if (!opts.path) {\n          b.path = n;\n        }\n        return b;\n      } catch (e) {\n        if (e.code !== 'MODULE_NOT_FOUND' && e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' && !/not find/i.test(e.message)) {\n          throw e;\n        }\n      }\n    }\n    err = new Error('Could not locate the bindings file. Tried:\\n' + tries.map(function (a) {\n      return opts.arrow + a;\n    }).join('\\n'));\n    err.tries = tries;\n    throw err;\n  }\n  module.exports = exports = bindings;\n\n  /**\n   * Gets the filename of the JavaScript file that invokes this function.\n   * Used to help find the root directory of a module.\n   * Optionally accepts an filename argument to skip when searching for the invoking filename\n   */\n\n  exports.getFileName = function getFileName(calling_file) {\n    var origPST = Error.prepareStackTrace,\n      origSTL = Error.stackTraceLimit,\n      dummy = {},\n      fileName;\n    Error.stackTraceLimit = 10;\n    Error.prepareStackTrace = function (e, st) {\n      for (var i = 0, l = st.length; i < l; i++) {\n        fileName = st[i].getFileName();\n        if (fileName !== __filename) {\n          if (calling_file) {\n            if (fileName !== calling_file) {\n              return;\n            }\n          } else {\n            return;\n          }\n        }\n      }\n    };\n\n    // run the 'prepareStackTrace' function above\n    Error.captureStackTrace(dummy);\n    dummy.stack;\n\n    // cleanup\n    Error.prepareStackTrace = origPST;\n    Error.stackTraceLimit = origSTL;\n\n    // handle filename that starts with \"file://\"\n    var fileSchema = 'file://';\n    if (fileName.indexOf(fileSchema) === 0) {\n      fileName = fileURLToPath(fileName);\n    }\n    return fileName;\n  };\n\n  /**\n   * Gets the root directory of a module, given an arbitrary filename\n   * somewhere in the module tree. The \"root directory\" is the directory\n   * containing the `package.json` file.\n   *\n   *   In:  /home/nate/node-native-module/lib/index.js\n   *   Out: /home/nate/node-native-module\n   */\n\n  exports.getRoot = function getRoot(file) {\n    var dir = dirname(file),\n      prev;\n    while (true) {\n      if (dir === '.') {\n        // Avoids an infinite loop in rare cases, like the REPL\n        dir = process.cwd();\n      }\n      if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n        // Found the 'package.json' file or 'node_modules' dir; we're done\n        return dir;\n      }\n      if (prev === dir) {\n        // Got to the top\n        throw new Error('Could not find module root given file: \"' + file + '\". Do you have a `package.json` file? ');\n      }\n      // Try the parent dir next\n      prev = dir;\n      dir = join(dir, '..');\n    }\n  };\n});","lineCount":183,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[6,2,5,0],[6,6,5,4,"fs"],[6,8,5,6],[6,11,5,9,"require"],[6,18,5,16],[6,19,5,16,"_dependencyMap"],[6,33,5,16],[6,42,5,21],[6,43,5,22],[7,4,6,2,"path"],[7,8,6,6],[7,11,6,9,"require"],[7,18,6,16],[7,19,6,16,"_dependencyMap"],[7,33,6,16],[7,44,6,23],[7,45,6,24],[8,4,7,2,"fileURLToPath"],[8,17,7,15],[8,20,7,18,"require"],[8,27,7,25],[8,28,7,25,"_dependencyMap"],[8,42,7,25],[8,65,7,44],[8,66,7,45],[9,4,8,2,"join"],[9,8,8,6],[9,11,8,9,"path"],[9,15,8,13],[9,16,8,14,"join"],[9,20,8,18],[10,4,9,2,"dirname"],[10,11,9,9],[10,14,9,12,"path"],[10,18,9,16],[10,19,9,17,"dirname"],[10,26,9,24],[11,4,10,2,"exists"],[11,10,10,8],[11,13,11,5,"fs"],[11,15,11,7],[11,16,11,8,"accessSync"],[11,26,11,18],[11,30,12,6],[11,40,12,15,"path"],[11,44,12,19],[11,46,12,21],[12,6,13,8],[12,10,13,12],[13,8,14,10,"fs"],[13,10,14,12],[13,11,14,13,"accessSync"],[13,21,14,23],[13,22,14,24,"path"],[13,26,14,28],[13,27,14,29],[14,6,15,8],[14,7,15,9],[14,8,15,10],[14,15,15,17,"e"],[14,16,15,18],[14,18,15,20],[15,8,16,10],[15,15,16,17],[15,20,16,22],[16,6,17,8],[17,6,18,8],[17,13,18,15],[17,17,18,19],[18,4,19,6],[18,5,19,7],[18,9,20,4,"fs"],[18,11,20,6],[18,12,20,7,"existsSync"],[18,22,20,17],[18,26,21,4,"path"],[18,30,21,8],[18,31,21,9,"existsSync"],[18,41,21,19],[19,4,22,2,"defaults"],[19,12,22,10],[19,15,22,13],[20,6,23,4,"arrow"],[20,11,23,9],[20,13,23,11,"process"],[20,20,23,18],[20,21,23,19,"env"],[20,24,23,22],[20,25,23,23,"NODE_BINDINGS_ARROW"],[20,44,23,42],[20,48,23,46],[20,53,23,51],[21,6,24,4,"compiled"],[21,14,24,12],[21,16,24,14,"process"],[21,23,24,21],[21,24,24,22,"env"],[21,27,24,25],[21,28,24,26,"NODE_BINDINGS_COMPILED_DIR"],[21,54,24,52],[21,58,24,56],[21,68,24,66],[22,6,25,4,"platform"],[22,14,25,12],[22,16,25,14,"process"],[22,23,25,21],[22,24,25,22,"platform"],[22,32,25,30],[23,6,26,4,"arch"],[23,10,26,8],[23,12,26,10,"process"],[23,19,26,17],[23,20,26,18,"arch"],[23,24,26,22],[24,6,27,4,"nodePreGyp"],[24,16,27,14],[24,18,28,6],[24,26,28,14],[24,29,29,6,"process"],[24,36,29,13],[24,37,29,14,"versions"],[24,45,29,22],[24,46,29,23,"modules"],[24,53,29,30],[24,56,30,6],[24,59,30,9],[24,62,31,6,"process"],[24,69,31,13],[24,70,31,14,"platform"],[24,78,31,22],[24,81,32,6],[24,84,32,9],[24,87,33,6,"process"],[24,94,33,13],[24,95,33,14,"arch"],[24,99,33,18],[25,6,34,4,"version"],[25,13,34,11],[25,15,34,13,"process"],[25,22,34,20],[25,23,34,21,"versions"],[25,31,34,29],[25,32,34,30,"node"],[25,36,34,34],[26,6,35,4,"bindings"],[26,14,35,12],[26,16,35,14],[26,31,35,29],[27,6,36,4,"try"],[27,9,36,7],[27,11,36,9],[28,6,37,6],[29,6,38,6],[29,7,38,7],[29,20,38,20],[29,22,38,22],[29,29,38,29],[29,31,38,31],[29,41,38,41],[29,42,38,42],[30,6,39,6],[31,6,40,6],[31,7,40,7],[31,20,40,20],[31,22,40,22],[31,29,40,29],[31,31,40,31],[31,38,40,38],[31,40,40,40],[31,50,40,50],[31,51,40,51],[31,53,41,6],[31,54,41,7],[31,67,41,20],[31,69,41,22],[31,76,41,29],[31,78,41,31],[31,87,41,40],[31,89,41,42],[31,99,41,52],[31,100,41,53],[32,6,42,6],[33,6,43,6],[33,7,43,7],[33,20,43,20],[33,22,43,22],[33,27,43,27],[33,29,43,29],[33,36,43,36],[33,38,43,38],[33,48,43,48],[33,49,43,49],[33,51,44,6],[33,52,44,7],[33,65,44,20],[33,67,44,22],[33,74,44,29],[33,76,44,31],[33,86,44,41],[33,87,44,42],[34,6,45,6],[35,6,46,6],[35,7,46,7],[35,20,46,20],[35,22,46,22],[35,27,46,27],[35,29,46,29],[35,38,46,38],[35,40,46,40],[35,50,46,50],[35,51,46,51],[35,53,47,6],[35,54,47,7],[35,67,47,20],[35,69,47,22],[35,78,47,31],[35,80,47,33],[35,90,47,43],[35,91,47,44],[36,6,48,6],[37,6,49,6],[37,7,49,7],[37,20,49,20],[37,22,49,22],[37,29,49,29],[37,31,49,31],[37,40,49,40],[37,42,49,42],[37,52,49,52],[37,53,49,53],[38,6,50,6],[39,6,51,6],[39,7,51,7],[39,20,51,20],[39,22,51,22],[39,32,51,32],[39,34,51,34],[39,43,51,43],[39,45,51,45],[39,55,51,55],[39,57,51,57],[39,63,51,63],[39,65,51,65],[39,75,51,75],[39,76,51,76],[40,6,52,6],[41,6,53,6],[41,7,53,7],[41,20,53,20],[41,22,53,22],[41,35,53,35],[41,37,53,37],[41,46,53,46],[41,48,53,48],[41,62,53,62],[41,64,53,64],[41,74,53,74],[41,75,53,75],[41,77,54,6],[41,78,54,7],[41,91,54,20],[41,93,54,22],[41,106,54,35],[41,108,54,37],[41,115,54,44],[41,117,54,46],[41,131,54,60],[41,133,54,62],[41,143,54,72],[41,144,54,73],[41,146,55,6],[41,147,55,7],[41,160,55,20],[41,162,55,22],[41,175,55,35],[41,177,55,37],[41,186,55,46],[41,188,55,48],[41,202,55,62],[41,204,55,64],[41,214,55,74],[41,215,55,75],[42,6,56,6],[43,6,57,6],[43,7,57,7],[43,20,57,20],[43,22,57,22],[43,27,57,27],[43,29,57,29],[43,38,57,38],[43,40,57,40],[43,52,57,52],[43,54,57,54],[43,64,57,64],[43,65,57,65],[44,4,59,2],[44,5,59,3],[46,2,61,0],[47,0,62,0],[48,0,63,0],[49,0,64,0],[50,0,65,0],[52,2,67,0],[52,11,67,9,"bindings"],[52,19,67,17,"bindings"],[52,20,67,18,"opts"],[52,24,67,22],[52,26,67,24],[53,4,68,2],[54,4,69,2],[54,8,69,6],[54,15,69,13,"opts"],[54,19,69,17],[54,23,69,21],[54,31,69,29],[54,33,69,31],[55,6,70,4,"opts"],[55,10,70,8],[55,13,70,11],[56,8,70,13,"bindings"],[56,16,70,21],[56,18,70,23,"opts"],[57,6,70,28],[57,7,70,29],[58,4,71,2],[58,5,71,3],[58,11,71,9],[58,15,71,13],[58,16,71,14,"opts"],[58,20,71,18],[58,22,71,20],[59,6,72,4,"opts"],[59,10,72,8],[59,13,72,11],[59,14,72,12],[59,15,72,13],[60,4,73,2],[62,4,75,2],[63,4,76,2,"Object"],[63,10,76,8],[63,11,76,9,"keys"],[63,15,76,13],[63,16,76,14,"defaults"],[63,24,76,22],[63,25,76,23],[63,26,76,24,"map"],[63,29,76,27],[63,30,76,28],[63,40,76,37,"i"],[63,41,76,38],[63,43,76,40],[64,6,77,4],[64,10,77,8],[64,12,77,10,"i"],[64,13,77,11],[64,17,77,15,"opts"],[64,21,77,19],[64,22,77,20],[64,24,77,22,"opts"],[64,28,77,26],[64,29,77,27,"i"],[64,30,77,28],[64,31,77,29],[64,34,77,32,"defaults"],[64,42,77,40],[64,43,77,41,"i"],[64,44,77,42],[64,45,77,43],[65,4,78,2],[65,5,78,3],[65,6,78,4],[67,4,80,2],[68,4,81,2],[68,8,81,6],[68,9,81,7,"opts"],[68,13,81,11],[68,14,81,12,"module_root"],[68,25,81,23],[68,27,81,25],[69,6,82,4,"opts"],[69,10,82,8],[69,11,82,9,"module_root"],[69,22,82,20],[69,25,82,23,"exports"],[69,32,82,30],[69,33,82,31,"getRoot"],[69,40,82,38],[69,41,82,39,"exports"],[69,48,82,46],[69,49,82,47,"getFileName"],[69,60,82,58],[69,61,82,59],[69,62,82,60],[69,63,82,61],[70,4,83,2],[72,4,85,2],[73,4,86,2],[73,8,86,6,"path"],[73,12,86,10],[73,13,86,11,"extname"],[73,20,86,18],[73,21,86,19,"opts"],[73,25,86,23],[73,26,86,24,"bindings"],[73,34,86,32],[73,35,86,33],[73,39,86,37],[73,46,86,44],[73,48,86,46],[74,6,87,4,"opts"],[74,10,87,8],[74,11,87,9,"bindings"],[74,19,87,17],[74,23,87,21],[74,30,87,28],[75,4,88,2],[77,4,90,2],[78,4,91,2],[78,8,91,6,"requireFunc"],[78,19,91,17],[78,22,92,4],[78,29,92,11,"__webpack_require__"],[78,48,92,30],[78,53,92,35],[78,63,92,45],[78,66,93,8,"__non_webpack_require__"],[78,89,93,31],[78,92,94,8,"require"],[78,99,94,15],[79,4,96,2],[79,8,96,6,"tries"],[79,13,96,11],[79,16,96,14],[79,18,96,16],[80,6,97,4,"i"],[80,7,97,5],[80,10,97,8],[80,11,97,9],[81,6,98,4,"l"],[81,7,98,5],[81,10,98,8,"opts"],[81,14,98,12],[81,15,98,13,"try"],[81,18,98,16],[81,19,98,17,"length"],[81,25,98,23],[82,6,99,4,"n"],[82,7,99,5],[83,6,100,4,"b"],[83,7,100,5],[84,6,101,4,"err"],[84,9,101,7],[85,4,103,2],[85,11,103,9,"i"],[85,12,103,10],[85,15,103,13,"l"],[85,16,103,14],[85,18,103,16,"i"],[85,19,103,17],[85,21,103,19],[85,23,103,21],[86,6,104,4,"n"],[86,7,104,5],[86,10,104,8,"join"],[86,14,104,12],[86,15,104,13,"apply"],[86,20,104,18],[86,21,105,6],[86,25,105,10],[86,27,106,6,"opts"],[86,31,106,10],[86,32,106,11,"try"],[86,35,106,14],[86,36,106,15,"i"],[86,37,106,16],[86,38,106,17],[86,39,106,18,"map"],[86,42,106,21],[86,43,106,22],[86,53,106,31,"p"],[86,54,106,32],[86,56,106,34],[87,8,107,8],[87,15,107,15,"opts"],[87,19,107,19],[87,20,107,20,"p"],[87,21,107,21],[87,22,107,22],[87,26,107,26,"p"],[87,27,107,27],[88,6,108,6],[88,7,108,7],[88,8,109,4],[88,9,109,5],[89,6,110,4,"tries"],[89,11,110,9],[89,12,110,10,"push"],[89,16,110,14],[89,17,110,15,"n"],[89,18,110,16],[89,19,110,17],[90,6,111,4],[90,10,111,8],[91,8,112,6,"b"],[91,9,112,7],[91,12,112,10,"opts"],[91,16,112,14],[91,17,112,15,"path"],[91,21,112,19],[91,24,112,22,"requireFunc"],[91,35,112,33],[91,36,112,34,"resolve"],[91,43,112,41],[91,44,112,42,"n"],[91,45,112,43],[91,46,112,44],[91,49,112,47,"requireFunc"],[91,60,112,58],[91,61,112,59,"n"],[91,62,112,60],[91,63,112,61],[92,8,113,6],[92,12,113,10],[92,13,113,11,"opts"],[92,17,113,15],[92,18,113,16,"path"],[92,22,113,20],[92,24,113,22],[93,10,114,8,"b"],[93,11,114,9],[93,12,114,10,"path"],[93,16,114,14],[93,19,114,17,"n"],[93,20,114,18],[94,8,115,6],[95,8,116,6],[95,15,116,13,"b"],[95,16,116,14],[96,6,117,4],[96,7,117,5],[96,8,117,6],[96,15,117,13,"e"],[96,16,117,14],[96,18,117,16],[97,8,118,6],[97,12,118,10,"e"],[97,13,118,11],[97,14,118,12,"code"],[97,18,118,16],[97,23,118,21],[97,41,118,39],[97,45,119,10,"e"],[97,46,119,11],[97,47,119,12,"code"],[97,51,119,16],[97,56,119,21],[97,90,119,55],[97,94,120,10],[97,95,120,11],[97,106,120,22],[97,107,120,23,"test"],[97,111,120,27],[97,112,120,28,"e"],[97,113,120,29],[97,114,120,30,"message"],[97,121,120,37],[97,122,120,38],[97,124,120,40],[98,10,121,8],[98,16,121,14,"e"],[98,17,121,15],[99,8,122,6],[100,6,123,4],[101,4,124,2],[102,4,126,2,"err"],[102,7,126,5],[102,10,126,8],[102,14,126,12,"Error"],[102,19,126,17],[102,20,127,4],[102,66,127,50],[102,69,128,6,"tries"],[102,74,128,11],[102,75,129,9,"map"],[102,78,129,12],[102,79,129,13],[102,89,129,22,"a"],[102,90,129,23],[102,92,129,25],[103,6,130,10],[103,13,130,17,"opts"],[103,17,130,21],[103,18,130,22,"arrow"],[103,23,130,27],[103,26,130,30,"a"],[103,27,130,31],[104,4,131,8],[104,5,131,9],[104,6,131,10],[104,7,132,9,"join"],[104,11,132,13],[104,12,132,14],[104,16,132,18],[104,17,133,2],[104,18,133,3],[105,4,134,2,"err"],[105,7,134,5],[105,8,134,6,"tries"],[105,13,134,11],[105,16,134,14,"tries"],[105,21,134,19],[106,4,135,2],[106,10,135,8,"err"],[106,13,135,11],[107,2,136,0],[108,2,137,0,"module"],[108,8,137,6],[108,9,137,7,"exports"],[108,16,137,14],[108,19,137,17,"exports"],[108,26,137,24],[108,29,137,27,"bindings"],[108,37,137,35],[110,2,139,0],[111,0,140,0],[112,0,141,0],[113,0,142,0],[114,0,143,0],[116,2,145,0,"exports"],[116,9,145,7],[116,10,145,8,"getFileName"],[116,21,145,19],[116,24,145,22],[116,33,145,31,"getFileName"],[116,44,145,42,"getFileName"],[116,45,145,43,"calling_file"],[116,57,145,55],[116,59,145,57],[117,4,146,2],[117,8,146,6,"origPST"],[117,15,146,13],[117,18,146,16,"Error"],[117,23,146,21],[117,24,146,22,"prepareStackTrace"],[117,41,146,39],[118,6,147,4,"origSTL"],[118,13,147,11],[118,16,147,14,"Error"],[118,21,147,19],[118,22,147,20,"stackTraceLimit"],[118,37,147,35],[119,6,148,4,"dummy"],[119,11,148,9],[119,14,148,12],[119,15,148,13],[119,16,148,14],[120,6,149,4,"fileName"],[120,14,149,12],[121,4,151,2,"Error"],[121,9,151,7],[121,10,151,8,"stackTraceLimit"],[121,25,151,23],[121,28,151,26],[121,30,151,28],[122,4,153,2,"Error"],[122,9,153,7],[122,10,153,8,"prepareStackTrace"],[122,27,153,25],[122,30,153,28],[122,40,153,37,"e"],[122,41,153,38],[122,43,153,40,"st"],[122,45,153,42],[122,47,153,44],[123,6,154,4],[123,11,154,9],[123,15,154,13,"i"],[123,16,154,14],[123,19,154,17],[123,20,154,18],[123,22,154,20,"l"],[123,23,154,21],[123,26,154,24,"st"],[123,28,154,26],[123,29,154,27,"length"],[123,35,154,33],[123,37,154,35,"i"],[123,38,154,36],[123,41,154,39,"l"],[123,42,154,40],[123,44,154,42,"i"],[123,45,154,43],[123,47,154,45],[123,49,154,47],[124,8,155,6,"fileName"],[124,16,155,14],[124,19,155,17,"st"],[124,21,155,19],[124,22,155,20,"i"],[124,23,155,21],[124,24,155,22],[124,25,155,23,"getFileName"],[124,36,155,34],[124,37,155,35],[124,38,155,36],[125,8,156,6],[125,12,156,10,"fileName"],[125,20,156,18],[125,25,156,23,"__filename"],[125,35,156,33],[125,37,156,35],[126,10,157,8],[126,14,157,12,"calling_file"],[126,26,157,24],[126,28,157,26],[127,12,158,10],[127,16,158,14,"fileName"],[127,24,158,22],[127,29,158,27,"calling_file"],[127,41,158,39],[127,43,158,41],[128,14,159,12],[129,12,160,10],[130,10,161,8],[130,11,161,9],[130,17,161,15],[131,12,162,10],[132,10,163,8],[133,8,164,6],[134,6,165,4],[135,4,166,2],[135,5,166,3],[137,4,168,2],[138,4,169,2,"Error"],[138,9,169,7],[138,10,169,8,"captureStackTrace"],[138,27,169,25],[138,28,169,26,"dummy"],[138,33,169,31],[138,34,169,32],[139,4,170,2,"dummy"],[139,9,170,7],[139,10,170,8,"stack"],[139,15,170,13],[141,4,172,2],[142,4,173,2,"Error"],[142,9,173,7],[142,10,173,8,"prepareStackTrace"],[142,27,173,25],[142,30,173,28,"origPST"],[142,37,173,35],[143,4,174,2,"Error"],[143,9,174,7],[143,10,174,8,"stackTraceLimit"],[143,25,174,23],[143,28,174,26,"origSTL"],[143,35,174,33],[145,4,176,2],[146,4,177,2],[146,8,177,6,"fileSchema"],[146,18,177,16],[146,21,177,19],[146,30,177,28],[147,4,178,2],[147,8,178,6,"fileName"],[147,16,178,14],[147,17,178,15,"indexOf"],[147,24,178,22],[147,25,178,23,"fileSchema"],[147,35,178,33],[147,36,178,34],[147,41,178,39],[147,42,178,40],[147,44,178,42],[148,6,179,4,"fileName"],[148,14,179,12],[148,17,179,15,"fileURLToPath"],[148,30,179,28],[148,31,179,29,"fileName"],[148,39,179,37],[148,40,179,38],[149,4,180,2],[150,4,182,2],[150,11,182,9,"fileName"],[150,19,182,17],[151,2,183,0],[151,3,183,1],[153,2,185,0],[154,0,186,0],[155,0,187,0],[156,0,188,0],[157,0,189,0],[158,0,190,0],[159,0,191,0],[160,0,192,0],[162,2,194,0,"exports"],[162,9,194,7],[162,10,194,8,"getRoot"],[162,17,194,15],[162,20,194,18],[162,29,194,27,"getRoot"],[162,36,194,34,"getRoot"],[162,37,194,35,"file"],[162,41,194,39],[162,43,194,41],[163,4,195,2],[163,8,195,6,"dir"],[163,11,195,9],[163,14,195,12,"dirname"],[163,21,195,19],[163,22,195,20,"file"],[163,26,195,24],[163,27,195,25],[164,6,196,4,"prev"],[164,10,196,8],[165,4,197,2],[165,11,197,9],[165,15,197,13],[165,17,197,15],[166,6,198,4],[166,10,198,8,"dir"],[166,13,198,11],[166,18,198,16],[166,21,198,19],[166,23,198,21],[167,8,199,6],[168,8,200,6,"dir"],[168,11,200,9],[168,14,200,12,"process"],[168,21,200,19],[168,22,200,20,"cwd"],[168,25,200,23],[168,26,200,24],[168,27,200,25],[169,6,201,4],[170,6,202,4],[170,10,203,6,"exists"],[170,16,203,12],[170,17,203,13,"join"],[170,21,203,17],[170,22,203,18,"dir"],[170,25,203,21],[170,27,203,23],[170,41,203,37],[170,42,203,38],[170,43,203,39],[170,47,204,6,"exists"],[170,53,204,12],[170,54,204,13,"join"],[170,58,204,17],[170,59,204,18,"dir"],[170,62,204,21],[170,64,204,23],[170,78,204,37],[170,79,204,38],[170,80,204,39],[170,82,205,6],[171,8,206,6],[172,8,207,6],[172,15,207,13,"dir"],[172,18,207,16],[173,6,208,4],[174,6,209,4],[174,10,209,8,"prev"],[174,14,209,12],[174,19,209,17,"dir"],[174,22,209,20],[174,24,209,22],[175,8,210,6],[176,8,211,6],[176,14,211,12],[176,18,211,16,"Error"],[176,23,211,21],[176,24,212,8],[176,66,212,50],[176,69,213,10,"file"],[176,73,213,14],[176,76,214,10],[176,116,215,6],[176,117,215,7],[177,6,216,4],[178,6,217,4],[179,6,218,4,"prev"],[179,10,218,8],[179,13,218,11,"dir"],[179,16,218,14],[180,6,219,4,"dir"],[180,9,219,7],[180,12,219,10,"join"],[180,16,219,14],[180,17,219,15,"dir"],[180,20,219,18],[180,22,219,20],[180,26,219,24],[180,27,219,25],[181,4,220,2],[182,2,221,0],[182,3,221,1],[183,0,221,2],[183,3]],"functionMap":{"names":["<global>","<anonymous>","bindings","Object.keys.map$argument_0","opts._try.i.map$argument_0","tries.map$argument_0","getFileName","Error.prepareStackTrace","getRoot"],"mappings":"AAA;MCW;ODO;AEgD;4BCS;GDE;sBE4B;OFE;aGqB;SHE;CFK;sBMS;4BCQ;GDa;CNiB;kBQW;CR2B"}},"type":"js/module"}]}