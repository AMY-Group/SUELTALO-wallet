{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":69,"index":123}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":124},"end":{"line":3,"column":49,"index":173}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WalletService = void 0;\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[2], \"@react-native-async-storage/async-storage\"));\n  var SecureStore = _interopRequireWildcard(require(_dependencyMap[3], \"expo-secure-store\"));\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  // Simple word list for mnemonic generation (subset of BIP39)\n  const WORD_LIST = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'against', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arcade', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'article', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis'];\n  class WalletService {\n    static WALLET_KEY = '@wallet_data';\n    static SEED_PHRASE_KEY = '@secure_seed_phrase';\n    static generateSecureRandom(length) {\n      // Use crypto.getRandomValues if available (in secure contexts)\n      if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n        const array = new Uint8Array(length);\n        crypto.getRandomValues(array);\n        return array;\n      }\n\n      // Fallback to Math.random (not cryptographically secure, but works for demo)\n      const array = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        array[i] = Math.floor(Math.random() * 256);\n      }\n      return array;\n    }\n    static generateMnemonic() {\n      const entropy = this.generateSecureRandom(16); // 128 bits\n      const words = [];\n\n      // Simple conversion of entropy to words (simplified BIP39)\n      for (let i = 0; i < 12; i++) {\n        const index = (entropy[i] + entropy[(i + 1) % 16] * 256) % WORD_LIST.length;\n        words.push(WORD_LIST[index]);\n      }\n      return words.join(' ');\n    }\n    static mnemonicToSeed(mnemonic) {\n      // Simple seed derivation (not BIP39 compliant, but works for demo)\n      const words = mnemonic.split(' ');\n      const seed = new Uint8Array(32);\n      for (let i = 0; i < 32; i++) {\n        const wordIndex = i % words.length;\n        const word = words[wordIndex];\n        let hash = 0;\n        for (let j = 0; j < word.length; j++) {\n          hash = (hash << 5) - hash + word.charCodeAt(j) & 0xffffffff;\n        }\n        seed[i] = Math.abs(hash) % 256;\n      }\n      return seed;\n    }\n    static validateMnemonic(mnemonic) {\n      const words = mnemonic.trim().split(/\\s+/);\n      if (words.length < 12 || words.length > 24) return false;\n\n      // Check if all words are in our word list\n      return words.every(word => WORD_LIST.includes(word.toLowerCase()));\n    }\n    static async generateNewWallet() {\n      try {\n        // Generate mnemonic phrase\n        const mnemonic = this.generateMnemonic();\n\n        // Create seed from mnemonic\n        const seed = this.mnemonicToSeed(mnemonic);\n\n        // Generate keypair from seed\n        const keypair = _web.Keypair.fromSeed(seed);\n        const walletData = {\n          mnemonic,\n          publicKey: keypair.publicKey.toString(),\n          secretKey: Array.from(keypair.secretKey)\n        };\n\n        // Store wallet data\n        await _asyncStorage.default.setItem(this.WALLET_KEY, JSON.stringify(walletData));\n\n        // Store mnemonic securely\n        await SecureStore.setItemAsync(this.SEED_PHRASE_KEY, mnemonic);\n        return {\n          keypair,\n          mnemonic,\n          publicKey: keypair.publicKey.toString()\n        };\n      } catch (error) {\n        console.error('Wallet generation error:', error);\n        throw new Error(`Wallet generation failed: ${error}`);\n      }\n    }\n    static async restoreWalletFromMnemonic(mnemonic) {\n      try {\n        // Validate mnemonic\n        if (!this.validateMnemonic(mnemonic)) {\n          throw new Error('Invalid mnemonic phrase');\n        }\n\n        // Create seed from mnemonic\n        const seed = this.mnemonicToSeed(mnemonic);\n\n        // Generate keypair from seed\n        const keypair = _web.Keypair.fromSeed(seed);\n        const walletData = {\n          mnemonic,\n          publicKey: keypair.publicKey.toString(),\n          secretKey: Array.from(keypair.secretKey)\n        };\n\n        // Store wallet data\n        await _asyncStorage.default.setItem(this.WALLET_KEY, JSON.stringify(walletData));\n\n        // Store mnemonic securely\n        await SecureStore.setItemAsync(this.SEED_PHRASE_KEY, mnemonic);\n        return {\n          keypair,\n          mnemonic,\n          publicKey: keypair.publicKey.toString()\n        };\n      } catch (error) {\n        console.error('Wallet restoration error:', error);\n        throw new Error(`Wallet restoration failed: ${error}`);\n      }\n    }\n    static async loadStoredWallet() {\n      try {\n        const storedData = await _asyncStorage.default.getItem(this.WALLET_KEY);\n        if (!storedData) return null;\n        const walletData = JSON.parse(storedData);\n        const secretKey = new Uint8Array(walletData.secretKey);\n        return _web.Keypair.fromSecretKey(secretKey);\n      } catch (error) {\n        console.error('Failed to load stored wallet:', error);\n        return null;\n      }\n    }\n    static async getStoredWalletData() {\n      try {\n        const storedData = await _asyncStorage.default.getItem(this.WALLET_KEY);\n        return storedData ? JSON.parse(storedData) : null;\n      } catch (error) {\n        console.error('Failed to get wallet data:', error);\n        return null;\n      }\n    }\n    static async clearWallet() {\n      try {\n        await _asyncStorage.default.removeItem(this.WALLET_KEY);\n        await SecureStore.deleteItemAsync(this.SEED_PHRASE_KEY);\n      } catch (error) {\n        console.error('Failed to clear wallet:', error);\n        throw error;\n      }\n    }\n    static validatePublicKey(publicKey) {\n      try {\n        new _web.PublicKey(publicKey);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n    static async getSeedPhrase() {\n      try {\n        return await SecureStore.getItemAsync(this.SEED_PHRASE_KEY);\n      } catch (error) {\n        console.error('Failed to get seed phrase:', error);\n        return null;\n      }\n    }\n  }\n  exports.WalletService = WalletService;\n});","lineCount":176,"map":[[7,2,1,0],[7,6,1,0,"_web"],[7,10,1,0],[7,13,1,0,"require"],[7,20,1,0],[7,21,1,0,"_dependencyMap"],[7,35,1,0],[8,2,2,0],[8,6,2,0,"_asyncStorage"],[8,19,2,0],[8,22,2,0,"_interopRequireDefault"],[8,44,2,0],[8,45,2,0,"require"],[8,52,2,0],[8,53,2,0,"_dependencyMap"],[8,67,2,0],[9,2,3,0],[9,6,3,0,"SecureStore"],[9,17,3,0],[9,20,3,0,"_interopRequireWildcard"],[9,43,3,0],[9,44,3,0,"require"],[9,51,3,0],[9,52,3,0,"_dependencyMap"],[9,66,3,0],[10,2,3,49],[10,11,3,49,"_interopRequireWildcard"],[10,35,3,49,"e"],[10,36,3,49],[10,38,3,49,"t"],[10,39,3,49],[10,68,3,49,"WeakMap"],[10,75,3,49],[10,81,3,49,"r"],[10,82,3,49],[10,89,3,49,"WeakMap"],[10,96,3,49],[10,100,3,49,"n"],[10,101,3,49],[10,108,3,49,"WeakMap"],[10,115,3,49],[10,127,3,49,"_interopRequireWildcard"],[10,150,3,49],[10,162,3,49,"_interopRequireWildcard"],[10,163,3,49,"e"],[10,164,3,49],[10,166,3,49,"t"],[10,167,3,49],[10,176,3,49,"t"],[10,177,3,49],[10,181,3,49,"e"],[10,182,3,49],[10,186,3,49,"e"],[10,187,3,49],[10,188,3,49,"__esModule"],[10,198,3,49],[10,207,3,49,"e"],[10,208,3,49],[10,214,3,49,"o"],[10,215,3,49],[10,217,3,49,"i"],[10,218,3,49],[10,220,3,49,"f"],[10,221,3,49],[10,226,3,49,"__proto__"],[10,235,3,49],[10,243,3,49,"default"],[10,250,3,49],[10,252,3,49,"e"],[10,253,3,49],[10,270,3,49,"e"],[10,271,3,49],[10,294,3,49,"e"],[10,295,3,49],[10,320,3,49,"e"],[10,321,3,49],[10,330,3,49,"f"],[10,331,3,49],[10,337,3,49,"o"],[10,338,3,49],[10,341,3,49,"t"],[10,342,3,49],[10,345,3,49,"n"],[10,346,3,49],[10,349,3,49,"r"],[10,350,3,49],[10,358,3,49,"o"],[10,359,3,49],[10,360,3,49,"has"],[10,363,3,49],[10,364,3,49,"e"],[10,365,3,49],[10,375,3,49,"o"],[10,376,3,49],[10,377,3,49,"get"],[10,380,3,49],[10,381,3,49,"e"],[10,382,3,49],[10,385,3,49,"o"],[10,386,3,49],[10,387,3,49,"set"],[10,390,3,49],[10,391,3,49,"e"],[10,392,3,49],[10,394,3,49,"f"],[10,395,3,49],[10,411,3,49,"t"],[10,412,3,49],[10,416,3,49,"e"],[10,417,3,49],[10,433,3,49,"t"],[10,434,3,49],[10,441,3,49,"hasOwnProperty"],[10,455,3,49],[10,456,3,49,"call"],[10,460,3,49],[10,461,3,49,"e"],[10,462,3,49],[10,464,3,49,"t"],[10,465,3,49],[10,472,3,49,"i"],[10,473,3,49],[10,477,3,49,"o"],[10,478,3,49],[10,481,3,49,"Object"],[10,487,3,49],[10,488,3,49,"defineProperty"],[10,502,3,49],[10,507,3,49,"Object"],[10,513,3,49],[10,514,3,49,"getOwnPropertyDescriptor"],[10,538,3,49],[10,539,3,49,"e"],[10,540,3,49],[10,542,3,49,"t"],[10,543,3,49],[10,550,3,49,"i"],[10,551,3,49],[10,552,3,49,"get"],[10,555,3,49],[10,559,3,49,"i"],[10,560,3,49],[10,561,3,49,"set"],[10,564,3,49],[10,568,3,49,"o"],[10,569,3,49],[10,570,3,49,"f"],[10,571,3,49],[10,573,3,49,"t"],[10,574,3,49],[10,576,3,49,"i"],[10,577,3,49],[10,581,3,49,"f"],[10,582,3,49],[10,583,3,49,"t"],[10,584,3,49],[10,588,3,49,"e"],[10,589,3,49],[10,590,3,49,"t"],[10,591,3,49],[10,602,3,49,"f"],[10,603,3,49],[10,608,3,49,"e"],[10,609,3,49],[10,611,3,49,"t"],[10,612,3,49],[11,2,11,0],[12,2,12,0],[12,8,12,6,"WORD_LIST"],[12,17,12,15],[12,20,12,18],[12,21,13,2],[12,30,13,11],[12,32,13,13],[12,41,13,22],[12,43,13,24],[12,49,13,30],[12,51,13,32],[12,58,13,39],[12,60,13,41],[12,67,13,48],[12,69,13,50],[12,77,13,58],[12,79,13,60],[12,87,13,68],[12,89,13,70],[12,99,13,80],[12,101,13,82],[12,109,13,90],[12,111,13,92],[12,118,13,99],[12,120,14,2],[12,128,14,10],[12,130,14,12],[12,140,14,22],[12,142,14,24],[12,151,14,33],[12,153,14,35],[12,161,14,43],[12,163,14,45],[12,172,14,54],[12,174,14,56],[12,180,14,62],[12,182,14,64],[12,192,14,74],[12,194,14,76],[12,203,14,85],[12,205,14,87],[12,213,14,95],[12,215,14,97],[12,220,14,102],[12,222,15,2],[12,230,15,10],[12,232,15,12],[12,239,15,19],[12,241,15,21],[12,250,15,30],[12,252,15,32],[12,260,15,40],[12,262,15,42],[12,269,15,49],[12,271,15,51],[12,276,15,56],[12,278,15,58],[12,286,15,66],[12,288,15,68],[12,297,15,77],[12,299,15,79],[12,307,15,87],[12,309,15,89],[12,316,15,96],[12,318,16,2],[12,325,16,9],[12,327,16,11],[12,336,16,20],[12,338,16,22],[12,346,16,30],[12,348,16,32],[12,357,16,41],[12,359,16,43],[12,367,16,51],[12,369,16,53],[12,377,16,61],[12,379,16,63],[12,387,16,71],[12,389,16,73],[12,396,16,80],[12,398,16,82],[12,407,16,91],[12,409,16,93],[12,416,16,100],[12,418,17,2],[12,425,17,9],[12,427,17,11],[12,434,17,18],[12,436,17,20],[12,441,17,25],[12,443,17,27],[12,448,17,32],[12,450,17,34],[12,459,17,43],[12,461,17,45],[12,468,17,52],[12,470,17,54],[12,477,17,61],[12,479,17,63],[12,486,17,70],[12,488,17,72],[12,497,17,81],[12,499,17,83],[12,506,17,90],[12,508,18,2],[12,515,18,9],[12,517,18,11],[12,522,18,16],[12,524,18,18],[12,531,18,25],[12,533,18,27],[12,540,18,34],[12,542,18,36],[12,550,18,44],[12,552,18,46],[12,559,18,53],[12,561,18,55],[12,568,18,62],[12,570,18,64],[12,579,18,73],[12,581,18,75],[12,587,18,81],[12,589,18,83],[12,596,18,90],[12,598,19,2],[12,606,19,10],[12,608,19,12],[12,617,19,21],[12,619,19,23],[12,628,19,32],[12,630,19,34],[12,637,19,41],[12,639,19,43],[12,647,19,51],[12,649,19,53],[12,657,19,61],[12,659,19,63],[12,668,19,72],[12,670,19,74],[12,678,19,82],[12,680,19,84],[12,689,19,93],[12,691,19,95],[12,698,19,102],[12,700,20,2],[12,707,20,9],[12,709,20,11],[12,716,20,18],[12,718,20,20],[12,726,20,28],[12,728,20,30],[12,735,20,37],[12,737,20,39],[12,747,20,49],[12,749,20,51],[12,757,20,59],[12,759,20,61],[12,768,20,70],[12,770,20,72],[12,778,20,80],[12,780,20,82],[12,789,20,91],[12,791,20,93],[12,800,20,102],[12,802,21,2],[12,811,21,11],[12,813,21,13],[12,818,21,18],[12,820,21,20],[12,827,21,27],[12,829,21,29],[12,838,21,38],[12,840,21,40],[12,848,21,48],[12,850,21,50],[12,857,21,57],[12,859,21,59],[12,868,21,68],[12,870,21,70],[12,877,21,77],[12,879,21,79],[12,887,21,87],[12,889,21,89],[12,895,21,95],[12,897,22,2],[12,905,22,10],[12,907,22,12],[12,913,22,18],[12,915,22,20],[12,922,22,27],[12,924,22,29],[12,931,22,36],[12,933,22,38],[12,938,22,43],[12,940,22,45],[12,947,22,52],[12,949,22,54],[12,956,22,61],[12,958,22,63],[12,964,22,69],[12,966,22,71],[12,974,22,79],[12,976,22,81],[12,985,22,90],[12,987,23,2],[12,995,23,10],[12,997,23,12],[12,1005,23,20],[12,1007,23,22],[12,1014,23,29],[12,1016,23,31],[12,1021,23,36],[12,1023,23,38],[12,1032,23,47],[12,1034,23,49],[12,1042,23,57],[12,1044,23,59],[12,1053,23,68],[12,1055,23,70],[12,1060,23,75],[12,1062,23,77],[12,1070,23,85],[12,1072,23,87],[12,1081,23,96],[12,1083,24,2],[12,1090,24,9],[12,1092,24,11],[12,1100,24,19],[12,1102,24,21],[12,1110,24,29],[12,1112,24,31],[12,1120,24,39],[12,1122,24,41],[12,1131,24,50],[12,1133,24,52],[12,1139,24,58],[12,1141,24,60],[12,1149,24,68],[12,1151,24,70],[12,1159,24,78],[12,1161,24,80],[12,1171,24,90],[12,1173,24,92],[12,1182,24,101],[12,1184,25,2],[12,1193,25,11],[12,1195,25,13],[12,1202,25,20],[12,1204,25,22],[12,1212,25,30],[12,1214,25,32],[12,1220,25,38],[12,1222,25,40],[12,1230,25,48],[12,1232,25,50],[12,1238,25,56],[12,1240,25,58],[12,1248,25,66],[12,1250,25,68],[12,1259,25,77],[12,1261,25,79],[12,1270,25,88],[12,1272,25,90],[12,1279,25,97],[12,1281,26,2],[12,1288,26,9],[12,1290,26,11],[12,1297,26,18],[12,1299,26,20],[12,1305,26,26],[12,1307,26,28],[12,1316,26,37],[12,1318,26,39],[12,1325,26,46],[12,1327,26,48],[12,1336,26,57],[12,1338,26,59],[12,1344,26,65],[12,1345,27,1],[13,2,29,7],[13,8,29,13,"WalletService"],[13,21,29,26],[13,22,29,27],[14,4,30,2],[14,11,30,26,"WALLET_KEY"],[14,21,30,36],[14,24,30,39],[14,38,30,53],[15,4,31,2],[15,11,31,26,"SEED_PHRASE_KEY"],[15,26,31,41],[15,29,31,44],[15,50,31,65],[16,4,33,2],[16,11,33,17,"generateSecureRandom"],[16,31,33,37,"generateSecureRandom"],[16,32,33,38,"length"],[16,38,33,52],[16,40,33,66],[17,6,34,4],[18,6,35,4],[18,10,35,8],[18,17,35,15,"crypto"],[18,23,35,21],[18,28,35,26],[18,39,35,37],[18,43,35,41,"crypto"],[18,49,35,47],[18,50,35,48,"getRandomValues"],[18,65,35,63],[18,67,35,65],[19,8,36,6],[19,14,36,12,"array"],[19,19,36,17],[19,22,36,20],[19,26,36,24,"Uint8Array"],[19,36,36,34],[19,37,36,35,"length"],[19,43,36,41],[19,44,36,42],[20,8,37,6,"crypto"],[20,14,37,12],[20,15,37,13,"getRandomValues"],[20,30,37,28],[20,31,37,29,"array"],[20,36,37,34],[20,37,37,35],[21,8,38,6],[21,15,38,13,"array"],[21,20,38,18],[22,6,39,4],[24,6,41,4],[25,6,42,4],[25,12,42,10,"array"],[25,17,42,15],[25,20,42,18],[25,24,42,22,"Uint8Array"],[25,34,42,32],[25,35,42,33,"length"],[25,41,42,39],[25,42,42,40],[26,6,43,4],[26,11,43,9],[26,15,43,13,"i"],[26,16,43,14],[26,19,43,17],[26,20,43,18],[26,22,43,20,"i"],[26,23,43,21],[26,26,43,24,"length"],[26,32,43,30],[26,34,43,32,"i"],[26,35,43,33],[26,37,43,35],[26,39,43,37],[27,8,44,6,"array"],[27,13,44,11],[27,14,44,12,"i"],[27,15,44,13],[27,16,44,14],[27,19,44,17,"Math"],[27,23,44,21],[27,24,44,22,"floor"],[27,29,44,27],[27,30,44,28,"Math"],[27,34,44,32],[27,35,44,33,"random"],[27,41,44,39],[27,42,44,40],[27,43,44,41],[27,46,44,44],[27,49,44,47],[27,50,44,48],[28,6,45,4],[29,6,46,4],[29,13,46,11,"array"],[29,18,46,16],[30,4,47,2],[31,4,49,2],[31,11,49,17,"generateMnemonic"],[31,27,49,33,"generateMnemonic"],[31,28,49,33],[31,30,49,44],[32,6,50,4],[32,12,50,10,"entropy"],[32,19,50,17],[32,22,50,20],[32,26,50,24],[32,27,50,25,"generateSecureRandom"],[32,47,50,45],[32,48,50,46],[32,50,50,48],[32,51,50,49],[32,52,50,50],[32,53,50,51],[33,6,51,4],[33,12,51,10,"words"],[33,17,51,25],[33,20,51,28],[33,22,51,30],[35,6,53,4],[36,6,54,4],[36,11,54,9],[36,15,54,13,"i"],[36,16,54,14],[36,19,54,17],[36,20,54,18],[36,22,54,20,"i"],[36,23,54,21],[36,26,54,24],[36,28,54,26],[36,30,54,28,"i"],[36,31,54,29],[36,33,54,31],[36,35,54,33],[37,8,55,6],[37,14,55,12,"index"],[37,19,55,17],[37,22,55,20],[37,23,55,21,"entropy"],[37,30,55,28],[37,31,55,29,"i"],[37,32,55,30],[37,33,55,31],[37,36,55,35,"entropy"],[37,43,55,42],[37,44,55,43],[37,45,55,44,"i"],[37,46,55,45],[37,49,55,48],[37,50,55,49],[37,54,55,53],[37,56,55,55],[37,57,55,56],[37,60,55,59],[37,63,55,63],[37,67,55,67,"WORD_LIST"],[37,76,55,76],[37,77,55,77,"length"],[37,83,55,83],[38,8,56,6,"words"],[38,13,56,11],[38,14,56,12,"push"],[38,18,56,16],[38,19,56,17,"WORD_LIST"],[38,28,56,26],[38,29,56,27,"index"],[38,34,56,32],[38,35,56,33],[38,36,56,34],[39,6,57,4],[40,6,59,4],[40,13,59,11,"words"],[40,18,59,16],[40,19,59,17,"join"],[40,23,59,21],[40,24,59,22],[40,27,59,25],[40,28,59,26],[41,4,60,2],[42,4,62,2],[42,11,62,17,"mnemonicToSeed"],[42,25,62,31,"mnemonicToSeed"],[42,26,62,32,"mnemonic"],[42,34,62,48],[42,36,62,62],[43,6,63,4],[44,6,64,4],[44,12,64,10,"words"],[44,17,64,15],[44,20,64,18,"mnemonic"],[44,28,64,26],[44,29,64,27,"split"],[44,34,64,32],[44,35,64,33],[44,38,64,36],[44,39,64,37],[45,6,65,4],[45,12,65,10,"seed"],[45,16,65,14],[45,19,65,17],[45,23,65,21,"Uint8Array"],[45,33,65,31],[45,34,65,32],[45,36,65,34],[45,37,65,35],[46,6,67,4],[46,11,67,9],[46,15,67,13,"i"],[46,16,67,14],[46,19,67,17],[46,20,67,18],[46,22,67,20,"i"],[46,23,67,21],[46,26,67,24],[46,28,67,26],[46,30,67,28,"i"],[46,31,67,29],[46,33,67,31],[46,35,67,33],[47,8,68,6],[47,14,68,12,"wordIndex"],[47,23,68,21],[47,26,68,24,"i"],[47,27,68,25],[47,30,68,28,"words"],[47,35,68,33],[47,36,68,34,"length"],[47,42,68,40],[48,8,69,6],[48,14,69,12,"word"],[48,18,69,16],[48,21,69,19,"words"],[48,26,69,24],[48,27,69,25,"wordIndex"],[48,36,69,34],[48,37,69,35],[49,8,70,6],[49,12,70,10,"hash"],[49,16,70,14],[49,19,70,17],[49,20,70,18],[50,8,71,6],[50,13,71,11],[50,17,71,15,"j"],[50,18,71,16],[50,21,71,19],[50,22,71,20],[50,24,71,22,"j"],[50,25,71,23],[50,28,71,26,"word"],[50,32,71,30],[50,33,71,31,"length"],[50,39,71,37],[50,41,71,39,"j"],[50,42,71,40],[50,44,71,42],[50,46,71,44],[51,10,72,8,"hash"],[51,14,72,12],[51,17,72,16],[51,18,72,17,"hash"],[51,22,72,21],[51,26,72,25],[51,27,72,26],[51,31,72,30,"hash"],[51,35,72,34],[51,38,72,37,"word"],[51,42,72,41],[51,43,72,42,"charCodeAt"],[51,53,72,52],[51,54,72,53,"j"],[51,55,72,54],[51,56,72,55],[51,59,72,59],[51,69,72,69],[52,8,73,6],[53,8,74,6,"seed"],[53,12,74,10],[53,13,74,11,"i"],[53,14,74,12],[53,15,74,13],[53,18,74,16,"Math"],[53,22,74,20],[53,23,74,21,"abs"],[53,26,74,24],[53,27,74,25,"hash"],[53,31,74,29],[53,32,74,30],[53,35,74,33],[53,38,74,36],[54,6,75,4],[55,6,77,4],[55,13,77,11,"seed"],[55,17,77,15],[56,4,78,2],[57,4,80,2],[57,11,80,17,"validateMnemonic"],[57,27,80,33,"validateMnemonic"],[57,28,80,34,"mnemonic"],[57,36,80,50],[57,38,80,61],[58,6,81,4],[58,12,81,10,"words"],[58,17,81,15],[58,20,81,18,"mnemonic"],[58,28,81,26],[58,29,81,27,"trim"],[58,33,81,31],[58,34,81,32],[58,35,81,33],[58,36,81,34,"split"],[58,41,81,39],[58,42,81,40],[58,47,81,45],[58,48,81,46],[59,6,82,4],[59,10,82,8,"words"],[59,15,82,13],[59,16,82,14,"length"],[59,22,82,20],[59,25,82,23],[59,27,82,25],[59,31,82,29,"words"],[59,36,82,34],[59,37,82,35,"length"],[59,43,82,41],[59,46,82,44],[59,48,82,46],[59,50,82,48],[59,57,82,55],[59,62,82,60],[61,6,84,4],[62,6,85,4],[62,13,85,11,"words"],[62,18,85,16],[62,19,85,17,"every"],[62,24,85,22],[62,25,85,23,"word"],[62,29,85,27],[62,33,85,31,"WORD_LIST"],[62,42,85,40],[62,43,85,41,"includes"],[62,51,85,49],[62,52,85,50,"word"],[62,56,85,54],[62,57,85,55,"toLowerCase"],[62,68,85,66],[62,69,85,67],[62,70,85,68],[62,71,85,69],[62,72,85,70],[63,4,86,2],[64,4,88,2],[64,17,88,15,"generateNewWallet"],[64,34,88,32,"generateNewWallet"],[64,35,88,32],[64,37,88,56],[65,6,89,4],[65,10,89,8],[66,8,90,6],[67,8,91,6],[67,14,91,12,"mnemonic"],[67,22,91,20],[67,25,91,23],[67,29,91,27],[67,30,91,28,"generateMnemonic"],[67,46,91,44],[67,47,91,45],[67,48,91,46],[69,8,93,6],[70,8,94,6],[70,14,94,12,"seed"],[70,18,94,16],[70,21,94,19],[70,25,94,23],[70,26,94,24,"mnemonicToSeed"],[70,40,94,38],[70,41,94,39,"mnemonic"],[70,49,94,47],[70,50,94,48],[72,8,96,6],[73,8,97,6],[73,14,97,12,"keypair"],[73,21,97,19],[73,24,97,22,"Keypair"],[73,36,97,29],[73,37,97,30,"fromSeed"],[73,45,97,38],[73,46,97,39,"seed"],[73,50,97,43],[73,51,97,44],[74,8,99,6],[74,14,99,12,"walletData"],[74,24,99,22],[74,27,99,25],[75,10,100,8,"mnemonic"],[75,18,100,16],[76,10,101,8,"publicKey"],[76,19,101,17],[76,21,101,19,"keypair"],[76,28,101,26],[76,29,101,27,"publicKey"],[76,38,101,36],[76,39,101,37,"toString"],[76,47,101,45],[76,48,101,46],[76,49,101,47],[77,10,102,8,"secretKey"],[77,19,102,17],[77,21,102,19,"Array"],[77,26,102,24],[77,27,102,25,"from"],[77,31,102,29],[77,32,102,30,"keypair"],[77,39,102,37],[77,40,102,38,"secretKey"],[77,49,102,47],[78,8,103,6],[78,9,103,7],[80,8,105,6],[81,8,106,6],[81,14,106,12,"AsyncStorage"],[81,35,106,24],[81,36,106,25,"setItem"],[81,43,106,32],[81,44,106,33],[81,48,106,37],[81,49,106,38,"WALLET_KEY"],[81,59,106,48],[81,61,106,50,"JSON"],[81,65,106,54],[81,66,106,55,"stringify"],[81,75,106,64],[81,76,106,65,"walletData"],[81,86,106,75],[81,87,106,76],[81,88,106,77],[83,8,108,6],[84,8,109,6],[84,14,109,12,"SecureStore"],[84,25,109,23],[84,26,109,24,"setItemAsync"],[84,38,109,36],[84,39,109,37],[84,43,109,41],[84,44,109,42,"SEED_PHRASE_KEY"],[84,59,109,57],[84,61,109,59,"mnemonic"],[84,69,109,67],[84,70,109,68],[85,8,111,6],[85,15,111,13],[86,10,112,8,"keypair"],[86,17,112,15],[87,10,113,8,"mnemonic"],[87,18,113,16],[88,10,114,8,"publicKey"],[88,19,114,17],[88,21,114,19,"keypair"],[88,28,114,26],[88,29,114,27,"publicKey"],[88,38,114,36],[88,39,114,37,"toString"],[88,47,114,45],[88,48,114,46],[89,8,115,6],[89,9,115,7],[90,6,116,4],[90,7,116,5],[90,8,116,6],[90,15,116,13,"error"],[90,20,116,18],[90,22,116,20],[91,8,117,6,"console"],[91,15,117,13],[91,16,117,14,"error"],[91,21,117,19],[91,22,117,20],[91,48,117,46],[91,50,117,48,"error"],[91,55,117,53],[91,56,117,54],[92,8,118,6],[92,14,118,12],[92,18,118,16,"Error"],[92,23,118,21],[92,24,118,22],[92,53,118,51,"error"],[92,58,118,56],[92,60,118,58],[92,61,118,59],[93,6,119,4],[94,4,120,2],[95,4,122,2],[95,17,122,15,"restoreWalletFromMnemonic"],[95,42,122,40,"restoreWalletFromMnemonic"],[95,43,122,41,"mnemonic"],[95,51,122,57],[95,53,122,80],[96,6,123,4],[96,10,123,8],[97,8,124,6],[98,8,125,6],[98,12,125,10],[98,13,125,11],[98,17,125,15],[98,18,125,16,"validateMnemonic"],[98,34,125,32],[98,35,125,33,"mnemonic"],[98,43,125,41],[98,44,125,42],[98,46,125,44],[99,10,126,8],[99,16,126,14],[99,20,126,18,"Error"],[99,25,126,23],[99,26,126,24],[99,51,126,49],[99,52,126,50],[100,8,127,6],[102,8,129,6],[103,8,130,6],[103,14,130,12,"seed"],[103,18,130,16],[103,21,130,19],[103,25,130,23],[103,26,130,24,"mnemonicToSeed"],[103,40,130,38],[103,41,130,39,"mnemonic"],[103,49,130,47],[103,50,130,48],[105,8,132,6],[106,8,133,6],[106,14,133,12,"keypair"],[106,21,133,19],[106,24,133,22,"Keypair"],[106,36,133,29],[106,37,133,30,"fromSeed"],[106,45,133,38],[106,46,133,39,"seed"],[106,50,133,43],[106,51,133,44],[107,8,135,6],[107,14,135,12,"walletData"],[107,24,135,22],[107,27,135,25],[108,10,136,8,"mnemonic"],[108,18,136,16],[109,10,137,8,"publicKey"],[109,19,137,17],[109,21,137,19,"keypair"],[109,28,137,26],[109,29,137,27,"publicKey"],[109,38,137,36],[109,39,137,37,"toString"],[109,47,137,45],[109,48,137,46],[109,49,137,47],[110,10,138,8,"secretKey"],[110,19,138,17],[110,21,138,19,"Array"],[110,26,138,24],[110,27,138,25,"from"],[110,31,138,29],[110,32,138,30,"keypair"],[110,39,138,37],[110,40,138,38,"secretKey"],[110,49,138,47],[111,8,139,6],[111,9,139,7],[113,8,141,6],[114,8,142,6],[114,14,142,12,"AsyncStorage"],[114,35,142,24],[114,36,142,25,"setItem"],[114,43,142,32],[114,44,142,33],[114,48,142,37],[114,49,142,38,"WALLET_KEY"],[114,59,142,48],[114,61,142,50,"JSON"],[114,65,142,54],[114,66,142,55,"stringify"],[114,75,142,64],[114,76,142,65,"walletData"],[114,86,142,75],[114,87,142,76],[114,88,142,77],[116,8,144,6],[117,8,145,6],[117,14,145,12,"SecureStore"],[117,25,145,23],[117,26,145,24,"setItemAsync"],[117,38,145,36],[117,39,145,37],[117,43,145,41],[117,44,145,42,"SEED_PHRASE_KEY"],[117,59,145,57],[117,61,145,59,"mnemonic"],[117,69,145,67],[117,70,145,68],[118,8,147,6],[118,15,147,13],[119,10,148,8,"keypair"],[119,17,148,15],[120,10,149,8,"mnemonic"],[120,18,149,16],[121,10,150,8,"publicKey"],[121,19,150,17],[121,21,150,19,"keypair"],[121,28,150,26],[121,29,150,27,"publicKey"],[121,38,150,36],[121,39,150,37,"toString"],[121,47,150,45],[121,48,150,46],[122,8,151,6],[122,9,151,7],[123,6,152,4],[123,7,152,5],[123,8,152,6],[123,15,152,13,"error"],[123,20,152,18],[123,22,152,20],[124,8,153,6,"console"],[124,15,153,13],[124,16,153,14,"error"],[124,21,153,19],[124,22,153,20],[124,49,153,47],[124,51,153,49,"error"],[124,56,153,54],[124,57,153,55],[125,8,154,6],[125,14,154,12],[125,18,154,16,"Error"],[125,23,154,21],[125,24,154,22],[125,54,154,52,"error"],[125,59,154,57],[125,61,154,59],[125,62,154,60],[126,6,155,4],[127,4,156,2],[128,4,158,2],[128,17,158,15,"loadStoredWallet"],[128,33,158,31,"loadStoredWallet"],[128,34,158,31],[128,36,158,59],[129,6,159,4],[129,10,159,8],[130,8,160,6],[130,14,160,12,"storedData"],[130,24,160,22],[130,27,160,25],[130,33,160,31,"AsyncStorage"],[130,54,160,43],[130,55,160,44,"getItem"],[130,62,160,51],[130,63,160,52],[130,67,160,56],[130,68,160,57,"WALLET_KEY"],[130,78,160,67],[130,79,160,68],[131,8,161,6],[131,12,161,10],[131,13,161,11,"storedData"],[131,23,161,21],[131,25,161,23],[131,32,161,30],[131,36,161,34],[132,8,163,6],[132,14,163,12,"walletData"],[132,24,163,22],[132,27,163,25,"JSON"],[132,31,163,29],[132,32,163,30,"parse"],[132,37,163,35],[132,38,163,36,"storedData"],[132,48,163,46],[132,49,163,47],[133,8,164,6],[133,14,164,12,"secretKey"],[133,23,164,21],[133,26,164,24],[133,30,164,28,"Uint8Array"],[133,40,164,38],[133,41,164,39,"walletData"],[133,51,164,49],[133,52,164,50,"secretKey"],[133,61,164,59],[133,62,164,60],[134,8,166,6],[134,15,166,13,"Keypair"],[134,27,166,20],[134,28,166,21,"fromSecretKey"],[134,41,166,34],[134,42,166,35,"secretKey"],[134,51,166,44],[134,52,166,45],[135,6,167,4],[135,7,167,5],[135,8,167,6],[135,15,167,13,"error"],[135,20,167,18],[135,22,167,20],[136,8,168,6,"console"],[136,15,168,13],[136,16,168,14,"error"],[136,21,168,19],[136,22,168,20],[136,53,168,51],[136,55,168,53,"error"],[136,60,168,58],[136,61,168,59],[137,8,169,6],[137,15,169,13],[137,19,169,17],[138,6,170,4],[139,4,171,2],[140,4,173,2],[140,17,173,15,"getStoredWalletData"],[140,36,173,34,"getStoredWalletData"],[140,37,173,34],[140,39,173,58],[141,6,174,4],[141,10,174,8],[142,8,175,6],[142,14,175,12,"storedData"],[142,24,175,22],[142,27,175,25],[142,33,175,31,"AsyncStorage"],[142,54,175,43],[142,55,175,44,"getItem"],[142,62,175,51],[142,63,175,52],[142,67,175,56],[142,68,175,57,"WALLET_KEY"],[142,78,175,67],[142,79,175,68],[143,8,176,6],[143,15,176,13,"storedData"],[143,25,176,23],[143,28,176,26,"JSON"],[143,32,176,30],[143,33,176,31,"parse"],[143,38,176,36],[143,39,176,37,"storedData"],[143,49,176,47],[143,50,176,48],[143,53,176,51],[143,57,176,55],[144,6,177,4],[144,7,177,5],[144,8,177,6],[144,15,177,13,"error"],[144,20,177,18],[144,22,177,20],[145,8,178,6,"console"],[145,15,178,13],[145,16,178,14,"error"],[145,21,178,19],[145,22,178,20],[145,50,178,48],[145,52,178,50,"error"],[145,57,178,55],[145,58,178,56],[146,8,179,6],[146,15,179,13],[146,19,179,17],[147,6,180,4],[148,4,181,2],[149,4,183,2],[149,17,183,15,"clearWallet"],[149,28,183,26,"clearWallet"],[149,29,183,26],[149,31,183,44],[150,6,184,4],[150,10,184,8],[151,8,185,6],[151,14,185,12,"AsyncStorage"],[151,35,185,24],[151,36,185,25,"removeItem"],[151,46,185,35],[151,47,185,36],[151,51,185,40],[151,52,185,41,"WALLET_KEY"],[151,62,185,51],[151,63,185,52],[152,8,186,6],[152,14,186,12,"SecureStore"],[152,25,186,23],[152,26,186,24,"deleteItemAsync"],[152,41,186,39],[152,42,186,40],[152,46,186,44],[152,47,186,45,"SEED_PHRASE_KEY"],[152,62,186,60],[152,63,186,61],[153,6,187,4],[153,7,187,5],[153,8,187,6],[153,15,187,13,"error"],[153,20,187,18],[153,22,187,20],[154,8,188,6,"console"],[154,15,188,13],[154,16,188,14,"error"],[154,21,188,19],[154,22,188,20],[154,47,188,45],[154,49,188,47,"error"],[154,54,188,52],[154,55,188,53],[155,8,189,6],[155,14,189,12,"error"],[155,19,189,17],[156,6,190,4],[157,4,191,2],[158,4,193,2],[158,11,193,9,"validatePublicKey"],[158,28,193,26,"validatePublicKey"],[158,29,193,27,"publicKey"],[158,38,193,44],[158,40,193,55],[159,6,194,4],[159,10,194,8],[160,8,195,6],[160,12,195,10,"PublicKey"],[160,26,195,19],[160,27,195,20,"publicKey"],[160,36,195,29],[160,37,195,30],[161,8,196,6],[161,15,196,13],[161,19,196,17],[162,6,197,4],[162,7,197,5],[162,8,197,6],[162,14,197,12],[163,8,198,6],[163,15,198,13],[163,20,198,18],[164,6,199,4],[165,4,200,2],[166,4,202,2],[166,17,202,15,"getSeedPhrase"],[166,30,202,28,"getSeedPhrase"],[166,31,202,28],[166,33,202,55],[167,6,203,4],[167,10,203,8],[168,8,204,6],[168,15,204,13],[168,21,204,19,"SecureStore"],[168,32,204,30],[168,33,204,31,"getItemAsync"],[168,45,204,43],[168,46,204,44],[168,50,204,48],[168,51,204,49,"SEED_PHRASE_KEY"],[168,66,204,64],[168,67,204,65],[169,6,205,4],[169,7,205,5],[169,8,205,6],[169,15,205,13,"error"],[169,20,205,18],[169,22,205,20],[170,8,206,6,"console"],[170,15,206,13],[170,16,206,14,"error"],[170,21,206,19],[170,22,206,20],[170,50,206,48],[170,52,206,50,"error"],[170,57,206,55],[170,58,206,56],[171,8,207,6],[171,15,207,13],[171,19,207,17],[172,6,208,4],[173,4,209,2],[174,2,210,0],[175,2,210,1,"exports"],[175,9,210,1],[175,10,210,1,"WalletService"],[175,23,210,1],[175,26,210,1,"WalletService"],[175,39,210,1],[176,0,210,1],[176,3]],"functionMap":{"names":["<global>","WalletService","generateSecureRandom","generateMnemonic","mnemonicToSeed","validateMnemonic","words.every$argument_0","generateNewWallet","restoreWalletFromMnemonic","loadStoredWallet","getStoredWalletData","clearWallet","validatePublicKey","getSeedPhrase"],"mappings":"AAA;OC4B;ECI;GDc;EEE;GFW;EGE;GHgB;EIE;uBCK,8CD;GJC;EME;GNgC;EOE;GPkC;EQE;GRa;ESE;GTQ;EUE;GVQ;EWE;GXO;EYE;GZO"}},"type":"js/module"}]}