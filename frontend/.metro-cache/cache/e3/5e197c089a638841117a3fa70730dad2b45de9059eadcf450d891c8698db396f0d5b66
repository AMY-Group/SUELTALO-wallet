{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"miller-rabin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":45},"end":{"line":2,"column":41,"index":68}}],"key":"JlFjwCagvLq0EqEIeqQmt6qe9mA=","exportNames":["*"]}},{"name":"./generatePrime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":13,"index":242},"end":{"line":9,"column":39,"index":268}}],"key":"lMwCAIegzeEZrIEQu6v0pnKwVew=","exportNames":["*"]}},{"name":"randombytes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":288},"end":{"line":10,"column":40,"index":310}}],"key":"HRppB8l92kfLq10/yqHPiqGAuBY=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var MillerRabin = require(_dependencyMap[1], \"miller-rabin\");\n  var millerRabin = new MillerRabin();\n  var TWENTYFOUR = new BN(24);\n  var ELEVEN = new BN(11);\n  var TEN = new BN(10);\n  var THREE = new BN(3);\n  var SEVEN = new BN(7);\n  var primes = require(_dependencyMap[2], \"./generatePrime\");\n  var randomBytes = require(_dependencyMap[3], \"randombytes\");\n  module.exports = DH;\n  function setPublicKey(pub, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(pub)) {\n      pub = new Buffer(pub, enc);\n    }\n    this._pub = new BN(pub);\n    return this;\n  }\n  function setPrivateKey(priv, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(priv)) {\n      priv = new Buffer(priv, enc);\n    }\n    this._priv = new BN(priv);\n    return this;\n  }\n  var primeCache = {};\n  function checkPrime(prime, generator) {\n    var gen = generator.toString('hex');\n    var hex = [gen, prime.toString(16)].join('_');\n    if (hex in primeCache) {\n      return primeCache[hex];\n    }\n    var error = 0;\n    if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {\n      //not a prime so +1\n      error += 1;\n      if (gen === '02' || gen === '05') {\n        // we'd be able to check the generator\n        // it would fail so +8\n        error += 8;\n      } else {\n        //we wouldn't be able to test the generator\n        // so +4\n        error += 4;\n      }\n      primeCache[hex] = error;\n      return error;\n    }\n    if (!millerRabin.test(prime.shrn(1))) {\n      //not a safe prime\n      error += 2;\n    }\n    var rem;\n    switch (gen) {\n      case '02':\n        if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n          // unsuidable generator\n          error += 8;\n        }\n        break;\n      case '05':\n        rem = prime.mod(TEN);\n        if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n          // prime mod 10 needs to equal 3 or 7\n          error += 8;\n        }\n        break;\n      default:\n        error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  function DH(prime, generator, malleable) {\n    this.setGenerator(generator);\n    this.__prime = new BN(prime);\n    this._prime = BN.mont(this.__prime);\n    this._primeLen = prime.length;\n    this._pub = undefined;\n    this._priv = undefined;\n    this._primeCode = undefined;\n    if (malleable) {\n      this.setPublicKey = setPublicKey;\n      this.setPrivateKey = setPrivateKey;\n    } else {\n      this._primeCode = 8;\n    }\n  }\n  Object.defineProperty(DH.prototype, 'verifyError', {\n    enumerable: true,\n    get: function () {\n      if (typeof this._primeCode !== 'number') {\n        this._primeCode = checkPrime(this.__prime, this.__gen);\n      }\n      return this._primeCode;\n    }\n  });\n  DH.prototype.generateKeys = function () {\n    if (!this._priv) {\n      this._priv = new BN(randomBytes(this._primeLen));\n    }\n    this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n    return this.getPublicKey();\n  };\n  DH.prototype.computeSecret = function (other) {\n    other = new BN(other);\n    other = other.toRed(this._prime);\n    var secret = other.redPow(this._priv).fromRed();\n    var out = new Buffer(secret.toArray());\n    var prime = this.getPrime();\n    if (out.length < prime.length) {\n      var front = new Buffer(prime.length - out.length);\n      front.fill(0);\n      out = Buffer.concat([front, out]);\n    }\n    return out;\n  };\n  DH.prototype.getPublicKey = function getPublicKey(enc) {\n    return formatReturnValue(this._pub, enc);\n  };\n  DH.prototype.getPrivateKey = function getPrivateKey(enc) {\n    return formatReturnValue(this._priv, enc);\n  };\n  DH.prototype.getPrime = function (enc) {\n    return formatReturnValue(this.__prime, enc);\n  };\n  DH.prototype.getGenerator = function (enc) {\n    return formatReturnValue(this._gen, enc);\n  };\n  DH.prototype.setGenerator = function (gen, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(gen)) {\n      gen = new Buffer(gen, enc);\n    }\n    this.__gen = gen;\n    this._gen = new BN(gen);\n    return this;\n  };\n  function formatReturnValue(bn, enc) {\n    var buf = new Buffer(bn.toArray());\n    if (!enc) {\n      return buf;\n    } else {\n      return buf.toString(enc);\n    }\n  }\n});","lineCount":150,"map":[[2,2,1,0],[2,6,1,4,"BN"],[2,8,1,6],[2,11,1,9,"require"],[2,18,1,16],[2,19,1,16,"_dependencyMap"],[2,33,1,16],[2,45,1,24],[2,46,1,25],[3,2,2,0],[3,6,2,4,"MillerRabin"],[3,17,2,15],[3,20,2,18,"require"],[3,27,2,25],[3,28,2,25,"_dependencyMap"],[3,42,2,25],[3,61,2,40],[3,62,2,41],[4,2,3,0],[4,6,3,4,"millerRabin"],[4,17,3,15],[4,20,3,18],[4,24,3,22,"MillerRabin"],[4,35,3,33],[4,36,3,34],[4,37,3,35],[5,2,4,0],[5,6,4,4,"TWENTYFOUR"],[5,16,4,14],[5,19,4,17],[5,23,4,21,"BN"],[5,25,4,23],[5,26,4,24],[5,28,4,26],[5,29,4,27],[6,2,5,0],[6,6,5,4,"ELEVEN"],[6,12,5,10],[6,15,5,13],[6,19,5,17,"BN"],[6,21,5,19],[6,22,5,20],[6,24,5,22],[6,25,5,23],[7,2,6,0],[7,6,6,4,"TEN"],[7,9,6,7],[7,12,6,10],[7,16,6,14,"BN"],[7,18,6,16],[7,19,6,17],[7,21,6,19],[7,22,6,20],[8,2,7,0],[8,6,7,4,"THREE"],[8,11,7,9],[8,14,7,12],[8,18,7,16,"BN"],[8,20,7,18],[8,21,7,19],[8,22,7,20],[8,23,7,21],[9,2,8,0],[9,6,8,4,"SEVEN"],[9,11,8,9],[9,14,8,12],[9,18,8,16,"BN"],[9,20,8,18],[9,21,8,19],[9,22,8,20],[9,23,8,21],[10,2,9,0],[10,6,9,4,"primes"],[10,12,9,10],[10,15,9,13,"require"],[10,22,9,20],[10,23,9,20,"_dependencyMap"],[10,37,9,20],[10,59,9,38],[10,60,9,39],[11,2,10,0],[11,6,10,4,"randomBytes"],[11,17,10,15],[11,20,10,18,"require"],[11,27,10,25],[11,28,10,25,"_dependencyMap"],[11,42,10,25],[11,60,10,39],[11,61,10,40],[12,2,11,0,"module"],[12,8,11,6],[12,9,11,7,"exports"],[12,16,11,14],[12,19,11,17,"DH"],[12,21,11,19],[13,2,13,0],[13,11,13,9,"setPublicKey"],[13,23,13,21,"setPublicKey"],[13,24,13,22,"pub"],[13,27,13,25],[13,29,13,27,"enc"],[13,32,13,30],[13,34,13,32],[14,4,14,2,"enc"],[14,7,14,5],[14,10,14,8,"enc"],[14,13,14,11],[14,17,14,15],[14,23,14,21],[15,4,15,2],[15,8,15,6],[15,9,15,7,"Buffer"],[15,15,15,13],[15,16,15,14,"isBuffer"],[15,24,15,22],[15,25,15,23,"pub"],[15,28,15,26],[15,29,15,27],[15,31,15,29],[16,6,16,4,"pub"],[16,9,16,7],[16,12,16,10],[16,16,16,14,"Buffer"],[16,22,16,20],[16,23,16,21,"pub"],[16,26,16,24],[16,28,16,26,"enc"],[16,31,16,29],[16,32,16,30],[17,4,17,2],[18,4,18,2],[18,8,18,6],[18,9,18,7,"_pub"],[18,13,18,11],[18,16,18,14],[18,20,18,18,"BN"],[18,22,18,20],[18,23,18,21,"pub"],[18,26,18,24],[18,27,18,25],[19,4,19,2],[19,11,19,9],[19,15,19,13],[20,2,20,0],[21,2,22,0],[21,11,22,9,"setPrivateKey"],[21,24,22,22,"setPrivateKey"],[21,25,22,23,"priv"],[21,29,22,27],[21,31,22,29,"enc"],[21,34,22,32],[21,36,22,34],[22,4,23,2,"enc"],[22,7,23,5],[22,10,23,8,"enc"],[22,13,23,11],[22,17,23,15],[22,23,23,21],[23,4,24,2],[23,8,24,6],[23,9,24,7,"Buffer"],[23,15,24,13],[23,16,24,14,"isBuffer"],[23,24,24,22],[23,25,24,23,"priv"],[23,29,24,27],[23,30,24,28],[23,32,24,30],[24,6,25,4,"priv"],[24,10,25,8],[24,13,25,11],[24,17,25,15,"Buffer"],[24,23,25,21],[24,24,25,22,"priv"],[24,28,25,26],[24,30,25,28,"enc"],[24,33,25,31],[24,34,25,32],[25,4,26,2],[26,4,27,2],[26,8,27,6],[26,9,27,7,"_priv"],[26,14,27,12],[26,17,27,15],[26,21,27,19,"BN"],[26,23,27,21],[26,24,27,22,"priv"],[26,28,27,26],[26,29,27,27],[27,4,28,2],[27,11,28,9],[27,15,28,13],[28,2,29,0],[29,2,31,0],[29,6,31,4,"primeCache"],[29,16,31,14],[29,19,31,17],[29,20,31,18],[29,21,31,19],[30,2,32,0],[30,11,32,9,"checkPrime"],[30,21,32,19,"checkPrime"],[30,22,32,20,"prime"],[30,27,32,25],[30,29,32,27,"generator"],[30,38,32,36],[30,40,32,38],[31,4,33,2],[31,8,33,6,"gen"],[31,11,33,9],[31,14,33,12,"generator"],[31,23,33,21],[31,24,33,22,"toString"],[31,32,33,30],[31,33,33,31],[31,38,33,36],[31,39,33,37],[32,4,34,2],[32,8,34,6,"hex"],[32,11,34,9],[32,14,34,12],[32,15,34,13,"gen"],[32,18,34,16],[32,20,34,18,"prime"],[32,25,34,23],[32,26,34,24,"toString"],[32,34,34,32],[32,35,34,33],[32,37,34,35],[32,38,34,36],[32,39,34,37],[32,40,34,38,"join"],[32,44,34,42],[32,45,34,43],[32,48,34,46],[32,49,34,47],[33,4,35,2],[33,8,35,6,"hex"],[33,11,35,9],[33,15,35,13,"primeCache"],[33,25,35,23],[33,27,35,25],[34,6,36,4],[34,13,36,11,"primeCache"],[34,23,36,21],[34,24,36,22,"hex"],[34,27,36,25],[34,28,36,26],[35,4,37,2],[36,4,38,2],[36,8,38,6,"error"],[36,13,38,11],[36,16,38,14],[36,17,38,15],[37,4,40,2],[37,8,40,6,"prime"],[37,13,40,11],[37,14,40,12,"isEven"],[37,20,40,18],[37,21,40,19],[37,22,40,20],[37,26,41,4],[37,27,41,5,"primes"],[37,33,41,11],[37,34,41,12,"simpleSieve"],[37,45,41,23],[37,49,42,4],[37,50,42,5,"primes"],[37,56,42,11],[37,57,42,12,"fermatTest"],[37,67,42,22],[37,68,42,23,"prime"],[37,73,42,28],[37,74,42,29],[37,78,43,4],[37,79,43,5,"millerRabin"],[37,90,43,16],[37,91,43,17,"test"],[37,95,43,21],[37,96,43,22,"prime"],[37,101,43,27],[37,102,43,28],[37,104,43,30],[38,6,44,4],[39,6,45,4,"error"],[39,11,45,9],[39,15,45,13],[39,16,45,14],[40,6,47,4],[40,10,47,8,"gen"],[40,13,47,11],[40,18,47,16],[40,22,47,20],[40,26,47,24,"gen"],[40,29,47,27],[40,34,47,32],[40,38,47,36],[40,40,47,38],[41,8,48,6],[42,8,49,6],[43,8,50,6,"error"],[43,13,50,11],[43,17,50,15],[43,18,50,16],[44,6,51,4],[44,7,51,5],[44,13,51,11],[45,8,52,6],[46,8,53,6],[47,8,54,6,"error"],[47,13,54,11],[47,17,54,15],[47,18,54,16],[48,6,55,4],[49,6,56,4,"primeCache"],[49,16,56,14],[49,17,56,15,"hex"],[49,20,56,18],[49,21,56,19],[49,24,56,22,"error"],[49,29,56,27],[50,6,57,4],[50,13,57,11,"error"],[50,18,57,16],[51,4,58,2],[52,4,59,2],[52,8,59,6],[52,9,59,7,"millerRabin"],[52,20,59,18],[52,21,59,19,"test"],[52,25,59,23],[52,26,59,24,"prime"],[52,31,59,29],[52,32,59,30,"shrn"],[52,36,59,34],[52,37,59,35],[52,38,59,36],[52,39,59,37],[52,40,59,38],[52,42,59,40],[53,6,60,4],[54,6,61,4,"error"],[54,11,61,9],[54,15,61,13],[54,16,61,14],[55,4,62,2],[56,4,63,2],[56,8,63,6,"rem"],[56,11,63,9],[57,4,64,2],[57,12,64,10,"gen"],[57,15,64,13],[58,6,65,4],[58,11,65,9],[58,15,65,13],[59,8,66,6],[59,12,66,10,"prime"],[59,17,66,15],[59,18,66,16,"mod"],[59,21,66,19],[59,22,66,20,"TWENTYFOUR"],[59,32,66,30],[59,33,66,31],[59,34,66,32,"cmp"],[59,37,66,35],[59,38,66,36,"ELEVEN"],[59,44,66,42],[59,45,66,43],[59,47,66,45],[60,10,67,8],[61,10,68,8,"error"],[61,15,68,13],[61,19,68,17],[61,20,68,18],[62,8,69,6],[63,8,70,6],[64,6,71,4],[64,11,71,9],[64,15,71,13],[65,8,72,6,"rem"],[65,11,72,9],[65,14,72,12,"prime"],[65,19,72,17],[65,20,72,18,"mod"],[65,23,72,21],[65,24,72,22,"TEN"],[65,27,72,25],[65,28,72,26],[66,8,73,6],[66,12,73,10,"rem"],[66,15,73,13],[66,16,73,14,"cmp"],[66,19,73,17],[66,20,73,18,"THREE"],[66,25,73,23],[66,26,73,24],[66,30,73,28,"rem"],[66,33,73,31],[66,34,73,32,"cmp"],[66,37,73,35],[66,38,73,36,"SEVEN"],[66,43,73,41],[66,44,73,42],[66,46,73,44],[67,10,74,8],[68,10,75,8,"error"],[68,15,75,13],[68,19,75,17],[68,20,75,18],[69,8,76,6],[70,8,77,6],[71,6,78,4],[72,8,79,6,"error"],[72,13,79,11],[72,17,79,15],[72,18,79,16],[73,4,80,2],[74,4,81,2,"primeCache"],[74,14,81,12],[74,15,81,13,"hex"],[74,18,81,16],[74,19,81,17],[74,22,81,20,"error"],[74,27,81,25],[75,4,82,2],[75,11,82,9,"error"],[75,16,82,14],[76,2,83,0],[77,2,85,0],[77,11,85,9,"DH"],[77,13,85,11,"DH"],[77,14,85,12,"prime"],[77,19,85,17],[77,21,85,19,"generator"],[77,30,85,28],[77,32,85,30,"malleable"],[77,41,85,39],[77,43,85,41],[78,4,86,2],[78,8,86,6],[78,9,86,7,"setGenerator"],[78,21,86,19],[78,22,86,20,"generator"],[78,31,86,29],[78,32,86,30],[79,4,87,2],[79,8,87,6],[79,9,87,7,"__prime"],[79,16,87,14],[79,19,87,17],[79,23,87,21,"BN"],[79,25,87,23],[79,26,87,24,"prime"],[79,31,87,29],[79,32,87,30],[80,4,88,2],[80,8,88,6],[80,9,88,7,"_prime"],[80,15,88,13],[80,18,88,16,"BN"],[80,20,88,18],[80,21,88,19,"mont"],[80,25,88,23],[80,26,88,24],[80,30,88,28],[80,31,88,29,"__prime"],[80,38,88,36],[80,39,88,37],[81,4,89,2],[81,8,89,6],[81,9,89,7,"_primeLen"],[81,18,89,16],[81,21,89,19,"prime"],[81,26,89,24],[81,27,89,25,"length"],[81,33,89,31],[82,4,90,2],[82,8,90,6],[82,9,90,7,"_pub"],[82,13,90,11],[82,16,90,14,"undefined"],[82,25,90,23],[83,4,91,2],[83,8,91,6],[83,9,91,7,"_priv"],[83,14,91,12],[83,17,91,15,"undefined"],[83,26,91,24],[84,4,92,2],[84,8,92,6],[84,9,92,7,"_primeCode"],[84,19,92,17],[84,22,92,20,"undefined"],[84,31,92,29],[85,4,93,2],[85,8,93,6,"malleable"],[85,17,93,15],[85,19,93,17],[86,6,94,4],[86,10,94,8],[86,11,94,9,"setPublicKey"],[86,23,94,21],[86,26,94,24,"setPublicKey"],[86,38,94,36],[87,6,95,4],[87,10,95,8],[87,11,95,9,"setPrivateKey"],[87,24,95,22],[87,27,95,25,"setPrivateKey"],[87,40,95,38],[88,4,96,2],[88,5,96,3],[88,11,96,9],[89,6,97,4],[89,10,97,8],[89,11,97,9,"_primeCode"],[89,21,97,19],[89,24,97,22],[89,25,97,23],[90,4,98,2],[91,2,99,0],[92,2,100,0,"Object"],[92,8,100,6],[92,9,100,7,"defineProperty"],[92,23,100,21],[92,24,100,22,"DH"],[92,26,100,24],[92,27,100,25,"prototype"],[92,36,100,34],[92,38,100,36],[92,51,100,49],[92,53,100,51],[93,4,101,2,"enumerable"],[93,14,101,12],[93,16,101,14],[93,20,101,18],[94,4,102,2,"get"],[94,7,102,5],[94,9,102,7],[94,18,102,7,"get"],[94,19,102,7],[94,21,102,19],[95,6,103,4],[95,10,103,8],[95,17,103,15],[95,21,103,19],[95,22,103,20,"_primeCode"],[95,32,103,30],[95,37,103,35],[95,45,103,43],[95,47,103,45],[96,8,104,6],[96,12,104,10],[96,13,104,11,"_primeCode"],[96,23,104,21],[96,26,104,24,"checkPrime"],[96,36,104,34],[96,37,104,35],[96,41,104,39],[96,42,104,40,"__prime"],[96,49,104,47],[96,51,104,49],[96,55,104,53],[96,56,104,54,"__gen"],[96,61,104,59],[96,62,104,60],[97,6,105,4],[98,6,106,4],[98,13,106,11],[98,17,106,15],[98,18,106,16,"_primeCode"],[98,28,106,26],[99,4,107,2],[100,2,108,0],[100,3,108,1],[100,4,108,2],[101,2,109,0,"DH"],[101,4,109,2],[101,5,109,3,"prototype"],[101,14,109,12],[101,15,109,13,"generateKeys"],[101,27,109,25],[101,30,109,28],[101,42,109,40],[102,4,110,2],[102,8,110,6],[102,9,110,7],[102,13,110,11],[102,14,110,12,"_priv"],[102,19,110,17],[102,21,110,19],[103,6,111,4],[103,10,111,8],[103,11,111,9,"_priv"],[103,16,111,14],[103,19,111,17],[103,23,111,21,"BN"],[103,25,111,23],[103,26,111,24,"randomBytes"],[103,37,111,35],[103,38,111,36],[103,42,111,40],[103,43,111,41,"_primeLen"],[103,52,111,50],[103,53,111,51],[103,54,111,52],[104,4,112,2],[105,4,113,2],[105,8,113,6],[105,9,113,7,"_pub"],[105,13,113,11],[105,16,113,14],[105,20,113,18],[105,21,113,19,"_gen"],[105,25,113,23],[105,26,113,24,"toRed"],[105,31,113,29],[105,32,113,30],[105,36,113,34],[105,37,113,35,"_prime"],[105,43,113,41],[105,44,113,42],[105,45,113,43,"redPow"],[105,51,113,49],[105,52,113,50],[105,56,113,54],[105,57,113,55,"_priv"],[105,62,113,60],[105,63,113,61],[105,64,113,62,"fromRed"],[105,71,113,69],[105,72,113,70],[105,73,113,71],[106,4,114,2],[106,11,114,9],[106,15,114,13],[106,16,114,14,"getPublicKey"],[106,28,114,26],[106,29,114,27],[106,30,114,28],[107,2,115,0],[107,3,115,1],[108,2,117,0,"DH"],[108,4,117,2],[108,5,117,3,"prototype"],[108,14,117,12],[108,15,117,13,"computeSecret"],[108,28,117,26],[108,31,117,29],[108,41,117,39,"other"],[108,46,117,44],[108,48,117,46],[109,4,118,2,"other"],[109,9,118,7],[109,12,118,10],[109,16,118,14,"BN"],[109,18,118,16],[109,19,118,17,"other"],[109,24,118,22],[109,25,118,23],[110,4,119,2,"other"],[110,9,119,7],[110,12,119,10,"other"],[110,17,119,15],[110,18,119,16,"toRed"],[110,23,119,21],[110,24,119,22],[110,28,119,26],[110,29,119,27,"_prime"],[110,35,119,33],[110,36,119,34],[111,4,120,2],[111,8,120,6,"secret"],[111,14,120,12],[111,17,120,15,"other"],[111,22,120,20],[111,23,120,21,"redPow"],[111,29,120,27],[111,30,120,28],[111,34,120,32],[111,35,120,33,"_priv"],[111,40,120,38],[111,41,120,39],[111,42,120,40,"fromRed"],[111,49,120,47],[111,50,120,48],[111,51,120,49],[112,4,121,2],[112,8,121,6,"out"],[112,11,121,9],[112,14,121,12],[112,18,121,16,"Buffer"],[112,24,121,22],[112,25,121,23,"secret"],[112,31,121,29],[112,32,121,30,"toArray"],[112,39,121,37],[112,40,121,38],[112,41,121,39],[112,42,121,40],[113,4,122,2],[113,8,122,6,"prime"],[113,13,122,11],[113,16,122,14],[113,20,122,18],[113,21,122,19,"getPrime"],[113,29,122,27],[113,30,122,28],[113,31,122,29],[114,4,123,2],[114,8,123,6,"out"],[114,11,123,9],[114,12,123,10,"length"],[114,18,123,16],[114,21,123,19,"prime"],[114,26,123,24],[114,27,123,25,"length"],[114,33,123,31],[114,35,123,33],[115,6,124,4],[115,10,124,8,"front"],[115,15,124,13],[115,18,124,16],[115,22,124,20,"Buffer"],[115,28,124,26],[115,29,124,27,"prime"],[115,34,124,32],[115,35,124,33,"length"],[115,41,124,39],[115,44,124,42,"out"],[115,47,124,45],[115,48,124,46,"length"],[115,54,124,52],[115,55,124,53],[116,6,125,4,"front"],[116,11,125,9],[116,12,125,10,"fill"],[116,16,125,14],[116,17,125,15],[116,18,125,16],[116,19,125,17],[117,6,126,4,"out"],[117,9,126,7],[117,12,126,10,"Buffer"],[117,18,126,16],[117,19,126,17,"concat"],[117,25,126,23],[117,26,126,24],[117,27,126,25,"front"],[117,32,126,30],[117,34,126,32,"out"],[117,37,126,35],[117,38,126,36],[117,39,126,37],[118,4,127,2],[119,4,128,2],[119,11,128,9,"out"],[119,14,128,12],[120,2,129,0],[120,3,129,1],[121,2,131,0,"DH"],[121,4,131,2],[121,5,131,3,"prototype"],[121,14,131,12],[121,15,131,13,"getPublicKey"],[121,27,131,25],[121,30,131,28],[121,39,131,37,"getPublicKey"],[121,51,131,49,"getPublicKey"],[121,52,131,50,"enc"],[121,55,131,53],[121,57,131,55],[122,4,132,2],[122,11,132,9,"formatReturnValue"],[122,28,132,26],[122,29,132,27],[122,33,132,31],[122,34,132,32,"_pub"],[122,38,132,36],[122,40,132,38,"enc"],[122,43,132,41],[122,44,132,42],[123,2,133,0],[123,3,133,1],[124,2,135,0,"DH"],[124,4,135,2],[124,5,135,3,"prototype"],[124,14,135,12],[124,15,135,13,"getPrivateKey"],[124,28,135,26],[124,31,135,29],[124,40,135,38,"getPrivateKey"],[124,53,135,51,"getPrivateKey"],[124,54,135,52,"enc"],[124,57,135,55],[124,59,135,57],[125,4,136,2],[125,11,136,9,"formatReturnValue"],[125,28,136,26],[125,29,136,27],[125,33,136,31],[125,34,136,32,"_priv"],[125,39,136,37],[125,41,136,39,"enc"],[125,44,136,42],[125,45,136,43],[126,2,137,0],[126,3,137,1],[127,2,139,0,"DH"],[127,4,139,2],[127,5,139,3,"prototype"],[127,14,139,12],[127,15,139,13,"getPrime"],[127,23,139,21],[127,26,139,24],[127,36,139,34,"enc"],[127,39,139,37],[127,41,139,39],[128,4,140,2],[128,11,140,9,"formatReturnValue"],[128,28,140,26],[128,29,140,27],[128,33,140,31],[128,34,140,32,"__prime"],[128,41,140,39],[128,43,140,41,"enc"],[128,46,140,44],[128,47,140,45],[129,2,141,0],[129,3,141,1],[130,2,143,0,"DH"],[130,4,143,2],[130,5,143,3,"prototype"],[130,14,143,12],[130,15,143,13,"getGenerator"],[130,27,143,25],[130,30,143,28],[130,40,143,38,"enc"],[130,43,143,41],[130,45,143,43],[131,4,144,2],[131,11,144,9,"formatReturnValue"],[131,28,144,26],[131,29,144,27],[131,33,144,31],[131,34,144,32,"_gen"],[131,38,144,36],[131,40,144,38,"enc"],[131,43,144,41],[131,44,144,42],[132,2,145,0],[132,3,145,1],[133,2,147,0,"DH"],[133,4,147,2],[133,5,147,3,"prototype"],[133,14,147,12],[133,15,147,13,"setGenerator"],[133,27,147,25],[133,30,147,28],[133,40,147,38,"gen"],[133,43,147,41],[133,45,147,43,"enc"],[133,48,147,46],[133,50,147,48],[134,4,148,2,"enc"],[134,7,148,5],[134,10,148,8,"enc"],[134,13,148,11],[134,17,148,15],[134,23,148,21],[135,4,149,2],[135,8,149,6],[135,9,149,7,"Buffer"],[135,15,149,13],[135,16,149,14,"isBuffer"],[135,24,149,22],[135,25,149,23,"gen"],[135,28,149,26],[135,29,149,27],[135,31,149,29],[136,6,150,4,"gen"],[136,9,150,7],[136,12,150,10],[136,16,150,14,"Buffer"],[136,22,150,20],[136,23,150,21,"gen"],[136,26,150,24],[136,28,150,26,"enc"],[136,31,150,29],[136,32,150,30],[137,4,151,2],[138,4,152,2],[138,8,152,6],[138,9,152,7,"__gen"],[138,14,152,12],[138,17,152,15,"gen"],[138,20,152,18],[139,4,153,2],[139,8,153,6],[139,9,153,7,"_gen"],[139,13,153,11],[139,16,153,14],[139,20,153,18,"BN"],[139,22,153,20],[139,23,153,21,"gen"],[139,26,153,24],[139,27,153,25],[140,4,154,2],[140,11,154,9],[140,15,154,13],[141,2,155,0],[141,3,155,1],[142,2,157,0],[142,11,157,9,"formatReturnValue"],[142,28,157,26,"formatReturnValue"],[142,29,157,27,"bn"],[142,31,157,29],[142,33,157,31,"enc"],[142,36,157,34],[142,38,157,36],[143,4,158,2],[143,8,158,6,"buf"],[143,11,158,9],[143,14,158,12],[143,18,158,16,"Buffer"],[143,24,158,22],[143,25,158,23,"bn"],[143,27,158,25],[143,28,158,26,"toArray"],[143,35,158,33],[143,36,158,34],[143,37,158,35],[143,38,158,36],[144,4,159,2],[144,8,159,6],[144,9,159,7,"enc"],[144,12,159,10],[144,14,159,12],[145,6,160,4],[145,13,160,11,"buf"],[145,16,160,14],[146,4,161,2],[146,5,161,3],[146,11,161,9],[147,6,162,4],[147,13,162,11,"buf"],[147,16,162,14],[147,17,162,15,"toString"],[147,25,162,23],[147,26,162,24,"enc"],[147,29,162,27],[147,30,162,28],[148,4,163,2],[149,2,164,0],[150,0,164,1],[150,3]],"functionMap":{"names":["<global>","setPublicKey","setPrivateKey","checkPrime","DH","Object.defineProperty$argument_2.get","DH.prototype.generateKeys","DH.prototype.computeSecret","getPublicKey","getPrivateKey","DH.prototype.getPrime","DH.prototype.getGenerator","DH.prototype.setGenerator","formatReturnValue"],"mappings":"AAA;ACY;CDO;AEE;CFO;AGG;CHmD;AIE;CJc;OKG;GLK;4BME;CNM;6BOE;CPY;4BQE;CRE;6BSE;CTE;wBUE;CVE;4BWE;CXE;4BYE;CZQ;AaE;CbO"}},"type":"js/module"}]}