{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":51,"index":125}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../instructions/burn.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":126},"end":{"line":3,"column":64,"index":190}}],"key":"qJkJL95qoHyrw9uxo0TXj7Sj1yo=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":191},"end":{"line":4,"column":43,"index":234}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.burn = burn;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[1], \"../constants.js\");\n  var _burn = require(_dependencyMap[2], \"../instructions/burn.js\");\n  var _internal = require(_dependencyMap[3], \"./internal.js\");\n  /**\n   * Burn tokens from an account\n   *\n   * @param connection     Connection to use\n   * @param payer          Payer of the transaction fees\n   * @param account        Account to burn tokens from\n   * @param mint           Mint for the account\n   * @param owner          Account owner\n   * @param amount         Amount to burn\n   * @param multiSigners   Signing accounts if `owner` is a multisig\n   * @param confirmOptions Options for confirming the transaction\n   * @param programId      SPL Token program account\n   *\n   * @return Signature of the confirmed transaction\n   */\n  async function burn(connection, payer, account, mint, owner, amount, multiSigners = [], confirmOptions, programId = _constants.TOKEN_PROGRAM_ID) {\n    const [ownerPublicKey, signers] = (0, _internal.getSigners)(owner, multiSigners);\n    const transaction = new _web.Transaction().add((0, _burn.createBurnInstruction)(account, mint, ownerPublicKey, amount, multiSigners, programId));\n    return await (0, _web.sendAndConfirmTransaction)(connection, transaction, [payer, ...signers], confirmOptions);\n  }\n});","lineCount":30,"map":[[6,2,1,0],[6,6,1,0,"_web"],[6,10,1,0],[6,13,1,0,"require"],[6,20,1,0],[6,21,1,0,"_dependencyMap"],[6,35,1,0],[7,2,2,0],[7,6,2,0,"_constants"],[7,16,2,0],[7,19,2,0,"require"],[7,26,2,0],[7,27,2,0,"_dependencyMap"],[7,41,2,0],[8,2,3,0],[8,6,3,0,"_burn"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"_internal"],[9,15,4,0],[9,18,4,0,"require"],[9,25,4,0],[9,26,4,0,"_dependencyMap"],[9,40,4,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,2,20,7],[25,17,20,22,"burn"],[25,21,20,26,"burn"],[25,22,20,27,"connection"],[25,32,20,37],[25,34,20,39,"payer"],[25,39,20,44],[25,41,20,46,"account"],[25,48,20,53],[25,50,20,55,"mint"],[25,54,20,59],[25,56,20,61,"owner"],[25,61,20,66],[25,63,20,68,"amount"],[25,69,20,74],[25,71,20,76,"multiSigners"],[25,83,20,88],[25,86,20,91],[25,88,20,93],[25,90,20,95,"confirmOptions"],[25,104,20,109],[25,106,20,111,"programId"],[25,115,20,120],[25,118,20,123,"TOKEN_PROGRAM_ID"],[25,145,20,139],[25,147,20,141],[26,4,21,4],[26,10,21,10],[26,11,21,11,"ownerPublicKey"],[26,25,21,25],[26,27,21,27,"signers"],[26,34,21,34],[26,35,21,35],[26,38,21,38],[26,42,21,38,"getSigners"],[26,62,21,48],[26,64,21,49,"owner"],[26,69,21,54],[26,71,21,56,"multiSigners"],[26,83,21,68],[26,84,21,69],[27,4,22,4],[27,10,22,10,"transaction"],[27,21,22,21],[27,24,22,24],[27,28,22,28,"Transaction"],[27,44,22,39],[27,45,22,40],[27,46,22,41],[27,47,22,42,"add"],[27,50,22,45],[27,51,22,46],[27,55,22,46,"createBurnInstruction"],[27,82,22,67],[27,84,22,68,"account"],[27,91,22,75],[27,93,22,77,"mint"],[27,97,22,81],[27,99,22,83,"ownerPublicKey"],[27,113,22,97],[27,115,22,99,"amount"],[27,121,22,105],[27,123,22,107,"multiSigners"],[27,135,22,119],[27,137,22,121,"programId"],[27,146,22,130],[27,147,22,131],[27,148,22,132],[28,4,23,4],[28,11,23,11],[28,17,23,17],[28,21,23,17,"sendAndConfirmTransaction"],[28,51,23,42],[28,53,23,43,"connection"],[28,63,23,53],[28,65,23,55,"transaction"],[28,76,23,66],[28,78,23,68],[28,79,23,69,"payer"],[28,84,23,74],[28,86,23,76],[28,89,23,79,"signers"],[28,96,23,86],[28,97,23,87],[28,99,23,89,"confirmOptions"],[28,113,23,103],[28,114,23,104],[29,2,24,0],[30,0,24,1],[30,3]],"functionMap":{"names":["<global>","burn"],"mappings":"AAA;OCmB;CDI"}},"type":"js/module"}]}