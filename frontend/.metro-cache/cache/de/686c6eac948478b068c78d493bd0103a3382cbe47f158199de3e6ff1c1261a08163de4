{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":57,"index":109}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":51,"index":161}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":170,"index":332}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":333},"end":{"line":5,"column":43,"index":376}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":377},"end":{"line":6,"column":46,"index":423}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createFreezeAccountInstruction = createFreezeAccountInstruction;\n  exports.decodeFreezeAccountInstruction = decodeFreezeAccountInstruction;\n  exports.decodeFreezeAccountInstructionUnchecked = decodeFreezeAccountInstructionUnchecked;\n  exports.freezeAccountInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _internal = require(_dependencyMap[4], \"./internal.js\");\n  var _types = require(_dependencyMap[5], \"./types.js\");\n  /** TODO: docs */\n  const freezeAccountInstructionData = exports.freezeAccountInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction')]);\n  /**\n   * Construct a FreezeAccount instruction\n   *\n   * @param account      Account to freeze\n   * @param mint         Mint account\n   * @param authority    Mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createFreezeAccountInstruction(account, mint, authority, multiSigners = [], programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = (0, _internal.addSigners)([{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }], authority, multiSigners);\n    const data = Buffer.alloc(freezeAccountInstructionData.span);\n    freezeAccountInstructionData.encode({\n      instruction: _types.TokenInstruction.FreezeAccount\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode a FreezeAccount instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeFreezeAccountInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== freezeAccountInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        account,\n        mint,\n        authority,\n        multiSigners\n      },\n      data\n    } = decodeFreezeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.FreezeAccount) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        authority,\n        multiSigners\n      },\n      data\n    };\n  }\n  /**\n   * Decode a FreezeAccount instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeFreezeAccountInstructionUnchecked({\n    programId,\n    keys: [account, mint, authority, ...multiSigners],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        account,\n        mint,\n        authority,\n        multiSigners\n      },\n      data: freezeAccountInstructionData.decode(data)\n    };\n  }\n});","lineCount":105,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_web"],[10,10,2,0],[10,13,2,0,"require"],[10,20,2,0],[10,21,2,0,"_dependencyMap"],[10,35,2,0],[11,2,3,0],[11,6,3,0,"_constants"],[11,16,3,0],[11,19,3,0,"require"],[11,26,3,0],[11,27,3,0,"_dependencyMap"],[11,41,3,0],[12,2,4,0],[12,6,4,0,"_errors"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,0],[13,6,5,0,"_internal"],[13,15,5,0],[13,18,5,0,"require"],[13,25,5,0],[13,26,5,0,"_dependencyMap"],[13,40,5,0],[14,2,6,0],[14,6,6,0,"_types"],[14,12,6,0],[14,15,6,0,"require"],[14,22,6,0],[14,23,6,0,"_dependencyMap"],[14,37,6,0],[15,2,7,0],[16,2,8,7],[16,8,8,13,"freezeAccountInstructionData"],[16,36,8,41],[16,39,8,41,"exports"],[16,46,8,41],[16,47,8,41,"freezeAccountInstructionData"],[16,75,8,41],[16,78,8,44],[16,82,8,44,"struct"],[16,102,8,50],[16,104,8,51],[16,105,8,52],[16,109,8,52,"u8"],[16,125,8,54],[16,127,8,55],[16,140,8,68],[16,141,8,69],[16,142,8,70],[16,143,8,71],[17,2,9,0],[18,0,10,0],[19,0,11,0],[20,0,12,0],[21,0,13,0],[22,0,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,2,20,7],[28,11,20,16,"createFreezeAccountInstruction"],[28,41,20,46,"createFreezeAccountInstruction"],[28,42,20,47,"account"],[28,49,20,54],[28,51,20,56,"mint"],[28,55,20,60],[28,57,20,62,"authority"],[28,66,20,71],[28,68,20,73,"multiSigners"],[28,80,20,85],[28,83,20,88],[28,85,20,90],[28,87,20,92,"programId"],[28,96,20,101],[28,99,20,104,"TOKEN_PROGRAM_ID"],[28,126,20,120],[28,128,20,122],[29,4,21,4],[29,10,21,10,"keys"],[29,14,21,14],[29,17,21,17],[29,21,21,17,"addSigners"],[29,41,21,27],[29,43,21,28],[29,44,22,8],[30,6,22,10,"pubkey"],[30,12,22,16],[30,14,22,18,"account"],[30,21,22,25],[31,6,22,27,"isSigner"],[31,14,22,35],[31,16,22,37],[31,21,22,42],[32,6,22,44,"isWritable"],[32,16,22,54],[32,18,22,56],[33,4,22,61],[33,5,22,62],[33,7,23,8],[34,6,23,10,"pubkey"],[34,12,23,16],[34,14,23,18,"mint"],[34,18,23,22],[35,6,23,24,"isSigner"],[35,14,23,32],[35,16,23,34],[35,21,23,39],[36,6,23,41,"isWritable"],[36,16,23,51],[36,18,23,53],[37,4,23,59],[37,5,23,60],[37,6,24,5],[37,8,24,7,"authority"],[37,17,24,16],[37,19,24,18,"multiSigners"],[37,31,24,30],[37,32,24,31],[38,4,25,4],[38,10,25,10,"data"],[38,14,25,14],[38,17,25,17,"Buffer"],[38,23,25,23],[38,24,25,24,"alloc"],[38,29,25,29],[38,30,25,30,"freezeAccountInstructionData"],[38,58,25,58],[38,59,25,59,"span"],[38,63,25,63],[38,64,25,64],[39,4,26,4,"freezeAccountInstructionData"],[39,32,26,32],[39,33,26,33,"encode"],[39,39,26,39],[39,40,26,40],[40,6,26,42,"instruction"],[40,17,26,53],[40,19,26,55,"TokenInstruction"],[40,42,26,71],[40,43,26,72,"FreezeAccount"],[41,4,26,86],[41,5,26,87],[41,7,26,89,"data"],[41,11,26,93],[41,12,26,94],[42,4,27,4],[42,11,27,11],[42,15,27,15,"TransactionInstruction"],[42,42,27,37],[42,43,27,38],[43,6,27,40,"keys"],[43,10,27,44],[44,6,27,46,"programId"],[44,15,27,55],[45,6,27,57,"data"],[46,4,27,62],[46,5,27,63],[46,6,27,64],[47,2,28,0],[48,2,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,2,37,7],[56,11,37,16,"decodeFreezeAccountInstruction"],[56,41,37,46,"decodeFreezeAccountInstruction"],[56,42,37,47,"instruction"],[56,53,37,58],[56,55,37,60,"programId"],[56,64,37,69],[56,67,37,72,"TOKEN_PROGRAM_ID"],[56,94,37,88],[56,96,37,90],[57,4,38,4],[57,8,38,8],[57,9,38,9,"instruction"],[57,20,38,20],[57,21,38,21,"programId"],[57,30,38,30],[57,31,38,31,"equals"],[57,37,38,37],[57,38,38,38,"programId"],[57,47,38,47],[57,48,38,48],[57,50,39,8],[57,56,39,14],[57,60,39,18,"TokenInvalidInstructionProgramError"],[57,103,39,53],[57,104,39,54],[57,105,39,55],[58,4,40,4],[58,8,40,8,"instruction"],[58,19,40,19],[58,20,40,20,"data"],[58,24,40,24],[58,25,40,25,"length"],[58,31,40,31],[58,36,40,36,"freezeAccountInstructionData"],[58,64,40,64],[58,65,40,65,"span"],[58,69,40,69],[58,71,41,8],[58,77,41,14],[58,81,41,18,"TokenInvalidInstructionDataError"],[58,121,41,50],[58,122,41,51],[58,123,41,52],[59,4,42,4],[59,10,42,10],[60,6,42,12,"keys"],[60,10,42,16],[60,12,42,18],[61,8,42,20,"account"],[61,15,42,27],[62,8,42,29,"mint"],[62,12,42,33],[63,8,42,35,"authority"],[63,17,42,44],[64,8,42,46,"multiSigners"],[65,6,42,59],[65,7,42,60],[66,6,42,62,"data"],[67,4,42,68],[67,5,42,69],[67,8,42,72,"decodeFreezeAccountInstructionUnchecked"],[67,47,42,111],[67,48,42,112,"instruction"],[67,59,42,123],[67,60,42,124],[68,4,43,4],[68,8,43,8,"data"],[68,12,43,12],[68,13,43,13,"instruction"],[68,24,43,24],[68,29,43,29,"TokenInstruction"],[68,52,43,45],[68,53,43,46,"FreezeAccount"],[68,66,43,59],[68,68,44,8],[68,74,44,14],[68,78,44,18,"TokenInvalidInstructionTypeError"],[68,118,44,50],[68,119,44,51],[68,120,44,52],[69,4,45,4],[69,8,45,8],[69,9,45,9,"account"],[69,16,45,16],[69,20,45,20],[69,21,45,21,"mint"],[69,25,45,25],[69,29,45,29],[69,30,45,30,"authority"],[69,39,45,39],[69,41,46,8],[69,47,46,14],[69,51,46,18,"TokenInvalidInstructionKeysError"],[69,91,46,50],[69,92,46,51],[69,93,46,52],[70,4,47,4],[71,4,48,4],[71,11,48,11],[72,6,49,8,"programId"],[72,15,49,17],[73,6,50,8,"keys"],[73,10,50,12],[73,12,50,14],[74,8,51,12,"account"],[74,15,51,19],[75,8,52,12,"mint"],[75,12,52,16],[76,8,53,12,"authority"],[76,17,53,21],[77,8,54,12,"multiSigners"],[78,6,55,8],[78,7,55,9],[79,6,56,8,"data"],[80,4,57,4],[80,5,57,5],[81,2,58,0],[82,2,59,0],[83,0,60,0],[84,0,61,0],[85,0,62,0],[86,0,63,0],[87,0,64,0],[88,0,65,0],[89,2,66,7],[89,11,66,16,"decodeFreezeAccountInstructionUnchecked"],[89,50,66,55,"decodeFreezeAccountInstructionUnchecked"],[89,51,66,56],[90,4,66,58,"programId"],[90,13,66,67],[91,4,66,69,"keys"],[91,8,66,73],[91,10,66,75],[91,11,66,76,"account"],[91,18,66,83],[91,20,66,85,"mint"],[91,24,66,89],[91,26,66,91,"authority"],[91,35,66,100],[91,37,66,102],[91,40,66,105,"multiSigners"],[91,52,66,117],[91,53,66,118],[92,4,66,120,"data"],[93,2,66,126],[93,3,66,127],[93,5,66,129],[94,4,67,4],[94,11,67,11],[95,6,68,8,"programId"],[95,15,68,17],[96,6,69,8,"keys"],[96,10,69,12],[96,12,69,14],[97,8,70,12,"account"],[97,15,70,19],[98,8,71,12,"mint"],[98,12,71,16],[99,8,72,12,"authority"],[99,17,72,21],[100,8,73,12,"multiSigners"],[101,6,74,8],[101,7,74,9],[102,6,75,8,"data"],[102,10,75,12],[102,12,75,14,"freezeAccountInstructionData"],[102,40,75,42],[102,41,75,43,"decode"],[102,47,75,49],[102,48,75,50,"data"],[102,52,75,54],[103,4,76,4],[103,5,76,5],[104,2,77,0],[105,0,77,1],[105,3]],"functionMap":{"names":["<global>","createFreezeAccountInstruction","decodeFreezeAccountInstruction","decodeFreezeAccountInstructionUnchecked"],"mappings":"AAA;OCmB;CDQ;OES;CFqB;OGQ;CHW"}},"type":"js/module"}]}