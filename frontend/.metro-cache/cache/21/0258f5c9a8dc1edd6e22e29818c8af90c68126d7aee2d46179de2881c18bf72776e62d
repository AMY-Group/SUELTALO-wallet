{"dependencies":[{"name":"@noble/hashes/sha2.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18,"index":826},"end":{"line":14,"column":50,"index":858}}],"key":"vu3GrmX7IyKWLC5hFxoq1UnCcJ8=","exportNames":["*"]}},{"name":"@noble/hashes/utils.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":19,"index":879},"end":{"line":15,"column":52,"index":912}}],"key":"p7DyZ5tsNLZq/3XRYBR2CQCL188=","exportNames":["*"]}},{"name":"./abstract/curve.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":19,"index":933},"end":{"line":16,"column":49,"index":963}}],"key":"uG6BB1yHvnPNURhjNoN1pAfNFaM=","exportNames":["*"]}},{"name":"./abstract/edwards.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":21,"index":986},"end":{"line":17,"column":53,"index":1018}}],"key":"k0DK349sxldzfwgSnX/LZHIvzB4=","exportNames":["*"]}},{"name":"./abstract/hash-to-curve.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":27,"index":1047},"end":{"line":18,"column":65,"index":1085}}],"key":"V7aW6RTrVrmfWtSF3dQ4BGgJnvk=","exportNames":["*"]}},{"name":"./abstract/modular.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":21,"index":1108},"end":{"line":19,"column":53,"index":1140}}],"key":"+wqfTwYuIjwX8vzKXzerMvYz6ok=","exportNames":["*"]}},{"name":"./abstract/montgomery.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":24,"index":1166},"end":{"line":20,"column":59,"index":1201}}],"key":"Cyntt6J/58VrRo+pvu/rGjpR1VM=","exportNames":["*"]}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":19,"index":1222},"end":{"line":21,"column":40,"index":1243}}],"key":"v6h+l9IeOWbEcXdtKQqd2f4now4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hash_to_ristretto255 = exports.hashToRistretto255 = exports.encodeToCurve = exports.hashToCurve = exports.RistrettoPoint = exports.edwardsToMontgomery = exports.ED25519_TORSION_SUBGROUP = exports.ristretto255_hasher = exports.ristretto255 = exports.ed25519_hasher = exports.x25519 = exports.ed25519ph = exports.ed25519ctx = exports.ed25519 = void 0;\n  exports.edwardsToMontgomeryPub = edwardsToMontgomeryPub;\n  exports.edwardsToMontgomeryPriv = edwardsToMontgomeryPriv;\n  /**\n   * ed25519 Twisted Edwards curve with following addons:\n   * - X25519 ECDH\n   * - Ristretto cofactor elimination\n   * - Elligator hash-to-group / point indistinguishability\n   * @module\n   */\n  /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n  const sha2_js_1 = require(_dependencyMap[0], \"@noble/hashes/sha2.js\");\n  const utils_js_1 = require(_dependencyMap[1], \"@noble/hashes/utils.js\");\n  const curve_ts_1 = require(_dependencyMap[2], \"./abstract/curve.js\");\n  const edwards_ts_1 = require(_dependencyMap[3], \"./abstract/edwards.js\");\n  const hash_to_curve_ts_1 = require(_dependencyMap[4], \"./abstract/hash-to-curve.js\");\n  const modular_ts_1 = require(_dependencyMap[5], \"./abstract/modular.js\");\n  const montgomery_ts_1 = require(_dependencyMap[6], \"./abstract/montgomery.js\");\n  const utils_ts_1 = require(_dependencyMap[7], \"./utils.js\");\n  // prettier-ignore\n  const _0n = /* @__PURE__ */BigInt(0),\n    _1n = BigInt(1),\n    _2n = BigInt(2),\n    _3n = BigInt(3);\n  // prettier-ignore\n  const _5n = BigInt(5),\n    _8n = BigInt(8);\n  // P = 2n**255n-19n\n  const ed25519_CURVE_p = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed');\n  // N = 2n**252n + 27742317777372353535851937790883648493n\n  // a = Fp.create(BigInt(-1))\n  // d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\n  const ed25519_CURVE = /* @__PURE__ */(() => ({\n    p: ed25519_CURVE_p,\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658')\n  }))();\n  function ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10),\n      _20n = BigInt(20),\n      _40n = BigInt(40),\n      _80n = BigInt(80);\n    const P = ed25519_CURVE_p;\n    const x2 = x * x % P;\n    const b2 = x2 * x % P; // x^3, 11\n    const b4 = (0, modular_ts_1.pow2)(b2, _2n, P) * b2 % P; // x^15, 1111\n    const b5 = (0, modular_ts_1.pow2)(b4, _1n, P) * x % P; // x^31\n    const b10 = (0, modular_ts_1.pow2)(b5, _5n, P) * b5 % P;\n    const b20 = (0, modular_ts_1.pow2)(b10, _10n, P) * b10 % P;\n    const b40 = (0, modular_ts_1.pow2)(b20, _20n, P) * b20 % P;\n    const b80 = (0, modular_ts_1.pow2)(b40, _40n, P) * b40 % P;\n    const b160 = (0, modular_ts_1.pow2)(b80, _80n, P) * b80 % P;\n    const b240 = (0, modular_ts_1.pow2)(b160, _80n, P) * b80 % P;\n    const b250 = (0, modular_ts_1.pow2)(b240, _10n, P) * b10 % P;\n    const pow_p_5_8 = (0, modular_ts_1.pow2)(b250, _2n, P) * x % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return {\n      pow_p_5_8,\n      b2\n    };\n  }\n  function adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n  }\n  // √(-1) aka √(a) aka 2^((p-1)/4)\n  // Fp.sqrt(Fp.neg(1))\n  const ED25519_SQRT_M1 = /* @__PURE__ */BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n  // sqrt(u/v)\n  function uvRatio(u, v) {\n    const P = ed25519_CURVE_p;\n    const v3 = (0, modular_ts_1.mod)(v * v * v, P); // v³\n    const v7 = (0, modular_ts_1.mod)(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = (0, modular_ts_1.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = (0, modular_ts_1.mod)(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = (0, modular_ts_1.mod)(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === (0, modular_ts_1.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === (0, modular_ts_1.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1) x = root1;\n    if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n    if ((0, modular_ts_1.isNegativeLE)(x, P)) x = (0, modular_ts_1.mod)(-x, P);\n    return {\n      isValid: useRoot1 || useRoot2,\n      value: x\n    };\n  }\n  const Fp = /* @__PURE__ */(() => (0, modular_ts_1.Field)(ed25519_CURVE.p, {\n    isLE: true\n  }))();\n  const Fn = /* @__PURE__ */(() => (0, modular_ts_1.Field)(ed25519_CURVE.n, {\n    isLE: true\n  }))();\n  const ed25519Defaults = /* @__PURE__ */(() => ({\n    ...ed25519_CURVE,\n    Fp,\n    hash: sha2_js_1.sha512,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio\n  }))();\n  /**\n   * ed25519 curve with EdDSA signatures.\n   * @example\n   * import { ed25519 } from '@noble/curves/ed25519';\n   * const { secretKey, publicKey } = ed25519.keygen();\n   * const msg = new TextEncoder().encode('hello');\n   * const sig = ed25519.sign(msg, priv);\n   * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n   * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n   */\n  exports.ed25519 = (() => (0, edwards_ts_1.twistedEdwards)(ed25519Defaults))();\n  function ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255) throw new Error('Context is too big');\n    return (0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n  }\n  /** Context of ed25519. Uses context for domain separation. */\n  exports.ed25519ctx = (() => (0, edwards_ts_1.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain\n  }))();\n  /** Prehashed version of ed25519. Accepts already-hashed messages in sign() and verify(). */\n  exports.ed25519ph = (() => (0, edwards_ts_1.twistedEdwards)(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha2_js_1.sha512\n  })))();\n  /**\n   * ECDH using curve25519 aka x25519.\n   * @example\n   * import { x25519 } from '@noble/curves/ed25519';\n   * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n   * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n   * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n   * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n   * x25519.getPublicKey(x25519.utils.randomSecretKey());\n   */\n  exports.x25519 = (() => {\n    const P = Fp.ORDER;\n    return (0, montgomery_ts_1.montgomery)({\n      P,\n      type: 'x25519',\n      powPminus2: x => {\n        // x^(p-2) aka x^(2^255-21)\n        const {\n          pow_p_5_8,\n          b2\n        } = ed25519_pow_2_252_3(x);\n        return (0, modular_ts_1.mod)((0, modular_ts_1.pow2)(pow_p_5_8, _3n, P) * b2, P);\n      },\n      adjustScalarBytes\n    });\n  })();\n  // Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n  // NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n  // SageMath returns different root first and everything falls apart\n  const ELL2_C1 = /* @__PURE__ */(() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n  const ELL2_C2 = /* @__PURE__ */(() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\n  const ELL2_C3 = /* @__PURE__ */(() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n  // prettier-ignore\n  function map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return {\n      xMn: xn,\n      xMd: xd,\n      yMn: y,\n      yMd: _1n\n    }; //  39. return (xn, xd, y, 1)\n  }\n  const ELL2_C1_EDWARDS = /* @__PURE__ */(() => (0, modular_ts_1.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\n  function map_to_curve_elligator2_edwards25519(u) {\n    const {\n      xMn,\n      xMd,\n      yMn,\n      yMd\n    } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = (0, modular_ts_1.FpInvertBatch)(Fp, [xd, yd], true); // batch division\n    return {\n      x: Fp.mul(xn, xd_inv),\n      y: Fp.mul(yn, yd_inv)\n    }; //  13. return (xn, xd, yn, yd)\n  }\n  /** Hashing to ed25519 points / field. RFC 9380 methods. */\n  exports.ed25519_hasher = (() => (0, hash_to_curve_ts_1.createHasher)(exports.ed25519.Point, scalars => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: ed25519_CURVE_p,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha2_js_1.sha512\n  }))();\n  // √(-1) aka √(a) aka 2^((p-1)/4)\n  const SQRT_M1 = ED25519_SQRT_M1;\n  // √(ad - 1)\n  const SQRT_AD_MINUS_ONE = /* @__PURE__ */BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n  // 1 / √(a-d)\n  const INVSQRT_A_MINUS_D = /* @__PURE__ */BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n  // 1-d²\n  const ONE_MINUS_D_SQ = /* @__PURE__ */BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n  // (d-1)²\n  const D_MINUS_ONE_SQ = /* @__PURE__ */BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n  // Calculates 1/√(number)\n  const invertSqrt = number => uvRatio(_1n, number);\n  const MAX_255B = /* @__PURE__ */BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n  const bytes255ToNumberLE = bytes => exports.ed25519.Point.Fp.create((0, utils_ts_1.bytesToNumberLE)(bytes) & MAX_255B);\n  /**\n   * Computes Elligator map for Ristretto255.\n   * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n   * the [website](https://ristretto.group/formulas/elligator.html).\n   */\n  function calcElligatorRistrettoMap(r0) {\n    const {\n      d\n    } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = n => Fp.create(n);\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let {\n      isValid: Ns_D_is_sq,\n      value: s\n    } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!(0, modular_ts_1.isNegativeLE)(s_, P)) s_ = mod(-s_);\n    if (!Ns_D_is_sq) s = s_; // 7\n    if (!Ns_D_is_sq) c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new exports.ed25519.Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n  }\n  function ristretto255_map(bytes) {\n    (0, utils_js_1.abytes)(bytes, 64);\n    const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new _RistrettoPoint(R1.add(R2));\n  }\n  /**\n   * Wrapper over Edwards Point for ristretto255.\n   *\n   * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n   * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n   * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n   * but it should work in its own namespace: do not combine those two.\n   * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n   */\n  class _RistrettoPoint extends edwards_ts_1.PrimeEdwardsPoint {\n    constructor(ep) {\n      super(ep);\n    }\n    static fromAffine(ap) {\n      return new _RistrettoPoint(exports.ed25519.Point.fromAffine(ap));\n    }\n    assertSame(other) {\n      if (!(other instanceof _RistrettoPoint)) throw new Error('RistrettoPoint expected');\n    }\n    init(ep) {\n      return new _RistrettoPoint(ep);\n    }\n    /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n    static hashToCurve(hex) {\n      return ristretto255_map((0, utils_ts_1.ensureBytes)('ristrettoHash', hex, 64));\n    }\n    static fromBytes(bytes) {\n      (0, utils_js_1.abytes)(bytes, 32);\n      const {\n        a,\n        d\n      } = ed25519_CURVE;\n      const P = ed25519_CURVE_p;\n      const mod = n => Fp.create(n);\n      const s = bytes255ToNumberLE(bytes);\n      // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n      // 3. Check that s is non-negative, or else abort\n      if (!(0, utils_ts_1.equalBytes)(Fp.toBytes(s), bytes) || (0, modular_ts_1.isNegativeLE)(s, P)) throw new Error('invalid ristretto255 encoding 1');\n      const s2 = mod(s * s);\n      const u1 = mod(_1n + a * s2); // 4 (a is -1)\n      const u2 = mod(_1n - a * s2); // 5\n      const u1_2 = mod(u1 * u1);\n      const u2_2 = mod(u2 * u2);\n      const v = mod(a * d * u1_2 - u2_2); // 6\n      const {\n        isValid,\n        value: I\n      } = invertSqrt(mod(v * u2_2)); // 7\n      const Dx = mod(I * u2); // 8\n      const Dy = mod(I * Dx * v); // 9\n      let x = mod((s + s) * Dx); // 10\n      if ((0, modular_ts_1.isNegativeLE)(x, P)) x = mod(-x); // 10\n      const y = mod(u1 * Dy); // 11\n      const t = mod(x * y); // 12\n      if (!isValid || (0, modular_ts_1.isNegativeLE)(t, P) || y === _0n) throw new Error('invalid ristretto255 encoding 2');\n      return new _RistrettoPoint(new exports.ed25519.Point(x, y, _1n, t));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n      return _RistrettoPoint.fromBytes((0, utils_ts_1.ensureBytes)('ristrettoHex', hex, 32));\n    }\n    static msm(points, scalars) {\n      return (0, curve_ts_1.pippenger)(_RistrettoPoint, exports.ed25519.Point.Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n      let {\n        X,\n        Y,\n        Z,\n        T\n      } = this.ep;\n      const P = ed25519_CURVE_p;\n      const mod = n => Fp.create(n);\n      const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n      const u2 = mod(X * Y); // 2\n      // Square root always exists\n      const u2sq = mod(u2 * u2);\n      const {\n        value: invsqrt\n      } = invertSqrt(mod(u1 * u2sq)); // 3\n      const D1 = mod(invsqrt * u1); // 4\n      const D2 = mod(invsqrt * u2); // 5\n      const zInv = mod(D1 * D2 * T); // 6\n      let D; // 7\n      if ((0, modular_ts_1.isNegativeLE)(T * zInv, P)) {\n        let _x = mod(Y * SQRT_M1);\n        let _y = mod(X * SQRT_M1);\n        X = _x;\n        Y = _y;\n        D = mod(D1 * INVSQRT_A_MINUS_D);\n      } else {\n        D = D2; // 8\n      }\n      if ((0, modular_ts_1.isNegativeLE)(X * zInv, P)) Y = mod(-Y); // 9\n      let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n      if ((0, modular_ts_1.isNegativeLE)(s, P)) s = mod(-s);\n      return Fp.toBytes(s); // 11\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n      this.assertSame(other);\n      const {\n        X: X1,\n        Y: Y1\n      } = this.ep;\n      const {\n        X: X2,\n        Y: Y2\n      } = other.ep;\n      const mod = n => Fp.create(n);\n      // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n      const one = mod(X1 * Y2) === mod(Y1 * X2);\n      const two = mod(Y1 * Y2) === mod(X1 * X2);\n      return one || two;\n    }\n    is0() {\n      return this.equals(_RistrettoPoint.ZERO);\n    }\n  }\n  // Do NOT change syntax: the following gymnastics is done,\n  // because typescript strips comments, which makes bundlers disable tree-shaking.\n  // prettier-ignore\n  _RistrettoPoint.BASE = /* @__PURE__ */(() => new _RistrettoPoint(exports.ed25519.Point.BASE))();\n  // prettier-ignore\n  _RistrettoPoint.ZERO = /* @__PURE__ */(() => new _RistrettoPoint(exports.ed25519.Point.ZERO))();\n  // prettier-ignore\n  _RistrettoPoint.Fp = /* @__PURE__ */(() => Fp)();\n  // prettier-ignore\n  _RistrettoPoint.Fn = /* @__PURE__ */(() => Fn)();\n  exports.ristretto255 = {\n    Point: _RistrettoPoint\n  };\n  /** Hashing to ristretto255 points / field. RFC 9380 methods. */\n  exports.ristretto255_hasher = {\n    hashToCurve(msg, options) {\n      const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n      const xmd = (0, hash_to_curve_ts_1.expand_message_xmd)(msg, DST, 64, sha2_js_1.sha512);\n      return ristretto255_map(xmd);\n    },\n    hashToScalar(msg, options = {\n      DST: hash_to_curve_ts_1._DST_scalar\n    }) {\n      const xmd = (0, hash_to_curve_ts_1.expand_message_xmd)(msg, options.DST, 64, sha2_js_1.sha512);\n      return Fn.create((0, utils_ts_1.bytesToNumberLE)(xmd));\n    }\n  };\n  // export const ristretto255_oprf: OPRF = createORPF({\n  //   name: 'ristretto255-SHA512',\n  //   Point: RistrettoPoint,\n  //   hash: sha512,\n  //   hashToGroup: ristretto255_hasher.hashToCurve,\n  //   hashToScalar: ristretto255_hasher.hashToScalar,\n  // });\n  /**\n   * Weird / bogus points, useful for debugging.\n   * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n   * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n   * ⟨T⟩ = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n   */\n  exports.ED25519_TORSION_SUBGROUP = ['0100000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a', '0000000000000000000000000000000000000000000000000000000000000080', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05', 'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f', '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85', '0000000000000000000000000000000000000000000000000000000000000000', 'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa'];\n  /** @deprecated use `ed25519.utils.toMontgomery` */\n  function edwardsToMontgomeryPub(edwardsPub) {\n    return exports.ed25519.utils.toMontgomery((0, utils_ts_1.ensureBytes)('pub', edwardsPub));\n  }\n  /** @deprecated use `ed25519.utils.toMontgomery` */\n  exports.edwardsToMontgomery = edwardsToMontgomeryPub;\n  /** @deprecated use `ed25519.utils.toMontgomerySecret` */\n  function edwardsToMontgomeryPriv(edwardsPriv) {\n    return exports.ed25519.utils.toMontgomerySecret((0, utils_ts_1.ensureBytes)('pub', edwardsPriv));\n  }\n  /** @deprecated use `ristretto255.Point` */\n  exports.RistrettoPoint = _RistrettoPoint;\n  /** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\n  exports.hashToCurve = (() => exports.ed25519_hasher.hashToCurve)();\n  /** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\n  exports.encodeToCurve = (() => exports.ed25519_hasher.encodeToCurve)();\n  /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n  exports.hashToRistretto255 = (() => exports.ristretto255_hasher.hashToCurve)();\n  /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n  exports.hash_to_ristretto255 = (() => exports.ristretto255_hasher.hashToCurve)();\n});","lineCount":510,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"hash_to_ristretto255"],[7,30,3,28],[7,33,3,31,"exports"],[7,40,3,38],[7,41,3,39,"hashToRistretto255"],[7,59,3,57],[7,62,3,60,"exports"],[7,69,3,67],[7,70,3,68,"encodeToCurve"],[7,83,3,81],[7,86,3,84,"exports"],[7,93,3,91],[7,94,3,92,"hashToCurve"],[7,105,3,103],[7,108,3,106,"exports"],[7,115,3,113],[7,116,3,114,"RistrettoPoint"],[7,130,3,128],[7,133,3,131,"exports"],[7,140,3,138],[7,141,3,139,"edwardsToMontgomery"],[7,160,3,158],[7,163,3,161,"exports"],[7,170,3,168],[7,171,3,169,"ED25519_TORSION_SUBGROUP"],[7,195,3,193],[7,198,3,196,"exports"],[7,205,3,203],[7,206,3,204,"ristretto255_hasher"],[7,225,3,223],[7,228,3,226,"exports"],[7,235,3,233],[7,236,3,234,"ristretto255"],[7,248,3,246],[7,251,3,249,"exports"],[7,258,3,256],[7,259,3,257,"ed25519_hasher"],[7,273,3,271],[7,276,3,274,"exports"],[7,283,3,281],[7,284,3,282,"x25519"],[7,290,3,288],[7,293,3,291,"exports"],[7,300,3,298],[7,301,3,299,"ed25519ph"],[7,310,3,308],[7,313,3,311,"exports"],[7,320,3,318],[7,321,3,319,"ed25519ctx"],[7,331,3,329],[7,334,3,332,"exports"],[7,341,3,339],[7,342,3,340,"ed25519"],[7,349,3,347],[7,352,3,350],[7,357,3,355],[7,358,3,356],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"edwardsToMontgomeryPub"],[8,32,4,30],[8,35,4,33,"edwardsToMontgomeryPub"],[8,57,4,55],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"edwardsToMontgomeryPriv"],[9,33,5,31],[9,36,5,34,"edwardsToMontgomeryPriv"],[9,59,5,57],[10,2,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,2,13,0],[18,2,14,0],[18,8,14,6,"sha2_js_1"],[18,17,14,15],[18,20,14,18,"require"],[18,27,14,25],[18,28,14,25,"_dependencyMap"],[18,42,14,25],[18,70,14,49],[18,71,14,50],[19,2,15,0],[19,8,15,6,"utils_js_1"],[19,18,15,16],[19,21,15,19,"require"],[19,28,15,26],[19,29,15,26,"_dependencyMap"],[19,43,15,26],[19,72,15,51],[19,73,15,52],[20,2,16,0],[20,8,16,6,"curve_ts_1"],[20,18,16,16],[20,21,16,19,"require"],[20,28,16,26],[20,29,16,26,"_dependencyMap"],[20,43,16,26],[20,69,16,48],[20,70,16,49],[21,2,17,0],[21,8,17,6,"edwards_ts_1"],[21,20,17,18],[21,23,17,21,"require"],[21,30,17,28],[21,31,17,28,"_dependencyMap"],[21,45,17,28],[21,73,17,52],[21,74,17,53],[22,2,18,0],[22,8,18,6,"hash_to_curve_ts_1"],[22,26,18,24],[22,29,18,27,"require"],[22,36,18,34],[22,37,18,34,"_dependencyMap"],[22,51,18,34],[22,85,18,64],[22,86,18,65],[23,2,19,0],[23,8,19,6,"modular_ts_1"],[23,20,19,18],[23,23,19,21,"require"],[23,30,19,28],[23,31,19,28,"_dependencyMap"],[23,45,19,28],[23,73,19,52],[23,74,19,53],[24,2,20,0],[24,8,20,6,"montgomery_ts_1"],[24,23,20,21],[24,26,20,24,"require"],[24,33,20,31],[24,34,20,31,"_dependencyMap"],[24,48,20,31],[24,79,20,58],[24,80,20,59],[25,2,21,0],[25,8,21,6,"utils_ts_1"],[25,18,21,16],[25,21,21,19,"require"],[25,28,21,26],[25,29,21,26,"_dependencyMap"],[25,43,21,26],[25,60,21,39],[25,61,21,40],[26,2,22,0],[27,2,23,0],[27,8,23,6,"_0n"],[27,11,23,9],[27,14,23,12],[27,29,23,28,"BigInt"],[27,35,23,34],[27,36,23,35],[27,37,23,36],[27,38,23,37],[28,4,23,39,"_1n"],[28,7,23,42],[28,10,23,45,"BigInt"],[28,16,23,51],[28,17,23,52],[28,18,23,53],[28,19,23,54],[29,4,23,56,"_2n"],[29,7,23,59],[29,10,23,62,"BigInt"],[29,16,23,68],[29,17,23,69],[29,18,23,70],[29,19,23,71],[30,4,23,73,"_3n"],[30,7,23,76],[30,10,23,79,"BigInt"],[30,16,23,85],[30,17,23,86],[30,18,23,87],[30,19,23,88],[31,2,24,0],[32,2,25,0],[32,8,25,6,"_5n"],[32,11,25,9],[32,14,25,12,"BigInt"],[32,20,25,18],[32,21,25,19],[32,22,25,20],[32,23,25,21],[33,4,25,23,"_8n"],[33,7,25,26],[33,10,25,29,"BigInt"],[33,16,25,35],[33,17,25,36],[33,18,25,37],[33,19,25,38],[34,2,26,0],[35,2,27,0],[35,8,27,6,"ed25519_CURVE_p"],[35,23,27,21],[35,26,27,24,"BigInt"],[35,32,27,30],[35,33,27,31],[35,101,27,99],[35,102,27,100],[36,2,28,0],[37,2,29,0],[38,2,30,0],[39,2,31,0],[39,8,31,6,"ed25519_CURVE"],[39,21,31,19],[39,24,31,22],[39,39,31,38],[39,40,31,39],[39,47,31,46],[40,4,32,4,"p"],[40,5,32,5],[40,7,32,7,"ed25519_CURVE_p"],[40,22,32,22],[41,4,33,4,"n"],[41,5,33,5],[41,7,33,7,"BigInt"],[41,13,33,13],[41,14,33,14],[41,82,33,82],[41,83,33,83],[42,4,34,4,"h"],[42,5,34,5],[42,7,34,7,"_8n"],[42,10,34,10],[43,4,35,4,"a"],[43,5,35,5],[43,7,35,7,"BigInt"],[43,13,35,13],[43,14,35,14],[43,82,35,82],[43,83,35,83],[44,4,36,4,"d"],[44,5,36,5],[44,7,36,7,"BigInt"],[44,13,36,13],[44,14,36,14],[44,82,36,82],[44,83,36,83],[45,4,37,4,"Gx"],[45,6,37,6],[45,8,37,8,"BigInt"],[45,14,37,14],[45,15,37,15],[45,83,37,83],[45,84,37,84],[46,4,38,4,"Gy"],[46,6,38,6],[46,8,38,8,"BigInt"],[46,14,38,14],[46,15,38,15],[46,83,38,83],[47,2,39,0],[47,3,39,1],[47,4,39,2],[47,6,39,4],[47,7,39,5],[48,2,40,0],[48,11,40,9,"ed25519_pow_2_252_3"],[48,30,40,28,"ed25519_pow_2_252_3"],[48,31,40,29,"x"],[48,32,40,30],[48,34,40,32],[49,4,41,4],[50,4,42,4],[50,10,42,10,"_10n"],[50,14,42,14],[50,17,42,17,"BigInt"],[50,23,42,23],[50,24,42,24],[50,26,42,26],[50,27,42,27],[51,6,42,29,"_20n"],[51,10,42,33],[51,13,42,36,"BigInt"],[51,19,42,42],[51,20,42,43],[51,22,42,45],[51,23,42,46],[52,6,42,48,"_40n"],[52,10,42,52],[52,13,42,55,"BigInt"],[52,19,42,61],[52,20,42,62],[52,22,42,64],[52,23,42,65],[53,6,42,67,"_80n"],[53,10,42,71],[53,13,42,74,"BigInt"],[53,19,42,80],[53,20,42,81],[53,22,42,83],[53,23,42,84],[54,4,43,4],[54,10,43,10,"P"],[54,11,43,11],[54,14,43,14,"ed25519_CURVE_p"],[54,29,43,29],[55,4,44,4],[55,10,44,10,"x2"],[55,12,44,12],[55,15,44,16,"x"],[55,16,44,17],[55,19,44,20,"x"],[55,20,44,21],[55,23,44,25,"P"],[55,24,44,26],[56,4,45,4],[56,10,45,10,"b2"],[56,12,45,12],[56,15,45,16,"x2"],[56,17,45,18],[56,20,45,21,"x"],[56,21,45,22],[56,24,45,26,"P"],[56,25,45,27],[56,26,45,28],[56,27,45,29],[57,4,46,4],[57,10,46,10,"b4"],[57,12,46,12],[57,15,46,16],[57,16,46,17],[57,17,46,18],[57,19,46,20,"modular_ts_1"],[57,31,46,32],[57,32,46,33,"pow2"],[57,36,46,37],[57,38,46,39,"b2"],[57,40,46,41],[57,42,46,43,"_2n"],[57,45,46,46],[57,47,46,48,"P"],[57,48,46,49],[57,49,46,50],[57,52,46,53,"b2"],[57,54,46,55],[57,57,46,59,"P"],[57,58,46,60],[57,59,46,61],[57,60,46,62],[58,4,47,4],[58,10,47,10,"b5"],[58,12,47,12],[58,15,47,16],[58,16,47,17],[58,17,47,18],[58,19,47,20,"modular_ts_1"],[58,31,47,32],[58,32,47,33,"pow2"],[58,36,47,37],[58,38,47,39,"b4"],[58,40,47,41],[58,42,47,43,"_1n"],[58,45,47,46],[58,47,47,48,"P"],[58,48,47,49],[58,49,47,50],[58,52,47,53,"x"],[58,53,47,54],[58,56,47,58,"P"],[58,57,47,59],[58,58,47,60],[58,59,47,61],[59,4,48,4],[59,10,48,10,"b10"],[59,13,48,13],[59,16,48,17],[59,17,48,18],[59,18,48,19],[59,20,48,21,"modular_ts_1"],[59,32,48,33],[59,33,48,34,"pow2"],[59,37,48,38],[59,39,48,40,"b5"],[59,41,48,42],[59,43,48,44,"_5n"],[59,46,48,47],[59,48,48,49,"P"],[59,49,48,50],[59,50,48,51],[59,53,48,54,"b5"],[59,55,48,56],[59,58,48,60,"P"],[59,59,48,61],[60,4,49,4],[60,10,49,10,"b20"],[60,13,49,13],[60,16,49,17],[60,17,49,18],[60,18,49,19],[60,20,49,21,"modular_ts_1"],[60,32,49,33],[60,33,49,34,"pow2"],[60,37,49,38],[60,39,49,40,"b10"],[60,42,49,43],[60,44,49,45,"_10n"],[60,48,49,49],[60,50,49,51,"P"],[60,51,49,52],[60,52,49,53],[60,55,49,56,"b10"],[60,58,49,59],[60,61,49,63,"P"],[60,62,49,64],[61,4,50,4],[61,10,50,10,"b40"],[61,13,50,13],[61,16,50,17],[61,17,50,18],[61,18,50,19],[61,20,50,21,"modular_ts_1"],[61,32,50,33],[61,33,50,34,"pow2"],[61,37,50,38],[61,39,50,40,"b20"],[61,42,50,43],[61,44,50,45,"_20n"],[61,48,50,49],[61,50,50,51,"P"],[61,51,50,52],[61,52,50,53],[61,55,50,56,"b20"],[61,58,50,59],[61,61,50,63,"P"],[61,62,50,64],[62,4,51,4],[62,10,51,10,"b80"],[62,13,51,13],[62,16,51,17],[62,17,51,18],[62,18,51,19],[62,20,51,21,"modular_ts_1"],[62,32,51,33],[62,33,51,34,"pow2"],[62,37,51,38],[62,39,51,40,"b40"],[62,42,51,43],[62,44,51,45,"_40n"],[62,48,51,49],[62,50,51,51,"P"],[62,51,51,52],[62,52,51,53],[62,55,51,56,"b40"],[62,58,51,59],[62,61,51,63,"P"],[62,62,51,64],[63,4,52,4],[63,10,52,10,"b160"],[63,14,52,14],[63,17,52,18],[63,18,52,19],[63,19,52,20],[63,21,52,22,"modular_ts_1"],[63,33,52,34],[63,34,52,35,"pow2"],[63,38,52,39],[63,40,52,41,"b80"],[63,43,52,44],[63,45,52,46,"_80n"],[63,49,52,50],[63,51,52,52,"P"],[63,52,52,53],[63,53,52,54],[63,56,52,57,"b80"],[63,59,52,60],[63,62,52,64,"P"],[63,63,52,65],[64,4,53,4],[64,10,53,10,"b240"],[64,14,53,14],[64,17,53,18],[64,18,53,19],[64,19,53,20],[64,21,53,22,"modular_ts_1"],[64,33,53,34],[64,34,53,35,"pow2"],[64,38,53,39],[64,40,53,41,"b160"],[64,44,53,45],[64,46,53,47,"_80n"],[64,50,53,51],[64,52,53,53,"P"],[64,53,53,54],[64,54,53,55],[64,57,53,58,"b80"],[64,60,53,61],[64,63,53,65,"P"],[64,64,53,66],[65,4,54,4],[65,10,54,10,"b250"],[65,14,54,14],[65,17,54,18],[65,18,54,19],[65,19,54,20],[65,21,54,22,"modular_ts_1"],[65,33,54,34],[65,34,54,35,"pow2"],[65,38,54,39],[65,40,54,41,"b240"],[65,44,54,45],[65,46,54,47,"_10n"],[65,50,54,51],[65,52,54,53,"P"],[65,53,54,54],[65,54,54,55],[65,57,54,58,"b10"],[65,60,54,61],[65,63,54,65,"P"],[65,64,54,66],[66,4,55,4],[66,10,55,10,"pow_p_5_8"],[66,19,55,19],[66,22,55,23],[66,23,55,24],[66,24,55,25],[66,26,55,27,"modular_ts_1"],[66,38,55,39],[66,39,55,40,"pow2"],[66,43,55,44],[66,45,55,46,"b250"],[66,49,55,50],[66,51,55,52,"_2n"],[66,54,55,55],[66,56,55,57,"P"],[66,57,55,58],[66,58,55,59],[66,61,55,62,"x"],[66,62,55,63],[66,65,55,67,"P"],[66,66,55,68],[67,4,56,4],[68,4,57,4],[68,11,57,11],[69,6,57,13,"pow_p_5_8"],[69,15,57,22],[70,6,57,24,"b2"],[71,4,57,27],[71,5,57,28],[72,2,58,0],[73,2,59,0],[73,11,59,9,"adjustScalarBytes"],[73,28,59,26,"adjustScalarBytes"],[73,29,59,27,"bytes"],[73,34,59,32],[73,36,59,34],[74,4,60,4],[75,4,61,4],[76,4,62,4,"bytes"],[76,9,62,9],[76,10,62,10],[76,11,62,11],[76,12,62,12],[76,16,62,16],[76,19,62,19],[76,20,62,20],[76,21,62,21],[77,4,63,4],[78,4,64,4,"bytes"],[78,9,64,9],[78,10,64,10],[78,12,64,12],[78,13,64,13],[78,17,64,17],[78,20,64,20],[78,21,64,21],[78,22,64,22],[79,4,65,4],[80,4,66,4,"bytes"],[80,9,66,9],[80,10,66,10],[80,12,66,12],[80,13,66,13],[80,17,66,17],[80,19,66,19],[80,20,66,20],[80,21,66,21],[81,4,67,4],[81,11,67,11,"bytes"],[81,16,67,16],[82,2,68,0],[83,2,69,0],[84,2,70,0],[85,2,71,0],[85,8,71,6,"ED25519_SQRT_M1"],[85,23,71,21],[85,26,71,24],[85,41,71,40,"BigInt"],[85,47,71,46],[85,48,71,47],[85,127,71,126],[85,128,71,127],[86,2,72,0],[87,2,73,0],[87,11,73,9,"uvRatio"],[87,18,73,16,"uvRatio"],[87,19,73,17,"u"],[87,20,73,18],[87,22,73,20,"v"],[87,23,73,21],[87,25,73,23],[88,4,74,4],[88,10,74,10,"P"],[88,11,74,11],[88,14,74,14,"ed25519_CURVE_p"],[88,29,74,29],[89,4,75,4],[89,10,75,10,"v3"],[89,12,75,12],[89,15,75,15],[89,16,75,16],[89,17,75,17],[89,19,75,19,"modular_ts_1"],[89,31,75,31],[89,32,75,32,"mod"],[89,35,75,35],[89,37,75,37,"v"],[89,38,75,38],[89,41,75,41,"v"],[89,42,75,42],[89,45,75,45,"v"],[89,46,75,46],[89,48,75,48,"P"],[89,49,75,49],[89,50,75,50],[89,51,75,51],[89,52,75,52],[90,4,76,4],[90,10,76,10,"v7"],[90,12,76,12],[90,15,76,15],[90,16,76,16],[90,17,76,17],[90,19,76,19,"modular_ts_1"],[90,31,76,31],[90,32,76,32,"mod"],[90,35,76,35],[90,37,76,37,"v3"],[90,39,76,39],[90,42,76,42,"v3"],[90,44,76,44],[90,47,76,47,"v"],[90,48,76,48],[90,50,76,50,"P"],[90,51,76,51],[90,52,76,52],[90,53,76,53],[90,54,76,54],[91,4,77,4],[92,4,78,4],[92,10,78,10,"pow"],[92,13,78,13],[92,16,78,16,"ed25519_pow_2_252_3"],[92,35,78,35],[92,36,78,36,"u"],[92,37,78,37],[92,40,78,40,"v7"],[92,42,78,42],[92,43,78,43],[92,44,78,44,"pow_p_5_8"],[92,53,78,53],[93,4,79,4],[93,8,79,8,"x"],[93,9,79,9],[93,12,79,12],[93,13,79,13],[93,14,79,14],[93,16,79,16,"modular_ts_1"],[93,28,79,28],[93,29,79,29,"mod"],[93,32,79,32],[93,34,79,34,"u"],[93,35,79,35],[93,38,79,38,"v3"],[93,40,79,40],[93,43,79,43,"pow"],[93,46,79,46],[93,48,79,48,"P"],[93,49,79,49],[93,50,79,50],[93,51,79,51],[93,52,79,52],[94,4,80,4],[94,10,80,10,"vx2"],[94,13,80,13],[94,16,80,16],[94,17,80,17],[94,18,80,18],[94,20,80,20,"modular_ts_1"],[94,32,80,32],[94,33,80,33,"mod"],[94,36,80,36],[94,38,80,38,"v"],[94,39,80,39],[94,42,80,42,"x"],[94,43,80,43],[94,46,80,46,"x"],[94,47,80,47],[94,49,80,49,"P"],[94,50,80,50],[94,51,80,51],[94,52,80,52],[94,53,80,53],[95,4,81,4],[95,10,81,10,"root1"],[95,15,81,15],[95,18,81,18,"x"],[95,19,81,19],[95,20,81,20],[95,21,81,21],[96,4,82,4],[96,10,82,10,"root2"],[96,15,82,15],[96,18,82,18],[96,19,82,19],[96,20,82,20],[96,22,82,22,"modular_ts_1"],[96,34,82,34],[96,35,82,35,"mod"],[96,38,82,38],[96,40,82,40,"x"],[96,41,82,41],[96,44,82,44,"ED25519_SQRT_M1"],[96,59,82,59],[96,61,82,61,"P"],[96,62,82,62],[96,63,82,63],[96,64,82,64],[96,65,82,65],[97,4,83,4],[97,10,83,10,"useRoot1"],[97,18,83,18],[97,21,83,21,"vx2"],[97,24,83,24],[97,29,83,29,"u"],[97,30,83,30],[97,31,83,31],[97,32,83,32],[98,4,84,4],[98,10,84,10,"useRoot2"],[98,18,84,18],[98,21,84,21,"vx2"],[98,24,84,24],[98,29,84,29],[98,30,84,30],[98,31,84,31],[98,33,84,33,"modular_ts_1"],[98,45,84,45],[98,46,84,46,"mod"],[98,49,84,49],[98,51,84,51],[98,52,84,52,"u"],[98,53,84,53],[98,55,84,55,"P"],[98,56,84,56],[98,57,84,57],[98,58,84,58],[98,59,84,59],[99,4,85,4],[99,10,85,10,"noRoot"],[99,16,85,16],[99,19,85,19,"vx2"],[99,22,85,22],[99,27,85,27],[99,28,85,28],[99,29,85,29],[99,31,85,31,"modular_ts_1"],[99,43,85,43],[99,44,85,44,"mod"],[99,47,85,47],[99,49,85,49],[99,50,85,50,"u"],[99,51,85,51],[99,54,85,54,"ED25519_SQRT_M1"],[99,69,85,69],[99,71,85,71,"P"],[99,72,85,72],[99,73,85,73],[99,74,85,74],[99,75,85,75],[100,4,86,4],[100,8,86,8,"useRoot1"],[100,16,86,16],[100,18,87,8,"x"],[100,19,87,9],[100,22,87,12,"root1"],[100,27,87,17],[101,4,88,4],[101,8,88,8,"useRoot2"],[101,16,88,16],[101,20,88,20,"noRoot"],[101,26,88,26],[101,28,89,8,"x"],[101,29,89,9],[101,32,89,12,"root2"],[101,37,89,17],[101,38,89,18],[101,39,89,19],[102,4,90,4],[102,8,90,8],[102,9,90,9],[102,10,90,10],[102,12,90,12,"modular_ts_1"],[102,24,90,24],[102,25,90,25,"isNegativeLE"],[102,37,90,37],[102,39,90,39,"x"],[102,40,90,40],[102,42,90,42,"P"],[102,43,90,43],[102,44,90,44],[102,46,91,8,"x"],[102,47,91,9],[102,50,91,12],[102,51,91,13],[102,52,91,14],[102,54,91,16,"modular_ts_1"],[102,66,91,28],[102,67,91,29,"mod"],[102,70,91,32],[102,72,91,34],[102,73,91,35,"x"],[102,74,91,36],[102,76,91,38,"P"],[102,77,91,39],[102,78,91,40],[103,4,92,4],[103,11,92,11],[104,6,92,13,"isValid"],[104,13,92,20],[104,15,92,22,"useRoot1"],[104,23,92,30],[104,27,92,34,"useRoot2"],[104,35,92,42],[105,6,92,44,"value"],[105,11,92,49],[105,13,92,51,"x"],[106,4,92,53],[106,5,92,54],[107,2,93,0],[108,2,94,0],[108,8,94,6,"Fp"],[108,10,94,8],[108,13,94,11],[108,28,94,27],[108,29,94,28],[108,35,94,34],[108,36,94,35],[108,37,94,36],[108,39,94,38,"modular_ts_1"],[108,51,94,50],[108,52,94,51,"Field"],[108,57,94,56],[108,59,94,58,"ed25519_CURVE"],[108,72,94,71],[108,73,94,72,"p"],[108,74,94,73],[108,76,94,75],[109,4,94,77,"isLE"],[109,8,94,81],[109,10,94,83],[110,2,94,88],[110,3,94,89],[110,4,94,90],[110,6,94,92],[110,7,94,93],[111,2,95,0],[111,8,95,6,"Fn"],[111,10,95,8],[111,13,95,11],[111,28,95,27],[111,29,95,28],[111,35,95,34],[111,36,95,35],[111,37,95,36],[111,39,95,38,"modular_ts_1"],[111,51,95,50],[111,52,95,51,"Field"],[111,57,95,56],[111,59,95,58,"ed25519_CURVE"],[111,72,95,71],[111,73,95,72,"n"],[111,74,95,73],[111,76,95,75],[112,4,95,77,"isLE"],[112,8,95,81],[112,10,95,83],[113,2,95,88],[113,3,95,89],[113,4,95,90],[113,6,95,92],[113,7,95,93],[114,2,96,0],[114,8,96,6,"ed25519Defaults"],[114,23,96,21],[114,26,96,24],[114,41,96,40],[114,42,96,41],[114,49,96,48],[115,4,97,4],[115,7,97,7,"ed25519_CURVE"],[115,20,97,20],[116,4,98,4,"Fp"],[116,6,98,6],[117,4,99,4,"hash"],[117,8,99,8],[117,10,99,10,"sha2_js_1"],[117,19,99,19],[117,20,99,20,"sha512"],[117,26,99,26],[118,4,100,4,"adjustScalarBytes"],[118,21,100,21],[119,4,101,4],[120,4,102,4],[121,4,103,4],[122,4,104,4,"uvRatio"],[123,2,105,0],[123,3,105,1],[123,4,105,2],[123,6,105,4],[123,7,105,5],[124,2,106,0],[125,0,107,0],[126,0,108,0],[127,0,109,0],[128,0,110,0],[129,0,111,0],[130,0,112,0],[131,0,113,0],[132,0,114,0],[133,0,115,0],[134,2,116,0,"exports"],[134,9,116,7],[134,10,116,8,"ed25519"],[134,17,116,15],[134,20,116,18],[134,21,116,19],[134,27,116,25],[134,28,116,26],[134,29,116,27],[134,31,116,29,"edwards_ts_1"],[134,43,116,41],[134,44,116,42,"twistedEdwards"],[134,58,116,56],[134,60,116,58,"ed25519Defaults"],[134,75,116,73],[134,76,116,74],[134,78,116,76],[134,79,116,77],[135,2,117,0],[135,11,117,9,"ed25519_domain"],[135,25,117,23,"ed25519_domain"],[135,26,117,24,"data"],[135,30,117,28],[135,32,117,30,"ctx"],[135,35,117,33],[135,37,117,35,"phflag"],[135,43,117,41],[135,45,117,43],[136,4,118,4],[136,8,118,8,"ctx"],[136,11,118,11],[136,12,118,12,"length"],[136,18,118,18],[136,21,118,21],[136,24,118,24],[136,26,119,8],[136,32,119,14],[136,36,119,18,"Error"],[136,41,119,23],[136,42,119,24],[136,62,119,44],[136,63,119,45],[137,4,120,4],[137,11,120,11],[137,12,120,12],[137,13,120,13],[137,15,120,15,"utils_js_1"],[137,25,120,25],[137,26,120,26,"concatBytes"],[137,37,120,37],[137,39,120,39],[137,40,120,40],[137,41,120,41],[137,43,120,43,"utils_js_1"],[137,53,120,53],[137,54,120,54,"utf8ToBytes"],[137,65,120,65],[137,67,120,67],[137,101,120,101],[137,102,120,102],[137,104,120,104],[137,108,120,108,"Uint8Array"],[137,118,120,118],[137,119,120,119],[137,120,120,120,"phflag"],[137,126,120,126],[137,129,120,129],[137,130,120,130],[137,133,120,133],[137,134,120,134],[137,136,120,136,"ctx"],[137,139,120,139],[137,140,120,140,"length"],[137,146,120,146],[137,147,120,147],[137,148,120,148],[137,150,120,150,"ctx"],[137,153,120,153],[137,155,120,155,"data"],[137,159,120,159],[137,160,120,160],[138,2,121,0],[139,2,122,0],[140,2,123,0,"exports"],[140,9,123,7],[140,10,123,8,"ed25519ctx"],[140,20,123,18],[140,23,123,21],[140,24,123,22],[140,30,123,28],[140,31,123,29],[140,32,123,30],[140,34,123,32,"edwards_ts_1"],[140,46,123,44],[140,47,123,45,"twistedEdwards"],[140,61,123,59],[140,63,123,61],[141,4,124,4],[141,7,124,7,"ed25519Defaults"],[141,22,124,22],[142,4,125,4,"domain"],[142,10,125,10],[142,12,125,12,"ed25519_domain"],[143,2,126,0],[143,3,126,1],[143,4,126,2],[143,6,126,4],[143,7,126,5],[144,2,127,0],[145,2,128,0,"exports"],[145,9,128,7],[145,10,128,8,"ed25519ph"],[145,19,128,17],[145,22,128,20],[145,23,128,21],[145,29,128,27],[145,30,128,28],[145,31,128,29],[145,33,128,31,"edwards_ts_1"],[145,45,128,43],[145,46,128,44,"twistedEdwards"],[145,60,128,58],[145,62,128,60,"Object"],[145,68,128,66],[145,69,128,67,"assign"],[145,75,128,73],[145,76,128,74],[145,77,128,75],[145,78,128,76],[145,80,128,78,"ed25519Defaults"],[145,95,128,93],[145,97,128,95],[146,4,129,4,"domain"],[146,10,129,10],[146,12,129,12,"ed25519_domain"],[146,26,129,26],[147,4,130,4,"prehash"],[147,11,130,11],[147,13,130,13,"sha2_js_1"],[147,22,130,22],[147,23,130,23,"sha512"],[148,2,131,0],[148,3,131,1],[148,4,131,2],[148,5,131,3],[148,7,131,5],[148,8,131,6],[149,2,132,0],[150,0,133,0],[151,0,134,0],[152,0,135,0],[153,0,136,0],[154,0,137,0],[155,0,138,0],[156,0,139,0],[157,0,140,0],[158,0,141,0],[159,2,142,0,"exports"],[159,9,142,7],[159,10,142,8,"x25519"],[159,16,142,14],[159,19,142,17],[159,20,142,18],[159,26,142,24],[160,4,143,4],[160,10,143,10,"P"],[160,11,143,11],[160,14,143,14,"Fp"],[160,16,143,16],[160,17,143,17,"ORDER"],[160,22,143,22],[161,4,144,4],[161,11,144,11],[161,12,144,12],[161,13,144,13],[161,15,144,15,"montgomery_ts_1"],[161,30,144,30],[161,31,144,31,"montgomery"],[161,41,144,41],[161,43,144,43],[162,6,145,8,"P"],[162,7,145,9],[163,6,146,8,"type"],[163,10,146,12],[163,12,146,14],[163,20,146,22],[164,6,147,8,"powPminus2"],[164,16,147,18],[164,18,147,21,"x"],[164,19,147,22],[164,23,147,27],[165,8,148,12],[166,8,149,12],[166,14,149,18],[167,10,149,20,"pow_p_5_8"],[167,19,149,29],[168,10,149,31,"b2"],[169,8,149,34],[169,9,149,35],[169,12,149,38,"ed25519_pow_2_252_3"],[169,31,149,57],[169,32,149,58,"x"],[169,33,149,59],[169,34,149,60],[170,8,150,12],[170,15,150,19],[170,16,150,20],[170,17,150,21],[170,19,150,23,"modular_ts_1"],[170,31,150,35],[170,32,150,36,"mod"],[170,35,150,39],[170,37,150,41],[170,38,150,42],[170,39,150,43],[170,41,150,45,"modular_ts_1"],[170,53,150,57],[170,54,150,58,"pow2"],[170,58,150,62],[170,60,150,64,"pow_p_5_8"],[170,69,150,73],[170,71,150,75,"_3n"],[170,74,150,78],[170,76,150,80,"P"],[170,77,150,81],[170,78,150,82],[170,81,150,85,"b2"],[170,83,150,87],[170,85,150,89,"P"],[170,86,150,90],[170,87,150,91],[171,6,151,8],[171,7,151,9],[172,6,152,8,"adjustScalarBytes"],[173,4,153,4],[173,5,153,5],[173,6,153,6],[174,2,154,0],[174,3,154,1],[174,5,154,3],[174,6,154,4],[175,2,155,0],[176,2,156,0],[177,2,157,0],[178,2,158,0],[178,8,158,6,"ELL2_C1"],[178,15,158,13],[178,18,158,16],[178,33,158,32],[178,34,158,33],[178,40,158,39],[178,41,158,40,"ed25519_CURVE_p"],[178,56,158,55],[178,59,158,58,"_3n"],[178,62,158,61],[178,66,158,65,"_8n"],[178,69,158,68],[178,71,158,70],[178,72,158,71],[178,73,158,72],[178,74,158,73],[179,2,159,0],[179,8,159,6,"ELL2_C2"],[179,15,159,13],[179,18,159,16],[179,33,159,32],[179,34,159,33],[179,40,159,39,"Fp"],[179,42,159,41],[179,43,159,42,"pow"],[179,46,159,45],[179,47,159,46,"_2n"],[179,50,159,49],[179,52,159,51,"ELL2_C1"],[179,59,159,58],[179,60,159,59],[179,62,159,61],[179,63,159,62],[179,64,159,63],[179,65,159,64],[180,2,160,0],[180,8,160,6,"ELL2_C3"],[180,15,160,13],[180,18,160,16],[180,33,160,32],[180,34,160,33],[180,40,160,39,"Fp"],[180,42,160,41],[180,43,160,42,"sqrt"],[180,47,160,46],[180,48,160,47,"Fp"],[180,50,160,49],[180,51,160,50,"neg"],[180,54,160,53],[180,55,160,54,"Fp"],[180,57,160,56],[180,58,160,57,"ONE"],[180,61,160,60],[180,62,160,61],[180,63,160,62],[180,65,160,64],[180,66,160,65],[180,67,160,66],[180,68,160,67],[181,2,161,0],[182,2,162,0],[182,11,162,9,"map_to_curve_elligator2_curve25519"],[182,45,162,43,"map_to_curve_elligator2_curve25519"],[182,46,162,44,"u"],[182,47,162,45],[182,49,162,47],[183,4,163,4],[183,10,163,10,"ELL2_C4"],[183,17,163,17],[183,20,163,20],[183,21,163,21,"ed25519_CURVE_p"],[183,36,163,36],[183,39,163,39,"_5n"],[183,42,163,42],[183,46,163,46,"_8n"],[183,49,163,49],[183,50,163,50],[183,51,163,51],[184,4,164,4],[184,10,164,10,"ELL2_J"],[184,16,164,16],[184,19,164,19,"BigInt"],[184,25,164,25],[184,26,164,26],[184,32,164,32],[184,33,164,33],[185,4,165,4],[185,8,165,8,"tv1"],[185,11,165,11],[185,14,165,14,"Fp"],[185,16,165,16],[185,17,165,17,"sqr"],[185,20,165,20],[185,21,165,21,"u"],[185,22,165,22],[185,23,165,23],[185,24,165,24],[185,25,165,25],[186,4,166,4,"tv1"],[186,7,166,7],[186,10,166,10,"Fp"],[186,12,166,12],[186,13,166,13,"mul"],[186,16,166,16],[186,17,166,17,"tv1"],[186,20,166,20],[186,22,166,22,"_2n"],[186,25,166,25],[186,26,166,26],[186,27,166,27],[186,28,166,28],[187,4,167,4],[187,8,167,8,"xd"],[187,10,167,10],[187,13,167,13,"Fp"],[187,15,167,15],[187,16,167,16,"add"],[187,19,167,19],[187,20,167,20,"tv1"],[187,23,167,23],[187,25,167,25,"Fp"],[187,27,167,27],[187,28,167,28,"ONE"],[187,31,167,31],[187,32,167,32],[187,33,167,33],[187,34,167,34],[188,4,168,4],[188,8,168,8,"x1n"],[188,11,168,11],[188,14,168,14,"Fp"],[188,16,168,16],[188,17,168,17,"neg"],[188,20,168,20],[188,21,168,21,"ELL2_J"],[188,27,168,27],[188,28,168,28],[188,29,168,29],[188,30,168,30],[189,4,169,4],[189,8,169,8,"tv2"],[189,11,169,11],[189,14,169,14,"Fp"],[189,16,169,16],[189,17,169,17,"sqr"],[189,20,169,20],[189,21,169,21,"xd"],[189,23,169,23],[189,24,169,24],[189,25,169,25],[189,26,169,26],[190,4,170,4],[190,8,170,8,"gxd"],[190,11,170,11],[190,14,170,14,"Fp"],[190,16,170,16],[190,17,170,17,"mul"],[190,20,170,20],[190,21,170,21,"tv2"],[190,24,170,24],[190,26,170,26,"xd"],[190,28,170,28],[190,29,170,29],[190,30,170,30],[190,31,170,31],[191,4,171,4],[191,8,171,8,"gx1"],[191,11,171,11],[191,14,171,14,"Fp"],[191,16,171,16],[191,17,171,17,"mul"],[191,20,171,20],[191,21,171,21,"tv1"],[191,24,171,24],[191,26,171,26,"ELL2_J"],[191,32,171,32],[191,33,171,33],[191,34,171,34],[191,35,171,35],[192,4,172,4,"gx1"],[192,7,172,7],[192,10,172,10,"Fp"],[192,12,172,12],[192,13,172,13,"mul"],[192,16,172,16],[192,17,172,17,"gx1"],[192,20,172,20],[192,22,172,22,"x1n"],[192,25,172,25],[192,26,172,26],[192,27,172,27],[192,28,172,28],[193,4,173,4,"gx1"],[193,7,173,7],[193,10,173,10,"Fp"],[193,12,173,12],[193,13,173,13,"add"],[193,16,173,16],[193,17,173,17,"gx1"],[193,20,173,20],[193,22,173,22,"tv2"],[193,25,173,25],[193,26,173,26],[193,27,173,27],[193,28,173,28],[194,4,174,4,"gx1"],[194,7,174,7],[194,10,174,10,"Fp"],[194,12,174,12],[194,13,174,13,"mul"],[194,16,174,16],[194,17,174,17,"gx1"],[194,20,174,20],[194,22,174,22,"x1n"],[194,25,174,25],[194,26,174,26],[194,27,174,27],[194,28,174,28],[195,4,175,4],[195,8,175,8,"tv3"],[195,11,175,11],[195,14,175,14,"Fp"],[195,16,175,16],[195,17,175,17,"sqr"],[195,20,175,20],[195,21,175,21,"gxd"],[195,24,175,24],[195,25,175,25],[195,26,175,26],[195,27,175,27],[196,4,176,4,"tv2"],[196,7,176,7],[196,10,176,10,"Fp"],[196,12,176,12],[196,13,176,13,"sqr"],[196,16,176,16],[196,17,176,17,"tv3"],[196,20,176,20],[196,21,176,21],[196,22,176,22],[196,23,176,23],[197,4,177,4,"tv3"],[197,7,177,7],[197,10,177,10,"Fp"],[197,12,177,12],[197,13,177,13,"mul"],[197,16,177,16],[197,17,177,17,"tv3"],[197,20,177,20],[197,22,177,22,"gxd"],[197,25,177,25],[197,26,177,26],[197,27,177,27],[197,28,177,28],[198,4,178,4,"tv3"],[198,7,178,7],[198,10,178,10,"Fp"],[198,12,178,12],[198,13,178,13,"mul"],[198,16,178,16],[198,17,178,17,"tv3"],[198,20,178,20],[198,22,178,22,"gx1"],[198,25,178,25],[198,26,178,26],[198,27,178,27],[198,28,178,28],[199,4,179,4,"tv2"],[199,7,179,7],[199,10,179,10,"Fp"],[199,12,179,12],[199,13,179,13,"mul"],[199,16,179,16],[199,17,179,17,"tv2"],[199,20,179,20],[199,22,179,22,"tv3"],[199,25,179,25],[199,26,179,26],[199,27,179,27],[199,28,179,28],[200,4,180,4],[200,8,180,8,"y11"],[200,11,180,11],[200,14,180,14,"Fp"],[200,16,180,16],[200,17,180,17,"pow"],[200,20,180,20],[200,21,180,21,"tv2"],[200,24,180,24],[200,26,180,26,"ELL2_C4"],[200,33,180,33],[200,34,180,34],[200,35,180,35],[200,36,180,36],[201,4,181,4,"y11"],[201,7,181,7],[201,10,181,10,"Fp"],[201,12,181,12],[201,13,181,13,"mul"],[201,16,181,16],[201,17,181,17,"y11"],[201,20,181,20],[201,22,181,22,"tv3"],[201,25,181,25],[201,26,181,26],[201,27,181,27],[201,28,181,28],[202,4,182,4],[202,8,182,8,"y12"],[202,11,182,11],[202,14,182,14,"Fp"],[202,16,182,16],[202,17,182,17,"mul"],[202,20,182,20],[202,21,182,21,"y11"],[202,24,182,24],[202,26,182,26,"ELL2_C3"],[202,33,182,33],[202,34,182,34],[202,35,182,35],[202,36,182,36],[203,4,183,4,"tv2"],[203,7,183,7],[203,10,183,10,"Fp"],[203,12,183,12],[203,13,183,13,"sqr"],[203,16,183,16],[203,17,183,17,"y11"],[203,20,183,20],[203,21,183,21],[203,22,183,22],[203,23,183,23],[204,4,184,4,"tv2"],[204,7,184,7],[204,10,184,10,"Fp"],[204,12,184,12],[204,13,184,13,"mul"],[204,16,184,16],[204,17,184,17,"tv2"],[204,20,184,20],[204,22,184,22,"gxd"],[204,25,184,25],[204,26,184,26],[204,27,184,27],[204,28,184,28],[205,4,185,4],[205,8,185,8,"e1"],[205,10,185,10],[205,13,185,13,"Fp"],[205,15,185,15],[205,16,185,16,"eql"],[205,19,185,19],[205,20,185,20,"tv2"],[205,23,185,23],[205,25,185,25,"gx1"],[205,28,185,28],[205,29,185,29],[205,30,185,30],[205,31,185,31],[206,4,186,4],[206,8,186,8,"y1"],[206,10,186,10],[206,13,186,13,"Fp"],[206,15,186,15],[206,16,186,16,"cmov"],[206,20,186,20],[206,21,186,21,"y12"],[206,24,186,24],[206,26,186,26,"y11"],[206,29,186,29],[206,31,186,31,"e1"],[206,33,186,33],[206,34,186,34],[206,35,186,35],[206,36,186,36],[207,4,187,4],[207,8,187,8,"x2n"],[207,11,187,11],[207,14,187,14,"Fp"],[207,16,187,16],[207,17,187,17,"mul"],[207,20,187,20],[207,21,187,21,"x1n"],[207,24,187,24],[207,26,187,26,"tv1"],[207,29,187,29],[207,30,187,30],[207,31,187,31],[207,32,187,32],[208,4,188,4],[208,8,188,8,"y21"],[208,11,188,11],[208,14,188,14,"Fp"],[208,16,188,16],[208,17,188,17,"mul"],[208,20,188,20],[208,21,188,21,"y11"],[208,24,188,24],[208,26,188,26,"u"],[208,27,188,27],[208,28,188,28],[208,29,188,29],[208,30,188,30],[209,4,189,4,"y21"],[209,7,189,7],[209,10,189,10,"Fp"],[209,12,189,12],[209,13,189,13,"mul"],[209,16,189,16],[209,17,189,17,"y21"],[209,20,189,20],[209,22,189,22,"ELL2_C2"],[209,29,189,29],[209,30,189,30],[209,31,189,31],[209,32,189,32],[210,4,190,4],[210,8,190,8,"y22"],[210,11,190,11],[210,14,190,14,"Fp"],[210,16,190,16],[210,17,190,17,"mul"],[210,20,190,20],[210,21,190,21,"y21"],[210,24,190,24],[210,26,190,26,"ELL2_C3"],[210,33,190,33],[210,34,190,34],[210,35,190,35],[210,36,190,36],[211,4,191,4],[211,8,191,8,"gx2"],[211,11,191,11],[211,14,191,14,"Fp"],[211,16,191,16],[211,17,191,17,"mul"],[211,20,191,20],[211,21,191,21,"gx1"],[211,24,191,24],[211,26,191,26,"tv1"],[211,29,191,29],[211,30,191,30],[211,31,191,31],[211,32,191,32],[212,4,192,4,"tv2"],[212,7,192,7],[212,10,192,10,"Fp"],[212,12,192,12],[212,13,192,13,"sqr"],[212,16,192,16],[212,17,192,17,"y21"],[212,20,192,20],[212,21,192,21],[212,22,192,22],[212,23,192,23],[213,4,193,4,"tv2"],[213,7,193,7],[213,10,193,10,"Fp"],[213,12,193,12],[213,13,193,13,"mul"],[213,16,193,16],[213,17,193,17,"tv2"],[213,20,193,20],[213,22,193,22,"gxd"],[213,25,193,25],[213,26,193,26],[213,27,193,27],[213,28,193,28],[214,4,194,4],[214,8,194,8,"e2"],[214,10,194,10],[214,13,194,13,"Fp"],[214,15,194,15],[214,16,194,16,"eql"],[214,19,194,19],[214,20,194,20,"tv2"],[214,23,194,23],[214,25,194,25,"gx2"],[214,28,194,28],[214,29,194,29],[214,30,194,30],[214,31,194,31],[215,4,195,4],[215,8,195,8,"y2"],[215,10,195,10],[215,13,195,13,"Fp"],[215,15,195,15],[215,16,195,16,"cmov"],[215,20,195,20],[215,21,195,21,"y22"],[215,24,195,24],[215,26,195,26,"y21"],[215,29,195,29],[215,31,195,31,"e2"],[215,33,195,33],[215,34,195,34],[215,35,195,35],[215,36,195,36],[216,4,196,4,"tv2"],[216,7,196,7],[216,10,196,10,"Fp"],[216,12,196,12],[216,13,196,13,"sqr"],[216,16,196,16],[216,17,196,17,"y1"],[216,19,196,19],[216,20,196,20],[216,21,196,21],[216,22,196,22],[217,4,197,4,"tv2"],[217,7,197,7],[217,10,197,10,"Fp"],[217,12,197,12],[217,13,197,13,"mul"],[217,16,197,16],[217,17,197,17,"tv2"],[217,20,197,20],[217,22,197,22,"gxd"],[217,25,197,25],[217,26,197,26],[217,27,197,27],[217,28,197,28],[218,4,198,4],[218,8,198,8,"e3"],[218,10,198,10],[218,13,198,13,"Fp"],[218,15,198,15],[218,16,198,16,"eql"],[218,19,198,19],[218,20,198,20,"tv2"],[218,23,198,23],[218,25,198,25,"gx1"],[218,28,198,28],[218,29,198,29],[218,30,198,30],[218,31,198,31],[219,4,199,4],[219,8,199,8,"xn"],[219,10,199,10],[219,13,199,13,"Fp"],[219,15,199,15],[219,16,199,16,"cmov"],[219,20,199,20],[219,21,199,21,"x2n"],[219,24,199,24],[219,26,199,26,"x1n"],[219,29,199,29],[219,31,199,31,"e3"],[219,33,199,33],[219,34,199,34],[219,35,199,35],[219,36,199,36],[220,4,200,4],[220,8,200,8,"y"],[220,9,200,9],[220,12,200,12,"Fp"],[220,14,200,14],[220,15,200,15,"cmov"],[220,19,200,19],[220,20,200,20,"y2"],[220,22,200,22],[220,24,200,24,"y1"],[220,26,200,26],[220,28,200,28,"e3"],[220,30,200,30],[220,31,200,31],[220,32,200,32],[220,33,200,33],[221,4,201,4],[221,8,201,8,"e4"],[221,10,201,10],[221,13,201,13,"Fp"],[221,15,201,15],[221,16,201,16,"isOdd"],[221,21,201,21],[221,22,201,22,"y"],[221,23,201,23],[221,24,201,24],[221,25,201,25],[221,26,201,26],[222,4,202,4,"y"],[222,5,202,5],[222,8,202,8,"Fp"],[222,10,202,10],[222,11,202,11,"cmov"],[222,15,202,15],[222,16,202,16,"y"],[222,17,202,17],[222,19,202,19,"Fp"],[222,21,202,21],[222,22,202,22,"neg"],[222,25,202,25],[222,26,202,26,"y"],[222,27,202,27],[222,28,202,28],[222,30,202,30,"e3"],[222,32,202,32],[222,37,202,37,"e4"],[222,39,202,39],[222,40,202,40],[222,41,202,41],[222,42,202,42],[223,4,203,4],[223,11,203,11],[224,6,203,13,"xMn"],[224,9,203,16],[224,11,203,18,"xn"],[224,13,203,20],[225,6,203,22,"xMd"],[225,9,203,25],[225,11,203,27,"xd"],[225,13,203,29],[226,6,203,31,"yMn"],[226,9,203,34],[226,11,203,36,"y"],[226,12,203,37],[227,6,203,39,"yMd"],[227,9,203,42],[227,11,203,44,"_1n"],[228,4,203,48],[228,5,203,49],[228,6,203,50],[228,7,203,51],[229,2,204,0],[230,2,205,0],[230,8,205,6,"ELL2_C1_EDWARDS"],[230,23,205,21],[230,26,205,24],[230,41,205,40],[230,42,205,41],[230,48,205,47],[230,49,205,48],[230,50,205,49],[230,52,205,51,"modular_ts_1"],[230,64,205,63],[230,65,205,64,"FpSqrtEven"],[230,75,205,74],[230,77,205,76,"Fp"],[230,79,205,78],[230,81,205,80,"Fp"],[230,83,205,82],[230,84,205,83,"neg"],[230,87,205,86],[230,88,205,87,"BigInt"],[230,94,205,93],[230,95,205,94],[230,101,205,100],[230,102,205,101],[230,103,205,102],[230,104,205,103],[230,106,205,105],[230,107,205,106],[230,108,205,107],[230,109,205,108],[231,2,206,0],[231,11,206,9,"map_to_curve_elligator2_edwards25519"],[231,47,206,45,"map_to_curve_elligator2_edwards25519"],[231,48,206,46,"u"],[231,49,206,47],[231,51,206,49],[232,4,207,4],[232,10,207,10],[233,6,207,12,"xMn"],[233,9,207,15],[234,6,207,17,"xMd"],[234,9,207,20],[235,6,207,22,"yMn"],[235,9,207,25],[236,6,207,27,"yMd"],[237,4,207,31],[237,5,207,32],[237,8,207,35,"map_to_curve_elligator2_curve25519"],[237,42,207,69],[237,43,207,70,"u"],[237,44,207,71],[237,45,207,72],[237,46,207,73],[237,47,207,74],[238,4,208,4],[239,4,209,4],[239,8,209,8,"xn"],[239,10,209,10],[239,13,209,13,"Fp"],[239,15,209,15],[239,16,209,16,"mul"],[239,19,209,19],[239,20,209,20,"xMn"],[239,23,209,23],[239,25,209,25,"yMd"],[239,28,209,28],[239,29,209,29],[239,30,209,30],[239,31,209,31],[240,4,210,4,"xn"],[240,6,210,6],[240,9,210,9,"Fp"],[240,11,210,11],[240,12,210,12,"mul"],[240,15,210,15],[240,16,210,16,"xn"],[240,18,210,18],[240,20,210,20,"ELL2_C1_EDWARDS"],[240,35,210,35],[240,36,210,36],[240,37,210,37],[240,38,210,38],[241,4,211,4],[241,8,211,8,"xd"],[241,10,211,10],[241,13,211,13,"Fp"],[241,15,211,15],[241,16,211,16,"mul"],[241,19,211,19],[241,20,211,20,"xMd"],[241,23,211,23],[241,25,211,25,"yMn"],[241,28,211,28],[241,29,211,29],[241,30,211,30],[241,31,211,31],[242,4,212,4],[242,8,212,8,"yn"],[242,10,212,10],[242,13,212,13,"Fp"],[242,15,212,15],[242,16,212,16,"sub"],[242,19,212,19],[242,20,212,20,"xMn"],[242,23,212,23],[242,25,212,25,"xMd"],[242,28,212,28],[242,29,212,29],[242,30,212,30],[242,31,212,31],[243,4,213,4],[243,8,213,8,"yd"],[243,10,213,10],[243,13,213,13,"Fp"],[243,15,213,15],[243,16,213,16,"add"],[243,19,213,19],[243,20,213,20,"xMn"],[243,23,213,23],[243,25,213,25,"xMd"],[243,28,213,28],[243,29,213,29],[243,30,213,30],[243,31,213,31],[244,4,214,4],[244,8,214,8,"tv1"],[244,11,214,11],[244,14,214,14,"Fp"],[244,16,214,16],[244,17,214,17,"mul"],[244,20,214,20],[244,21,214,21,"xd"],[244,23,214,23],[244,25,214,25,"yd"],[244,27,214,27],[244,28,214,28],[244,29,214,29],[244,30,214,30],[245,4,215,4],[245,8,215,8,"e"],[245,9,215,9],[245,12,215,12,"Fp"],[245,14,215,14],[245,15,215,15,"eql"],[245,18,215,18],[245,19,215,19,"tv1"],[245,22,215,22],[245,24,215,24,"Fp"],[245,26,215,26],[245,27,215,27,"ZERO"],[245,31,215,31],[245,32,215,32],[245,33,215,33],[245,34,215,34],[246,4,216,4,"xn"],[246,6,216,6],[246,9,216,9,"Fp"],[246,11,216,11],[246,12,216,12,"cmov"],[246,16,216,16],[246,17,216,17,"xn"],[246,19,216,19],[246,21,216,21,"Fp"],[246,23,216,23],[246,24,216,24,"ZERO"],[246,28,216,28],[246,30,216,30,"e"],[246,31,216,31],[246,32,216,32],[246,33,216,33],[246,34,216,34],[247,4,217,4,"xd"],[247,6,217,6],[247,9,217,9,"Fp"],[247,11,217,11],[247,12,217,12,"cmov"],[247,16,217,16],[247,17,217,17,"xd"],[247,19,217,19],[247,21,217,21,"Fp"],[247,23,217,23],[247,24,217,24,"ONE"],[247,27,217,27],[247,29,217,29,"e"],[247,30,217,30],[247,31,217,31],[247,32,217,32],[247,33,217,33],[248,4,218,4,"yn"],[248,6,218,6],[248,9,218,9,"Fp"],[248,11,218,11],[248,12,218,12,"cmov"],[248,16,218,16],[248,17,218,17,"yn"],[248,19,218,19],[248,21,218,21,"Fp"],[248,23,218,23],[248,24,218,24,"ONE"],[248,27,218,27],[248,29,218,29,"e"],[248,30,218,30],[248,31,218,31],[248,32,218,32],[248,33,218,33],[249,4,219,4,"yd"],[249,6,219,6],[249,9,219,9,"Fp"],[249,11,219,11],[249,12,219,12,"cmov"],[249,16,219,16],[249,17,219,17,"yd"],[249,19,219,19],[249,21,219,21,"Fp"],[249,23,219,23],[249,24,219,24,"ONE"],[249,27,219,27],[249,29,219,29,"e"],[249,30,219,30],[249,31,219,31],[249,32,219,32],[249,33,219,33],[250,4,220,4],[250,10,220,10],[250,11,220,11,"xd_inv"],[250,17,220,17],[250,19,220,19,"yd_inv"],[250,25,220,25],[250,26,220,26],[250,29,220,29],[250,30,220,30],[250,31,220,31],[250,33,220,33,"modular_ts_1"],[250,45,220,45],[250,46,220,46,"FpInvertBatch"],[250,59,220,59],[250,61,220,61,"Fp"],[250,63,220,63],[250,65,220,65],[250,66,220,66,"xd"],[250,68,220,68],[250,70,220,70,"yd"],[250,72,220,72],[250,73,220,73],[250,75,220,75],[250,79,220,79],[250,80,220,80],[250,81,220,81],[250,82,220,82],[251,4,221,4],[251,11,221,11],[252,6,221,13,"x"],[252,7,221,14],[252,9,221,16,"Fp"],[252,11,221,18],[252,12,221,19,"mul"],[252,15,221,22],[252,16,221,23,"xn"],[252,18,221,25],[252,20,221,27,"xd_inv"],[252,26,221,33],[252,27,221,34],[253,6,221,36,"y"],[253,7,221,37],[253,9,221,39,"Fp"],[253,11,221,41],[253,12,221,42,"mul"],[253,15,221,45],[253,16,221,46,"yn"],[253,18,221,48],[253,20,221,50,"yd_inv"],[253,26,221,56],[254,4,221,58],[254,5,221,59],[254,6,221,60],[254,7,221,61],[255,2,222,0],[256,2,223,0],[257,2,224,0,"exports"],[257,9,224,7],[257,10,224,8,"ed25519_hasher"],[257,24,224,22],[257,27,224,25],[257,28,224,26],[257,34,224,32],[257,35,224,33],[257,36,224,34],[257,38,224,36,"hash_to_curve_ts_1"],[257,56,224,54],[257,57,224,55,"createHasher"],[257,69,224,67],[257,71,224,69,"exports"],[257,78,224,76],[257,79,224,77,"ed25519"],[257,86,224,84],[257,87,224,85,"Point"],[257,92,224,90],[257,94,224,93,"scalars"],[257,101,224,100],[257,105,224,105,"map_to_curve_elligator2_edwards25519"],[257,141,224,141],[257,142,224,142,"scalars"],[257,149,224,149],[257,150,224,150],[257,151,224,151],[257,152,224,152],[257,153,224,153],[257,155,224,155],[258,4,225,4,"DST"],[258,7,225,7],[258,9,225,9],[258,44,225,44],[259,4,226,4,"encodeDST"],[259,13,226,13],[259,15,226,15],[259,50,226,50],[260,4,227,4,"p"],[260,5,227,5],[260,7,227,7,"ed25519_CURVE_p"],[260,22,227,22],[261,4,228,4,"m"],[261,5,228,5],[261,7,228,7],[261,8,228,8],[262,4,229,4,"k"],[262,5,229,5],[262,7,229,7],[262,10,229,10],[263,4,230,4,"expand"],[263,10,230,10],[263,12,230,12],[263,17,230,17],[264,4,231,4,"hash"],[264,8,231,8],[264,10,231,10,"sha2_js_1"],[264,19,231,19],[264,20,231,20,"sha512"],[265,2,232,0],[265,3,232,1],[265,4,232,2],[265,6,232,4],[265,7,232,5],[266,2,233,0],[267,2,234,0],[267,8,234,6,"SQRT_M1"],[267,15,234,13],[267,18,234,16,"ED25519_SQRT_M1"],[267,33,234,31],[268,2,235,0],[269,2,236,0],[269,8,236,6,"SQRT_AD_MINUS_ONE"],[269,25,236,23],[269,28,236,26],[269,43,236,42,"BigInt"],[269,49,236,48],[269,50,236,49],[269,129,236,128],[269,130,236,129],[270,2,237,0],[271,2,238,0],[271,8,238,6,"INVSQRT_A_MINUS_D"],[271,25,238,23],[271,28,238,26],[271,43,238,42,"BigInt"],[271,49,238,48],[271,50,238,49],[271,129,238,128],[271,130,238,129],[272,2,239,0],[273,2,240,0],[273,8,240,6,"ONE_MINUS_D_SQ"],[273,22,240,20],[273,25,240,23],[273,40,240,39,"BigInt"],[273,46,240,45],[273,47,240,46],[273,125,240,124],[273,126,240,125],[274,2,241,0],[275,2,242,0],[275,8,242,6,"D_MINUS_ONE_SQ"],[275,22,242,20],[275,25,242,23],[275,40,242,39,"BigInt"],[275,46,242,45],[275,47,242,46],[275,126,242,125],[275,127,242,126],[276,2,243,0],[277,2,244,0],[277,8,244,6,"invertSqrt"],[277,18,244,16],[277,21,244,20,"number"],[277,27,244,26],[277,31,244,31,"uvRatio"],[277,38,244,38],[277,39,244,39,"_1n"],[277,42,244,42],[277,44,244,44,"number"],[277,50,244,50],[277,51,244,51],[278,2,245,0],[278,8,245,6,"MAX_255B"],[278,16,245,14],[278,19,245,17],[278,34,245,33,"BigInt"],[278,40,245,39],[278,41,245,40],[278,109,245,108],[278,110,245,109],[279,2,246,0],[279,8,246,6,"bytes255ToNumberLE"],[279,26,246,24],[279,29,246,28,"bytes"],[279,34,246,33],[279,38,246,38,"exports"],[279,45,246,45],[279,46,246,46,"ed25519"],[279,53,246,53],[279,54,246,54,"Point"],[279,59,246,59],[279,60,246,60,"Fp"],[279,62,246,62],[279,63,246,63,"create"],[279,69,246,69],[279,70,246,70],[279,71,246,71],[279,72,246,72],[279,74,246,74,"utils_ts_1"],[279,84,246,84],[279,85,246,85,"bytesToNumberLE"],[279,100,246,100],[279,102,246,102,"bytes"],[279,107,246,107],[279,108,246,108],[279,111,246,111,"MAX_255B"],[279,119,246,119],[279,120,246,120],[280,2,247,0],[281,0,248,0],[282,0,249,0],[283,0,250,0],[284,0,251,0],[285,2,252,0],[285,11,252,9,"calcElligatorRistrettoMap"],[285,36,252,34,"calcElligatorRistrettoMap"],[285,37,252,35,"r0"],[285,39,252,37],[285,41,252,39],[286,4,253,4],[286,10,253,10],[287,6,253,12,"d"],[288,4,253,14],[288,5,253,15],[288,8,253,18,"ed25519_CURVE"],[288,21,253,31],[289,4,254,4],[289,10,254,10,"P"],[289,11,254,11],[289,14,254,14,"ed25519_CURVE_p"],[289,29,254,29],[290,4,255,4],[290,10,255,10,"mod"],[290,13,255,13],[290,16,255,17,"n"],[290,17,255,18],[290,21,255,23,"Fp"],[290,23,255,25],[290,24,255,26,"create"],[290,30,255,32],[290,31,255,33,"n"],[290,32,255,34],[290,33,255,35],[291,4,256,4],[291,10,256,10,"r"],[291,11,256,11],[291,14,256,14,"mod"],[291,17,256,17],[291,18,256,18,"SQRT_M1"],[291,25,256,25],[291,28,256,28,"r0"],[291,30,256,30],[291,33,256,33,"r0"],[291,35,256,35],[291,36,256,36],[291,37,256,37],[291,38,256,38],[292,4,257,4],[292,10,257,10,"Ns"],[292,12,257,12],[292,15,257,15,"mod"],[292,18,257,18],[292,19,257,19],[292,20,257,20,"r"],[292,21,257,21],[292,24,257,24,"_1n"],[292,27,257,27],[292,31,257,31,"ONE_MINUS_D_SQ"],[292,45,257,45],[292,46,257,46],[292,47,257,47],[292,48,257,48],[293,4,258,4],[293,8,258,8,"c"],[293,9,258,9],[293,12,258,12,"BigInt"],[293,18,258,18],[293,19,258,19],[293,20,258,20],[293,21,258,21],[293,22,258,22],[293,23,258,23],[293,24,258,24],[294,4,259,4],[294,10,259,10,"D"],[294,11,259,11],[294,14,259,14,"mod"],[294,17,259,17],[294,18,259,18],[294,19,259,19,"c"],[294,20,259,20],[294,23,259,23,"d"],[294,24,259,24],[294,27,259,27,"r"],[294,28,259,28],[294,32,259,32,"mod"],[294,35,259,35],[294,36,259,36,"r"],[294,37,259,37],[294,40,259,40,"d"],[294,41,259,41],[294,42,259,42],[294,43,259,43],[294,44,259,44],[294,45,259,45],[295,4,260,4],[295,8,260,8],[296,6,260,10,"isValid"],[296,13,260,17],[296,15,260,19,"Ns_D_is_sq"],[296,25,260,29],[297,6,260,31,"value"],[297,11,260,36],[297,13,260,38,"s"],[298,4,260,40],[298,5,260,41],[298,8,260,44,"uvRatio"],[298,15,260,51],[298,16,260,52,"Ns"],[298,18,260,54],[298,20,260,56,"D"],[298,21,260,57],[298,22,260,58],[298,23,260,59],[298,24,260,60],[299,4,261,4],[299,8,261,8,"s_"],[299,10,261,10],[299,13,261,13,"mod"],[299,16,261,16],[299,17,261,17,"s"],[299,18,261,18],[299,21,261,21,"r0"],[299,23,261,23],[299,24,261,24],[299,25,261,25],[299,26,261,26],[300,4,262,4],[300,8,262,8],[300,9,262,9],[300,10,262,10],[300,11,262,11],[300,13,262,13,"modular_ts_1"],[300,25,262,25],[300,26,262,26,"isNegativeLE"],[300,38,262,38],[300,40,262,40,"s_"],[300,42,262,42],[300,44,262,44,"P"],[300,45,262,45],[300,46,262,46],[300,48,263,8,"s_"],[300,50,263,10],[300,53,263,13,"mod"],[300,56,263,16],[300,57,263,17],[300,58,263,18,"s_"],[300,60,263,20],[300,61,263,21],[301,4,264,4],[301,8,264,8],[301,9,264,9,"Ns_D_is_sq"],[301,19,264,19],[301,21,265,8,"s"],[301,22,265,9],[301,25,265,12,"s_"],[301,27,265,14],[301,28,265,15],[301,29,265,16],[302,4,266,4],[302,8,266,8],[302,9,266,9,"Ns_D_is_sq"],[302,19,266,19],[302,21,267,8,"c"],[302,22,267,9],[302,25,267,12,"r"],[302,26,267,13],[302,27,267,14],[302,28,267,15],[303,4,268,4],[303,10,268,10,"Nt"],[303,12,268,12],[303,15,268,15,"mod"],[303,18,268,18],[303,19,268,19,"c"],[303,20,268,20],[303,24,268,24,"r"],[303,25,268,25],[303,28,268,28,"_1n"],[303,31,268,31],[303,32,268,32],[303,35,268,35,"D_MINUS_ONE_SQ"],[303,49,268,49],[303,52,268,52,"D"],[303,53,268,53],[303,54,268,54],[303,55,268,55],[303,56,268,56],[304,4,269,4],[304,10,269,10,"s2"],[304,12,269,12],[304,15,269,15,"s"],[304,16,269,16],[304,19,269,19,"s"],[304,20,269,20],[305,4,270,4],[305,10,270,10,"W0"],[305,12,270,12],[305,15,270,15,"mod"],[305,18,270,18],[305,19,270,19],[305,20,270,20,"s"],[305,21,270,21],[305,24,270,24,"s"],[305,25,270,25],[305,29,270,29,"D"],[305,30,270,30],[305,31,270,31],[305,32,270,32],[305,33,270,33],[306,4,271,4],[306,10,271,10,"W1"],[306,12,271,12],[306,15,271,15,"mod"],[306,18,271,18],[306,19,271,19,"Nt"],[306,21,271,21],[306,24,271,24,"SQRT_AD_MINUS_ONE"],[306,41,271,41],[306,42,271,42],[306,43,271,43],[306,44,271,44],[307,4,272,4],[307,10,272,10,"W2"],[307,12,272,12],[307,15,272,15,"mod"],[307,18,272,18],[307,19,272,19,"_1n"],[307,22,272,22],[307,25,272,25,"s2"],[307,27,272,27],[307,28,272,28],[307,29,272,29],[307,30,272,30],[308,4,273,4],[308,10,273,10,"W3"],[308,12,273,12],[308,15,273,15,"mod"],[308,18,273,18],[308,19,273,19,"_1n"],[308,22,273,22],[308,25,273,25,"s2"],[308,27,273,27],[308,28,273,28],[308,29,273,29],[308,30,273,30],[309,4,274,4],[309,11,274,11],[309,15,274,15,"exports"],[309,22,274,22],[309,23,274,23,"ed25519"],[309,30,274,30],[309,31,274,31,"Point"],[309,36,274,36],[309,37,274,37,"mod"],[309,40,274,40],[309,41,274,41,"W0"],[309,43,274,43],[309,46,274,46,"W3"],[309,48,274,48],[309,49,274,49],[309,51,274,51,"mod"],[309,54,274,54],[309,55,274,55,"W2"],[309,57,274,57],[309,60,274,60,"W1"],[309,62,274,62],[309,63,274,63],[309,65,274,65,"mod"],[309,68,274,68],[309,69,274,69,"W1"],[309,71,274,71],[309,74,274,74,"W3"],[309,76,274,76],[309,77,274,77],[309,79,274,79,"mod"],[309,82,274,82],[309,83,274,83,"W0"],[309,85,274,85],[309,88,274,88,"W2"],[309,90,274,90],[309,91,274,91],[309,92,274,92],[310,2,275,0],[311,2,276,0],[311,11,276,9,"ristretto255_map"],[311,27,276,25,"ristretto255_map"],[311,28,276,26,"bytes"],[311,33,276,31],[311,35,276,33],[312,4,277,4],[312,5,277,5],[312,6,277,6],[312,8,277,8,"utils_js_1"],[312,18,277,18],[312,19,277,19,"abytes"],[312,25,277,25],[312,27,277,27,"bytes"],[312,32,277,32],[312,34,277,34],[312,36,277,36],[312,37,277,37],[313,4,278,4],[313,10,278,10,"r1"],[313,12,278,12],[313,15,278,15,"bytes255ToNumberLE"],[313,33,278,33],[313,34,278,34,"bytes"],[313,39,278,39],[313,40,278,40,"subarray"],[313,48,278,48],[313,49,278,49],[313,50,278,50],[313,52,278,52],[313,54,278,54],[313,55,278,55],[313,56,278,56],[314,4,279,4],[314,10,279,10,"R1"],[314,12,279,12],[314,15,279,15,"calcElligatorRistrettoMap"],[314,40,279,40],[314,41,279,41,"r1"],[314,43,279,43],[314,44,279,44],[315,4,280,4],[315,10,280,10,"r2"],[315,12,280,12],[315,15,280,15,"bytes255ToNumberLE"],[315,33,280,33],[315,34,280,34,"bytes"],[315,39,280,39],[315,40,280,40,"subarray"],[315,48,280,48],[315,49,280,49],[315,51,280,51],[315,53,280,53],[315,55,280,55],[315,56,280,56],[315,57,280,57],[316,4,281,4],[316,10,281,10,"R2"],[316,12,281,12],[316,15,281,15,"calcElligatorRistrettoMap"],[316,40,281,40],[316,41,281,41,"r2"],[316,43,281,43],[316,44,281,44],[317,4,282,4],[317,11,282,11],[317,15,282,15,"_RistrettoPoint"],[317,30,282,30],[317,31,282,31,"R1"],[317,33,282,33],[317,34,282,34,"add"],[317,37,282,37],[317,38,282,38,"R2"],[317,40,282,40],[317,41,282,41],[317,42,282,42],[318,2,283,0],[319,2,284,0],[320,0,285,0],[321,0,286,0],[322,0,287,0],[323,0,288,0],[324,0,289,0],[325,0,290,0],[326,0,291,0],[327,0,292,0],[328,2,293,0],[328,8,293,6,"_RistrettoPoint"],[328,23,293,21],[328,32,293,30,"edwards_ts_1"],[328,44,293,42],[328,45,293,43,"PrimeEdwardsPoint"],[328,62,293,60],[328,63,293,61],[329,4,294,4,"constructor"],[329,15,294,15,"constructor"],[329,16,294,16,"ep"],[329,18,294,18],[329,20,294,20],[330,6,295,8],[330,11,295,13],[330,12,295,14,"ep"],[330,14,295,16],[330,15,295,17],[331,4,296,4],[332,4,297,4],[332,11,297,11,"fromAffine"],[332,21,297,21,"fromAffine"],[332,22,297,22,"ap"],[332,24,297,24],[332,26,297,26],[333,6,298,8],[333,13,298,15],[333,17,298,19,"_RistrettoPoint"],[333,32,298,34],[333,33,298,35,"exports"],[333,40,298,42],[333,41,298,43,"ed25519"],[333,48,298,50],[333,49,298,51,"Point"],[333,54,298,56],[333,55,298,57,"fromAffine"],[333,65,298,67],[333,66,298,68,"ap"],[333,68,298,70],[333,69,298,71],[333,70,298,72],[334,4,299,4],[335,4,300,4,"assertSame"],[335,14,300,14,"assertSame"],[335,15,300,15,"other"],[335,20,300,20],[335,22,300,22],[336,6,301,8],[336,10,301,12],[336,12,301,14,"other"],[336,17,301,19],[336,29,301,31,"_RistrettoPoint"],[336,44,301,46],[336,45,301,47],[336,47,302,12],[336,53,302,18],[336,57,302,22,"Error"],[336,62,302,27],[336,63,302,28],[336,88,302,53],[336,89,302,54],[337,4,303,4],[338,4,304,4,"init"],[338,8,304,8,"init"],[338,9,304,9,"ep"],[338,11,304,11],[338,13,304,13],[339,6,305,8],[339,13,305,15],[339,17,305,19,"_RistrettoPoint"],[339,32,305,34],[339,33,305,35,"ep"],[339,35,305,37],[339,36,305,38],[340,4,306,4],[341,4,307,4],[342,4,308,4],[342,11,308,11,"hashToCurve"],[342,22,308,22,"hashToCurve"],[342,23,308,23,"hex"],[342,26,308,26],[342,28,308,28],[343,6,309,8],[343,13,309,15,"ristretto255_map"],[343,29,309,31],[343,30,309,32],[343,31,309,33],[343,32,309,34],[343,34,309,36,"utils_ts_1"],[343,44,309,46],[343,45,309,47,"ensureBytes"],[343,56,309,58],[343,58,309,60],[343,73,309,75],[343,75,309,77,"hex"],[343,78,309,80],[343,80,309,82],[343,82,309,84],[343,83,309,85],[343,84,309,86],[344,4,310,4],[345,4,311,4],[345,11,311,11,"fromBytes"],[345,20,311,20,"fromBytes"],[345,21,311,21,"bytes"],[345,26,311,26],[345,28,311,28],[346,6,312,8],[346,7,312,9],[346,8,312,10],[346,10,312,12,"utils_js_1"],[346,20,312,22],[346,21,312,23,"abytes"],[346,27,312,29],[346,29,312,31,"bytes"],[346,34,312,36],[346,36,312,38],[346,38,312,40],[346,39,312,41],[347,6,313,8],[347,12,313,14],[348,8,313,16,"a"],[348,9,313,17],[349,8,313,19,"d"],[350,6,313,21],[350,7,313,22],[350,10,313,25,"ed25519_CURVE"],[350,23,313,38],[351,6,314,8],[351,12,314,14,"P"],[351,13,314,15],[351,16,314,18,"ed25519_CURVE_p"],[351,31,314,33],[352,6,315,8],[352,12,315,14,"mod"],[352,15,315,17],[352,18,315,21,"n"],[352,19,315,22],[352,23,315,27,"Fp"],[352,25,315,29],[352,26,315,30,"create"],[352,32,315,36],[352,33,315,37,"n"],[352,34,315,38],[352,35,315,39],[353,6,316,8],[353,12,316,14,"s"],[353,13,316,15],[353,16,316,18,"bytes255ToNumberLE"],[353,34,316,36],[353,35,316,37,"bytes"],[353,40,316,42],[353,41,316,43],[354,6,317,8],[355,6,318,8],[356,6,319,8],[356,10,319,12],[356,11,319,13],[356,12,319,14],[356,13,319,15],[356,15,319,17,"utils_ts_1"],[356,25,319,27],[356,26,319,28,"equalBytes"],[356,36,319,38],[356,38,319,40,"Fp"],[356,40,319,42],[356,41,319,43,"toBytes"],[356,48,319,50],[356,49,319,51,"s"],[356,50,319,52],[356,51,319,53],[356,53,319,55,"bytes"],[356,58,319,60],[356,59,319,61],[356,63,319,65],[356,64,319,66],[356,65,319,67],[356,67,319,69,"modular_ts_1"],[356,79,319,81],[356,80,319,82,"isNegativeLE"],[356,92,319,94],[356,94,319,96,"s"],[356,95,319,97],[356,97,319,99,"P"],[356,98,319,100],[356,99,319,101],[356,101,320,12],[356,107,320,18],[356,111,320,22,"Error"],[356,116,320,27],[356,117,320,28],[356,150,320,61],[356,151,320,62],[357,6,321,8],[357,12,321,14,"s2"],[357,14,321,16],[357,17,321,19,"mod"],[357,20,321,22],[357,21,321,23,"s"],[357,22,321,24],[357,25,321,27,"s"],[357,26,321,28],[357,27,321,29],[358,6,322,8],[358,12,322,14,"u1"],[358,14,322,16],[358,17,322,19,"mod"],[358,20,322,22],[358,21,322,23,"_1n"],[358,24,322,26],[358,27,322,29,"a"],[358,28,322,30],[358,31,322,33,"s2"],[358,33,322,35],[358,34,322,36],[358,35,322,37],[358,36,322,38],[359,6,323,8],[359,12,323,14,"u2"],[359,14,323,16],[359,17,323,19,"mod"],[359,20,323,22],[359,21,323,23,"_1n"],[359,24,323,26],[359,27,323,29,"a"],[359,28,323,30],[359,31,323,33,"s2"],[359,33,323,35],[359,34,323,36],[359,35,323,37],[359,36,323,38],[360,6,324,8],[360,12,324,14,"u1_2"],[360,16,324,18],[360,19,324,21,"mod"],[360,22,324,24],[360,23,324,25,"u1"],[360,25,324,27],[360,28,324,30,"u1"],[360,30,324,32],[360,31,324,33],[361,6,325,8],[361,12,325,14,"u2_2"],[361,16,325,18],[361,19,325,21,"mod"],[361,22,325,24],[361,23,325,25,"u2"],[361,25,325,27],[361,28,325,30,"u2"],[361,30,325,32],[361,31,325,33],[362,6,326,8],[362,12,326,14,"v"],[362,13,326,15],[362,16,326,18,"mod"],[362,19,326,21],[362,20,326,22,"a"],[362,21,326,23],[362,24,326,26,"d"],[362,25,326,27],[362,28,326,30,"u1_2"],[362,32,326,34],[362,35,326,37,"u2_2"],[362,39,326,41],[362,40,326,42],[362,41,326,43],[362,42,326,44],[363,6,327,8],[363,12,327,14],[364,8,327,16,"isValid"],[364,15,327,23],[365,8,327,25,"value"],[365,13,327,30],[365,15,327,32,"I"],[366,6,327,34],[366,7,327,35],[366,10,327,38,"invertSqrt"],[366,20,327,48],[366,21,327,49,"mod"],[366,24,327,52],[366,25,327,53,"v"],[366,26,327,54],[366,29,327,57,"u2_2"],[366,33,327,61],[366,34,327,62],[366,35,327,63],[366,36,327,64],[366,37,327,65],[367,6,328,8],[367,12,328,14,"Dx"],[367,14,328,16],[367,17,328,19,"mod"],[367,20,328,22],[367,21,328,23,"I"],[367,22,328,24],[367,25,328,27,"u2"],[367,27,328,29],[367,28,328,30],[367,29,328,31],[367,30,328,32],[368,6,329,8],[368,12,329,14,"Dy"],[368,14,329,16],[368,17,329,19,"mod"],[368,20,329,22],[368,21,329,23,"I"],[368,22,329,24],[368,25,329,27,"Dx"],[368,27,329,29],[368,30,329,32,"v"],[368,31,329,33],[368,32,329,34],[368,33,329,35],[368,34,329,36],[369,6,330,8],[369,10,330,12,"x"],[369,11,330,13],[369,14,330,16,"mod"],[369,17,330,19],[369,18,330,20],[369,19,330,21,"s"],[369,20,330,22],[369,23,330,25,"s"],[369,24,330,26],[369,28,330,30,"Dx"],[369,30,330,32],[369,31,330,33],[369,32,330,34],[369,33,330,35],[370,6,331,8],[370,10,331,12],[370,11,331,13],[370,12,331,14],[370,14,331,16,"modular_ts_1"],[370,26,331,28],[370,27,331,29,"isNegativeLE"],[370,39,331,41],[370,41,331,43,"x"],[370,42,331,44],[370,44,331,46,"P"],[370,45,331,47],[370,46,331,48],[370,48,332,12,"x"],[370,49,332,13],[370,52,332,16,"mod"],[370,55,332,19],[370,56,332,20],[370,57,332,21,"x"],[370,58,332,22],[370,59,332,23],[370,60,332,24],[370,61,332,25],[371,6,333,8],[371,12,333,14,"y"],[371,13,333,15],[371,16,333,18,"mod"],[371,19,333,21],[371,20,333,22,"u1"],[371,22,333,24],[371,25,333,27,"Dy"],[371,27,333,29],[371,28,333,30],[371,29,333,31],[371,30,333,32],[372,6,334,8],[372,12,334,14,"t"],[372,13,334,15],[372,16,334,18,"mod"],[372,19,334,21],[372,20,334,22,"x"],[372,21,334,23],[372,24,334,26,"y"],[372,25,334,27],[372,26,334,28],[372,27,334,29],[372,28,334,30],[373,6,335,8],[373,10,335,12],[373,11,335,13,"isValid"],[373,18,335,20],[373,22,335,24],[373,23,335,25],[373,24,335,26],[373,26,335,28,"modular_ts_1"],[373,38,335,40],[373,39,335,41,"isNegativeLE"],[373,51,335,53],[373,53,335,55,"t"],[373,54,335,56],[373,56,335,58,"P"],[373,57,335,59],[373,58,335,60],[373,62,335,64,"y"],[373,63,335,65],[373,68,335,70,"_0n"],[373,71,335,73],[373,73,336,12],[373,79,336,18],[373,83,336,22,"Error"],[373,88,336,27],[373,89,336,28],[373,122,336,61],[373,123,336,62],[374,6,337,8],[374,13,337,15],[374,17,337,19,"_RistrettoPoint"],[374,32,337,34],[374,33,337,35],[374,37,337,39,"exports"],[374,44,337,46],[374,45,337,47,"ed25519"],[374,52,337,54],[374,53,337,55,"Point"],[374,58,337,60],[374,59,337,61,"x"],[374,60,337,62],[374,62,337,64,"y"],[374,63,337,65],[374,65,337,67,"_1n"],[374,68,337,70],[374,70,337,72,"t"],[374,71,337,73],[374,72,337,74],[374,73,337,75],[375,4,338,4],[376,4,339,4],[377,0,340,0],[378,0,341,0],[379,0,342,0],[380,0,343,0],[381,4,344,4],[381,11,344,11,"fromHex"],[381,18,344,18,"fromHex"],[381,19,344,19,"hex"],[381,22,344,22],[381,24,344,24],[382,6,345,8],[382,13,345,15,"_RistrettoPoint"],[382,28,345,30],[382,29,345,31,"fromBytes"],[382,38,345,40],[382,39,345,41],[382,40,345,42],[382,41,345,43],[382,43,345,45,"utils_ts_1"],[382,53,345,55],[382,54,345,56,"ensureBytes"],[382,65,345,67],[382,67,345,69],[382,81,345,83],[382,83,345,85,"hex"],[382,86,345,88],[382,88,345,90],[382,90,345,92],[382,91,345,93],[382,92,345,94],[383,4,346,4],[384,4,347,4],[384,11,347,11,"msm"],[384,14,347,14,"msm"],[384,15,347,15,"points"],[384,21,347,21],[384,23,347,23,"scalars"],[384,30,347,30],[384,32,347,32],[385,6,348,8],[385,13,348,15],[385,14,348,16],[385,15,348,17],[385,17,348,19,"curve_ts_1"],[385,27,348,29],[385,28,348,30,"pippenger"],[385,37,348,39],[385,39,348,41,"_RistrettoPoint"],[385,54,348,56],[385,56,348,58,"exports"],[385,63,348,65],[385,64,348,66,"ed25519"],[385,71,348,73],[385,72,348,74,"Point"],[385,77,348,79],[385,78,348,80,"Fn"],[385,80,348,82],[385,82,348,84,"points"],[385,88,348,90],[385,90,348,92,"scalars"],[385,97,348,99],[385,98,348,100],[386,4,349,4],[387,4,350,4],[388,0,351,0],[389,0,352,0],[390,0,353,0],[391,4,354,4,"toBytes"],[391,11,354,11,"toBytes"],[391,12,354,11],[391,14,354,14],[392,6,355,8],[392,10,355,12],[393,8,355,14,"X"],[393,9,355,15],[394,8,355,17,"Y"],[394,9,355,18],[395,8,355,20,"Z"],[395,9,355,21],[396,8,355,23,"T"],[397,6,355,25],[397,7,355,26],[397,10,355,29],[397,14,355,33],[397,15,355,34,"ep"],[397,17,355,36],[398,6,356,8],[398,12,356,14,"P"],[398,13,356,15],[398,16,356,18,"ed25519_CURVE_p"],[398,31,356,33],[399,6,357,8],[399,12,357,14,"mod"],[399,15,357,17],[399,18,357,21,"n"],[399,19,357,22],[399,23,357,27,"Fp"],[399,25,357,29],[399,26,357,30,"create"],[399,32,357,36],[399,33,357,37,"n"],[399,34,357,38],[399,35,357,39],[400,6,358,8],[400,12,358,14,"u1"],[400,14,358,16],[400,17,358,19,"mod"],[400,20,358,22],[400,21,358,23,"mod"],[400,24,358,26],[400,25,358,27,"Z"],[400,26,358,28],[400,29,358,31,"Y"],[400,30,358,32],[400,31,358,33],[400,34,358,36,"mod"],[400,37,358,39],[400,38,358,40,"Z"],[400,39,358,41],[400,42,358,44,"Y"],[400,43,358,45],[400,44,358,46],[400,45,358,47],[400,46,358,48],[400,47,358,49],[401,6,359,8],[401,12,359,14,"u2"],[401,14,359,16],[401,17,359,19,"mod"],[401,20,359,22],[401,21,359,23,"X"],[401,22,359,24],[401,25,359,27,"Y"],[401,26,359,28],[401,27,359,29],[401,28,359,30],[401,29,359,31],[402,6,360,8],[403,6,361,8],[403,12,361,14,"u2sq"],[403,16,361,18],[403,19,361,21,"mod"],[403,22,361,24],[403,23,361,25,"u2"],[403,25,361,27],[403,28,361,30,"u2"],[403,30,361,32],[403,31,361,33],[404,6,362,8],[404,12,362,14],[405,8,362,16,"value"],[405,13,362,21],[405,15,362,23,"invsqrt"],[406,6,362,31],[406,7,362,32],[406,10,362,35,"invertSqrt"],[406,20,362,45],[406,21,362,46,"mod"],[406,24,362,49],[406,25,362,50,"u1"],[406,27,362,52],[406,30,362,55,"u2sq"],[406,34,362,59],[406,35,362,60],[406,36,362,61],[406,37,362,62],[406,38,362,63],[407,6,363,8],[407,12,363,14,"D1"],[407,14,363,16],[407,17,363,19,"mod"],[407,20,363,22],[407,21,363,23,"invsqrt"],[407,28,363,30],[407,31,363,33,"u1"],[407,33,363,35],[407,34,363,36],[407,35,363,37],[407,36,363,38],[408,6,364,8],[408,12,364,14,"D2"],[408,14,364,16],[408,17,364,19,"mod"],[408,20,364,22],[408,21,364,23,"invsqrt"],[408,28,364,30],[408,31,364,33,"u2"],[408,33,364,35],[408,34,364,36],[408,35,364,37],[408,36,364,38],[409,6,365,8],[409,12,365,14,"zInv"],[409,16,365,18],[409,19,365,21,"mod"],[409,22,365,24],[409,23,365,25,"D1"],[409,25,365,27],[409,28,365,30,"D2"],[409,30,365,32],[409,33,365,35,"T"],[409,34,365,36],[409,35,365,37],[409,36,365,38],[409,37,365,39],[410,6,366,8],[410,10,366,12,"D"],[410,11,366,13],[410,12,366,14],[410,13,366,15],[411,6,367,8],[411,10,367,12],[411,11,367,13],[411,12,367,14],[411,14,367,16,"modular_ts_1"],[411,26,367,28],[411,27,367,29,"isNegativeLE"],[411,39,367,41],[411,41,367,43,"T"],[411,42,367,44],[411,45,367,47,"zInv"],[411,49,367,51],[411,51,367,53,"P"],[411,52,367,54],[411,53,367,55],[411,55,367,57],[412,8,368,12],[412,12,368,16,"_x"],[412,14,368,18],[412,17,368,21,"mod"],[412,20,368,24],[412,21,368,25,"Y"],[412,22,368,26],[412,25,368,29,"SQRT_M1"],[412,32,368,36],[412,33,368,37],[413,8,369,12],[413,12,369,16,"_y"],[413,14,369,18],[413,17,369,21,"mod"],[413,20,369,24],[413,21,369,25,"X"],[413,22,369,26],[413,25,369,29,"SQRT_M1"],[413,32,369,36],[413,33,369,37],[414,8,370,12,"X"],[414,9,370,13],[414,12,370,16,"_x"],[414,14,370,18],[415,8,371,12,"Y"],[415,9,371,13],[415,12,371,16,"_y"],[415,14,371,18],[416,8,372,12,"D"],[416,9,372,13],[416,12,372,16,"mod"],[416,15,372,19],[416,16,372,20,"D1"],[416,18,372,22],[416,21,372,25,"INVSQRT_A_MINUS_D"],[416,38,372,42],[416,39,372,43],[417,6,373,8],[417,7,373,9],[417,13,374,13],[418,8,375,12,"D"],[418,9,375,13],[418,12,375,16,"D2"],[418,14,375,18],[418,15,375,19],[418,16,375,20],[419,6,376,8],[420,6,377,8],[420,10,377,12],[420,11,377,13],[420,12,377,14],[420,14,377,16,"modular_ts_1"],[420,26,377,28],[420,27,377,29,"isNegativeLE"],[420,39,377,41],[420,41,377,43,"X"],[420,42,377,44],[420,45,377,47,"zInv"],[420,49,377,51],[420,51,377,53,"P"],[420,52,377,54],[420,53,377,55],[420,55,378,12,"Y"],[420,56,378,13],[420,59,378,16,"mod"],[420,62,378,19],[420,63,378,20],[420,64,378,21,"Y"],[420,65,378,22],[420,66,378,23],[420,67,378,24],[420,68,378,25],[421,6,379,8],[421,10,379,12,"s"],[421,11,379,13],[421,14,379,16,"mod"],[421,17,379,19],[421,18,379,20],[421,19,379,21,"Z"],[421,20,379,22],[421,23,379,25,"Y"],[421,24,379,26],[421,28,379,30,"D"],[421,29,379,31],[421,30,379,32],[421,31,379,33],[421,32,379,34],[422,6,380,8],[422,10,380,12],[422,11,380,13],[422,12,380,14],[422,14,380,16,"modular_ts_1"],[422,26,380,28],[422,27,380,29,"isNegativeLE"],[422,39,380,41],[422,41,380,43,"s"],[422,42,380,44],[422,44,380,46,"P"],[422,45,380,47],[422,46,380,48],[422,48,381,12,"s"],[422,49,381,13],[422,52,381,16,"mod"],[422,55,381,19],[422,56,381,20],[422,57,381,21,"s"],[422,58,381,22],[422,59,381,23],[423,6,382,8],[423,13,382,15,"Fp"],[423,15,382,17],[423,16,382,18,"toBytes"],[423,23,382,25],[423,24,382,26,"s"],[423,25,382,27],[423,26,382,28],[423,27,382,29],[423,28,382,30],[424,4,383,4],[425,4,384,4],[426,0,385,0],[427,0,386,0],[428,0,387,0],[429,4,388,4,"equals"],[429,10,388,10,"equals"],[429,11,388,11,"other"],[429,16,388,16],[429,18,388,18],[430,6,389,8],[430,10,389,12],[430,11,389,13,"assertSame"],[430,21,389,23],[430,22,389,24,"other"],[430,27,389,29],[430,28,389,30],[431,6,390,8],[431,12,390,14],[432,8,390,16,"X"],[432,9,390,17],[432,11,390,19,"X1"],[432,13,390,21],[433,8,390,23,"Y"],[433,9,390,24],[433,11,390,26,"Y1"],[434,6,390,29],[434,7,390,30],[434,10,390,33],[434,14,390,37],[434,15,390,38,"ep"],[434,17,390,40],[435,6,391,8],[435,12,391,14],[436,8,391,16,"X"],[436,9,391,17],[436,11,391,19,"X2"],[436,13,391,21],[437,8,391,23,"Y"],[437,9,391,24],[437,11,391,26,"Y2"],[438,6,391,29],[438,7,391,30],[438,10,391,33,"other"],[438,15,391,38],[438,16,391,39,"ep"],[438,18,391,41],[439,6,392,8],[439,12,392,14,"mod"],[439,15,392,17],[439,18,392,21,"n"],[439,19,392,22],[439,23,392,27,"Fp"],[439,25,392,29],[439,26,392,30,"create"],[439,32,392,36],[439,33,392,37,"n"],[439,34,392,38],[439,35,392,39],[440,6,393,8],[441,6,394,8],[441,12,394,14,"one"],[441,15,394,17],[441,18,394,20,"mod"],[441,21,394,23],[441,22,394,24,"X1"],[441,24,394,26],[441,27,394,29,"Y2"],[441,29,394,31],[441,30,394,32],[441,35,394,37,"mod"],[441,38,394,40],[441,39,394,41,"Y1"],[441,41,394,43],[441,44,394,46,"X2"],[441,46,394,48],[441,47,394,49],[442,6,395,8],[442,12,395,14,"two"],[442,15,395,17],[442,18,395,20,"mod"],[442,21,395,23],[442,22,395,24,"Y1"],[442,24,395,26],[442,27,395,29,"Y2"],[442,29,395,31],[442,30,395,32],[442,35,395,37,"mod"],[442,38,395,40],[442,39,395,41,"X1"],[442,41,395,43],[442,44,395,46,"X2"],[442,46,395,48],[442,47,395,49],[443,6,396,8],[443,13,396,15,"one"],[443,16,396,18],[443,20,396,22,"two"],[443,23,396,25],[444,4,397,4],[445,4,398,4,"is0"],[445,7,398,7,"is0"],[445,8,398,7],[445,10,398,10],[446,6,399,8],[446,13,399,15],[446,17,399,19],[446,18,399,20,"equals"],[446,24,399,26],[446,25,399,27,"_RistrettoPoint"],[446,40,399,42],[446,41,399,43,"ZERO"],[446,45,399,47],[446,46,399,48],[447,4,400,4],[448,2,401,0],[449,2,402,0],[450,2,403,0],[451,2,404,0],[452,2,405,0,"_RistrettoPoint"],[452,17,405,15],[452,18,405,16,"BASE"],[452,22,405,20],[452,25,406,0],[452,40,406,16],[452,41,406,17],[452,47,406,23],[452,51,406,27,"_RistrettoPoint"],[452,66,406,42],[452,67,406,43,"exports"],[452,74,406,50],[452,75,406,51,"ed25519"],[452,82,406,58],[452,83,406,59,"Point"],[452,88,406,64],[452,89,406,65,"BASE"],[452,93,406,69],[452,94,406,70],[452,96,406,72],[452,97,406,73],[453,2,407,0],[454,2,408,0,"_RistrettoPoint"],[454,17,408,15],[454,18,408,16,"ZERO"],[454,22,408,20],[454,25,409,0],[454,40,409,16],[454,41,409,17],[454,47,409,23],[454,51,409,27,"_RistrettoPoint"],[454,66,409,42],[454,67,409,43,"exports"],[454,74,409,50],[454,75,409,51,"ed25519"],[454,82,409,58],[454,83,409,59,"Point"],[454,88,409,64],[454,89,409,65,"ZERO"],[454,93,409,69],[454,94,409,70],[454,96,409,72],[454,97,409,73],[455,2,410,0],[456,2,411,0,"_RistrettoPoint"],[456,17,411,15],[456,18,411,16,"Fp"],[456,20,411,18],[456,23,412,0],[456,38,412,16],[456,39,412,17],[456,45,412,23,"Fp"],[456,47,412,25],[456,49,412,27],[456,50,412,28],[457,2,413,0],[458,2,414,0,"_RistrettoPoint"],[458,17,414,15],[458,18,414,16,"Fn"],[458,20,414,18],[458,23,415,0],[458,38,415,16],[458,39,415,17],[458,45,415,23,"Fn"],[458,47,415,25],[458,49,415,27],[458,50,415,28],[459,2,416,0,"exports"],[459,9,416,7],[459,10,416,8,"ristretto255"],[459,22,416,20],[459,25,416,23],[460,4,416,25,"Point"],[460,9,416,30],[460,11,416,32,"_RistrettoPoint"],[461,2,416,48],[461,3,416,49],[462,2,417,0],[463,2,418,0,"exports"],[463,9,418,7],[463,10,418,8,"ristretto255_hasher"],[463,29,418,27],[463,32,418,30],[464,4,419,4,"hashToCurve"],[464,15,419,15,"hashToCurve"],[464,16,419,16,"msg"],[464,19,419,19],[464,21,419,21,"options"],[464,28,419,28],[464,30,419,30],[465,6,420,8],[465,12,420,14,"DST"],[465,15,420,17],[465,18,420,20,"options"],[465,25,420,27],[465,27,420,29,"DST"],[465,30,420,32],[465,34,420,36],[465,72,420,74],[466,6,421,8],[466,12,421,14,"xmd"],[466,15,421,17],[466,18,421,20],[466,19,421,21],[466,20,421,22],[466,22,421,24,"hash_to_curve_ts_1"],[466,40,421,42],[466,41,421,43,"expand_message_xmd"],[466,59,421,61],[466,61,421,63,"msg"],[466,64,421,66],[466,66,421,68,"DST"],[466,69,421,71],[466,71,421,73],[466,73,421,75],[466,75,421,77,"sha2_js_1"],[466,84,421,86],[466,85,421,87,"sha512"],[466,91,421,93],[466,92,421,94],[467,6,422,8],[467,13,422,15,"ristretto255_map"],[467,29,422,31],[467,30,422,32,"xmd"],[467,33,422,35],[467,34,422,36],[468,4,423,4],[468,5,423,5],[469,4,424,4,"hashToScalar"],[469,16,424,16,"hashToScalar"],[469,17,424,17,"msg"],[469,20,424,20],[469,22,424,22,"options"],[469,29,424,29],[469,32,424,32],[470,6,424,34,"DST"],[470,9,424,37],[470,11,424,39,"hash_to_curve_ts_1"],[470,29,424,57],[470,30,424,58,"_DST_scalar"],[471,4,424,70],[471,5,424,71],[471,7,424,73],[472,6,425,8],[472,12,425,14,"xmd"],[472,15,425,17],[472,18,425,20],[472,19,425,21],[472,20,425,22],[472,22,425,24,"hash_to_curve_ts_1"],[472,40,425,42],[472,41,425,43,"expand_message_xmd"],[472,59,425,61],[472,61,425,63,"msg"],[472,64,425,66],[472,66,425,68,"options"],[472,73,425,75],[472,74,425,76,"DST"],[472,77,425,79],[472,79,425,81],[472,81,425,83],[472,83,425,85,"sha2_js_1"],[472,92,425,94],[472,93,425,95,"sha512"],[472,99,425,101],[472,100,425,102],[473,6,426,8],[473,13,426,15,"Fn"],[473,15,426,17],[473,16,426,18,"create"],[473,22,426,24],[473,23,426,25],[473,24,426,26],[473,25,426,27],[473,27,426,29,"utils_ts_1"],[473,37,426,39],[473,38,426,40,"bytesToNumberLE"],[473,53,426,55],[473,55,426,57,"xmd"],[473,58,426,60],[473,59,426,61],[473,60,426,62],[474,4,427,4],[475,2,428,0],[475,3,428,1],[476,2,429,0],[477,2,430,0],[478,2,431,0],[479,2,432,0],[480,2,433,0],[481,2,434,0],[482,2,435,0],[483,2,436,0],[484,0,437,0],[485,0,438,0],[486,0,439,0],[487,0,440,0],[488,0,441,0],[489,2,442,0,"exports"],[489,9,442,7],[489,10,442,8,"ED25519_TORSION_SUBGROUP"],[489,34,442,32],[489,37,442,35],[489,38,443,4],[489,104,443,70],[489,106,444,4],[489,172,444,70],[489,174,445,4],[489,240,445,70],[489,242,446,4],[489,308,446,70],[489,310,447,4],[489,376,447,70],[489,378,448,4],[489,444,448,70],[489,446,449,4],[489,512,449,70],[489,514,450,4],[489,580,450,70],[489,581,451,1],[490,2,452,0],[491,2,453,0],[491,11,453,9,"edwardsToMontgomeryPub"],[491,33,453,31,"edwardsToMontgomeryPub"],[491,34,453,32,"edwardsPub"],[491,44,453,42],[491,46,453,44],[492,4,454,4],[492,11,454,11,"exports"],[492,18,454,18],[492,19,454,19,"ed25519"],[492,26,454,26],[492,27,454,27,"utils"],[492,32,454,32],[492,33,454,33,"toMontgomery"],[492,45,454,45],[492,46,454,46],[492,47,454,47],[492,48,454,48],[492,50,454,50,"utils_ts_1"],[492,60,454,60],[492,61,454,61,"ensureBytes"],[492,72,454,72],[492,74,454,74],[492,79,454,79],[492,81,454,81,"edwardsPub"],[492,91,454,91],[492,92,454,92],[492,93,454,93],[493,2,455,0],[494,2,456,0],[495,2,457,0,"exports"],[495,9,457,7],[495,10,457,8,"edwardsToMontgomery"],[495,29,457,27],[495,32,457,30,"edwardsToMontgomeryPub"],[495,54,457,52],[496,2,458,0],[497,2,459,0],[497,11,459,9,"edwardsToMontgomeryPriv"],[497,34,459,32,"edwardsToMontgomeryPriv"],[497,35,459,33,"edwardsPriv"],[497,46,459,44],[497,48,459,46],[498,4,460,4],[498,11,460,11,"exports"],[498,18,460,18],[498,19,460,19,"ed25519"],[498,26,460,26],[498,27,460,27,"utils"],[498,32,460,32],[498,33,460,33,"toMontgomerySecret"],[498,51,460,51],[498,52,460,52],[498,53,460,53],[498,54,460,54],[498,56,460,56,"utils_ts_1"],[498,66,460,66],[498,67,460,67,"ensureBytes"],[498,78,460,78],[498,80,460,80],[498,85,460,85],[498,87,460,87,"edwardsPriv"],[498,98,460,98],[498,99,460,99],[498,100,460,100],[499,2,461,0],[500,2,462,0],[501,2,463,0,"exports"],[501,9,463,7],[501,10,463,8,"RistrettoPoint"],[501,24,463,22],[501,27,463,25,"_RistrettoPoint"],[501,42,463,40],[502,2,464,0],[503,2,465,0,"exports"],[503,9,465,7],[503,10,465,8,"hashToCurve"],[503,21,465,19],[503,24,465,22],[503,25,465,23],[503,31,465,29,"exports"],[503,38,465,36],[503,39,465,37,"ed25519_hasher"],[503,53,465,51],[503,54,465,52,"hashToCurve"],[503,65,465,63],[503,67,465,65],[503,68,465,66],[504,2,466,0],[505,2,467,0,"exports"],[505,9,467,7],[505,10,467,8,"encodeToCurve"],[505,23,467,21],[505,26,467,24],[505,27,467,25],[505,33,467,31,"exports"],[505,40,467,38],[505,41,467,39,"ed25519_hasher"],[505,55,467,53],[505,56,467,54,"encodeToCurve"],[505,69,467,67],[505,71,467,69],[505,72,467,70],[506,2,468,0],[507,2,469,0,"exports"],[507,9,469,7],[507,10,469,8,"hashToRistretto255"],[507,28,469,26],[507,31,469,29],[507,32,469,30],[507,38,469,36,"exports"],[507,45,469,43],[507,46,469,44,"ristretto255_hasher"],[507,65,469,63],[507,66,469,64,"hashToCurve"],[507,77,469,75],[507,79,469,77],[507,80,469,78],[508,2,470,0],[509,2,471,0,"exports"],[509,9,471,7],[509,10,471,8,"hash_to_ristretto255"],[509,30,471,28],[509,33,471,31],[509,34,471,32],[509,40,471,38,"exports"],[509,47,471,45],[509,48,471,46,"ristretto255_hasher"],[509,67,471,65],[509,68,471,66,"hashToCurve"],[509,79,471,77],[509,81,471,79],[509,82,471,80],[510,0,471,81],[510,3]],"functionMap":{"names":["<global>","<anonymous>","ed25519_pow_2_252_3","adjustScalarBytes","uvRatio","ed25519_domain","powPminus2","map_to_curve_elligator2_curve25519","map_to_curve_elligator2_edwards25519","invertSqrt","bytes255ToNumberLE","calcElligatorRistrettoMap","mod","ristretto255_map","_RistrettoPoint","_RistrettoPoint#constructor","_RistrettoPoint.fromAffine","_RistrettoPoint#assertSame","_RistrettoPoint#init","_RistrettoPoint.hashToCurve","_RistrettoPoint.fromBytes","_RistrettoPoint.fromHex","_RistrettoPoint.msm","_RistrettoPoint#toBytes","_RistrettoPoint#equals","_RistrettoPoint#is0","exports.ristretto255_hasher.hashToCurve","exports.ristretto255_hasher.hashToScalar","edwardsToMontgomeryPub","edwardsToMontgomeryPriv"],"mappings":"AAA;uCC8B;EDQ;AEC;CFkB;AGC;CHS;AIK;CJoB;4BCC,8DD;4BCC,8DD;yCCC;EDS;mBCW,uDD;AKC;CLI;sBCE;EDG;qBCE;GDG;kBCW;oBKK;SLI;CDG;iCCI,mCD;iCCC,0BD;iCCC,6BD;AOE;CP0C;yCCC,8DD;AQC;CRgB;0BCE;EDQ;mBSY,gCT;2BUE,6FV;AWM;gBCG,mBD;CXoB;AaC;CbO;AcU;ICC;KDE;IEC;KFE;IGC;KHG;IIC;KJE;IKE;KLE;IMC;oBRI,mBQ;KNuB;IOM;KPE;IQC;KRE;ISK;oBXG,mBW;KT0B;IUK;oBZI,mBY;KVK;IWC;KXE;CdC;iBCK,qDD;iBCG,qDD;iBCG,QD;iBCG,QD;I0BI;K1BI;I2BC;K3BG;A4B0B;C5BE;A6BI;C7BE;uBCI,wCD;yBCE,0CD;8BCE,6CD;gCCE,6CD"}},"type":"js/module"}]}