{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/buffer-layout-utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":50,"index":102}}],"key":"uY07c2hRI0N+OVJYRD373wbUopw=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":103},"end":{"line":3,"column":57,"index":160}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":51,"index":212}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":213},"end":{"line":5,"column":170,"index":383}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./internal.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":384},"end":{"line":6,"column":43,"index":427}}],"key":"8koSC5bhCi+pFNPMfaVFms7TipA=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":428},"end":{"line":7,"column":46,"index":474}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMintToCheckedInstruction = createMintToCheckedInstruction;\n  exports.decodeMintToCheckedInstruction = decodeMintToCheckedInstruction;\n  exports.decodeMintToCheckedInstructionUnchecked = decodeMintToCheckedInstructionUnchecked;\n  exports.mintToCheckedInstructionData = void 0;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _bufferLayoutUtils = require(_dependencyMap[1], \"@solana/buffer-layout-utils\");\n  var _web = require(_dependencyMap[2], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[3], \"../constants.js\");\n  var _errors = require(_dependencyMap[4], \"../errors.js\");\n  var _internal = require(_dependencyMap[5], \"./internal.js\");\n  var _types = require(_dependencyMap[6], \"./types.js\");\n  /** TODO: docs */\n  const mintToCheckedInstructionData = exports.mintToCheckedInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayoutUtils.u64)('amount'), (0, _bufferLayout.u8)('decimals')]);\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param mint         Public key of the mint\n   * @param destination  Address of the token account to mint to\n   * @param authority    The mint authority\n   * @param amount       Amount to mint\n   * @param decimals     Number of decimals in amount to mint\n   * @param multiSigners Signing accounts if `authority` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createMintToCheckedInstruction(mint, destination, authority, amount, decimals, multiSigners = [], programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = (0, _internal.addSigners)([{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }], authority, multiSigners);\n    const data = Buffer.alloc(mintToCheckedInstructionData.span);\n    mintToCheckedInstructionData.encode({\n      instruction: _types.TokenInstruction.MintToChecked,\n      amount: BigInt(amount),\n      decimals\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode a MintToChecked instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeMintToCheckedInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToCheckedInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        mint,\n        destination,\n        authority,\n        multiSigners\n      },\n      data\n    } = decodeMintToCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.MintToChecked) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority) throw new _errors.TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n      programId,\n      keys: {\n        mint,\n        destination,\n        authority,\n        multiSigners\n      },\n      data\n    };\n  }\n  /**\n   * Decode a MintToChecked instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeMintToCheckedInstructionUnchecked({\n    programId,\n    keys: [mint, destination, authority, ...multiSigners],\n    data\n  }) {\n    return {\n      programId,\n      keys: {\n        mint,\n        destination,\n        authority,\n        multiSigners\n      },\n      data: mintToCheckedInstructionData.decode(data)\n    };\n  }\n});","lineCount":110,"map":[[9,2,1,0],[9,6,1,0,"_bufferLayout"],[9,19,1,0],[9,22,1,0,"require"],[9,29,1,0],[9,30,1,0,"_dependencyMap"],[9,44,1,0],[10,2,2,0],[10,6,2,0,"_bufferLayoutUtils"],[10,24,2,0],[10,27,2,0,"require"],[10,34,2,0],[10,35,2,0,"_dependencyMap"],[10,49,2,0],[11,2,3,0],[11,6,3,0,"_web"],[11,10,3,0],[11,13,3,0,"require"],[11,20,3,0],[11,21,3,0,"_dependencyMap"],[11,35,3,0],[12,2,4,0],[12,6,4,0,"_constants"],[12,16,4,0],[12,19,4,0,"require"],[12,26,4,0],[12,27,4,0,"_dependencyMap"],[12,41,4,0],[13,2,5,0],[13,6,5,0,"_errors"],[13,13,5,0],[13,16,5,0,"require"],[13,23,5,0],[13,24,5,0,"_dependencyMap"],[13,38,5,0],[14,2,6,0],[14,6,6,0,"_internal"],[14,15,6,0],[14,18,6,0,"require"],[14,25,6,0],[14,26,6,0,"_dependencyMap"],[14,40,6,0],[15,2,7,0],[15,6,7,0,"_types"],[15,12,7,0],[15,15,7,0,"require"],[15,22,7,0],[15,23,7,0,"_dependencyMap"],[15,37,7,0],[16,2,8,0],[17,2,9,7],[17,8,9,13,"mintToCheckedInstructionData"],[17,36,9,41],[17,39,9,41,"exports"],[17,46,9,41],[17,47,9,41,"mintToCheckedInstructionData"],[17,75,9,41],[17,78,9,44],[17,82,9,44,"struct"],[17,102,9,50],[17,104,9,51],[17,105,10,4],[17,109,10,4,"u8"],[17,125,10,6],[17,127,10,7],[17,140,10,20],[17,141,10,21],[17,143,11,4],[17,147,11,4,"u64"],[17,169,11,7],[17,171,11,8],[17,179,11,16],[17,180,11,17],[17,182,12,4],[17,186,12,4,"u8"],[17,202,12,6],[17,204,12,7],[17,214,12,17],[17,215,12,18],[17,216,13,1],[17,217,13,2],[18,2,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,2,27,7],[31,11,27,16,"createMintToCheckedInstruction"],[31,41,27,46,"createMintToCheckedInstruction"],[31,42,27,47,"mint"],[31,46,27,51],[31,48,27,53,"destination"],[31,59,27,64],[31,61,27,66,"authority"],[31,70,27,75],[31,72,27,77,"amount"],[31,78,27,83],[31,80,27,85,"decimals"],[31,88,27,93],[31,90,27,95,"multiSigners"],[31,102,27,107],[31,105,27,110],[31,107,27,112],[31,109,27,114,"programId"],[31,118,27,123],[31,121,27,126,"TOKEN_PROGRAM_ID"],[31,148,27,142],[31,150,27,144],[32,4,28,4],[32,10,28,10,"keys"],[32,14,28,14],[32,17,28,17],[32,21,28,17,"addSigners"],[32,41,28,27],[32,43,28,28],[32,44,29,8],[33,6,29,10,"pubkey"],[33,12,29,16],[33,14,29,18,"mint"],[33,18,29,22],[34,6,29,24,"isSigner"],[34,14,29,32],[34,16,29,34],[34,21,29,39],[35,6,29,41,"isWritable"],[35,16,29,51],[35,18,29,53],[36,4,29,58],[36,5,29,59],[36,7,30,8],[37,6,30,10,"pubkey"],[37,12,30,16],[37,14,30,18,"destination"],[37,25,30,29],[38,6,30,31,"isSigner"],[38,14,30,39],[38,16,30,41],[38,21,30,46],[39,6,30,48,"isWritable"],[39,16,30,58],[39,18,30,60],[40,4,30,65],[40,5,30,66],[40,6,31,5],[40,8,31,7,"authority"],[40,17,31,16],[40,19,31,18,"multiSigners"],[40,31,31,30],[40,32,31,31],[41,4,32,4],[41,10,32,10,"data"],[41,14,32,14],[41,17,32,17,"Buffer"],[41,23,32,23],[41,24,32,24,"alloc"],[41,29,32,29],[41,30,32,30,"mintToCheckedInstructionData"],[41,58,32,58],[41,59,32,59,"span"],[41,63,32,63],[41,64,32,64],[42,4,33,4,"mintToCheckedInstructionData"],[42,32,33,32],[42,33,33,33,"encode"],[42,39,33,39],[42,40,33,40],[43,6,34,8,"instruction"],[43,17,34,19],[43,19,34,21,"TokenInstruction"],[43,42,34,37],[43,43,34,38,"MintToChecked"],[43,56,34,51],[44,6,35,8,"amount"],[44,12,35,14],[44,14,35,16,"BigInt"],[44,20,35,22],[44,21,35,23,"amount"],[44,27,35,29],[44,28,35,30],[45,6,36,8,"decimals"],[46,4,37,4],[46,5,37,5],[46,7,37,7,"data"],[46,11,37,11],[46,12,37,12],[47,4,38,4],[47,11,38,11],[47,15,38,15,"TransactionInstruction"],[47,42,38,37],[47,43,38,38],[48,6,38,40,"keys"],[48,10,38,44],[49,6,38,46,"programId"],[49,15,38,55],[50,6,38,57,"data"],[51,4,38,62],[51,5,38,63],[51,6,38,64],[52,2,39,0],[53,2,40,0],[54,0,41,0],[55,0,42,0],[56,0,43,0],[57,0,44,0],[58,0,45,0],[59,0,46,0],[60,0,47,0],[61,2,48,7],[61,11,48,16,"decodeMintToCheckedInstruction"],[61,41,48,46,"decodeMintToCheckedInstruction"],[61,42,48,47,"instruction"],[61,53,48,58],[61,55,48,60,"programId"],[61,64,48,69],[61,67,48,72,"TOKEN_PROGRAM_ID"],[61,94,48,88],[61,96,48,90],[62,4,49,4],[62,8,49,8],[62,9,49,9,"instruction"],[62,20,49,20],[62,21,49,21,"programId"],[62,30,49,30],[62,31,49,31,"equals"],[62,37,49,37],[62,38,49,38,"programId"],[62,47,49,47],[62,48,49,48],[62,50,50,8],[62,56,50,14],[62,60,50,18,"TokenInvalidInstructionProgramError"],[62,103,50,53],[62,104,50,54],[62,105,50,55],[63,4,51,4],[63,8,51,8,"instruction"],[63,19,51,19],[63,20,51,20,"data"],[63,24,51,24],[63,25,51,25,"length"],[63,31,51,31],[63,36,51,36,"mintToCheckedInstructionData"],[63,64,51,64],[63,65,51,65,"span"],[63,69,51,69],[63,71,52,8],[63,77,52,14],[63,81,52,18,"TokenInvalidInstructionDataError"],[63,121,52,50],[63,122,52,51],[63,123,52,52],[64,4,53,4],[64,10,53,10],[65,6,53,12,"keys"],[65,10,53,16],[65,12,53,18],[66,8,53,20,"mint"],[66,12,53,24],[67,8,53,26,"destination"],[67,19,53,37],[68,8,53,39,"authority"],[68,17,53,48],[69,8,53,50,"multiSigners"],[70,6,53,63],[70,7,53,64],[71,6,53,66,"data"],[72,4,53,72],[72,5,53,73],[72,8,53,76,"decodeMintToCheckedInstructionUnchecked"],[72,47,53,115],[72,48,53,116,"instruction"],[72,59,53,127],[72,60,53,128],[73,4,54,4],[73,8,54,8,"data"],[73,12,54,12],[73,13,54,13,"instruction"],[73,24,54,24],[73,29,54,29,"TokenInstruction"],[73,52,54,45],[73,53,54,46,"MintToChecked"],[73,66,54,59],[73,68,55,8],[73,74,55,14],[73,78,55,18,"TokenInvalidInstructionTypeError"],[73,118,55,50],[73,119,55,51],[73,120,55,52],[74,4,56,4],[74,8,56,8],[74,9,56,9,"mint"],[74,13,56,13],[74,17,56,17],[74,18,56,18,"destination"],[74,29,56,29],[74,33,56,33],[74,34,56,34,"authority"],[74,43,56,43],[74,45,57,8],[74,51,57,14],[74,55,57,18,"TokenInvalidInstructionKeysError"],[74,95,57,50],[74,96,57,51],[74,97,57,52],[75,4,58,4],[76,4,59,4],[76,11,59,11],[77,6,60,8,"programId"],[77,15,60,17],[78,6,61,8,"keys"],[78,10,61,12],[78,12,61,14],[79,8,62,12,"mint"],[79,12,62,16],[80,8,63,12,"destination"],[80,19,63,23],[81,8,64,12,"authority"],[81,17,64,21],[82,8,65,12,"multiSigners"],[83,6,66,8],[83,7,66,9],[84,6,67,8,"data"],[85,4,68,4],[85,5,68,5],[86,2,69,0],[87,2,70,0],[88,0,71,0],[89,0,72,0],[90,0,73,0],[91,0,74,0],[92,0,75,0],[93,0,76,0],[94,2,77,7],[94,11,77,16,"decodeMintToCheckedInstructionUnchecked"],[94,50,77,55,"decodeMintToCheckedInstructionUnchecked"],[94,51,77,56],[95,4,77,58,"programId"],[95,13,77,67],[96,4,77,69,"keys"],[96,8,77,73],[96,10,77,75],[96,11,77,76,"mint"],[96,15,77,80],[96,17,77,82,"destination"],[96,28,77,93],[96,30,77,95,"authority"],[96,39,77,104],[96,41,77,106],[96,44,77,109,"multiSigners"],[96,56,77,121],[96,57,77,122],[97,4,77,124,"data"],[98,2,77,130],[98,3,77,131],[98,5,77,133],[99,4,78,4],[99,11,78,11],[100,6,79,8,"programId"],[100,15,79,17],[101,6,80,8,"keys"],[101,10,80,12],[101,12,80,14],[102,8,81,12,"mint"],[102,12,81,16],[103,8,82,12,"destination"],[103,19,82,23],[104,8,83,12,"authority"],[104,17,83,21],[105,8,84,12,"multiSigners"],[106,6,85,8],[106,7,85,9],[107,6,86,8,"data"],[107,10,86,12],[107,12,86,14,"mintToCheckedInstructionData"],[107,40,86,42],[107,41,86,43,"decode"],[107,47,86,49],[107,48,86,50,"data"],[107,52,86,54],[108,4,87,4],[108,5,87,5],[109,2,88,0],[110,0,88,1],[110,3]],"functionMap":{"names":["<global>","createMintToCheckedInstruction","decodeMintToCheckedInstruction","decodeMintToCheckedInstructionUnchecked"],"mappings":"AAA;OC0B;CDY;OES;CFqB;OGQ;CHW"}},"type":"js/module"}]}