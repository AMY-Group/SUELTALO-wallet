{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":31,"index":46}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = require(_dependencyMap[0], \"../utils\");\n  var assert = utils.assert;\n  var parseBytes = utils.parseBytes;\n  var cachedProperty = utils.cachedProperty;\n\n  /**\n  * @param {EDDSA} eddsa - instance\n  * @param {Object} params - public/private key parameters\n  *\n  * @param {Array<Byte>} [params.secret] - secret seed bytes\n  * @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n  * @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n  *\n  */\n  function KeyPair(eddsa, params) {\n    this.eddsa = eddsa;\n    this._secret = parseBytes(params.secret);\n    if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n  }\n  KeyPair.fromPublic = function fromPublic(eddsa, pub) {\n    if (pub instanceof KeyPair) return pub;\n    return new KeyPair(eddsa, {\n      pub: pub\n    });\n  };\n  KeyPair.fromSecret = function fromSecret(eddsa, secret) {\n    if (secret instanceof KeyPair) return secret;\n    return new KeyPair(eddsa, {\n      secret: secret\n    });\n  };\n  KeyPair.prototype.secret = function secret() {\n    return this._secret;\n  };\n  cachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n    return this.eddsa.encodePoint(this.pub());\n  });\n  cachedProperty(KeyPair, 'pub', function pub() {\n    if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n    return this.eddsa.g.mul(this.priv());\n  });\n  cachedProperty(KeyPair, 'privBytes', function privBytes() {\n    var eddsa = this.eddsa;\n    var hash = this.hash();\n    var lastIx = eddsa.encodingLength - 1;\n    var a = hash.slice(0, eddsa.encodingLength);\n    a[0] &= 248;\n    a[lastIx] &= 127;\n    a[lastIx] |= 64;\n    return a;\n  });\n  cachedProperty(KeyPair, 'priv', function priv() {\n    return this.eddsa.decodeInt(this.privBytes());\n  });\n  cachedProperty(KeyPair, 'hash', function hash() {\n    return this.eddsa.hash().update(this.secret()).digest();\n  });\n  cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n    return this.hash().slice(this.eddsa.encodingLength);\n  });\n  KeyPair.prototype.sign = function sign(message) {\n    assert(this._secret, 'KeyPair can only verify');\n    return this.eddsa.sign(message, this);\n  };\n  KeyPair.prototype.verify = function verify(message, sig) {\n    return this.eddsa.verify(message, sig, this);\n  };\n  KeyPair.prototype.getSecret = function getSecret(enc) {\n    assert(this._secret, 'KeyPair is public only');\n    return utils.encode(this.secret(), enc);\n  };\n  KeyPair.prototype.getPublic = function getPublic(enc) {\n    return utils.encode(this.pubBytes(), enc);\n  };\n  module.exports = KeyPair;\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"require"],[4,21,3,19],[4,22,3,19,"_dependencyMap"],[4,36,3,19],[4,51,3,30],[4,52,3,31],[5,2,4,0],[5,6,4,4,"assert"],[5,12,4,10],[5,15,4,13,"utils"],[5,20,4,18],[5,21,4,19,"assert"],[5,27,4,25],[6,2,5,0],[6,6,5,4,"parseBytes"],[6,16,5,14],[6,19,5,17,"utils"],[6,24,5,22],[6,25,5,23,"parseBytes"],[6,35,5,33],[7,2,6,0],[7,6,6,4,"cachedProperty"],[7,20,6,18],[7,23,6,21,"utils"],[7,28,6,26],[7,29,6,27,"cachedProperty"],[7,43,6,41],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,2,17,0],[18,11,17,9,"KeyPair"],[18,18,17,16,"KeyPair"],[18,19,17,17,"eddsa"],[18,24,17,22],[18,26,17,24,"params"],[18,32,17,30],[18,34,17,32],[19,4,18,2],[19,8,18,6],[19,9,18,7,"eddsa"],[19,14,18,12],[19,17,18,15,"eddsa"],[19,22,18,20],[20,4,19,2],[20,8,19,6],[20,9,19,7,"_secret"],[20,16,19,14],[20,19,19,17,"parseBytes"],[20,29,19,27],[20,30,19,28,"params"],[20,36,19,34],[20,37,19,35,"secret"],[20,43,19,41],[20,44,19,42],[21,4,20,2],[21,8,20,6,"eddsa"],[21,13,20,11],[21,14,20,12,"isPoint"],[21,21,20,19],[21,22,20,20,"params"],[21,28,20,26],[21,29,20,27,"pub"],[21,32,20,30],[21,33,20,31],[21,35,21,4],[21,39,21,8],[21,40,21,9,"_pub"],[21,44,21,13],[21,47,21,16,"params"],[21,53,21,22],[21,54,21,23,"pub"],[21,57,21,26],[21,58,21,27],[21,63,23,4],[21,67,23,8],[21,68,23,9,"_pubBytes"],[21,77,23,18],[21,80,23,21,"parseBytes"],[21,90,23,31],[21,91,23,32,"params"],[21,97,23,38],[21,98,23,39,"pub"],[21,101,23,42],[21,102,23,43],[22,2,24,0],[23,2,26,0,"KeyPair"],[23,9,26,7],[23,10,26,8,"fromPublic"],[23,20,26,18],[23,23,26,21],[23,32,26,30,"fromPublic"],[23,42,26,40,"fromPublic"],[23,43,26,41,"eddsa"],[23,48,26,46],[23,50,26,48,"pub"],[23,53,26,51],[23,55,26,53],[24,4,27,2],[24,8,27,6,"pub"],[24,11,27,9],[24,23,27,21,"KeyPair"],[24,30,27,28],[24,32,28,4],[24,39,28,11,"pub"],[24,42,28,14],[25,4,29,2],[25,11,29,9],[25,15,29,13,"KeyPair"],[25,22,29,20],[25,23,29,21,"eddsa"],[25,28,29,26],[25,30,29,28],[26,6,29,30,"pub"],[26,9,29,33],[26,11,29,35,"pub"],[27,4,29,39],[27,5,29,40],[27,6,29,41],[28,2,30,0],[28,3,30,1],[29,2,32,0,"KeyPair"],[29,9,32,7],[29,10,32,8,"fromSecret"],[29,20,32,18],[29,23,32,21],[29,32,32,30,"fromSecret"],[29,42,32,40,"fromSecret"],[29,43,32,41,"eddsa"],[29,48,32,46],[29,50,32,48,"secret"],[29,56,32,54],[29,58,32,56],[30,4,33,2],[30,8,33,6,"secret"],[30,14,33,12],[30,26,33,24,"KeyPair"],[30,33,33,31],[30,35,34,4],[30,42,34,11,"secret"],[30,48,34,17],[31,4,35,2],[31,11,35,9],[31,15,35,13,"KeyPair"],[31,22,35,20],[31,23,35,21,"eddsa"],[31,28,35,26],[31,30,35,28],[32,6,35,30,"secret"],[32,12,35,36],[32,14,35,38,"secret"],[33,4,35,45],[33,5,35,46],[33,6,35,47],[34,2,36,0],[34,3,36,1],[35,2,38,0,"KeyPair"],[35,9,38,7],[35,10,38,8,"prototype"],[35,19,38,17],[35,20,38,18,"secret"],[35,26,38,24],[35,29,38,27],[35,38,38,36,"secret"],[35,44,38,42,"secret"],[35,45,38,42],[35,47,38,45],[36,4,39,2],[36,11,39,9],[36,15,39,13],[36,16,39,14,"_secret"],[36,23,39,21],[37,2,40,0],[37,3,40,1],[38,2,42,0,"cachedProperty"],[38,16,42,14],[38,17,42,15,"KeyPair"],[38,24,42,22],[38,26,42,24],[38,36,42,34],[38,38,42,36],[38,47,42,45,"pubBytes"],[38,55,42,53,"pubBytes"],[38,56,42,53],[38,58,42,56],[39,4,43,2],[39,11,43,9],[39,15,43,13],[39,16,43,14,"eddsa"],[39,21,43,19],[39,22,43,20,"encodePoint"],[39,33,43,31],[39,34,43,32],[39,38,43,36],[39,39,43,37,"pub"],[39,42,43,40],[39,43,43,41],[39,44,43,42],[39,45,43,43],[40,2,44,0],[40,3,44,1],[40,4,44,2],[41,2,46,0,"cachedProperty"],[41,16,46,14],[41,17,46,15,"KeyPair"],[41,24,46,22],[41,26,46,24],[41,31,46,29],[41,33,46,31],[41,42,46,40,"pub"],[41,45,46,43,"pub"],[41,46,46,43],[41,48,46,46],[42,4,47,2],[42,8,47,6],[42,12,47,10],[42,13,47,11,"_pubBytes"],[42,22,47,20],[42,24,48,4],[42,31,48,11],[42,35,48,15],[42,36,48,16,"eddsa"],[42,41,48,21],[42,42,48,22,"decodePoint"],[42,53,48,33],[42,54,48,34],[42,58,48,38],[42,59,48,39,"_pubBytes"],[42,68,48,48],[42,69,48,49],[43,4,49,2],[43,11,49,9],[43,15,49,13],[43,16,49,14,"eddsa"],[43,21,49,19],[43,22,49,20,"g"],[43,23,49,21],[43,24,49,22,"mul"],[43,27,49,25],[43,28,49,26],[43,32,49,30],[43,33,49,31,"priv"],[43,37,49,35],[43,38,49,36],[43,39,49,37],[43,40,49,38],[44,2,50,0],[44,3,50,1],[44,4,50,2],[45,2,52,0,"cachedProperty"],[45,16,52,14],[45,17,52,15,"KeyPair"],[45,24,52,22],[45,26,52,24],[45,37,52,35],[45,39,52,37],[45,48,52,46,"privBytes"],[45,57,52,55,"privBytes"],[45,58,52,55],[45,60,52,58],[46,4,53,2],[46,8,53,6,"eddsa"],[46,13,53,11],[46,16,53,14],[46,20,53,18],[46,21,53,19,"eddsa"],[46,26,53,24],[47,4,54,2],[47,8,54,6,"hash"],[47,12,54,10],[47,15,54,13],[47,19,54,17],[47,20,54,18,"hash"],[47,24,54,22],[47,25,54,23],[47,26,54,24],[48,4,55,2],[48,8,55,6,"lastIx"],[48,14,55,12],[48,17,55,15,"eddsa"],[48,22,55,20],[48,23,55,21,"encodingLength"],[48,37,55,35],[48,40,55,38],[48,41,55,39],[49,4,57,2],[49,8,57,6,"a"],[49,9,57,7],[49,12,57,10,"hash"],[49,16,57,14],[49,17,57,15,"slice"],[49,22,57,20],[49,23,57,21],[49,24,57,22],[49,26,57,24,"eddsa"],[49,31,57,29],[49,32,57,30,"encodingLength"],[49,46,57,44],[49,47,57,45],[50,4,58,2,"a"],[50,5,58,3],[50,6,58,4],[50,7,58,5],[50,8,58,6],[50,12,58,10],[50,15,58,13],[51,4,59,2,"a"],[51,5,59,3],[51,6,59,4,"lastIx"],[51,12,59,10],[51,13,59,11],[51,17,59,15],[51,20,59,18],[52,4,60,2,"a"],[52,5,60,3],[52,6,60,4,"lastIx"],[52,12,60,10],[52,13,60,11],[52,17,60,15],[52,19,60,17],[53,4,62,2],[53,11,62,9,"a"],[53,12,62,10],[54,2,63,0],[54,3,63,1],[54,4,63,2],[55,2,65,0,"cachedProperty"],[55,16,65,14],[55,17,65,15,"KeyPair"],[55,24,65,22],[55,26,65,24],[55,32,65,30],[55,34,65,32],[55,43,65,41,"priv"],[55,47,65,45,"priv"],[55,48,65,45],[55,50,65,48],[56,4,66,2],[56,11,66,9],[56,15,66,13],[56,16,66,14,"eddsa"],[56,21,66,19],[56,22,66,20,"decodeInt"],[56,31,66,29],[56,32,66,30],[56,36,66,34],[56,37,66,35,"privBytes"],[56,46,66,44],[56,47,66,45],[56,48,66,46],[56,49,66,47],[57,2,67,0],[57,3,67,1],[57,4,67,2],[58,2,69,0,"cachedProperty"],[58,16,69,14],[58,17,69,15,"KeyPair"],[58,24,69,22],[58,26,69,24],[58,32,69,30],[58,34,69,32],[58,43,69,41,"hash"],[58,47,69,45,"hash"],[58,48,69,45],[58,50,69,48],[59,4,70,2],[59,11,70,9],[59,15,70,13],[59,16,70,14,"eddsa"],[59,21,70,19],[59,22,70,20,"hash"],[59,26,70,24],[59,27,70,25],[59,28,70,26],[59,29,70,27,"update"],[59,35,70,33],[59,36,70,34],[59,40,70,38],[59,41,70,39,"secret"],[59,47,70,45],[59,48,70,46],[59,49,70,47],[59,50,70,48],[59,51,70,49,"digest"],[59,57,70,55],[59,58,70,56],[59,59,70,57],[60,2,71,0],[60,3,71,1],[60,4,71,2],[61,2,73,0,"cachedProperty"],[61,16,73,14],[61,17,73,15,"KeyPair"],[61,24,73,22],[61,26,73,24],[61,41,73,39],[61,43,73,41],[61,52,73,50,"messagePrefix"],[61,65,73,63,"messagePrefix"],[61,66,73,63],[61,68,73,66],[62,4,74,2],[62,11,74,9],[62,15,74,13],[62,16,74,14,"hash"],[62,20,74,18],[62,21,74,19],[62,22,74,20],[62,23,74,21,"slice"],[62,28,74,26],[62,29,74,27],[62,33,74,31],[62,34,74,32,"eddsa"],[62,39,74,37],[62,40,74,38,"encodingLength"],[62,54,74,52],[62,55,74,53],[63,2,75,0],[63,3,75,1],[63,4,75,2],[64,2,77,0,"KeyPair"],[64,9,77,7],[64,10,77,8,"prototype"],[64,19,77,17],[64,20,77,18,"sign"],[64,24,77,22],[64,27,77,25],[64,36,77,34,"sign"],[64,40,77,38,"sign"],[64,41,77,39,"message"],[64,48,77,46],[64,50,77,48],[65,4,78,2,"assert"],[65,10,78,8],[65,11,78,9],[65,15,78,13],[65,16,78,14,"_secret"],[65,23,78,21],[65,25,78,23],[65,50,78,48],[65,51,78,49],[66,4,79,2],[66,11,79,9],[66,15,79,13],[66,16,79,14,"eddsa"],[66,21,79,19],[66,22,79,20,"sign"],[66,26,79,24],[66,27,79,25,"message"],[66,34,79,32],[66,36,79,34],[66,40,79,38],[66,41,79,39],[67,2,80,0],[67,3,80,1],[68,2,82,0,"KeyPair"],[68,9,82,7],[68,10,82,8,"prototype"],[68,19,82,17],[68,20,82,18,"verify"],[68,26,82,24],[68,29,82,27],[68,38,82,36,"verify"],[68,44,82,42,"verify"],[68,45,82,43,"message"],[68,52,82,50],[68,54,82,52,"sig"],[68,57,82,55],[68,59,82,57],[69,4,83,2],[69,11,83,9],[69,15,83,13],[69,16,83,14,"eddsa"],[69,21,83,19],[69,22,83,20,"verify"],[69,28,83,26],[69,29,83,27,"message"],[69,36,83,34],[69,38,83,36,"sig"],[69,41,83,39],[69,43,83,41],[69,47,83,45],[69,48,83,46],[70,2,84,0],[70,3,84,1],[71,2,86,0,"KeyPair"],[71,9,86,7],[71,10,86,8,"prototype"],[71,19,86,17],[71,20,86,18,"getSecret"],[71,29,86,27],[71,32,86,30],[71,41,86,39,"getSecret"],[71,50,86,48,"getSecret"],[71,51,86,49,"enc"],[71,54,86,52],[71,56,86,54],[72,4,87,2,"assert"],[72,10,87,8],[72,11,87,9],[72,15,87,13],[72,16,87,14,"_secret"],[72,23,87,21],[72,25,87,23],[72,49,87,47],[72,50,87,48],[73,4,88,2],[73,11,88,9,"utils"],[73,16,88,14],[73,17,88,15,"encode"],[73,23,88,21],[73,24,88,22],[73,28,88,26],[73,29,88,27,"secret"],[73,35,88,33],[73,36,88,34],[73,37,88,35],[73,39,88,37,"enc"],[73,42,88,40],[73,43,88,41],[74,2,89,0],[74,3,89,1],[75,2,91,0,"KeyPair"],[75,9,91,7],[75,10,91,8,"prototype"],[75,19,91,17],[75,20,91,18,"getPublic"],[75,29,91,27],[75,32,91,30],[75,41,91,39,"getPublic"],[75,50,91,48,"getPublic"],[75,51,91,49,"enc"],[75,54,91,52],[75,56,91,54],[76,4,92,2],[76,11,92,9,"utils"],[76,16,92,14],[76,17,92,15,"encode"],[76,23,92,21],[76,24,92,22],[76,28,92,26],[76,29,92,27,"pubBytes"],[76,37,92,35],[76,38,92,36],[76,39,92,37],[76,41,92,39,"enc"],[76,44,92,42],[76,45,92,43],[77,2,93,0],[77,3,93,1],[78,2,95,0,"module"],[78,8,95,6],[78,9,95,7,"exports"],[78,16,95,14],[78,19,95,17,"KeyPair"],[78,26,95,24],[79,0,95,25],[79,3]],"functionMap":{"names":["<global>","KeyPair","fromPublic","fromSecret","secret","pubBytes","pub","privBytes","priv","hash","messagePrefix","sign","verify","getSecret","getPublic"],"mappings":"AAA;ACgB;CDO;qBEE;CFI;qBGE;CHI;2BIE;CJE;oCKE;CLE;+BME;CNI;qCOE;CPW;gCQE;CRE;gCSE;CTE;yCUE;CVE;yBWE;CXG;2BYE;CZE;8BaE;CbG;8BcE;CdE"}},"type":"js/module"}]}