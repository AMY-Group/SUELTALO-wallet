{"dependencies":[{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"@solana/codecs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":90,"index":135}}],"key":"cGkvP9GicDZUKva2Wrw0YsQbmkE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TOKEN_GROUP_SIZE = void 0;\n  exports.packTokenGroup = packTokenGroup;\n  exports.unpackTokenGroup = unpackTokenGroup;\n  var _web = require(_dependencyMap[0], \"@solana/web3.js\");\n  var _codecs = require(_dependencyMap[1], \"@solana/codecs\");\n  const tokenGroupCodec = (0, _codecs.getStructCodec)([['updateAuthority', (0, _codecs.fixCodecSize)((0, _codecs.getBytesCodec)(), 32)], ['mint', (0, _codecs.fixCodecSize)((0, _codecs.getBytesCodec)(), 32)], ['size', (0, _codecs.getU64Codec)()], ['maxSize', (0, _codecs.getU64Codec)()]]);\n  const TOKEN_GROUP_SIZE = exports.TOKEN_GROUP_SIZE = tokenGroupCodec.fixedSize;\n  // Checks if all elements in the array are 0\n  function isNonePubkey(buffer) {\n    for (let i = 0; i < buffer.length; i++) {\n      if (buffer[i] !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // Pack TokenGroup into byte slab\n  function packTokenGroup(group) {\n    // If no updateAuthority given, set it to the None/Zero PublicKey for encoding\n    const updateAuthority = group.updateAuthority ?? _web.PublicKey.default;\n    return tokenGroupCodec.encode({\n      updateAuthority: updateAuthority.toBuffer(),\n      mint: group.mint.toBuffer(),\n      size: group.size,\n      maxSize: group.maxSize\n    });\n  }\n  // unpack byte slab into TokenGroup\n  function unpackTokenGroup(buffer) {\n    const data = tokenGroupCodec.decode(buffer);\n    return isNonePubkey(data.updateAuthority) ? {\n      mint: new _web.PublicKey(data.mint),\n      size: data.size,\n      maxSize: data.maxSize\n    } : {\n      updateAuthority: new _web.PublicKey(data.updateAuthority),\n      mint: new _web.PublicKey(data.mint),\n      size: data.size,\n      maxSize: data.maxSize\n    };\n  }\n});","lineCount":46,"map":[[8,2,1,0],[8,6,1,0,"_web"],[8,10,1,0],[8,13,1,0,"require"],[8,20,1,0],[8,21,1,0,"_dependencyMap"],[8,35,1,0],[9,2,2,0],[9,6,2,0,"_codecs"],[9,13,2,0],[9,16,2,0,"require"],[9,23,2,0],[9,24,2,0,"_dependencyMap"],[9,38,2,0],[10,2,3,0],[10,8,3,6,"tokenGroupCodec"],[10,23,3,21],[10,26,3,24],[10,30,3,24,"getStructCodec"],[10,52,3,38],[10,54,3,39],[10,55,4,4],[10,56,4,5],[10,73,4,22],[10,75,4,24],[10,79,4,24,"fixCodecSize"],[10,99,4,36],[10,101,4,37],[10,105,4,37,"getBytesCodec"],[10,126,4,50],[10,128,4,51],[10,129,4,52],[10,131,4,54],[10,133,4,56],[10,134,4,57],[10,135,4,58],[10,137,5,4],[10,138,5,5],[10,144,5,11],[10,146,5,13],[10,150,5,13,"fixCodecSize"],[10,170,5,25],[10,172,5,26],[10,176,5,26,"getBytesCodec"],[10,197,5,39],[10,199,5,40],[10,200,5,41],[10,202,5,43],[10,204,5,45],[10,205,5,46],[10,206,5,47],[10,208,6,4],[10,209,6,5],[10,215,6,11],[10,217,6,13],[10,221,6,13,"getU64Codec"],[10,240,6,24],[10,242,6,25],[10,243,6,26],[10,244,6,27],[10,246,7,4],[10,247,7,5],[10,256,7,14],[10,258,7,16],[10,262,7,16,"getU64Codec"],[10,281,7,27],[10,283,7,28],[10,284,7,29],[10,285,7,30],[10,286,8,1],[10,287,8,2],[11,2,9,7],[11,8,9,13,"TOKEN_GROUP_SIZE"],[11,24,9,29],[11,27,9,29,"exports"],[11,34,9,29],[11,35,9,29,"TOKEN_GROUP_SIZE"],[11,51,9,29],[11,54,9,32,"tokenGroupCodec"],[11,69,9,47],[11,70,9,48,"fixedSize"],[11,79,9,57],[12,2,10,0],[13,2,11,0],[13,11,11,9,"isNonePubkey"],[13,23,11,21,"isNonePubkey"],[13,24,11,22,"buffer"],[13,30,11,28],[13,32,11,30],[14,4,12,4],[14,9,12,9],[14,13,12,13,"i"],[14,14,12,14],[14,17,12,17],[14,18,12,18],[14,20,12,20,"i"],[14,21,12,21],[14,24,12,24,"buffer"],[14,30,12,30],[14,31,12,31,"length"],[14,37,12,37],[14,39,12,39,"i"],[14,40,12,40],[14,42,12,42],[14,44,12,44],[15,6,13,8],[15,10,13,12,"buffer"],[15,16,13,18],[15,17,13,19,"i"],[15,18,13,20],[15,19,13,21],[15,24,13,26],[15,25,13,27],[15,27,13,29],[16,8,14,12],[16,15,14,19],[16,20,14,24],[17,6,15,8],[18,4,16,4],[19,4,17,4],[19,11,17,11],[19,15,17,15],[20,2,18,0],[21,2,19,0],[22,2,20,7],[22,11,20,16,"packTokenGroup"],[22,25,20,30,"packTokenGroup"],[22,26,20,31,"group"],[22,31,20,36],[22,33,20,38],[23,4,21,4],[24,4,22,4],[24,10,22,10,"updateAuthority"],[24,25,22,25],[24,28,22,28,"group"],[24,33,22,33],[24,34,22,34,"updateAuthority"],[24,49,22,49],[24,53,22,53,"PublicKey"],[24,67,22,62],[24,68,22,63,"default"],[24,75,22,70],[25,4,23,4],[25,11,23,11,"tokenGroupCodec"],[25,26,23,26],[25,27,23,27,"encode"],[25,33,23,33],[25,34,23,34],[26,6,24,8,"updateAuthority"],[26,21,24,23],[26,23,24,25,"updateAuthority"],[26,38,24,40],[26,39,24,41,"toBuffer"],[26,47,24,49],[26,48,24,50],[26,49,24,51],[27,6,25,8,"mint"],[27,10,25,12],[27,12,25,14,"group"],[27,17,25,19],[27,18,25,20,"mint"],[27,22,25,24],[27,23,25,25,"toBuffer"],[27,31,25,33],[27,32,25,34],[27,33,25,35],[28,6,26,8,"size"],[28,10,26,12],[28,12,26,14,"group"],[28,17,26,19],[28,18,26,20,"size"],[28,22,26,24],[29,6,27,8,"maxSize"],[29,13,27,15],[29,15,27,17,"group"],[29,20,27,22],[29,21,27,23,"maxSize"],[30,4,28,4],[30,5,28,5],[30,6,28,6],[31,2,29,0],[32,2,30,0],[33,2,31,7],[33,11,31,16,"unpackTokenGroup"],[33,27,31,32,"unpackTokenGroup"],[33,28,31,33,"buffer"],[33,34,31,39],[33,36,31,41],[34,4,32,4],[34,10,32,10,"data"],[34,14,32,14],[34,17,32,17,"tokenGroupCodec"],[34,32,32,32],[34,33,32,33,"decode"],[34,39,32,39],[34,40,32,40,"buffer"],[34,46,32,46],[34,47,32,47],[35,4,33,4],[35,11,33,11,"isNonePubkey"],[35,23,33,23],[35,24,33,24,"data"],[35,28,33,28],[35,29,33,29,"updateAuthority"],[35,44,33,44],[35,45,33,45],[35,48,34,10],[36,6,35,12,"mint"],[36,10,35,16],[36,12,35,18],[36,16,35,22,"PublicKey"],[36,30,35,31],[36,31,35,32,"data"],[36,35,35,36],[36,36,35,37,"mint"],[36,40,35,41],[36,41,35,42],[37,6,36,12,"size"],[37,10,36,16],[37,12,36,18,"data"],[37,16,36,22],[37,17,36,23,"size"],[37,21,36,27],[38,6,37,12,"maxSize"],[38,13,37,19],[38,15,37,21,"data"],[38,19,37,25],[38,20,37,26,"maxSize"],[39,4,38,8],[39,5,38,9],[39,8,39,10],[40,6,40,12,"updateAuthority"],[40,21,40,27],[40,23,40,29],[40,27,40,33,"PublicKey"],[40,41,40,42],[40,42,40,43,"data"],[40,46,40,47],[40,47,40,48,"updateAuthority"],[40,62,40,63],[40,63,40,64],[41,6,41,12,"mint"],[41,10,41,16],[41,12,41,18],[41,16,41,22,"PublicKey"],[41,30,41,31],[41,31,41,32,"data"],[41,35,41,36],[41,36,41,37,"mint"],[41,40,41,41],[41,41,41,42],[42,6,42,12,"size"],[42,10,42,16],[42,12,42,18,"data"],[42,16,42,22],[42,17,42,23,"size"],[42,21,42,27],[43,6,43,12,"maxSize"],[43,13,43,19],[43,15,43,21,"data"],[43,19,43,25],[43,20,43,26,"maxSize"],[44,4,44,8],[44,5,44,9],[45,2,45,0],[46,0,45,1],[46,3]],"functionMap":{"names":["<global>","isNonePubkey","packTokenGroup","unpackTokenGroup"],"mappings":"AAA;ACU;CDO;OEE;CFS;OGE;CHc"}},"type":"js/module"}]}