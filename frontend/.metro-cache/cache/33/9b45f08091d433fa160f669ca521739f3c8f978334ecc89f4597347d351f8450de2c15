{"dependencies":[{"name":"@solana/buffer-layout","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"QwywkJpcZkKLkjXs9E7VxOaHAHQ=","exportNames":["*"]}},{"name":"@solana/web3.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":57,"index":115}}],"key":"hVqIgOgXAH1+S7mu7qk6LJzdVc8=","exportNames":["*"]}},{"name":"../constants.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":116},"end":{"line":3,"column":51,"index":167}}],"key":"w33QN4nlqAZn5CNK6M5HKbLWgBA=","exportNames":["*"]}},{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":170,"index":338}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":339},"end":{"line":5,"column":46,"index":385}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createUiAmountToAmountInstruction = createUiAmountToAmountInstruction;\n  exports.decodeUiAmountToAmountInstruction = decodeUiAmountToAmountInstruction;\n  exports.decodeUiAmountToAmountInstructionUnchecked = decodeUiAmountToAmountInstructionUnchecked;\n  var _bufferLayout = require(_dependencyMap[0], \"@solana/buffer-layout\");\n  var _web = require(_dependencyMap[1], \"@solana/web3.js\");\n  var _constants = require(_dependencyMap[2], \"../constants.js\");\n  var _errors = require(_dependencyMap[3], \"../errors.js\");\n  var _types = require(_dependencyMap[4], \"./types.js\");\n  /** TODO: docs */\n  /**\n   * Construct a UiAmountToAmount instruction\n   *\n   * @param mint         Public key of the mint\n   * @param amount       UiAmount of tokens to be converted to Amount\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\n  function createUiAmountToAmountInstruction(mint, amount, programId = _constants.TOKEN_PROGRAM_ID) {\n    const keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n    const buf = Buffer.from(amount, 'utf8');\n    const uiAmountToAmountInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.blob)(buf.length, 'amount')]);\n    const data = Buffer.alloc(uiAmountToAmountInstructionData.span);\n    uiAmountToAmountInstructionData.encode({\n      instruction: _types.TokenInstruction.UiAmountToAmount,\n      amount: buf\n    }, data);\n    return new _web.TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Decode a UiAmountToAmount instruction and validate it\n   *\n   * @param instruction Transaction instruction to decode\n   * @param programId   SPL Token program account\n   *\n   * @return Decoded, valid instruction\n   */\n  function decodeUiAmountToAmountInstruction(instruction, programId = _constants.TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId)) throw new _errors.TokenInvalidInstructionProgramError();\n    const uiAmountToAmountInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.blob)(instruction.data.length - 1, 'amount')]);\n    if (instruction.data.length !== uiAmountToAmountInstructionData.span) throw new _errors.TokenInvalidInstructionDataError();\n    const {\n      keys: {\n        mint\n      },\n      data\n    } = decodeUiAmountToAmountInstructionUnchecked(instruction);\n    if (data.instruction !== _types.TokenInstruction.UiAmountToAmount) throw new _errors.TokenInvalidInstructionTypeError();\n    if (!mint) throw new _errors.TokenInvalidInstructionKeysError();\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data\n    };\n  }\n  /**\n   * Decode a UiAmountToAmount instruction without validating it\n   *\n   * @param instruction Transaction instruction to decode\n   *\n   * @return Decoded, non-validated instruction\n   */\n  function decodeUiAmountToAmountInstructionUnchecked({\n    programId,\n    keys: [mint],\n    data\n  }) {\n    const uiAmountToAmountInstructionData = (0, _bufferLayout.struct)([(0, _bufferLayout.u8)('instruction'), (0, _bufferLayout.blob)(data.length - 1, 'amount')]);\n    return {\n      programId,\n      keys: {\n        mint\n      },\n      data: uiAmountToAmountInstructionData.decode(data)\n    };\n  }\n});","lineCount":91,"map":[[8,2,1,0],[8,6,1,0,"_bufferLayout"],[8,19,1,0],[8,22,1,0,"require"],[8,29,1,0],[8,30,1,0,"_dependencyMap"],[8,44,1,0],[9,2,2,0],[9,6,2,0,"_web"],[9,10,2,0],[9,13,2,0,"require"],[9,20,2,0],[9,21,2,0,"_dependencyMap"],[9,35,2,0],[10,2,3,0],[10,6,3,0,"_constants"],[10,16,3,0],[10,19,3,0,"require"],[10,26,3,0],[10,27,3,0,"_dependencyMap"],[10,41,3,0],[11,2,4,0],[11,6,4,0,"_errors"],[11,13,4,0],[11,16,4,0,"require"],[11,23,4,0],[11,24,4,0,"_dependencyMap"],[11,38,4,0],[12,2,5,0],[12,6,5,0,"_types"],[12,12,5,0],[12,15,5,0,"require"],[12,22,5,0],[12,23,5,0,"_dependencyMap"],[12,37,5,0],[13,2,6,0],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,2,16,7],[23,11,16,16,"createUiAmountToAmountInstruction"],[23,44,16,49,"createUiAmountToAmountInstruction"],[23,45,16,50,"mint"],[23,49,16,54],[23,51,16,56,"amount"],[23,57,16,62],[23,59,16,64,"programId"],[23,68,16,73],[23,71,16,76,"TOKEN_PROGRAM_ID"],[23,98,16,92],[23,100,16,94],[24,4,17,4],[24,10,17,10,"keys"],[24,14,17,14],[24,17,17,17],[24,18,17,18],[25,6,17,20,"pubkey"],[25,12,17,26],[25,14,17,28,"mint"],[25,18,17,32],[26,6,17,34,"isSigner"],[26,14,17,42],[26,16,17,44],[26,21,17,49],[27,6,17,51,"isWritable"],[27,16,17,61],[27,18,17,63],[28,4,17,69],[28,5,17,70],[28,6,17,71],[29,4,18,4],[29,10,18,10,"buf"],[29,13,18,13],[29,16,18,16,"Buffer"],[29,22,18,22],[29,23,18,23,"from"],[29,27,18,27],[29,28,18,28,"amount"],[29,34,18,34],[29,36,18,36],[29,42,18,42],[29,43,18,43],[30,4,19,4],[30,10,19,10,"uiAmountToAmountInstructionData"],[30,41,19,41],[30,44,19,44],[30,48,19,44,"struct"],[30,68,19,50],[30,70,19,51],[30,71,20,8],[30,75,20,8,"u8"],[30,91,20,10],[30,93,20,11],[30,106,20,24],[30,107,20,25],[30,109,21,8],[30,113,21,8,"blob"],[30,131,21,12],[30,133,21,13,"buf"],[30,136,21,16],[30,137,21,17,"length"],[30,143,21,23],[30,145,21,25],[30,153,21,33],[30,154,21,34],[30,155,22,5],[30,156,22,6],[31,4,23,4],[31,10,23,10,"data"],[31,14,23,14],[31,17,23,17,"Buffer"],[31,23,23,23],[31,24,23,24,"alloc"],[31,29,23,29],[31,30,23,30,"uiAmountToAmountInstructionData"],[31,61,23,61],[31,62,23,62,"span"],[31,66,23,66],[31,67,23,67],[32,4,24,4,"uiAmountToAmountInstructionData"],[32,35,24,35],[32,36,24,36,"encode"],[32,42,24,42],[32,43,24,43],[33,6,25,8,"instruction"],[33,17,25,19],[33,19,25,21,"TokenInstruction"],[33,42,25,37],[33,43,25,38,"UiAmountToAmount"],[33,59,25,54],[34,6,26,8,"amount"],[34,12,26,14],[34,14,26,16,"buf"],[35,4,27,4],[35,5,27,5],[35,7,27,7,"data"],[35,11,27,11],[35,12,27,12],[36,4,28,4],[36,11,28,11],[36,15,28,15,"TransactionInstruction"],[36,42,28,37],[36,43,28,38],[37,6,28,40,"keys"],[37,10,28,44],[38,6,28,46,"programId"],[38,15,28,55],[39,6,28,57,"data"],[40,4,28,62],[40,5,28,63],[40,6,28,64],[41,2,29,0],[42,2,30,0],[43,0,31,0],[44,0,32,0],[45,0,33,0],[46,0,34,0],[47,0,35,0],[48,0,36,0],[49,0,37,0],[50,2,38,7],[50,11,38,16,"decodeUiAmountToAmountInstruction"],[50,44,38,49,"decodeUiAmountToAmountInstruction"],[50,45,38,50,"instruction"],[50,56,38,61],[50,58,38,63,"programId"],[50,67,38,72],[50,70,38,75,"TOKEN_PROGRAM_ID"],[50,97,38,91],[50,99,38,93],[51,4,39,4],[51,8,39,8],[51,9,39,9,"instruction"],[51,20,39,20],[51,21,39,21,"programId"],[51,30,39,30],[51,31,39,31,"equals"],[51,37,39,37],[51,38,39,38,"programId"],[51,47,39,47],[51,48,39,48],[51,50,40,8],[51,56,40,14],[51,60,40,18,"TokenInvalidInstructionProgramError"],[51,103,40,53],[51,104,40,54],[51,105,40,55],[52,4,41,4],[52,10,41,10,"uiAmountToAmountInstructionData"],[52,41,41,41],[52,44,41,44],[52,48,41,44,"struct"],[52,68,41,50],[52,70,41,51],[52,71,42,8],[52,75,42,8,"u8"],[52,91,42,10],[52,93,42,11],[52,106,42,24],[52,107,42,25],[52,109,43,8],[52,113,43,8,"blob"],[52,131,43,12],[52,133,43,13,"instruction"],[52,144,43,24],[52,145,43,25,"data"],[52,149,43,29],[52,150,43,30,"length"],[52,156,43,36],[52,159,43,39],[52,160,43,40],[52,162,43,42],[52,170,43,50],[52,171,43,51],[52,172,44,5],[52,173,44,6],[53,4,45,4],[53,8,45,8,"instruction"],[53,19,45,19],[53,20,45,20,"data"],[53,24,45,24],[53,25,45,25,"length"],[53,31,45,31],[53,36,45,36,"uiAmountToAmountInstructionData"],[53,67,45,67],[53,68,45,68,"span"],[53,72,45,72],[53,74,46,8],[53,80,46,14],[53,84,46,18,"TokenInvalidInstructionDataError"],[53,124,46,50],[53,125,46,51],[53,126,46,52],[54,4,47,4],[54,10,47,10],[55,6,47,12,"keys"],[55,10,47,16],[55,12,47,18],[56,8,47,20,"mint"],[57,6,47,25],[57,7,47,26],[58,6,47,28,"data"],[59,4,47,34],[59,5,47,35],[59,8,47,38,"decodeUiAmountToAmountInstructionUnchecked"],[59,50,47,80],[59,51,47,81,"instruction"],[59,62,47,92],[59,63,47,93],[60,4,48,4],[60,8,48,8,"data"],[60,12,48,12],[60,13,48,13,"instruction"],[60,24,48,24],[60,29,48,29,"TokenInstruction"],[60,52,48,45],[60,53,48,46,"UiAmountToAmount"],[60,69,48,62],[60,71,49,8],[60,77,49,14],[60,81,49,18,"TokenInvalidInstructionTypeError"],[60,121,49,50],[60,122,49,51],[60,123,49,52],[61,4,50,4],[61,8,50,8],[61,9,50,9,"mint"],[61,13,50,13],[61,15,51,8],[61,21,51,14],[61,25,51,18,"TokenInvalidInstructionKeysError"],[61,65,51,50],[61,66,51,51],[61,67,51,52],[62,4,52,4],[62,11,52,11],[63,6,53,8,"programId"],[63,15,53,17],[64,6,54,8,"keys"],[64,10,54,12],[64,12,54,14],[65,8,55,12,"mint"],[66,6,56,8],[66,7,56,9],[67,6,57,8,"data"],[68,4,58,4],[68,5,58,5],[69,2,59,0],[70,2,60,0],[71,0,61,0],[72,0,62,0],[73,0,63,0],[74,0,64,0],[75,0,65,0],[76,0,66,0],[77,2,67,7],[77,11,67,16,"decodeUiAmountToAmountInstructionUnchecked"],[77,53,67,58,"decodeUiAmountToAmountInstructionUnchecked"],[77,54,67,59],[78,4,67,61,"programId"],[78,13,67,70],[79,4,67,72,"keys"],[79,8,67,76],[79,10,67,78],[79,11,67,79,"mint"],[79,15,67,83],[79,16,67,84],[80,4,67,86,"data"],[81,2,67,92],[81,3,67,93],[81,5,67,95],[82,4,68,4],[82,10,68,10,"uiAmountToAmountInstructionData"],[82,41,68,41],[82,44,68,44],[82,48,68,44,"struct"],[82,68,68,50],[82,70,68,51],[82,71,69,8],[82,75,69,8,"u8"],[82,91,69,10],[82,93,69,11],[82,106,69,24],[82,107,69,25],[82,109,70,8],[82,113,70,8,"blob"],[82,131,70,12],[82,133,70,13,"data"],[82,137,70,17],[82,138,70,18,"length"],[82,144,70,24],[82,147,70,27],[82,148,70,28],[82,150,70,30],[82,158,70,38],[82,159,70,39],[82,160,71,5],[82,161,71,6],[83,4,72,4],[83,11,72,11],[84,6,73,8,"programId"],[84,15,73,17],[85,6,74,8,"keys"],[85,10,74,12],[85,12,74,14],[86,8,75,12,"mint"],[87,6,76,8],[87,7,76,9],[88,6,77,8,"data"],[88,10,77,12],[88,12,77,14,"uiAmountToAmountInstructionData"],[88,43,77,45],[88,44,77,46,"decode"],[88,50,77,52],[88,51,77,53,"data"],[88,55,77,57],[89,4,78,4],[89,5,78,5],[90,2,79,0],[91,0,79,1],[91,3]],"functionMap":{"names":["<global>","createUiAmountToAmountInstruction","decodeUiAmountToAmountInstruction","decodeUiAmountToAmountInstructionUnchecked"],"mappings":"AAA;OCe;CDa;OES;CFqB;OGQ;CHY"}},"type":"js/module"}]}