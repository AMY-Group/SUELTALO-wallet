{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM=","exportNames":["*"]}},{"name":"randombytes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":18,"index":60},"end":{"line":4,"column":40,"index":82}}],"key":"HRppB8l92kfLq10/yqHPiqGAuBY=","exportNames":["*"]}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":97},"end":{"line":5,"column":35,"index":119}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var BN = require(_dependencyMap[0], \"bn.js\");\n  var randomBytes = require(_dependencyMap[1], \"randombytes\");\n  var Buffer = require(_dependencyMap[2], \"safe-buffer\").Buffer;\n  function getr(priv) {\n    var len = priv.modulus.byteLength();\n    var r;\n    do {\n      r = new BN(randomBytes(len));\n    } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n    return r;\n  }\n  function blind(priv) {\n    var r = getr(priv);\n    var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n    return {\n      blinder: blinder,\n      unblinder: r.invm(priv.modulus)\n    };\n  }\n  function crt(msg, priv) {\n    var blinds = blind(priv);\n    var len = priv.modulus.byteLength();\n    var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n    var c1 = blinded.toRed(BN.mont(priv.prime1));\n    var c2 = blinded.toRed(BN.mont(priv.prime2));\n    var qinv = priv.coefficient;\n    var p = priv.prime1;\n    var q = priv.prime2;\n    var m1 = c1.redPow(priv.exponent1).fromRed();\n    var m2 = c2.redPow(priv.exponent2).fromRed();\n    var h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n    return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n  }\n  crt.getr = getr;\n  module.exports = crt;\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"BN"],[4,8,3,6],[4,11,3,9,"require"],[4,18,3,16],[4,19,3,16,"_dependencyMap"],[4,33,3,16],[4,45,3,24],[4,46,3,25],[5,2,4,0],[5,6,4,4,"randomBytes"],[5,17,4,15],[5,20,4,18,"require"],[5,27,4,25],[5,28,4,25,"_dependencyMap"],[5,42,4,25],[5,60,4,39],[5,61,4,40],[6,2,5,0],[6,6,5,4,"Buffer"],[6,12,5,10],[6,15,5,13,"require"],[6,22,5,20],[6,23,5,20,"_dependencyMap"],[6,37,5,20],[6,55,5,34],[6,56,5,35],[6,57,5,36,"Buffer"],[6,63,5,42],[7,2,7,0],[7,11,7,9,"getr"],[7,15,7,13,"getr"],[7,16,7,14,"priv"],[7,20,7,18],[7,22,7,20],[8,4,8,1],[8,8,8,5,"len"],[8,11,8,8],[8,14,8,11,"priv"],[8,18,8,15],[8,19,8,16,"modulus"],[8,26,8,23],[8,27,8,24,"byteLength"],[8,37,8,34],[8,38,8,35],[8,39,8,36],[9,4,9,1],[9,8,9,5,"r"],[9,9,9,6],[10,4,10,1],[10,7,10,4],[11,6,11,2,"r"],[11,7,11,3],[11,10,11,6],[11,14,11,10,"BN"],[11,16,11,12],[11,17,11,13,"randomBytes"],[11,28,11,24],[11,29,11,25,"len"],[11,32,11,28],[11,33,11,29],[11,34,11,30],[12,4,12,1],[12,5,12,2],[12,13,12,10,"r"],[12,14,12,11],[12,15,12,12,"cmp"],[12,18,12,15],[12,19,12,16,"priv"],[12,23,12,20],[12,24,12,21,"modulus"],[12,31,12,28],[12,32,12,29],[12,36,12,33],[12,37,12,34],[12,41,12,38],[12,42,12,39,"r"],[12,43,12,40],[12,44,12,41,"umod"],[12,48,12,45],[12,49,12,46,"priv"],[12,53,12,50],[12,54,12,51,"prime1"],[12,60,12,57],[12,61,12,58],[12,65,12,62],[12,66,12,63,"r"],[12,67,12,64],[12,68,12,65,"umod"],[12,72,12,69],[12,73,12,70,"priv"],[12,77,12,74],[12,78,12,75,"prime2"],[12,84,12,81],[12,85,12,82],[13,4,13,1],[13,11,13,8,"r"],[13,12,13,9],[14,2,14,0],[15,2,16,0],[15,11,16,9,"blind"],[15,16,16,14,"blind"],[15,17,16,15,"priv"],[15,21,16,19],[15,23,16,21],[16,4,17,1],[16,8,17,5,"r"],[16,9,17,6],[16,12,17,9,"getr"],[16,16,17,13],[16,17,17,14,"priv"],[16,21,17,18],[16,22,17,19],[17,4,18,1],[17,8,18,5,"blinder"],[17,15,18,12],[17,18,18,15,"r"],[17,19,18,16],[17,20,18,17,"toRed"],[17,25,18,22],[17,26,18,23,"BN"],[17,28,18,25],[17,29,18,26,"mont"],[17,33,18,30],[17,34,18,31,"priv"],[17,38,18,35],[17,39,18,36,"modulus"],[17,46,18,43],[17,47,18,44],[17,48,18,45],[17,49,18,46,"redPow"],[17,55,18,52],[17,56,18,53],[17,60,18,57,"BN"],[17,62,18,59],[17,63,18,60,"priv"],[17,67,18,64],[17,68,18,65,"publicExponent"],[17,82,18,79],[17,83,18,80],[17,84,18,81],[17,85,18,82,"fromRed"],[17,92,18,89],[17,93,18,90],[17,94,18,91],[18,4,19,1],[18,11,19,8],[19,6,19,10,"blinder"],[19,13,19,17],[19,15,19,19,"blinder"],[19,22,19,26],[20,6,19,28,"unblinder"],[20,15,19,37],[20,17,19,39,"r"],[20,18,19,40],[20,19,19,41,"invm"],[20,23,19,45],[20,24,19,46,"priv"],[20,28,19,50],[20,29,19,51,"modulus"],[20,36,19,58],[21,4,19,60],[21,5,19,61],[22,2,20,0],[23,2,22,0],[23,11,22,9,"crt"],[23,14,22,12,"crt"],[23,15,22,13,"msg"],[23,18,22,16],[23,20,22,18,"priv"],[23,24,22,22],[23,26,22,24],[24,4,23,1],[24,8,23,5,"blinds"],[24,14,23,11],[24,17,23,14,"blind"],[24,22,23,19],[24,23,23,20,"priv"],[24,27,23,24],[24,28,23,25],[25,4,24,1],[25,8,24,5,"len"],[25,11,24,8],[25,14,24,11,"priv"],[25,18,24,15],[25,19,24,16,"modulus"],[25,26,24,23],[25,27,24,24,"byteLength"],[25,37,24,34],[25,38,24,35],[25,39,24,36],[26,4,25,1],[26,8,25,5,"blinded"],[26,15,25,12],[26,18,25,15],[26,22,25,19,"BN"],[26,24,25,21],[26,25,25,22,"msg"],[26,28,25,25],[26,29,25,26],[26,30,25,27,"mul"],[26,33,25,30],[26,34,25,31,"blinds"],[26,40,25,37],[26,41,25,38,"blinder"],[26,48,25,45],[26,49,25,46],[26,50,25,47,"umod"],[26,54,25,51],[26,55,25,52,"priv"],[26,59,25,56],[26,60,25,57,"modulus"],[26,67,25,64],[26,68,25,65],[27,4,26,1],[27,8,26,5,"c1"],[27,10,26,7],[27,13,26,10,"blinded"],[27,20,26,17],[27,21,26,18,"toRed"],[27,26,26,23],[27,27,26,24,"BN"],[27,29,26,26],[27,30,26,27,"mont"],[27,34,26,31],[27,35,26,32,"priv"],[27,39,26,36],[27,40,26,37,"prime1"],[27,46,26,43],[27,47,26,44],[27,48,26,45],[28,4,27,1],[28,8,27,5,"c2"],[28,10,27,7],[28,13,27,10,"blinded"],[28,20,27,17],[28,21,27,18,"toRed"],[28,26,27,23],[28,27,27,24,"BN"],[28,29,27,26],[28,30,27,27,"mont"],[28,34,27,31],[28,35,27,32,"priv"],[28,39,27,36],[28,40,27,37,"prime2"],[28,46,27,43],[28,47,27,44],[28,48,27,45],[29,4,28,1],[29,8,28,5,"qinv"],[29,12,28,9],[29,15,28,12,"priv"],[29,19,28,16],[29,20,28,17,"coefficient"],[29,31,28,28],[30,4,29,1],[30,8,29,5,"p"],[30,9,29,6],[30,12,29,9,"priv"],[30,16,29,13],[30,17,29,14,"prime1"],[30,23,29,20],[31,4,30,1],[31,8,30,5,"q"],[31,9,30,6],[31,12,30,9,"priv"],[31,16,30,13],[31,17,30,14,"prime2"],[31,23,30,20],[32,4,31,1],[32,8,31,5,"m1"],[32,10,31,7],[32,13,31,10,"c1"],[32,15,31,12],[32,16,31,13,"redPow"],[32,22,31,19],[32,23,31,20,"priv"],[32,27,31,24],[32,28,31,25,"exponent1"],[32,37,31,34],[32,38,31,35],[32,39,31,36,"fromRed"],[32,46,31,43],[32,47,31,44],[32,48,31,45],[33,4,32,1],[33,8,32,5,"m2"],[33,10,32,7],[33,13,32,10,"c2"],[33,15,32,12],[33,16,32,13,"redPow"],[33,22,32,19],[33,23,32,20,"priv"],[33,27,32,24],[33,28,32,25,"exponent2"],[33,37,32,34],[33,38,32,35],[33,39,32,36,"fromRed"],[33,46,32,43],[33,47,32,44],[33,48,32,45],[34,4,33,1],[34,8,33,5,"h"],[34,9,33,6],[34,12,33,9,"m1"],[34,14,33,11],[34,15,33,12,"isub"],[34,19,33,16],[34,20,33,17,"m2"],[34,22,33,19],[34,23,33,20],[34,24,33,21,"imul"],[34,28,33,25],[34,29,33,26,"qinv"],[34,33,33,30],[34,34,33,31],[34,35,33,32,"umod"],[34,39,33,36],[34,40,33,37,"p"],[34,41,33,38],[34,42,33,39],[34,43,33,40,"imul"],[34,47,33,44],[34,48,33,45,"q"],[34,49,33,46],[34,50,33,47],[35,4,34,1],[35,11,34,8,"m2"],[35,13,34,10],[35,14,34,11,"iadd"],[35,18,34,15],[35,19,34,16,"h"],[35,20,34,17],[35,21,34,18],[35,22,34,19,"imul"],[35,26,34,23],[35,27,34,24,"blinds"],[35,33,34,30],[35,34,34,31,"unblinder"],[35,43,34,40],[35,44,34,41],[35,45,34,42,"umod"],[35,49,34,46],[35,50,34,47,"priv"],[35,54,34,51],[35,55,34,52,"modulus"],[35,62,34,59],[35,63,34,60],[35,64,34,61,"toArrayLike"],[35,75,34,72],[35,76,34,73,"Buffer"],[35,82,34,79],[35,84,34,81],[35,88,34,85],[35,90,34,87,"len"],[35,93,34,90],[35,94,34,91],[36,2,35,0],[37,2,36,0,"crt"],[37,5,36,3],[37,6,36,4,"getr"],[37,10,36,8],[37,13,36,11,"getr"],[37,17,36,15],[38,2,38,0,"module"],[38,8,38,6],[38,9,38,7,"exports"],[38,16,38,14],[38,19,38,17,"crt"],[38,22,38,20],[39,0,38,21],[39,3]],"functionMap":{"names":["<global>","getr","blind","crt"],"mappings":"AAA;ACM;CDO;AEE;CFI;AGE;CHa"}},"type":"js/module"}]}